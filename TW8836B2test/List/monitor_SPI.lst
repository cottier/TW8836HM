C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MONITOR_SPI
OBJECT MODULE PLACED IN .\Output\monitor_SPI.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source36\monitor_SPI.c LARGE OMF2 ROM(D512K) OPTIMIZE(9,SPEED) REGFILE(.
                    -\Output\TW8836B_EVB11.ORC) BROWSE INCDIR(SiI-SW;SiI-SW\HAL;SiI-SW\DEBUG;SiI-SW\CEC;.\Source36\LIB) DEFINE(EVB_11,nullFn=
                    -//) DEBUG CODE PRINT(.\List\monitor_SPI.lst) TABS(2) OBJECT(.\Output\monitor_SPI.obj)

line level    source

   1          /**
   2           * @file
   3           * Monitor_SPI.c 
   4           * @author Brian Kang
   5           * @version 1.0
   6           * @section LICENSE
   7           *  Copyright (C) 2011~2012 Intersil Corporation
   8           * @section DESCRIPTION
   9           *  Interface between TW_Terminal2 and Firmware.
  10          */
  11          /*
  12          Disclaimer: THIS INFORMATION IS PROVIDED 'AS-IS' FOR EVALUATION PURPOSES ONLY.  
  13          INTERSIL CORPORATION AND ITS SUBSIDIARIES ('INTERSIL') DISCLAIM ALL WARRANTIES, 
  14          INCLUDING WITHOUT LIMITATION FITNESS FOR A PARTICULAR PURPOSE AND MERCHANTABILITY.  
  15          Intersil provides evaluation platforms to help our customers to develop products. 
  16          However, factors beyond Intersil's control could significantly affect Intersil 
  17          product performance. 
  18          It remains the customers' responsibility to verify the actual system performance.
  19          */
  20          //*****************************************************************************
  21          //
  22          //                Monitor_SPI.c
  23          //
  24          //*****************************************************************************
  25          //
  26          //
  27          #include "Config.h"
  28          #include "reg.h"
  29          #include "typedefs.h"
  30          #include "TW8836.h"
  31          
  32          #include "Global.h"
  33          #include "CPU.h"
  34          #include "printf.h"
  35          #include "util.h"
  36          #include "monitor_SPI.h"
  37          
  38          #include "i2c.h"
  39          #include "SPI.h"
  40          
  41          #include "eeprom.h"
  42          
  43          static void SPI_Status(void);
  44          void SPI_dump(DWORD spiaddr); 
  45          
  46          
  47          //TW8835B SPIFlash Dongle Pin
  48          /*
  49            3V  CS
  50            D2  D1
  51            D3  CLK
  52            #RST D0
  53            GND GND
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 2   

  54          
  55          
  56            VD0~VD3 has a pull-up.
  57            P1_6 P1_7 P3_2 P3_3
  58          */
  59          
  60          #define SPI_S     P1_6  //VD00  
  61          #define SPI_DQ1     P1_7  //VD01
  62          #define SPI_C     P3_2  //VD02
  63          #define SPI_DQ0     P3_3  //VD03
  64          //#define SPI_DQ2     P1_4
  65          //#define SPI_DQ3     P1_5
  66          
  67          #pragma SAVE
  68          #pragma OPTIMIZE(2,SIZE)
  69          static void dd_spi(BYTE delay)
  70          {
  71   1        BYTE i,j;
  72   1        j = I2C_delay_base;
  73   1        while(j--) {
  74   2          for(i=0; i < delay; i++);
  75   2        }
  76   1      }
  77          #pragma RESTORE
  78          
  79                                                //32kHz
  80          #define wait_DVCH   dd_spi(2)   //        
  81          #define wait_CHDX   dd_spi(3)   //        
  82          #define wait_SHSL2    dd_spi(50)    //        
  83          
  84          /* emulate SPI Protocol */
  85          /*
  86            generate clock with S and DQ0
  87          */
  88          void SPI_Set_S_DATA(BYTE s, BYTE dq0)
  89          {
  90   1        SPI_C=1;
  91   1        SPI_S = s ? 1:0;
  92   1        SPI_DQ0 = dq0 ? 1:0;
  93   1        SPI_C=0;
  94   1        wait_DVCH;  // >=2nS Data in setup time
  95   1        SPI_C=1;
  96   1        wait_CHDX;  // >=3nS Data in hold time
  97   1      }
  98          void SPI_write_byte(BYTE value)
  99          {
 100   1        BYTE mask;
 101   1        BYTE bTemp;
 102   1      
 103   1        mask=0x80;
 104   1        while(mask) {
 105   2          bTemp = value & mask ? 1:0;
 106   2          SPI_Set_S_DATA(0,bTemp);
 107   2          mask >>=1;  
 108   2        }
 109   1      }
 110          BYTE SPI_read_byte(void)
 111          {
 112   1        BYTE value;
 113   1        BYTE i;
 114   1      
 115   1        value=0x00;
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 3   

 116   1        for(i=0; i < 8; i++) {
 117   2          value <<=1;
 118   2          SPI_C=0;
 119   2          wait_DVCH;  // >=2nS Data in setup time
 120   2          SPI_C=1;
 121   2          value |= (SPI_DQ1 ? 1:0);
 122   2          wait_CHDX;  // >=3nS Data in hold time
 123   2        }
 124   1        return value;
 125   1      }
 126          
 127          //0x66 0x99
 128          void SPI_Reset_Command(void)
 129          {
 130   1        //Reset Enable
 131   1        SPI_write_byte(0x66);
 132   1        SPI_Set_S_DATA(1,0);
 133   1        wait_SHSL2; 
 134   1        //Reset Memory
 135   1        SPI_write_byte(0x99);
 136   1        SPI_Set_S_DATA(1,0);
 137   1        wait_SHSL2;
 138   1        /* 90nS ~ 30uS */ 
 139   1      }
 140          void SPI_9F_Command(void)
 141          {
 142   1        BYTE value;
 143   1      
 144   1        //Read ID
 145   1        SPI_write_byte(0x9F);
 146   1        value=SPI_read_byte();
 147   1        Printf(" %02bx",value);
 148   1        value=SPI_read_byte();
 149   1        Printf(" %02bx",value);
 150   1        value=SPI_read_byte();
 151   1        Printf(" %02bx",value);
 152   1      }
 153          
 154          
 155          /* special pattern for Recovery Sequence */
 156          void SPI_Set_sequence(BYTE n)
 157          {
 158   1        BYTE i;
 159   1        for(i=0; i < n; i++)
 160   1          SPI_Set_S_DATA(0,1);
 161   1        SPI_Set_S_DATA(1,1);
 162   1        wait_SHSL2; // >= 50nS S# deselect time after a nonREAD command       
 163   1      }
 164          
 165          void SPI_Recovery(void)
 166          {
 167   1        SPI_S = 1;
 168   1        //SPI_DQ3 = 1; //keep 1
 169   1        SPI_C = 1;
 170   1      
 171   1        //first part
 172   1        SPI_Set_sequence(7);
 173   1        SPI_Set_sequence(9);
 174   1        SPI_Set_sequence(13);
 175   1        SPI_Set_sequence(17);
 176   1        SPI_Set_sequence(25);
 177   1        SPI_Set_sequence(33);
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 4   

 178   1        //second part
 179   1        SPI_Set_sequence(8);
 180   1      }
 181          
 182          
 183          
 184          //=============================================================================
 185          // help for MonitorSPI()
 186          //=============================================================================
 187          void HelpMonitorSPI(void)
 188          {
 189   1        Printf("\n\r\n  === Help for SPI command ===");
 190   1        Printf("\n\rSPI D [addr]      ; dump");
 191   1        Printf("\n\rSPI sector [addr] ; sector erase");
 192   1        Printf("\n\rSPI block [addr]  ; block erase");
 193   1          Printf("\n\rSPI rmode [mode]  ; set the read mode");
 194   1          Printf("\n\rSPI 4B [mode]   ; set the 4Byte Addr mode");
 195   1        Printf("\n\rSPI EnQIO         ; enable Fast QuadIO --need to implement");
 196   1      
 197   1        //Printf("\n\rSPI W addr data   ; write 1 byte. Use PageProgram");
 198   1        Printf("\n\rSPI W addr data ...  ; write max 8 byte. Use PageProgram");
 199   1          Printf("\n\rSPI copy [src] [dst] [cnt] ; copy");
 200   1        Printf("\n\rSPI status        ; status");
 201   1      
 202   1        Puts("\nBelow 3 commands need special connections and Groud,Power");
 203   1        Puts("\n\rSPI recovery [VD0:S        VD2:C VD3:D0 DQ3:high]");
 204   1        Puts("\n\rSPI reset    [VD0:S        VD2:C VD3:D0]");
 205   1        Puts("\n\rSPI id       [VD0:2 VD1:D1 VD2:C CD3:D0]");
 206   1      
 207   1        Printf("\n\r");
 208   1      }
 209          
 210          //=============================================================================
 211          //
 212          //=============================================================================
 213          void MonitorSPI(void)
 214          {
 215   1      #ifdef USE_SFLASH_EEPROM
 216   1        BYTE j;
 217   1      #endif
 218   1        if(argc < 2) {
 219   2          HelpMonitorSPI();
 220   2          return;
 221   2        }
 222   1        else if( !stricmp( argv[1], "?" ) ) {
 223   2          HelpMonitorSPI();
 224   2          return;
 225   2        }
 226   1        //---------------------- Dump SPI --------------------------
 227   1        else if( !stricmp( argv[1], "D" ) ) {
 228   2          static DWORD spiaddr = 0;
 229   2      
 230   2          if( argc>=3 ) spiaddr = a2h( argv[2] );
 231   2      
 232   2          SPI_dump(spiaddr); 
 233   2      
 234   2          spiaddr += 0x80L;
 235   2        }
 236   1        //--------------------------------------------------------
 237   1        else if( !stricmp( argv[1], "status" ) ) {
 238   2          SPI_Status();
 239   2        }
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 5   

 240   1      //  else if( !stricmp( argv[1], "quad" ) ) {
 241   1      //    SPI_quadio();
 242   1      //  }
 243   1        //--------------------------------------------------------
 244   1      #ifdef USE_SFLASH_EEPROM
 245   1        else if( !stricmp( argv[1], "t" ) ) {
 246   2        
 247   2          SpiFlash_SectorErase( E3P_SPI_SECTOR0 );
 248   2          
 249   2          for(j=0; j<128; j++) {
 250   3            SPI_Buffer[j] = j;
 251   3          }
 252   2          //SpiFlash_PageProgram_XMem( E3P_SPI_SECTOR0, (WORD)SPI_Buffer, 128 );
 253   2          SpiFlash_PageProgram_XMem( E3P_SPI_SECTOR0, (WORD)SPI_Buffer, 8 );
 254   2        }
 255   1      #endif
 256   1        //--------------------------------------------------------
 257   1        else if( !stricmp( argv[1], "Sector" ) ) {
 258   2          static DWORD spiaddr = 0x10000L;
 259   2      
 260   2          if( argc>=3 ) spiaddr = a2h( argv[2] );
 261   2      
 262   2          Printf("\n\rSector Erase = %06lx", spiaddr);
 263   2      
 264   2          SpiFlash_SectorErase(spiaddr);
 265   2          spiaddr += 0x1000L; /* increase 4K */
 266   2        }
 267   1        //--------------------------------------------------------
 268   1        else if( !stricmp( argv[1], "Block" ) ) {
 269   2          static DWORD spiaddr = 0x10000L;
 270   2      
 271   2          if( argc>=3 ) spiaddr = a2h( argv[2] );
 272   2      
 273   2          Printf("\n\rBlock Erase = %06lx", spiaddr);
 274   2      
 275   2          SpiFlash_BlockErase(spiaddr);
 276   2          spiaddr += 0x10000L; /* increase 64K */
 277   2        }
 278   1        //--------------------------------------------------------
 279   1        else if( !stricmp( argv[1], "Copy" ) ) {
 280   2          DWORD source = 0x0L, dest = 0x10000L;
 281   2          DWORD cnt=0x100L;
 282   2      
 283   2          if( argc<4 ) {
 284   3            Printf("\n\rMissing Parameters !!!" );
 285   3            return;
 286   3          }
 287   2          source = a2h( argv[2] );
 288   2          dest   = a2h( argv[3] );
 289   2          cnt    = a2h( argv[4] );
 290   2      
 291   2          Printf("\n\rSPI copy from %06lx to %06lx", source, dest);
 292   2          Printf("  %03x bytes", (WORD)cnt);
 293   2          SpiFlash_Read_XMem(source, (WORD)SPI_Buffer, cnt);
 294   2          //SpiFlashDmaRead2XMem(SPI_Buffer,source,cnt, SPIFLASH_WAIT_READ);
 295   2      
 296   2          SpiFlash_PageProgram_XMem( dest, (WORD)SPI_Buffer, cnt );
 297   2        }
 298   1        //--------------------------------------------------------
 299   1        else if( !stricmp( argv[1], "rmode" ) ) {
 300   2          BYTE mod;
 301   2      
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 6   

 302   2          if(argc < 3) {
 303   3            mod = ReadTW88(REG4C0) & 0x07;
 304   3      
 305   3            SPICMD_x_READ = 0x03; 
 306   3            SPICMD_x_BYTES  = 4;  //(8+24)/8
 307   3      
 308   3            Printf("\n\rSPI Read Mode = %bd READ:%02bx BYTES:%bd", mod, SPICMD_x_READ,SPICMD_x_BYTES);
 309   3            if(mod != 5) {
 310   4              Printf(". To select QuadIO, spi rmode 5");  
 311   4            }
 312   3            //mod = 0x05;   //QuadIO
 313   3            return;
 314   3          }
 315   2          else
 316   2            mod = a2h( argv[2] );
 317   2      
 318   2          SpiFlash_SetReadModeByRegister(mod);
 319   2          Printf("\n\rSPI Read Mode = %bd 0x%bx", mod, ReadTW88(REG4C0) & 0x07);
 320   2          Puts(" Please, set 4B value!!");
 321   2        }
 322   1        /* 4Byte address mode */
 323   1        else if( !stricmp( argv[1], "4B" ) ) {
 324   2          BYTE mod;
 325   2          BYTE ret;
 326   2      
 327   2          if(argc == 3) {
 328   3            mod = a2h( argv[2] );
 329   3            SpiFlash_Set4BytesAddress(mod);
 330   3          }
 331   2      //    ret=check_4b_address_mode();
 332   2          ret=check_4b_all();
 333   2          Printf("\n\rSPI 4Byte Mode SW:%bd HW:%bx", SpiFlash4ByteAddr, ret==TRUE ? 1:0 );
 334   2      
 335   2        }
 336   1        //---------------------- Write SPI --------------------------
 337   1        else if( !stricmp( argv[1], "W" ) ) {
 338   2          static DWORD spiaddr = 0;
 339   2          BYTE *ptr = SPI_Buffer;
 340   2          DWORD size;
 341   2          BYTE i;
 342   2      
 343   2          if( argc<3 ) {
 344   3            Printf("\n\rMissing Parameters !!!" );
 345   3            return;
 346   3          }
 347   2          if( argc > 7 ) {
 348   3            Printf("\n\ronly support 4 bytes !!!" );
 349   3          }
 350   2          
 351   2      
 352   2          spiaddr = a2h( argv[2] );
 353   2          //only support eeprom area....please
 354   2          //if((spiaddr < EE_SPI_SECTOR0) || (spiaddr > EE_SPI_SECTOR0+0x010000)) {
 355   2          //  Printf("\n\rout of range %06lx~%06lx!!!", EE_SPI_SECTOR0, EE_SPI_SECTOR0+0x010000 );
 356   2          //  return;
 357   2          //}
 358   2          Printf("\n\rWrite SPI %06lx ", spiaddr);
 359   2      
 360   2      
 361   2          size=0;
 362   2          for(i=3; i < argc; i++) {
 363   3            *ptr++ = (BYTE)a2h(argv[i]);
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 7   

 364   3            Printf(" %02bx ",(BYTE)a2h(argv[i]));
 365   3            size++;
 366   3          } 
 367   2          SpiFlash_PageProgram_XMem( spiaddr, (WORD)SPI_Buffer, (WORD)size);
 368   2        }
 369   1        /* new */
 370   1        //---------------------- Micron Recovery Sequency --------------------
 371   1        else if( !stricmp( argv[1], "recovery" ) )
 372   1          SPI_Recovery();
 373   1        else if( !stricmp( argv[1], "reset" ) )
 374   1          SPI_Reset_Command();
 375   1        else if( !stricmp( argv[1], "id" ) )
 376   1          SPI_9F_Command();
 377   1        //---------------------- old    --------------------
 378   1        else if(argc >= 2 && argv[1][0] >= '0' && argv[1][0] <= '9' ) {
 379   2          BYTE rcnt,wcnt;
 380   2          BYTE i;
 381   2          volatile BYTE vdata;
 382   2          //old spi command style
 383   2          if(argc < 3) {
 384   3            Puts("\n\rSPI nRead cmd...  ;command old style.");
 385   3            return;
 386   3          }
 387   2      
 388   2          rcnt = a2h(argv[1]);
 389   2      
 390   2          wcnt = argc - 2;
 391   2          WriteTW88(REG4C3,(DMA_DEST_CHIPREG << 6) | wcnt);
 392   2          WriteTW88(REG4C6, 0x04 );           // data Buffer address 0x04D0
 393   2          WriteTW88(REG4C7, 0xD0 );           // data Buffer address
 394   2          WriteTW88(REG4DA, 0x00 );           // data Buff count high
 395   2          WriteTW88(REG4C8, 0x00 );           // data Buff count middle
 396   2          WriteTW88(REG4C9, rcnt );           // data Buff count Lo
 397   2          for(i=0; i < wcnt; i++) {
 398   3            WriteTW88(REG4CA+i, a2h(argv[2+i]) );
 399   3          }
 400   2          WaitVBlank(1);
 401   2      
 402   2      
 403   2          if(spiflash_chip->pllclk_dma) {
 404   3            BYTE r4e1;
 405   3            r4e1 = ReadTW88(REG4E1) & 0xF0;
 406   3            WriteTW88(REG4E1, r4e1 | spiflash_chip->pllclk_dma);
 407   3            if(rcnt)
 408   3              WriteTW88(REG4C4, 0x01 );           // DMA-Read
 409   3            else
 410   3              WriteTW88(REG4C4, 0x03 );           // DMA-Write
 411   3            WriteTW88(REG4E1, r4e1 | spiflash_chip->pllclk_d);
 412   3          }
 413   2          else {
 414   3            if(rcnt)
 415   3              WriteTW88(REG4C4, 0x01 );           // DMA-Read
 416   3            else
 417   3              WriteTW88(REG4C4, 0x03 );           // DMA-Write
 418   3          }
 419   2      
 420   2      
 421   2      
 422   2      
 423   2          for(i=0; i < 200; i++) {
 424   3            vdata = ReadTW88(REG4C4);
 425   3            if((vdata & 0x01)==0)
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 8   

 426   3              break;
 427   3            delay1ms(10);
 428   3          }
 429   2          Printf("wait:%bd,%bx data:",i,vdata);
 430   2      
 431   2          if(rcnt) {
 432   3            Puts("\bSPI Read==> ");
 433   3            for(i=0; i<rcnt; i++) {
 434   4              Printf("%02bx ",ReadTW88(REG4D0+i));
 435   4            }
 436   3          }
 437   2        }
 438   1        //--------------------------------------------------------
 439   1        //--------------------------------------------------------
 440   1        else
 441   1          Printf("\n\rInvalid command..."); 
 442   1      }
 443          //=============================================================================
 444          //
 445          //=============================================================================
 446          void HelpMonitorSPIC(void)
 447          {
 448   1        Printf("\n\r\n  === Help for SPIFlash command ===");
 449   1        Printf("\n\rSPICMD_RDID: read JEDEC id. cmd:spic r3 9f");
 450   1        Printf("\n\rSPICMD_WREN: write enable. cmd:spic 6");
 451   1        Printf("\n\rSPICMD_WRDI: write disable. cmd:spic 4");
 452   1        Printf("\n\rSPICMD_RDSR: read status register.  cmd:spic r1 5");
 453   1        Printf("\n\rSPICMD_WRSR: write status register. cmd:spic 1 stat1 stat2");
 454   1        Printf("\n\rSPICMD_EN4B: enter 4Byte mode. cmd:spic b7");
 455   1        Printf("\n\rSPICMD_EX4B: exit 4Byte mode. cmd:spic e9");
 456   1        Printf("\n\rSPICMD_PP: PageProgram. (use XMem) cmd:spic 2 addr data...");
 457   1        Printf("\n\rSPICMD_SE: sector erase. cmd spic 20 addr");
 458   1        Printf("\n\rSPICMD_BE: block erase. cmd:spic d8 addr");
 459   1        Printf("\n\rSPICMD_READ_SLOW: read data. cmd:spic rn 3 addr");
 460   1        Printf("\n\rSPICMD_READ_FAST: fast read data. cmd:spic rn b addr");
 461   1        Printf("\n\rSPICMD_READ_QUAD_IO: QuadIO read data. (Use XMem). cmd:spic rn eb addr");
 462   1        Puts("\n\r");
 463   1        Printf("\n\rother command, use spic [rn] cmd [data..]");
 464   1        Puts("\n\r");
 465   1        Printf("\n\r special: read status: cmd: spic rs");
 466   1      
 467   1        Printf("\n\r");
 468   1      }
 469          
 470          void print_spiflash_status_register_macronix(void)
 471          {
 472   1        Puts("\n");
 473   1        Puts("StatisRegister\n");
 474   1        Puts("[7] SRWD (status register write protect)  1=status register write disable\n");     
 475   1        Puts("[6] QE(Quad Enable)           1=Quad Enable,\n");           
 476   1        Puts("[5:2] BP(level of protected block)\n");                     
 477   1        Puts("[1]   WEL(write enable latch)       1=write enable.   volatile\n");
 478   1        Puts("[0]   WIP(write in progress bit)      1=write operation.  volatile\n");
 479   1        Puts("\n");
 480   1        Puts("Configuration Register\n");
 481   1        Puts("[7:6] DC(Dummy cycle)     00:6dummy on QuadIO(default:00) volatile\n");
 482   1        Puts("[5] 4BYTE         1:4byte address mode(default:0) volatile\n");
 483   1        Puts("[3] TB(top/bottom select) 1:Bottom area protect(default:0)  OPT\n");
 484   1        Puts("[2:0] ODS(output driver strength) volatile\n");
 485   1      }
 486          void print_spiflash_status_register_winbond(void)
 487          {
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 9   

 488   1        Puts("\n");
 489   1        Puts("StatisRegister\n");
 490   1        Puts("[7] SRP status register protect\n");     
 491   1        Puts("[6] TB Top/Bottom Protest Bit\n");          
 492   1        Puts("[5:2] BP(Block Protest Bit)\n");                      
 493   1        Puts("[1]   WEL  write enable latch(Status-Only)\n");
 494   1        Puts("[0]   BUSY Erase/Write In Progress(Status-Only)\n");
 495   1        Puts("\n");
 496   1        Puts("Configuration Register\n");
 497   1      }
 498          void print_spiflash_status_register_eon_256(void)
 499          {
 500   1        Puts("\n");
 501   1        Puts("StatisRegister\n");
 502   1        Puts("[7] SRP (status register protect) 1=status register write disable\n");     
 503   1        Puts("[6] QE(Quad Enable)           1=Quad Enable,\n");           
 504   1        Puts("[5:2] BP(level of protected block)\n");                     
 505   1        Puts("[1]   WEL(write enable latch)       1=write enable.   volatile\n");
 506   1        Puts("[0]   WIP(write in progress bit)      1=write operation.  volatile\n");
 507   1        Puts("\n");
 508   1        Puts("Configuration Register\n");
 509   1      }
 510          void print_spiflash_status_register_micron(void)
 511          {
 512   1        Puts("\n");
 513   1        Puts("StatisRegister\n");
 514   1        Puts("[7] status register write enable    1=status register write disable\n");     
 515   1        Puts("[6] Block protection          \n"); 
 516   1        Puts("[5]   Top/Bottom\n");         
 517   1        Puts("[4:2] Block protection(with [6])\n");                     
 518   1        Puts("[1]   write enable latch)         1=Set(default:0) volatile\n");
 519   1        Puts("[0]   write in progress bit       1=Busy. volatile\n");
 520   1        Puts("\n");
 521   1        Puts("Configuration Register\n");
 522   1      }
 523          void print_spiflash_status_register_default(void)
 524          {
 525   1        Puts("\nfirst type 'spic r3 9f' command");
 526   1      }
 527          void print_spiflash_status_register_unknown(void)
 528          {
 529   1        Puts("\n");
 530   1        Puts("unknown spiflash\n");
 531   1      }
 532          
 533          void (*print_spiflash_status_register)(void);
 534          
 535          
 536          
 537          static void PrintSpiAddr(DWORD spiaddr)
 538          {
 539   1        if(SpiFlash4ByteAddr)   Printf(" %08lx", spiaddr);
 540   1        else          Printf(" %06lx", spiaddr);
 541   1      }
 542          void MonitorSPIC(void)
 543          {
 544   1        volatile BYTE cmd;
 545   1        BYTE dat0;
 546   1        BYTE i;
 547   1        BYTE cnt;
 548   1        DWORD spiaddr;
 549   1        BYTE ret;
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 10  

 550   1        BYTE index;
 551   1        BYTE read_byte;
 552   1      
 553   1        if(argc < 2) {
 554   2          HelpMonitorSPIC();
 555   2          return;
 556   2        }
 557   1      
 558   1        index = 0;
 559   1        read_byte = 0;
 560   1        //---------------------
 561   1        //read 'r'
 562   1        //---------------------
 563   1        if(argv[1][0]=='r') {
 564   2          read_byte = argv[1][1] - 0x30;
 565   2          if(read_byte > 8) {
 566   3            //invalid read option
 567   3            HelpMonitorSPIC();
 568   3            return;
 569   3          }
 570   2          index = 1;
 571   2        }
 572   1        else if(argv[1][0]=='s' && argv[1][1]=='r') {
 573   2          //print status register help file
 574   2          print_spiflash_status_register();
 575   2          return;
 576   2        }
 577   1      
 578   1        //---------------------
 579   1        //read command
 580   1        //---------------------
 581   1        cmd = a2h( argv[index+1] );
 582   1      
 583   1        if(cmd == SPICMD_RDID) {
 584   2          if(read_byte != 3) {
 585   3            Puts("\nuse spic r3 9f");
 586   3            return;
 587   3          }
 588   2          Printf("\n\rRDID(JEDEC) ");
 589   2          SpiFlash_DmaCmd(SPICMD_RDID, DMA_TARGET_CHIP, 0x4D0, 3, DMA_OPT_NONE);
 590   2          ret=SpiFlash_wait_done(10,10);
 591   2          if(!ret) {
 592   3            SPI_CmdBuffer[0] = ReadTW88(REG4D0);
 593   3            SPI_CmdBuffer[1] = ReadTW88(REG4D1);
 594   3            SPI_CmdBuffer[2] = ReadTW88(REG4D2);
 595   3      
 596   3            Printf(" %02bx %02bx %02bx ", SPI_CmdBuffer[0], SPI_CmdBuffer[1],SPI_CmdBuffer[2]);
 597   3            if     (SPI_CmdBuffer[0]==SPIFLASH_MID_MX) {
 598   4              Puts("Macronix");   
 599   4              print_spiflash_status_register = &print_spiflash_status_register_macronix;
 600   4            }
 601   3            else if(SPI_CmdBuffer[0]==SPIFLASH_MID_EON) {
 602   4              Puts("EOn");
 603   4              print_spiflash_status_register = &print_spiflash_status_register_eon_256;
 604   4            }
 605   3            else if(SPI_CmdBuffer[0]==SPIFLASH_MID_WB) {
 606   4              Puts("Winbond");
 607   4              print_spiflash_status_register = &print_spiflash_status_register_winbond;
 608   4            }
 609   3            else if(SPI_CmdBuffer[0]==SPIFLASH_MID_MICRON) {
 610   4              Puts("Micron");
 611   4              print_spiflash_status_register = &print_spiflash_status_register_micron;
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 11  

 612   4            }
 613   3            else if(SPI_CmdBuffer[0]==SPIFLASH_MID_SPANSION) {
 614   4              Puts("Spansion");
 615   4              print_spiflash_status_register = &print_spiflash_status_register_unknown;
 616   4            }
 617   3            else if(SPI_CmdBuffer[0]==SPIFLASH_MID_GIGA) {
 618   4              Puts("Giga");
 619   4              print_spiflash_status_register = &print_spiflash_status_register_unknown;
 620   4            }
 621   3            else {
 622   4              Puts("Unknown");
 623   4              print_spiflash_status_register = &print_spiflash_status_register_unknown;
 624   4            }
 625   3          }
 626   2        }
 627   1        else if(cmd == SPICMD_WREN    /*spic 6 */
 628   1             || cmd == SPICMD_WRDI) { /*spic 4 */
 629   2          if(cmd == SPICMD_WRDI) Puts("\n\rWRDI ");
 630   2          else           Puts("\n\rWREN ");
 631   2          SpiFlash_DmaCmd(cmd, DMA_TARGET_CHIP, 0x4D0, 0, DMA_OPT_NONE);
 632   2          ret=SpiFlash_wait_done(10,10);
 633   2        }
 634   1        else if(cmd == SPICMD_RDSR) {
 635   2          if(read_byte ==0) {
 636   3            Puts("\nuse spic r1 5");
 637   3            return;
 638   3          }
 639   2          SpiFlash_DmaCmd(cmd, DMA_TARGET_CHIP, 0x4D0, read_byte, DMA_OPT_NONE);
 640   2          ret=SpiFlash_wait_done(10,10);
 641   2          for(i=0; i < read_byte; i++)
 642   2            Printf(" %02bx", ReadTW88(REG4D0+i)); 
 643   2        }
 644   1        else if(cmd == SPICMD_WRSR) {
 645   2          if( argc< (index+4) ) {
 646   3            Printf("\n\rMissing Parameters !!!" );
 647   3            return;
 648   3          }
 649   2          SPI_CmdBuffer[0] = a2h(argv[index+2]);
 650   2          SPI_CmdBuffer[1] = a2h(argv[index+3]);
 651   2      
 652   2          SpiFlash_DmaCmd(cmd, DMA_TARGET_CHIP | 2, 0x4D0, 0, SPI_CMD_OPT_BUSY);
 653   2          ret=SpiFlash_wait_done(10,10);
 654   2          ret=SpiFlash_check_busy(10,10);
 655   2        }
 656   1        else if(cmd == SPICMD_EN4B
 657   1        ||      cmd == SPICMD_EX4B) {
 658   2          ret = SpiFlash_4B_DmaCmd(cmd);
 659   2        }
 660   1        else if(cmd == SPICMD_PP) {
 661   2          if( argc< (index+4) ) {
 662   3            Printf("\n\rMissing Parameters !!!" );
 663   3            return;
 664   3          }
 665   2          if( argc > (index+11) ) {
 666   3            Printf("\n\ronly support 8 bytes !!!" );
 667   3            argc = 11;
 668   3          }
 669   2          spiaddr = a2h( argv[index+2] );
 670   2          Printf("\n\rPP ");
 671   2          PrintSpiAddr(spiaddr);
 672   2      
 673   2      
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 12  

 674   2      
 675   2          //BKFYI140819. PP with QuadIO has a problem on REG4D0.
 676   2          //use XMEM
 677   2          for(i=3,cnt=0; i <argc; i++,cnt++) {
 678   3            dat0 = a2h(argv[index+i]);
 679   3            SPI_Buffer[cnt]=dat0;
 680   3          }
 681   2          ret=SpiFlash_PageProgram_XMem(spiaddr,0,argc);
 682   2        }
 683   1        else if(cmd == SPICMD_SE || cmd == SPICMD_BE) {
 684   2          if( argc< (index+3) ) {
 685   3            Printf("\n\rMissing Parameters !!!" );
 686   3            return;
 687   3          }
 688   2          spiaddr = a2h( argv[index+2] );
 689   2          if(cmd == SPICMD_BE) Puts("\n\rBE ");
 690   2          else         Puts("\n\rSE ");
 691   2          PrintSpiAddr(spiaddr);
 692   2      
 693   2          if(cmd == SPICMD_BE)
 694   2            ret = SpiFlash_BlockErase(spiaddr);
 695   2          else
 696   2            ret = SpiFlash_SectorErase(spiaddr);
 697   2        }
 698   1        else if(cmd == SPICMD_READ_SLOW 
 699   1             || cmd == SPICMD_READ_FAST
 700   1           || cmd == SPICMD_READ_DUAL_O
 701   1           || cmd == SPICMD_READ_QUAD_O 
 702   1           || cmd == SPICMD_READ_DUAL_IO 
 703   1           || cmd == SPICMD_READ_QUAD_IO ) {
 704   2          BYTE w_len;
 705   2          BYTE SPI_mode;
 706   2          BYTE SPI_mode_Reg;
 707   2      
 708   2          if( argc < 4 ) {
 709   3            Printf("\n\rMissing Parameters !!!" );
 710   3            return;
 711   3          }
 712   2          if(read_byte==0) {
 713   3            HelpMonitorSPIC();
 714   3            return;
 715   3          }
 716   2          //change SPI_mode
 717   2          SPI_mode_Reg = ReadTW88(REG4C0);
 718   2          if(cmd==SPICMD_READ_SLOW) {
 719   3            SPI_mode=0;
 720   3            w_len = 3;
 721   3            if((ReadTW88(REG4E1) & 0xC0)==0xC0) {
 722   4              Printf("\n\rEDGE CYCLE error. GiveUp!!");
 723   4              return;
 724   4            }   
 725   3          }
 726   2          else if(cmd==SPICMD_READ_FAST) {
 727   3            SPI_mode=1;
 728   3            w_len = 4;    
 729   3          }
 730   2          else if(cmd==SPICMD_READ_DUAL_O) {
 731   3            SPI_mode=2;
 732   3            w_len = 4;    
 733   3          }
 734   2          else if(cmd==SPICMD_READ_QUAD_O) {
 735   3            SPI_mode=3;
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 13  

 736   3            w_len = 4;    
 737   3          }
 738   2          else if(cmd==SPICMD_READ_DUAL_IO) {
 739   3            SPI_mode=4;
 740   3            w_len = 4;    
 741   3          }
 742   2          else {
 743   3            //Printf("\n\rDualIO & QuadIO can read only 1 byte...");
 744   3            SPI_mode = 5;
 745   3            w_len = 6;    
 746   3          }
 747   2      
 748   2      
 749   2          if(SpiFlash4ByteAddr)
 750   2             w_len++;
 751   2      
 752   2          spiaddr = a2h( argv[index+2] );
 753   2          PrintSpiAddr(spiaddr);
 754   2      
 755   2          //if(argc >= 4)
 756   2          //  cnt = a2h(argv[index+3]);
 757   2          //else cnt = 8;
 758   2      
 759   2          SpiFlashSetAddress2CmdBuffer(spiaddr); //SPI_CmdBuffer[0]~[2] or [0]~[3]
 760   2      
 761   2          WriteTW88(REG4C0, (SPI_mode_Reg & ~0x07) | SPI_mode);
 762   2          //ret = SpiFlashChipRegCmd(cmd, w_len, read_byte, SPI_CMD_OPT_BUSY, 200);
 763   2          SpiFlash_DmaCmd(cmd, DMA_TARGET_CHIP, 0x4D0, read_byte, DMA_OPT_NONE);
 764   2          ret=SpiFlash_wait_done(10,10);
 765   2          if(!ret) {
 766   3            if(cmd == SPICMD_READ_DUAL_O
 767   3            || cmd == SPICMD_READ_QUAD_O
 768   3            || cmd == SPICMD_READ_DUAL_IO
 769   3            || cmd == SPICMD_READ_QUAD_IO) {
 770   4              for(i=0; i < read_byte; i++)
 771   4                Printf(" %02bx", ReadTW88(REG4D0+i));
 772   4            }
 773   3            else {
 774   4              for(i=0; i < read_byte; i++)
 775   4                Printf(" %02bx", SPI_CmdBuffer[i]);
 776   4            }
 777   3          }
 778   2      
 779   2          //restore SPI_Mode
 780   2          WriteTW88(REG4C0, SPI_mode_Reg);
 781   2        }
 782   1        else {
 783   2          BYTE w_len;
 784   2          if(read_byte) 
 785   2            w_len = 0; //read mode
 786   2          else {  
 787   3            w_len = argc - 2; 
 788   3          }
 789   2          for(i=0; i < w_len; i++)
 790   2            SPI_CmdBuffer[i] = a2h(argv[index+2]);
 791   2          
 792   2          //ret = SpiFlashChipRegCmd(cmd, w_len, read_byte, SPI_CMD_OPT_NONE, 200);
 793   2          SpiFlash_DmaCmd(cmd, DMA_TARGET_CHIP | w_len, 0x4D0, read_byte, DMA_OPT_NONE);
 794   2          ret=SpiFlash_wait_done(10,10);
 795   2          if(!ret) {
 796   3            for(i=0; i < read_byte; i++)
 797   3              Printf(" %02bx",ReadTW88(REG4D0+i));
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 14  

 798   3          }
 799   2        }
 800   1      }
 801          
 802          #define BT656ENC_SRC_DEC      0
 803          #define BT656ENC_SRC_ARGB     1
 804          #define BT656ENC_SRC_DTV      2
 805          #define BT656ENC_SRC_LVDS     3
 806          #define BT656ENC_SRC_PANEL      4
 807          #define BT656ENC_SRC_OFF      5
 808          #define BT656ENC_SRC_AUTO     6
 809          
 810          #define BT656_INPUT_CVBS    0
 811          #define BT656_INPUT_SVIDEO    1
 812          #define BT656_INPUT_COMP    2
 813          #define BT656_INPUT_PC      3
 814          #define BT656_INPUT_DVI     4
 815          #define BT656_INPUT_HDMIPC    5 //RGB
 816          #define BT656_INPUT_HDMITV    6 //YUV
 817          #define BT656_INPUT_LVDS    7
 818          #define BT656_INPUT_PANEL   8
 819          
 820          
 821          void EE_DataInfomation(void)
 822          {
 823   1        Puts("\n0x00~0x05 Tag & FW Rev. -DO NOT WRITE-");
 824   1        Puts("\n0x06    DebugLevel 0~3");
 825   1        Puts("\n0x0F    BootMode 0:Normal 1:RCD");
 826   1        Puts("\n0x10    Main Input 0:CVBS,2:COMP,3:PC,5:HDMI,6:BT656,7:LVDS");
 827   1        Puts("\n0x20    BT656Enc Input 0:CVBS,2:COMP,3:PC,5:HDMI,7:LVDS,8:Panel");
 828   1        Puts("\n0x21    BT656Enc CVBS 0:Normal 1:2DDI");
 829   1        Puts("\n0x22    BT656Enc COMP 0:Normal..");
 830   1        Puts("\n0x23    BT656Enc PC   0:Normal..");
 831   1        Puts("\n0x25    BT656Enc HDMI 0:Normal..");
 832   1        Puts("\n0x27    BT656Enc LVDS 0:Normal..");
 833   1        Puts("\n0x30    Boot Count");
 834   1        Puts("\n0x31    Watchdog Boot Count");
 835   1        Puts("\n0x40~0x6C Video Image");
 836   1        Puts("\n0x80~0x93 Touch");
 837   1        Puts("\n0xA0~0xAF Video Effect");
 838   1        Puts("\n0xB0~0xC0 OLD data");
 839   1        Puts("\n0xD0~0x1BF  PC Mode");
 840   1      }
 841          //=============================================================================
 842          //
 843          //=============================================================================
 844          void HelpMonitorEE(void)
 845          {
 846   1        Puts("\n\r\n  === Help for EE command ===");
 847   1        Puts("\n\rEE format         ; format and initialize");
 848   1        Puts("\n\rEE init           ; initialze internal variables");
 849   1        Puts("\n\rEE default        ; initialze default EE values");
 850   1        Puts("\n\rEE check          ; report map,dump,corrupt");
 851   1        Puts("\n\rEE clean          ; move & clean bank sector");
 852   1        Puts("\n\rEE repair         ; call when you have a movedone error");
 853   1        Puts("\n\rEE info           ; E3P information");
 854   1        Puts("\n\rEE w [idx] [dat]  ; write data");
 855   1          Puts("\n\rEE r [idx]        ; read data");
 856   1        Puts("\n\rEE d              ; dump all data");
 857   1        Puts("\n\rEE data           ; data info");
 858   1        //Printf("\n\rFYI %bx:DebugLevel %bx:InputMain ",EEP_DEBUGLEVEL,EEP_INPUT_MAIN);
 859   1        Puts("\n\r");
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 15  

 860   1      }
 861          
 862          
 863          //=============================================================================
 864          //
 865          //=============================================================================
 866          //  Format is needed only once
 867          //  Init is needed when starting program
 868          #ifdef USE_SFLASH_EEPROM
 869          void MonitorEE(void)
 870          {
 871   1        BYTE dat; //, i, j;
 872   1        BYTE dat1;
 873   1        WORD index;
 874   1      
 875   1        if(argc < 2) {
 876   2          HelpMonitorEE();
 877   2          return;
 878   2        }
 879   1        else if( !stricmp( argv[1], "?" ) ) {
 880   2          HelpMonitorEE();
 881   2          return;
 882   2        }
 883   1      
 884   1        index = a2h( argv[2] );
 885   1        dat   = a2h( argv[3] );
 886   1      
 887   1        //--------------------------------------------------------
 888   1        if( !stricmp( argv[1], "format" ) ) {
 889   2          Printf("\n\rFormat EEPROM...");
 890   2          E3P_Format();
 891   2          return;
 892   2        }
 893   1        //--------------------------------------------------------
 894   1        else if( !stricmp( argv[1], "init" ) ) {
 895   2          Printf("\n\rFind EEPROM variables...");
 896   2          //E3P_Init();
 897   2          E3P_Configure();
 898   2          return;
 899   2        }
 900   1        //--------------------------------------------------------
 901   1        else if( !stricmp( argv[1], "repair" ) ) {
 902   2          Printf("\n\rRepair MoveDone error..call only when EE find have a MoveDone error");
 903   2          E3P_Repair();
 904   2          return;
 905   2        }
 906   1        //--------------------------------------------------------
 907   1        else if( !stricmp( argv[1], "default" ) ) {
 908   2          Printf("\n\rEE initialize........");
 909   2          SaveFWRevEE( FWVER );
 910   2          ClearBasicEE();
 911   2          SaveDebugLevelEE(0);
 912   2          E3P_PrintInfo();
 913   2          return;
 914   2        }
 915   1        //--------------------------------------------------------
 916   1        else if( !stricmp( argv[1], "check" ) ) {
 917   2          Printf("\n\rEE check");
 918   2          E3P_Check();
 919   2          return;
 920   2        }
 921   1        //--------------------------------------------------------
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 16  

 922   1        else if( !stricmp( argv[1], "info" ) ) {
 923   2          Printf("\n\rEE info");
 924   2          E3P_PrintInfo();
 925   2          return;
 926   2        }
 927   1        //--------------------------------------------------------
 928   1        else if( !stricmp( argv[1], "clean" ) ) {
 929   2          Printf("\n\rEE clean blocks");
 930   2          E3P_Clean();
 931   2          return;
 932   2        }
 933   1        //--------------------------------------------------------
 934   1        else if( !stricmp( argv[1], "W" ) ) {
 935   2          if( argc==4 ) {
 936   3            Printf("\n\rWrite EEPROM %03x:%02bx ", index, dat );
 937   3            EE_Write( index, dat );
 938   3            dat1 = EE_Read( index );  //BUG
 939   3            dat = EE_Read( index );
 940   3            Printf(" ==> Read EEPROM[%03x] = %02bx %02bx", index, dat1, dat );
 941   3          }
 942   2        }
 943   1        //--------------------------------------------------------
 944   1        else if( !stricmp( argv[1], "R" ) ) {
 945   2          if( argc==3 ) {
 946   3            dat = EE_Read( index );
 947   3            Printf("\n\r ==> Read EEPROM[%03x] = %02bx ", index, dat );
 948   3          }
 949   2        }
 950   1        //--------------------------------------------------------
 951   1      #ifdef USE_SFLASH_EEPROM
 952   1        else if( !stricmp( argv[1], "D" ) ) {
 953   2          Printf("\n\rDump EEPROM");
 954   2          E3P_DumpBlocks(0);
 955   2          //for(j=0; j<E3P_MAX_INDEX/16; j++) {
 956   2          //  Printf("\n\rEEPROM %02bx:", j*0x10);
 957   2          //  for(i=0; i<8; i++) Printf(" %02bx", EE_Read( j*16 + i ) );
 958   2          //  Printf("-");
 959   2          //  for(; i<16; i++) Printf("%02bx ", EE_Read( j*16 + i ) );
 960   2          //}
 961   2        }
 962   1      #endif
 963   1        //--------------------------------------------------------
 964   1        else if( !stricmp( argv[1], "data" ) ) {
 965   2          EE_DataInfomation();
 966   2          return;
 967   2        }
 968   1        //--------------------------------------------------------
 969   1        else
 970   1          Printf("\n\rInvalid command..."); 
 971   1        
 972   1      }
 973          #endif
 974          
 975          //=============================================================================
 976          /**
 977          * SPI Read Status
 978          *
 979          */
 980          static void SPI_Status(void)
 981          {
 982   1        BYTE dat1;
 983   1        BYTE vid;
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 17  

 984   1        BYTE cid;
 985   1        BYTE ret;
 986   1      
 987   1        //ret = SpiFlashChipRegCmd(SPICMD_RDID,0,3, SPI_CMD_OPT_NONE, 200);
 988   1        SpiFlash_DmaCmd(SPICMD_RDID, DMA_TARGET_CHIP, 0x4D0, 3, DMA_OPT_NONE);
 989   1        ret=SpiFlash_wait_done(10,10);
 990   1        SPI_CmdBuffer[0] = ReadTW88(REG4D0);
 991   1        SPI_CmdBuffer[1] = ReadTW88(REG4D1);
 992   1        SPI_CmdBuffer[2] = ReadTW88(REG4D2);
 993   1      
 994   1        if(ret)
 995   1          Puts("\n\rSPICMD_RDID fail");
 996   1        vid  = SPI_CmdBuffer[0];
 997   1        dat1 = SPI_CmdBuffer[1];
 998   1        cid  = SPI_CmdBuffer[2];
 999   1      
1000   1        Printf("\n\rJEDEC ID: %02bx %02bx %02bx", vid, dat1, cid );
1001   1      
1002   1        switch(vid) {
1003   2        case 0x1C:    Puts("\n\rEON");    break;
1004   2        case 0xC2:    Puts("\n\rMX");   break;
1005   2        case 0xEF:    Puts("\n\rWB");   if(cid == 0x18) Puts("128"); break;
1006   2        case 0x20:    Puts("\n\rMicron"); break;
1007   2        default:    Puts("\n\rUnknown");  break;
1008   2        }
1009   1      
1010   1        if (vid == 0xC2 || vid == 0x1c) {
1011   2          //ret=SpiFlashChipRegCmd(SPICMD_RDSR,0, 1, SPI_CMD_OPT_NONE, 200);
1012   2          SpiFlash_DmaCmd(SPICMD_RDSR, DMA_TARGET_CHIP, 0x4D0, 1, DMA_OPT_NONE);
1013   2          ret=SpiFlash_wait_done(10,10);
1014   2          SPI_CmdBuffer[0] = ReadTW88(REG4D0);
1015   2          Printf("  CMD:%02bx Data:%02bx",SPICMD_RDSR,SPI_CmdBuffer[0]);
1016   2          if(SPI_CmdBuffer[0] & 0x40) Puts(" Quad Enabled");
1017   2        }
1018   1        else if (vid == 0xEF) {         // WB
1019   2          if(cid == 0x18) {       //Q128 case different status read command
1020   3            //ret=SpiFlashChipRegCmd(SPICMD_RDSR2,0, 1, SPI_CMD_OPT_NONE, 200);
1021   3            SpiFlash_DmaCmd(SPICMD_RDSR2, DMA_TARGET_CHIP, 0x4D0, 1, DMA_OPT_NONE);
1022   3            ret=SpiFlash_wait_done(10,10);
1023   3            SPI_CmdBuffer[0] = ReadTW88(REG4D0);
1024   3            Printf("  CMD:%02bx Data:%02bx",SPICMD_RDSR2,SPI_CmdBuffer[0]);
1025   3          }
1026   2          else {
1027   3            //ret=SpiFlashChipRegCmd(SPICMD_RDSR,0, 2, SPI_CMD_OPT_NONE, 200);
1028   3            SpiFlash_DmaCmd(SPICMD_RDSR, DMA_TARGET_CHIP, 0x4D0, 2, DMA_OPT_NONE);
1029   3            ret=SpiFlash_wait_done(10,10);
1030   3            SPI_CmdBuffer[0] = ReadTW88(REG4D0);
1031   3            SPI_CmdBuffer[1] = ReadTW88(REG4D1);
1032   3            Printf("  CMD:%02bx Data:%02bx,%02bx",SPICMD_RDSR,SPI_CmdBuffer[0],SPI_CmdBuffer[1]);
1033   3          }
1034   2        }
1035   1        else if(vid==0x20) {
1036   2          if(cid !=0x18) {
1037   3            Puts(" NEED 128b!!!");
1038   3            return;
1039   3          }
1040   2          // Volatile
1041   2          //ret=SpiFlashChipRegCmd(SPICMD_RDVREG,0, 1, SPI_CMD_OPT_NONE, 200);  //cmd, read Volatile register
1042   2          SpiFlash_DmaCmd(SPICMD_RDVREG, DMA_TARGET_CHIP, 0x4D0, 1, DMA_OPT_NONE);
1043   2          ret=SpiFlash_wait_done(10,10);
1044   2          SPI_CmdBuffer[0] = ReadTW88(REG4D0);
1045   2          dPrintf(" Volatile Register: %02bx", SPI_CmdBuffer[0] );
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 18  

1046   2      
1047   2          // non-Volatile
1048   2          //ret=SpiFlashChipRegCmd(SPICMD_RDNVREG, 0, 2, SPI_CMD_OPT_NONE, 200);  //cmd, read Non-Volatile register
1049   2          SpiFlash_DmaCmd(SPICMD_RDNVREG, DMA_TARGET_CHIP, 0x4D0, 2, DMA_OPT_NONE);
1050   2          ret=SpiFlash_wait_done(10,10);
1051   2          SPI_CmdBuffer[0] = ReadTW88(REG4D0);
1052   2          SPI_CmdBuffer[1] = ReadTW88(REG4D1);
1053   2          dPrintf(" Non-Volatile Register: %02bx, %02bx", SPI_CmdBuffer[0], SPI_CmdBuffer[1] );
1054   2        }
1055   1      }
1056          
1057          //=============================================================================
1058          /**
1059          * read and dump SPIFLASH data
1060          */
1061          void SPI_dump(DWORD spiaddr) 
1062          {
1063   1        BYTE *ptr = SPI_Buffer;
1064   1        DWORD cnt = 0x80L;
1065   1        BYTE i, j, c;
1066   1      
1067   1        SpiFlash_Read_XMem(spiaddr, (WORD)SPI_Buffer, cnt);
1068   1        //SpiFlashDmaRead2XMem(SPI_Buffer, spiaddr, cnt, SPIFLASH_WAIT_READ);  //same SpiFlashDmaRead 
1069   1      
1070   1        for (j=0; j<8; j++) {
1071   2          Printf("\n\rSPI %06lx: ", spiaddr + j*0x10);
1072   2          for(i=0; i<8; i++) Printf("%02bx ", SPI_Buffer[j*0x10+i] );
1073   2          Printf("- ");
1074   2          for(; i<16; i++) Printf("%02bx ", SPI_Buffer[j*0x10+i] );
1075   2          Printf("  ");
1076   2          for(i=0; i<16; i++) {
1077   3            c = SPI_Buffer[j*0x10+i];
1078   3            if( c>=0x20 && c<0x80 ) Printf("%c", c);
1079   3            else Printf(".");
1080   3          }
1081   2        }
1082   1      }
1083          
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 19  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com012D (BEGIN)
0000         L?0302:
0000 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0004 7400        R     MOV     A,#MBYTE ?SC_602
0006 F0                MOVX    @DPTR,A
0007 A3                INC     DPTR
0008 7400        R     MOV     A,#HIGH ?SC_602
000A F0                MOVX    @DPTR,A
000B 7400        R     MOV     A,#LOW ?SC_602
000D         L?0303:
000D A3                INC     DPTR
000E         L?0304:
000E F0                MOVX    @DPTR,A
000F         L?0305:
000F 90000000    E     MOV     DPTR,#argv+03H
0013         L?0306:
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A F9                MOV     R1,A
001B 22                RET     
001C         L?0307:
001C         L?0308:
001C 90000000    R     MOV     DPTR,#ret
0020 EF                MOV     A,R7
0021 F0                MOVX    @DPTR,A
0022         L?0309:
0022 759300      E     MOV     DPX,#?C?XDATASEG
0025 E500        E     MOV     A,regTW88+01H
0027 24D0              ADD     A,#0D0H
0029 F582              MOV     DPL,A
002B E500        E     MOV     A,regTW88
002D 3404              ADDC    A,#04H
002F F583              MOV     DPH,A
0031 759300      E     MOV     DPX,#?C?XDATASEG
0034 E0                MOVX    A,@DPTR
0035 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0039 F0                MOVX    @DPTR,A
003A 759300      E     MOV     DPX,#?C?XDATASEG
003D E500        E     MOV     A,regTW88+01H
003F 24D1              ADD     A,#0D1H
0041         L?0310:
0041 F582              MOV     DPL,A
0043 E500        E     MOV     A,regTW88
0045 3404              ADDC    A,#04H
0047 F583              MOV     DPH,A
0049 759300      E     MOV     DPX,#?C?XDATASEG
004C 22                RET     
004D         L?0311:
004D         L?0312:
004D 90000000    R     MOV     DPTR,#spiaddr
0051         L?0313:
0051 E0                MOVX    A,@DPTR
0052 FC                MOV     R4,A
0053 A3                INC     DPTR
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 20  

0054 E0                MOVX    A,@DPTR
0055 FD                MOV     R5,A
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 FE                MOV     R6,A
0059 A3                INC     DPTR
005A 22                RET     
005B         L?0314:
005B         L?0315:
005B 7B00        R     MOV     R3,#MBYTE ?SC_0
005D 7A00        R     MOV     R2,#HIGH ?SC_0
005F 7900        R     MOV     R1,#LOW ?SC_0
0061         L?0316:
0061 EE                MOV     A,R6
0062 24D0              ADD     A,#0D0H
0064 FF                MOV     R7,A
0065 E4                CLR     A
0066 3404              ADDC    A,#04H
0068 FE                MOV     R6,A
0069 759300      E     MOV     DPX,#?C?XDATASEG
006C E500        E     MOV     A,regTW88+01H
006E 2F                ADD     A,R7
006F F582              MOV     DPL,A
0071 E500        E     MOV     A,regTW88
0073 3E                ADDC    A,R6
0074 F583              MOV     DPH,A
0076 759300      E     MOV     DPX,#?C?XDATASEG
0079 E0                MOVX    A,@DPTR
007A 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
007E F0                MOVX    @DPTR,A
007F 22                RET     
0080         L?0317:
0080         L?0318:
0080 90000000    R     MOV     DPTR,#index
0084 E0                MOVX    A,@DPTR
0085 75F003            MOV     B,#03H
0088         L?0319:
0088 A4                MUL     AB
0089 2400        E     ADD     A,#LOW argv+06H
008B F582              MOV     DPL,A
008D E5F0              MOV     A,B
008F 3400        E     ADDC    A,#HIGH argv+06H
0091 F583              MOV     DPH,A
0093 759300      E     MOV     DPX,#?C?XDATASEG
0096 22                RET     
0097         L?0322:
0097 7400        R     MOV     A,#MBYTE ?SC_604
0099         L?0323:
0099 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
009D F0                MOVX    @DPTR,A
009E A3                INC     DPTR
009F 22                RET     
00A0         L?0324:
00A0 7B00        R     MOV     R3,#MBYTE ?SC_1060
00A2 7A00        R     MOV     R2,#HIGH ?SC_1060
00A4 7900        R     MOV     R1,#LOW ?SC_1060
00A6         L?0325:
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 75F010            MOV     B,#010H
00AB A4                MUL     AB
00AC 2F                ADD     A,R7
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 21  

00AD F582              MOV     DPL,A
00AF E4                CLR     A
00B0 35F0              ADDC    A,B
00B2 F583              MOV     DPH,A
00B4 E582              MOV     A,DPL
00B6 2400        E     ADD     A,#LOW SPI_Buffer
00B8 F582              MOV     DPL,A
00BA E583              MOV     A,DPH
00BC         L?0326:
00BC 3400        E     ADDC    A,#HIGH SPI_Buffer
00BE F583              MOV     DPH,A
00C0 759300      E     MOV     DPX,#?C?XDATASEG
00C3 22                RET     
00C4         L?0327:
00C4 7400        R     MOV     A,#MBYTE ?SC_914
00C6         L?0328:
00C6 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00CA F0                MOVX    @DPTR,A
00CB A3                INC     DPTR
00CC 22                RET     
00CD         L?0329:
00CD 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00D1 F0                MOVX    @DPTR,A
00D2 A3                INC     DPTR
00D3 22                RET     
00D4         L?0330:
00D4 90000000    R     MOV     DPTR,#index
00D8 E0                MOVX    A,@DPTR
00D9 2404              ADD     A,#04H
00DB         L?0331:
00DB FF                MOV     R7,A
00DC E4                CLR     A
00DD 33                RLC     A
00DE C3                CLR     C
00DF         L?0332:
00DF FE                MOV     R6,A
00E0 90000000    E     MOV     DPTR,#argc
00E4 E0                MOVX    A,@DPTR
00E5 9F                SUBB    A,R7
00E6 EE                MOV     A,R6
00E7 6480              XRL     A,#080H
00E9 F8                MOV     R0,A
00EA 7480              MOV     A,#080H
00EC 98                SUBB    A,R0
00ED 22                RET     
00EE         L?0333:
00EE 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00F2 F0                MOVX    @DPTR,A
00F3 A3                INC     DPTR
00F4 22                RET     
00F5         L?0335:
00F5 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00F9 F0                MOVX    @DPTR,A
00FA A3                INC     DPTR
00FB 22                RET     
00FC         L?0336:
00FC 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0100 F0                MOVX    @DPTR,A
0101 A3                INC     DPTR
0102 22                RET     
0103         L?0337:
0103 7B00        R     MOV     R3,#MBYTE ?SC_4644
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 22  

0105 7A00        R     MOV     R2,#HIGH ?SC_4644
0107 7900        R     MOV     R1,#LOW ?SC_4644
0109 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
010D         L?0338:
010D F0                MOVX    @DPTR,A
010E 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0112 E0                MOVX    A,@DPTR
0113 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0117 22                RET     
0118         L?0339:
0118         L?0340:
0118 E0                MOVX    A,@DPTR
0119 FF                MOV     R7,A
011A         L?0341:
011A 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
011E 010000      E     AJMP    ?C?LSTXDATA
0121         L?0342:
0121         L?0343:
0121 90000000    R     MOV     DPTR,#read_byte
0125         L?0344:
0125 E0                MOVX    A,@DPTR
0126 FF                MOV     R7,A
0127 90000000    R     MOV     DPTR,#i
012B 22                RET     
012C         L?0345:
012C         L?0346:
012C 90000000    E     MOV     DPTR,#?_SpiFlash_PageProgram_XMem?BYTE+04H
0130         L?0347:
0130 7400        E     MOV     A,#HIGH SPI_Buffer
0132 F0                MOVX    @DPTR,A
0133 A3                INC     DPTR
0134 7400        E     MOV     A,#LOW SPI_Buffer
0136 22                RET     
0137         L?0349:
0137         L?0350:
0137 7B00        R     MOV     R3,#MBYTE ?SC_1862
0139 7A00        R     MOV     R2,#HIGH ?SC_1862
013B 7900        R     MOV     R1,#LOW ?SC_1862
013D 22                RET     
013E         L?0351:
013E 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0142 F0                MOVX    @DPTR,A
0143 A3                INC     DPTR
0144 22                RET     
0145         L?0353:
0145         L?0354:
0145 90000000    R     MOV     DPTR,#ret
0149 EF                MOV     A,R7
014A         L?0355:
014A F0                MOVX    @DPTR,A
014B 759300      E     MOV     DPX,#?C?XDATASEG
014E E500        E     MOV     A,regTW88+01H
0150 22                RET     
0151         L?0356:
0151 90000000    R     MOV     DPTR,#index
0155 E0                MOVX    A,@DPTR
0156 FD                MOV     R5,A
0157 A3                INC     DPTR
0158 E0                MOVX    A,@DPTR
0159 CD                XCH     A,R5
015A         L?0357:
015A 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 23  

015E F0                MOVX    @DPTR,A
015F A3                INC     DPTR
0160 22                RET     
0161         L?0358:
0161         L?0359:
0161 90000000    E     MOV     DPTR,#argc
0165 E0                MOVX    A,@DPTR
0166 C3                CLR     C
0167 9402              SUBB    A,#02H
0169 22                RET     
016A         L?0360:
016A         L?0361:
016A 90000000    E     MOV     DPTR,#argc
016E E0                MOVX    A,@DPTR
016F C3                CLR     C
0170 9403              SUBB    A,#03H
0172 22                RET     
0173         L?0362:
0173         L?0363:
0173 90000000    E     MOV     DPTR,#?_SpiFlash_DmaCmd?BYTE+04H
0177 E4                CLR     A
0178 F0                MOVX    @DPTR,A
0179 A3                INC     DPTR
017A 22                RET     
017B         L?0364:
017B E0                MOVX    A,@DPTR
017C 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
0180         L?0365:
0180 F0                MOVX    @DPTR,A
0181 759300      E     MOV     DPX,#?C?XDATASEG
0184 E500        E     MOV     A,regTW88+01H
0186 22                RET     
0187         L?0366:
0187 FF                MOV     R7,A
0188 E0                MOVX    A,@DPTR
0189 4F                ORL     A,R7
018A         L?0367:
018A FF                MOV     R7,A
018B 759300      E     MOV     DPX,#?C?XDATASEG
018E E500        E     MOV     A,regTW88+01H
0190 22                RET     
0191         L?0368:
0191 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0195 F0                MOVX    @DPTR,A
0196 A3                INC     DPTR
0197 22                RET     
0198         L?0369:
0198         L?0370:
0198 759300      E     MOV     DPX,#?C?XDATASEG
019B E500        E     MOV     A,regTW88+01H
019D 24C4              ADD     A,#0C4H
019F 22                RET     
01A0         L?0373:
01A0 E9                MOV     A,R1
01A1 2401              ADD     A,#01H
01A3         L?0374:
01A3 F9                MOV     R1,A
01A4 E4                CLR     A
01A5 3A                ADDC    A,R2
01A6 FA                MOV     R2,A
01A7 010000      E     AJMP    ?C?CLDPTR
01AA         L?0375:
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 24  

01AA         L?0376:
01AA F0                MOVX    @DPTR,A
01AB E4                CLR     A
01AC A3                INC     DPTR
01AD F0                MOVX    @DPTR,A
01AE 7BD0              MOV     R3,#0D0H
01B0 7A04              MOV     R2,#04H
01B2 7D40              MOV     R5,#040H
01B4 22                RET     
01B5         L?0379:
01B5 F0                MOVX    @DPTR,A
01B6         L?0380:
01B6 90000000    R     MOV     DPTR,#cnt
01BA A3                INC     DPTR
01BB A3                INC     DPTR
01BC E0                MOVX    A,@DPTR
01BD FF                MOV     R7,A
01BE A3                INC     DPTR
01BF 22                RET     
01C0         L?0381:
01C0         L?0382:
01C0 7B00        R     MOV     R3,#MBYTE ?SC_599
01C2 7A00        R     MOV     R2,#HIGH ?SC_599
01C4 7900        R     MOV     R1,#LOW ?SC_599
01C6 22                RET     
01C7         L?0383:
01C7 FC                MOV     R4,A
01C8 90000000    R     MOV     DPTR,#size
01CC 010000      E     AJMP    ?C?LSTXDATA
01CF         L?0384:
01CF 90000000    R     MOV     DPTR,#cmd
01D3 E0                MOVX    A,@DPTR
01D4 FF                MOV     R7,A
01D5 E4                CLR     A
01D6 90000000    E     MOV     DPTR,#?_SpiFlash_DmaCmd?BYTE+04H
01DA F0                MOVX    @DPTR,A
01DB A3                INC     DPTR
01DC F0                MOVX    @DPTR,A
01DD A3                INC     DPTR
01DE 22                RET     
01DF         L?0385:
01DF 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
01E3 F0                MOVX    @DPTR,A
01E4 A3                INC     DPTR
01E5 22                RET     
01E6         L?0387:
01E6 A4                MUL     AB
01E7 2400        E     ADD     A,#LOW argv
01E9 F582              MOV     DPL,A
01EB E5F0              MOV     A,B
01ED 3400        E     ADDC    A,#HIGH argv
01EF F583              MOV     DPH,A
01F1 759300      E     MOV     DPX,#?C?XDATASEG
01F4 22                RET     
01F5         L?0390:
01F5 FF                MOV     R7,A
01F6 E4                CLR     A
01F7 3E                ADDC    A,R6
01F8         L?0391:
01F8 FE                MOV     R6,A
01F9 E4                CLR     A
01FA 3D                ADDC    A,R5
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 25  

01FB FD                MOV     R5,A
01FC E4                CLR     A
01FD 3C                ADDC    A,R4
01FE 22                RET     
01FF         L?0392:
01FF         L?0393:
01FF 7B00        R     MOV     R3,#MBYTE ?SC_1864
0201 7A00        R     MOV     R2,#HIGH ?SC_1864
0203 7900        R     MOV     R1,#LOW ?SC_1864
0205 22                RET     
0206         L?0394:
0206         L?0395:
0206 7B00        R     MOV     R3,#MBYTE ?SC_2155
0208 7A00        R     MOV     R2,#HIGH ?SC_2155
020A 7900        R     MOV     R1,#LOW ?SC_2155
020C 22                RET     
020D         L?0397:
020D E0                MOVX    A,@DPTR
020E CF                XCH     A,R7
020F         L?0398:
020F 90000000    E     MOV     DPTR,#?_SpiFlash_PageProgram_XMem?BYTE+06H
0213 F0                MOVX    @DPTR,A
0214 A3                INC     DPTR
0215 22                RET     
0216         L?0401:
0216 90000000    E     MOV     DPTR,#spiflash_chip
021A E0                MOVX    A,@DPTR
021B FB                MOV     R3,A
021C A3                INC     DPTR
021D E0                MOVX    A,@DPTR
021E FA                MOV     R2,A
021F A3                INC     DPTR
0220 22                RET     
0221         L?0402:
0221 F582              MOV     DPL,A
0223 E4                CLR     A
0224 3400        E     ADDC    A,#HIGH SPI_CmdBuffer
0226 F583              MOV     DPH,A
0228 759300      E     MOV     DPX,#?C?XDATASEG
022B 22                RET     
022C         L?0404:
022C 90000000    R     MOV     DPTR,#index
0230 E0                MOVX    A,@DPTR
0231 75F003            MOV     B,#03H
0234 A4                MUL     AB
0235 22                RET     
0236         L?0405:
0236 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
023A F0                MOVX    @DPTR,A
023B A3                INC     DPTR
023C 22                RET     
023D         L?0406:
023D         L?0407:
023D E0                MOVX    A,@DPTR
023E 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0242 F0                MOVX    @DPTR,A
0243 22                RET     
0244         L?0408:
0244 90000000    R     MOV     DPTR,#i
0248 E0                MOVX    A,@DPTR
0249 FF                MOV     R7,A
024A C3                CLR     C
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 26  

024B 9410              SUBB    A,#010H
024D 22                RET     
             ; FUNCTION Com012D (END)

             ; FUNCTION _dd_spi (BEGIN)
                                           ; SOURCE LINE # 69
0000 90000000    R     MOV     DPTR,#delay
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 70
                                           ; SOURCE LINE # 72
0006 90000000    E     MOV     DPTR,#I2C_delay_base
000A E0                MOVX    A,@DPTR
000B FF                MOV     R7,A
000C 90000000    R     MOV     DPTR,#j
0010 EF                MOV     A,R7
0011 F0                MOVX    @DPTR,A
0012         ?C0001:
                                           ; SOURCE LINE # 73
0012 90000000    R     MOV     DPTR,#j
0016 E0                MOVX    A,@DPTR
0017 FF                MOV     R7,A
0018 14                DEC     A
0019 F0                MOVX    @DPTR,A
001A EF                MOV     A,R7
001B 6020              JZ      ?C0006
                                           ; SOURCE LINE # 74
001D 90000000    R     MOV     DPTR,#i
0021 E4                CLR     A
0022 F0                MOVX    @DPTR,A
0023         ?C0003:
0023 90000000    R     MOV     DPTR,#delay
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 90000000    R     MOV     DPTR,#i
002D E0                MOVX    A,@DPTR
002E FE                MOV     R6,A
002F EE                MOV     A,R6
0030 C3                CLR     C
0031 9F                SUBB    A,R7
0032 50DE              JNC     ?C0001
0034 90000000    R     MOV     DPTR,#i
0038 E0                MOVX    A,@DPTR
0039 04                INC     A
003A F0                MOVX    @DPTR,A
003B 80E6              SJMP    ?C0003
                                           ; SOURCE LINE # 75
                                           ; SOURCE LINE # 76
003D         ?C0006:
003D 22                RET     
             ; FUNCTION _dd_spi (END)

             ; FUNCTION _SPI_Set_S_DATA (BEGIN)
                                           ; SOURCE LINE # 88
;---- Variable 'dq0' assigned to Register 'R5' ----
;---- Variable 's' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 89
                                           ; SOURCE LINE # 90
0000 D2B2              SETB    P3_2
                                           ; SOURCE LINE # 91
0002 EF                MOV     A,R7
0003 C3                CLR     C
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 27  

0004 6001              JZ      ?C0007
0006 D3                SETB    C
0007         ?C0007:
0007         ?C0008:
0007 9296              MOV     P1_6,C
                                           ; SOURCE LINE # 92
0009 ED                MOV     A,R5
000A C3                CLR     C
000B 6001              JZ      ?C0009
000D D3                SETB    C
000E         ?C0009:
000E         ?C0010:
000E 92B3              MOV     P3_3,C
                                           ; SOURCE LINE # 93
0010 C2B2              CLR     P3_2
                                           ; SOURCE LINE # 94
0012 7F02              MOV     R7,#02H
0014 110000      R     ACALL   _dd_spi
                                           ; SOURCE LINE # 95
0017 D2B2              SETB    P3_2
                                           ; SOURCE LINE # 96
0019 7F03              MOV     R7,#03H
001B 010000      R     AJMP    _dd_spi
             ; FUNCTION _SPI_Set_S_DATA (END)

             ; FUNCTION _SPI_write_byte (BEGIN)
                                           ; SOURCE LINE # 98
;---- Variable 'value' assigned to Register 'R4' ----
0000 AC07              MOV     R4,AR7
                                           ; SOURCE LINE # 99
                                           ; SOURCE LINE # 103
;---- Variable 'mask' assigned to Register 'R3' ----
0002 7B80              MOV     R3,#080H
0004         ?C0012:
                                           ; SOURCE LINE # 104
0004 EB                MOV     A,R3
0005 6016              JZ      ?C0016
                                           ; SOURCE LINE # 105
0007 5C                ANL     A,R4
0008 7F00              MOV     R7,#00H
000A 6002              JZ      ?C0014
000C 7F01              MOV     R7,#01H
000E         ?C0014:
000E         ?C0015:
;---- Variable 'bTemp' assigned to Register 'R2' ----
000E AA07              MOV     R2,AR7
                                           ; SOURCE LINE # 106
0010 AD02              MOV     R5,AR2
0012 E4                CLR     A
0013 FF                MOV     R7,A
0014 110000      R     ACALL   _SPI_Set_S_DATA
                                           ; SOURCE LINE # 107
0017 EB                MOV     A,R3
0018 C3                CLR     C
0019 13                RRC     A
001A FB                MOV     R3,A
                                           ; SOURCE LINE # 108
001B 80E7              SJMP    ?C0012
                                           ; SOURCE LINE # 109
001D         ?C0016:
001D 22                RET     
             ; FUNCTION _SPI_write_byte (END)
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 28  


             ; FUNCTION SPI_read_byte (BEGIN)
                                           ; SOURCE LINE # 110
                                           ; SOURCE LINE # 111
                                           ; SOURCE LINE # 115
;---- Variable 'value' assigned to Register 'R5' ----
0000 E4                CLR     A
0001 FD                MOV     R5,A
                                           ; SOURCE LINE # 116
;---- Variable 'i' assigned to Register 'R4' ----
0002 FC                MOV     R4,A
0003         ?C0017:
                                           ; SOURCE LINE # 117
0003 ED                MOV     A,R5
0004 25E0              ADD     A,ACC
0006 FD                MOV     R5,A
                                           ; SOURCE LINE # 118
0007 C2B2              CLR     P3_2
                                           ; SOURCE LINE # 119
0009 7F02              MOV     R7,#02H
000B 110000      R     ACALL   _dd_spi
                                           ; SOURCE LINE # 120
000E D2B2              SETB    P3_2
                                           ; SOURCE LINE # 121
0010 7F00              MOV     R7,#00H
0012 309702            JNB     P1_7,?C0020
0015 7F01              MOV     R7,#01H
0017         ?C0020:
0017         ?C0021:
0017 ED                MOV     A,R5
0018 4F                ORL     A,R7
0019 FD                MOV     R5,A
                                           ; SOURCE LINE # 122
001A 7F03              MOV     R7,#03H
001C 110000      R     ACALL   _dd_spi
                                           ; SOURCE LINE # 123
001F 0C                INC     R4
0020 EC                MOV     A,R4
0021 B408DF            CJNE    A,#08H,?C0017
0024         ?C0018:
                                           ; SOURCE LINE # 124
0024 AF05              MOV     R7,AR5
                                           ; SOURCE LINE # 125
0026         ?C0022:
0026 22                RET     
             ; FUNCTION SPI_read_byte (END)

             ; FUNCTION SPI_Reset_Command (BEGIN)
                                           ; SOURCE LINE # 128
                                           ; SOURCE LINE # 129
                                           ; SOURCE LINE # 131
0000 7F66              MOV     R7,#066H
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
0002 110000      R     ACALL   L?0396
0005 110000      R     ACALL   _dd_spi
                                           ; SOURCE LINE # 135
0008 7F99              MOV     R7,#099H
                                           ; SOURCE LINE # 136
                                           ; SOURCE LINE # 137
000A 110000      R     ACALL   L?0396
000D 010000      R     AJMP    _dd_spi
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 29  

                                           ; SOURCE LINE # 139
0010         L?0396:
0010 110000      R     ACALL   _SPI_write_byte
0013 E4                CLR     A
0014 FD                MOV     R5,A
0015 7F01              MOV     R7,#01H
0017 110000      R     ACALL   _SPI_Set_S_DATA
001A 7F32              MOV     R7,#032H
001C 22                RET     
             ; FUNCTION SPI_Reset_Command (END)

             ; FUNCTION SPI_9F_Command (BEGIN)
                                           ; SOURCE LINE # 140
                                           ; SOURCE LINE # 141
                                           ; SOURCE LINE # 145
0000 7F9F              MOV     R7,#09FH
0002 110000      R     ACALL   _SPI_write_byte
                                           ; SOURCE LINE # 146
0005 110000      R     ACALL   SPI_read_byte
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 147
0008 7B00        R     MOV     R3,#MBYTE ?SC_0
000A 7A00        R     MOV     R2,#HIGH ?SC_0
000C 7900        R     MOV     R1,#LOW ?SC_0
000E 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
                                           ; SOURCE LINE # 148
                                           ; SOURCE LINE # 149
0012 110000      R     ACALL   L?0348
                                           ; SOURCE LINE # 150
                                           ; SOURCE LINE # 151
0015 110000      R     ACALL   L?0348
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
001A 010000      E     AJMP    _Printf
                                           ; SOURCE LINE # 152
001D         L?0348:
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
001F 110000      E     ACALL   _Printf
0022 110000      R     ACALL   SPI_read_byte
0025 7B00        R     MOV     R3,#MBYTE ?SC_0
0027 7A00        R     MOV     R2,#HIGH ?SC_0
0029 7900        R     MOV     R1,#LOW ?SC_0
002B 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
002F 22                RET     
             ; FUNCTION SPI_9F_Command (END)

             ; FUNCTION _SPI_Set_sequence (BEGIN)
                                           ; SOURCE LINE # 156
;---- Variable 'n' assigned to Register 'R4' ----
0000 AC07              MOV     R4,AR7
                                           ; SOURCE LINE # 157
                                           ; SOURCE LINE # 159
;---- Variable 'i' assigned to Register 'R3' ----
0002 E4                CLR     A
0003 FB                MOV     R3,A
0004         ?C0025:
0004 EB                MOV     A,R3
0005 C3                CLR     C
0006 9C                SUBB    A,R4
0007 500A              JNC     ?C0026
                                           ; SOURCE LINE # 160
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 30  

0009 7D01              MOV     R5,#01H
000B E4                CLR     A
000C FF                MOV     R7,A
000D 110000      R     ACALL   _SPI_Set_S_DATA
0010 0B                INC     R3
0011 80F1              SJMP    ?C0025
0013         ?C0026:
                                           ; SOURCE LINE # 161
0013 7D01              MOV     R5,#01H
0015 7F01              MOV     R7,#01H
0017 110000      R     ACALL   _SPI_Set_S_DATA
                                           ; SOURCE LINE # 162
001A 7F32              MOV     R7,#032H
001C 010000      R     AJMP    _dd_spi
             ; FUNCTION _SPI_Set_sequence (END)

             ; FUNCTION SPI_Recovery (BEGIN)
                                           ; SOURCE LINE # 165
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 167
0000 D296              SETB    P1_6
                                           ; SOURCE LINE # 169
0002 D2B2              SETB    P3_2
                                           ; SOURCE LINE # 172
0004 7F07              MOV     R7,#07H
0006 110000      R     ACALL   _SPI_Set_sequence
                                           ; SOURCE LINE # 173
0009 7F09              MOV     R7,#09H
000B 110000      R     ACALL   _SPI_Set_sequence
                                           ; SOURCE LINE # 174
000E 7F0D              MOV     R7,#0DH
0010 110000      R     ACALL   _SPI_Set_sequence
                                           ; SOURCE LINE # 175
0013 7F11              MOV     R7,#011H
0015 110000      R     ACALL   _SPI_Set_sequence
                                           ; SOURCE LINE # 176
0018 7F19              MOV     R7,#019H
001A 110000      R     ACALL   _SPI_Set_sequence
                                           ; SOURCE LINE # 177
001D 7F21              MOV     R7,#021H
001F 110000      R     ACALL   _SPI_Set_sequence
                                           ; SOURCE LINE # 179
0022 7F08              MOV     R7,#08H
0024 010000      R     AJMP    _SPI_Set_sequence
             ; FUNCTION SPI_Recovery (END)

             ; FUNCTION HelpMonitorSPI (BEGIN)
                                           ; SOURCE LINE # 187
                                           ; SOURCE LINE # 188
                                           ; SOURCE LINE # 189
0000 7B00        R     MOV     R3,#MBYTE ?SC_7
0002 7A00        R     MOV     R2,#HIGH ?SC_7
0004 7900        R     MOV     R1,#LOW ?SC_7
0006 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 190
0009 7B00        R     MOV     R3,#MBYTE ?SC_41
000B 7A00        R     MOV     R2,#HIGH ?SC_41
000D 7900        R     MOV     R1,#LOW ?SC_41
000F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 191
0012 7B00        R     MOV     R3,#MBYTE ?SC_68
0014 7A00        R     MOV     R2,#HIGH ?SC_68
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 31  

0016 7900        R     MOV     R1,#LOW ?SC_68
0018 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 192
001B 7B00        R     MOV     R3,#MBYTE ?SC_103
001D 7A00        R     MOV     R2,#HIGH ?SC_103
001F 7900        R     MOV     R1,#LOW ?SC_103
0021 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 193
0024 7B00        R     MOV     R3,#MBYTE ?SC_137
0026 7A00        R     MOV     R2,#HIGH ?SC_137
0028 7900        R     MOV     R1,#LOW ?SC_137
002A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 194
002D 7B00        R     MOV     R3,#MBYTE ?SC_176
002F 7A00        R     MOV     R2,#HIGH ?SC_176
0031 7900        R     MOV     R1,#LOW ?SC_176
0033 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 195
0036 7B00        R     MOV     R3,#MBYTE ?SC_219
0038 7A00        R     MOV     R2,#HIGH ?SC_219
003A 7900        R     MOV     R1,#LOW ?SC_219
003C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 198
003F 7B00        R     MOV     R3,#MBYTE ?SC_279
0041 7A00        R     MOV     R2,#HIGH ?SC_279
0043 7900        R     MOV     R1,#LOW ?SC_279
0045 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 199
0048 7B00        R     MOV     R3,#MBYTE ?SC_338
004A 7A00        R     MOV     R2,#HIGH ?SC_338
004C 7900        R     MOV     R1,#LOW ?SC_338
004E 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 200
0051 7B00        R     MOV     R3,#MBYTE ?SC_374
0053 7A00        R     MOV     R2,#HIGH ?SC_374
0055 7900        R     MOV     R1,#LOW ?SC_374
0057 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 202
005A 7B00        R     MOV     R3,#MBYTE ?SC_402
005C 7A00        R     MOV     R2,#HIGH ?SC_402
005E 7900        R     MOV     R1,#LOW ?SC_402
0060 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 203
0063 7B00        R     MOV     R3,#MBYTE ?SC_461
0065 7A00        R     MOV     R2,#HIGH ?SC_461
0067 7900        R     MOV     R1,#LOW ?SC_461
0069 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 204
006C 7B00        R     MOV     R3,#MBYTE ?SC_513
006E 7A00        R     MOV     R2,#HIGH ?SC_513
0070 7900        R     MOV     R1,#LOW ?SC_513
0072 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 205
0075 7B00        R     MOV     R3,#MBYTE ?SC_556
0077 7A00        R     MOV     R2,#HIGH ?SC_556
0079 7900        R     MOV     R1,#LOW ?SC_556
007B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 207
007E 110000      R     ACALL   L?0381
0081 010000      E     AJMP    _Printf
             ; FUNCTION HelpMonitorSPI (END)

C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 32  

             ; FUNCTION MonitorSPI (BEGIN)
                                           ; SOURCE LINE # 213
                                           ; SOURCE LINE # 214
                                           ; SOURCE LINE # 218
0000 110000      R     ACALL   L?0358
0003 5002              JNC     ?C0031
                                           ; SOURCE LINE # 219
0005 800A              SJMP    ?C0262
                                           ; SOURCE LINE # 221
0007         ?C0031:
                                           ; SOURCE LINE # 222
0007 110000      R     ACALL   L?0302
000A 110000      E     ACALL   _stricmp
000D EF                MOV     A,R7
000E 4E                ORL     A,R6
000F 7003              JNZ     ?C0034
                                           ; SOURCE LINE # 223
0011         ?C0262:
0011 010000      R     AJMP    HelpMonitorSPI
                                           ; SOURCE LINE # 225
0014         ?C0034:
                                           ; SOURCE LINE # 227
0014 110000      R     ACALL   L?0322
0017 7400        R     MOV     A,#HIGH ?SC_604
0019 F0                MOVX    @DPTR,A
001A 7400        R     MOV     A,#LOW ?SC_604
001C 110000      R     ACALL   L?0303
001F 110000      E     ACALL   _stricmp
0022 EF                MOV     A,R7
0023 4E                ORL     A,R6
0024 7037              JNZ     ?C0036
                                           ; SOURCE LINE # 230
0026 110000      R     ACALL   L?0360
0029 4011              JC      ?C0037
002B 90000000    E     MOV     DPTR,#argv+06H
002F 110000      R     ACALL   L?0306
0032 110000      E     ACALL   _a2h
0035 90000000    R     MOV     DPTR,#spiaddr
0039 110000      E     ACALL   ?C?LSTXDATA
003C         ?C0037:
                                           ; SOURCE LINE # 232
003C 90000000    R     MOV     DPTR,#spiaddr
0040 110000      R     ACALL   L?0313
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 110000      R     ACALL   _SPI_dump
                                           ; SOURCE LINE # 234
0048 90000000    R     MOV     DPTR,#spiaddr
004C 110000      R     ACALL   L?0313
004F E0                MOVX    A,@DPTR
0050 2480              ADD     A,#080H
0052 110000      R     ACALL   L?0390
0055 FC                MOV     R4,A
0056 90000000    R     MOV     DPTR,#spiaddr
                                           ; SOURCE LINE # 235
005A 010000      R     AJMP    ?C0265
005D         ?C0036:
                                           ; SOURCE LINE # 237
005D 7400        R     MOV     A,#MBYTE ?SC_606
005F 110000      R     ACALL   L?0323
0062 7400        R     MOV     A,#HIGH ?SC_606
0064 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 33  

0065 A3                INC     DPTR
0066 7400        R     MOV     A,#LOW ?SC_606
0068 110000      R     ACALL   L?0304
006B 110000      E     ACALL   _stricmp
006E EF                MOV     A,R7
006F 4E                ORL     A,R6
0070 7003              JNZ     ?C0039
                                           ; SOURCE LINE # 238
0072 010000      R     AJMP    SPI_Status
                                           ; SOURCE LINE # 239
0075         ?C0039:
                                           ; SOURCE LINE # 245
0075 7400        R     MOV     A,#MBYTE ?SC_613
0077 110000      R     ACALL   L?0328
007A 7400        R     MOV     A,#HIGH ?SC_613
007C F0                MOVX    @DPTR,A
007D A3                INC     DPTR
007E 7400        R     MOV     A,#LOW ?SC_613
0080 110000      R     ACALL   L?0304
0083 110000      E     ACALL   _stricmp
0086 EF                MOV     A,R7
0087 4E                ORL     A,R6
0088 702E              JNZ     ?C0041
                                           ; SOURCE LINE # 247
008A FF                MOV     R7,A
008B FE                MOV     R6,A
008C 7D04              MOV     R5,#04H
008E FC                MOV     R4,A
008F 110000      E     ACALL   _SpiFlash_SectorErase
                                           ; SOURCE LINE # 249
;---- Variable 'j' assigned to Register 'R7' ----
0092 E4                CLR     A
0093 FF                MOV     R7,A
0094         ?C0042:
                                           ; SOURCE LINE # 250
0094 7400        E     MOV     A,#LOW SPI_Buffer
0096 2F                ADD     A,R7
0097 F582              MOV     DPL,A
0099 E4                CLR     A
009A 110000      R     ACALL   L?0326
009D EF                MOV     A,R7
009E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 251
009F 0F                INC     R7
00A0 EF                MOV     A,R7
00A1 B480F0            CJNE    A,#080H,?C0042
00A4         ?C0043:
                                           ; SOURCE LINE # 253
00A4 E4                CLR     A
00A5 FF                MOV     R7,A
00A6 FE                MOV     R6,A
00A7 7D04              MOV     R5,#04H
00A9 FC                MOV     R4,A
00AA 110000      R     ACALL   L?0345
00AD F0                MOVX    @DPTR,A
00AE A3                INC     DPTR
00AF E4                CLR     A
00B0 F0                MOVX    @DPTR,A
00B1 A3                INC     DPTR
00B2 7408              MOV     A,#08H
00B4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 254
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 34  

00B5 010000      R     AJMP    ?C0267
00B8         ?C0041:
                                           ; SOURCE LINE # 257
00B8 7400        R     MOV     A,#MBYTE ?SC_615
00BA 110000      R     ACALL   L?0329
00BD 7400        R     MOV     A,#HIGH ?SC_615
00BF F0                MOVX    @DPTR,A
00C0 A3                INC     DPTR
00C1 7400        R     MOV     A,#LOW ?SC_615
00C3 110000      R     ACALL   L?0304
00C6 110000      E     ACALL   _stricmp
00C9 EF                MOV     A,R7
00CA 4E                ORL     A,R6
00CB 704D              JNZ     ?C0046
                                           ; SOURCE LINE # 260
00CD 110000      R     ACALL   L?0360
00D0 4011              JC      ?C0047
00D2 90000000    E     MOV     DPTR,#argv+06H
00D6 110000      R     ACALL   L?0306
00D9 110000      E     ACALL   _a2h
00DC 90000000    R     MOV     DPTR,#spiaddr
00E0 110000      E     ACALL   ?C?LSTXDATA
00E3         ?C0047:
                                           ; SOURCE LINE # 262
00E3 7B00        R     MOV     R3,#MBYTE ?SC_622
00E5 7A00        R     MOV     R2,#HIGH ?SC_622
00E7 7900        R     MOV     R1,#LOW ?SC_622
00E9 90000000    R     MOV     DPTR,#spiaddr
00ED 110000      R     ACALL   L?0313
00F0 110000      R     ACALL   L?0339
00F3 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 264
00F6 90000000    R     MOV     DPTR,#spiaddr
00FA 110000      R     ACALL   L?0313
00FD E0                MOVX    A,@DPTR
00FE FF                MOV     R7,A
00FF 110000      E     ACALL   _SpiFlash_SectorErase
                                           ; SOURCE LINE # 265
0102 90000000    R     MOV     DPTR,#spiaddr
0106 110000      R     ACALL   L?0313
0109 E0                MOVX    A,@DPTR
010A 2400              ADD     A,#00H
010C FF                MOV     R7,A
010D EE                MOV     A,R6
010E 3410              ADDC    A,#010H
0110 110000      R     ACALL   L?0391
0113 FC                MOV     R4,A
0114 90000000    R     MOV     DPTR,#spiaddr
0118         ?C0263:
                                           ; SOURCE LINE # 266
0118 8063              SJMP    ?C0265
011A         ?C0046:
                                           ; SOURCE LINE # 268
011A 7400        R     MOV     A,#MBYTE ?SC_645
011C 110000      R     ACALL   L?0329
011F 7400        R     MOV     A,#HIGH ?SC_645
0121 F0                MOVX    @DPTR,A
0122 A3                INC     DPTR
0123 7400        R     MOV     A,#LOW ?SC_645
0125 110000      R     ACALL   L?0304
0128 110000      E     ACALL   _stricmp
012B EF                MOV     A,R7
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 35  

012C 4E                ORL     A,R6
012D 7051              JNZ     ?C0049
                                           ; SOURCE LINE # 271
012F 110000      R     ACALL   L?0361
0132 4011              JC      ?C0050
0134 90000000    E     MOV     DPTR,#argv+06H
0138 110000      R     ACALL   L?0306
013B 110000      E     ACALL   _a2h
013E 90000000    R     MOV     DPTR,#spiaddr
0142 110000      E     ACALL   ?C?LSTXDATA
0145         ?C0050:
                                           ; SOURCE LINE # 273
0145 7B00        R     MOV     R3,#MBYTE ?SC_651
0147 7A00        R     MOV     R2,#HIGH ?SC_651
0149 7900        R     MOV     R1,#LOW ?SC_651
014B 90000000    R     MOV     DPTR,#spiaddr
014F 110000      R     ACALL   L?0313
0152 110000      R     ACALL   L?0339
0155 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 275
0158 90000000    R     MOV     DPTR,#spiaddr
015C 110000      R     ACALL   L?0313
015F E0                MOVX    A,@DPTR
0160 FF                MOV     R7,A
0161 110000      E     ACALL   _SpiFlash_BlockErase
                                           ; SOURCE LINE # 276
0164 90000000    R     MOV     DPTR,#spiaddr
0168 110000      R     ACALL   L?0313
016B E0                MOVX    A,@DPTR
016C 2400              ADD     A,#00H
016E FF                MOV     R7,A
016F E4                CLR     A
0170 3E                ADDC    A,R6
0171 FE                MOV     R6,A
0172 ED                MOV     A,R5
0173 3401              ADDC    A,#01H
0175 FD                MOV     R5,A
0176 E4                CLR     A
0177 3C                ADDC    A,R4
0178 FC                MOV     R4,A
0179 90000000    R     MOV     DPTR,#spiaddr
017D         ?C0265:
017D 010000      E     AJMP    ?C?LSTXDATA
                                           ; SOURCE LINE # 277
0180         ?C0049:
                                           ; SOURCE LINE # 279
0180 7400        R     MOV     A,#MBYTE ?SC_673
0182 110000      R     ACALL   L?0333
0185 7400        R     MOV     A,#HIGH ?SC_673
0187 F0                MOVX    @DPTR,A
0188 A3                INC     DPTR
0189 7400        R     MOV     A,#LOW ?SC_673
018B 110000      R     ACALL   L?0304
018E 110000      E     ACALL   _stricmp
0191 EF                MOV     A,R7
0192 4E                ORL     A,R6
0193 6003              JZ      $ + 5H
0195 010000      R     AJMP    ?C0052
                                           ; SOURCE LINE # 280
0198 FF                MOV     R7,A
0199 FE                MOV     R6,A
019A FD                MOV     R5,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 36  

019B FC                MOV     R4,A
019C 90000000    R     MOV     DPTR,#source
01A0 110000      E     ACALL   ?C?LSTXDATA
01A3 E4                CLR     A
01A4 FF                MOV     R7,A
01A5 FE                MOV     R6,A
01A6 7D01              MOV     R5,#01H
01A8 FC                MOV     R4,A
01A9 90000000    R     MOV     DPTR,#dest
01AD 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 281
01B0 E4                CLR     A
01B1 FF                MOV     R7,A
01B2 7E01              MOV     R6,#01H
01B4 FD                MOV     R5,A
01B5 FC                MOV     R4,A
01B6 90000000    R     MOV     DPTR,#cnt
01BA 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 283
01BD 90000000    E     MOV     DPTR,#argc
01C1 E0                MOVX    A,@DPTR
01C2 C3                CLR     C
01C3 9404              SUBB    A,#04H
01C5 5003              JNC     ?C0053
                                           ; SOURCE LINE # 284
01C7 010000      R     AJMP    ?C0266
                                           ; SOURCE LINE # 286
01CA         ?C0053:
                                           ; SOURCE LINE # 287
01CA 90000000    E     MOV     DPTR,#argv+06H
01CE 110000      R     ACALL   L?0306
01D1 110000      R     ACALL   L?0371
01D4 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 288
01D7 90000000    E     MOV     DPTR,#argv+09H
01DB 110000      R     ACALL   L?0306
01DE 110000      E     ACALL   _a2h
01E1 90000000    R     MOV     DPTR,#dest
01E5 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 289
01E8 90000000    E     MOV     DPTR,#argv+0CH
01EC 110000      R     ACALL   L?0306
01EF 110000      E     ACALL   _a2h
01F2 90000000    R     MOV     DPTR,#cnt
01F6 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 291
01F9 7B00        R     MOV     R3,#MBYTE ?SC_703
01FB 7A00        R     MOV     R2,#HIGH ?SC_703
01FD 7900        R     MOV     R1,#LOW ?SC_703
01FF 90000000    R     MOV     DPTR,#source
0203 110000      R     ACALL   L?0313
0206 110000      R     ACALL   L?0340
0209 90000000    R     MOV     DPTR,#dest
020D 110000      R     ACALL   L?0313
0210 E0                MOVX    A,@DPTR
0211 FF                MOV     R7,A
0212 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
0216 110000      E     ACALL   ?C?LSTXDATA
0219 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 292
021C 7B00        R     MOV     R3,#MBYTE ?SC_734
021E 7A00        R     MOV     R2,#HIGH ?SC_734
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 37  

0220 7900        R     MOV     R1,#LOW ?SC_734
0222 110000      R     ACALL   L?0380
0225 E0                MOVX    A,@DPTR
0226 CF                XCH     A,R7
0227 110000      R     ACALL   L?0357
022A EF                MOV     A,R7
022B F0                MOVX    @DPTR,A
022C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 293
022F 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+04H
0233 110000      R     ACALL   L?0347
0236 110000      R     ACALL   L?0379
0239 E0                MOVX    A,@DPTR
023A 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+06H
023E CF                XCH     A,R7
023F F0                MOVX    @DPTR,A
0240 A3                INC     DPTR
0241 EF                MOV     A,R7
0242 F0                MOVX    @DPTR,A
0243 90000000    R     MOV     DPTR,#source
0247 110000      R     ACALL   L?0313
024A E0                MOVX    A,@DPTR
024B FF                MOV     R7,A
024C 110000      E     ACALL   _SpiFlash_Read_XMem
                                           ; SOURCE LINE # 296
024F 110000      R     ACALL   L?0345
0252 110000      R     ACALL   L?0379
0255 110000      R     ACALL   L?0397
0258 EF                MOV     A,R7
0259 F0                MOVX    @DPTR,A
025A 90000000    R     MOV     DPTR,#dest
025E 110000      R     ACALL   L?0313
0261 E0                MOVX    A,@DPTR
0262 FF                MOV     R7,A
0263         ?C0264:
                                           ; SOURCE LINE # 297
0263 010000      R     AJMP    ?C0267
0266         ?C0052:
                                           ; SOURCE LINE # 299
0266 7400        R     MOV     A,#MBYTE ?SC_747
0268 110000      R     ACALL   L?0333
026B 7400        R     MOV     A,#HIGH ?SC_747
026D F0                MOVX    @DPTR,A
026E A3                INC     DPTR
026F 7400        R     MOV     A,#LOW ?SC_747
0271 110000      R     ACALL   L?0304
0274 110000      E     ACALL   _stricmp
0277 EF                MOV     A,R7
0278 4E                ORL     A,R6
0279 6003              JZ      $ + 5H
027B 010000      R     AJMP    ?C0055
                                           ; SOURCE LINE # 302
027E 110000      R     ACALL   L?0361
0281 504B              JNC     ?C0056
                                           ; SOURCE LINE # 303
0283 759300      E     MOV     DPX,#?C?XDATASEG
0286 E500        E     MOV     A,regTW88+01H
0288 24C0              ADD     A,#0C0H
028A 110000      R     ACALL   L?0310
028D E0                MOVX    A,@DPTR
028E 5407              ANL     A,#07H
0290 90000000    R     MOV     DPTR,#mod
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 38  

0294 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 305
0295 90000000    E     MOV     DPTR,#SPICMD_x_READ
0299 7403              MOV     A,#03H
029B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 306
029C 90000000    E     MOV     DPTR,#SPICMD_x_BYTES
02A0 04                INC     A
02A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 308
02A2 7B00        R     MOV     R3,#MBYTE ?SC_753
02A4 7A00        R     MOV     R2,#HIGH ?SC_753
02A6 7900        R     MOV     R1,#LOW ?SC_753
02A8 90000000    R     MOV     DPTR,#mod
02AC E0                MOVX    A,@DPTR
02AD 110000      R     ACALL   L?0357
02B0 7403              MOV     A,#03H
02B2 F0                MOVX    @DPTR,A
02B3 A3                INC     DPTR
02B4 04                INC     A
02B5 F0                MOVX    @DPTR,A
02B6 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 309
02B9 90000000    R     MOV     DPTR,#mod
02BD E0                MOVX    A,@DPTR
02BE 6405              XRL     A,#05H
02C0 7003              JNZ     $ + 5H
02C2 010000      R     AJMP    ?C0032
                                           ; SOURCE LINE # 310
02C5 7B00        R     MOV     R3,#MBYTE ?SC_796
02C7 7A00        R     MOV     R2,#HIGH ?SC_796
02C9 7900        R     MOV     R1,#LOW ?SC_796
                                           ; SOURCE LINE # 311
02CB 010000      R     AJMP    ?C0271
                                           ; SOURCE LINE # 314
02CE         ?C0056:
                                           ; SOURCE LINE # 316
02CE 90000000    E     MOV     DPTR,#argv+06H
02D2 110000      R     ACALL   L?0306
02D5 110000      R     ACALL   L?0371
02D8 EF                MOV     A,R7
02D9 F0                MOVX    @DPTR,A
02DA         ?C0058:
                                           ; SOURCE LINE # 318
02DA 90000000    R     MOV     DPTR,#mod
02DE E0                MOVX    A,@DPTR
02DF FF                MOV     R7,A
02E0 110000      E     ACALL   _SpiFlash_SetReadModeByRegister
                                           ; SOURCE LINE # 319
02E3 7B00        R     MOV     R3,#MBYTE ?SC_828
02E5 7A00        R     MOV     R2,#HIGH ?SC_828
02E7 7900        R     MOV     R1,#LOW ?SC_828
02E9 90000000    R     MOV     DPTR,#mod
02ED E0                MOVX    A,@DPTR
02EE 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
02F2 110000      R     ACALL   L?0355
02F5 24C0              ADD     A,#0C0H
02F7 110000      R     ACALL   L?0310
02FA E0                MOVX    A,@DPTR
02FB 5407              ANL     A,#07H
02FD 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0301 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 39  

0302 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 320
0305 7B00        R     MOV     R3,#MBYTE ?SC_856
0307 7A00        R     MOV     R2,#HIGH ?SC_856
0309 7900        R     MOV     R1,#LOW ?SC_856
                                           ; SOURCE LINE # 321
030B 010000      R     AJMP    ?C0269
030E         ?C0055:
                                           ; SOURCE LINE # 323
030E 7400        R     MOV     A,#MBYTE ?SC_880
0310 110000      R     ACALL   L?0335
0313 7400        R     MOV     A,#HIGH ?SC_880
0315 F0                MOVX    @DPTR,A
0316 A3                INC     DPTR
0317 7400        R     MOV     A,#LOW ?SC_880
0319 110000      R     ACALL   L?0304
031C 110000      E     ACALL   _stricmp
031F EF                MOV     A,R7
0320 4E                ORL     A,R6
0321 7042              JNZ     ?C0060
                                           ; SOURCE LINE # 327
0323 90000000    E     MOV     DPTR,#argc
0327 E0                MOVX    A,@DPTR
0328 B4030F            CJNE    A,#03H,?C0061
                                           ; SOURCE LINE # 328
032B 90000000    E     MOV     DPTR,#argv+06H
032F 110000      R     ACALL   L?0306
0332 110000      R     ACALL   L?0399
0335 EF                MOV     A,R7
0336 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 329
0337 110000      E     ACALL   _SpiFlash_Set4BytesAddress
                                           ; SOURCE LINE # 330
033A         ?C0061:
                                           ; SOURCE LINE # 332
033A 110000      E     ACALL   check_4b_all
033D 90000000    R     MOV     DPTR,#ret
0341 EF                MOV     A,R7
0342 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 333
0343 7B00        R     MOV     R3,#MBYTE ?SC_883
0345 7A00        R     MOV     R2,#HIGH ?SC_883
0347 7900        R     MOV     R1,#LOW ?SC_883
0349 90000000    E     MOV     DPTR,#SpiFlash4ByteAddr
034D E0                MOVX    A,@DPTR
034E 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0352 F0                MOVX    @DPTR,A
0353 BF0104            CJNE    R7,#01H,?C0062
0356 7F01              MOV     R7,#01H
0358 8002              SJMP    ?C0063
035A         ?C0062:
035A 7F00              MOV     R7,#00H
035C         ?C0063:
035C 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0360 EF                MOV     A,R7
0361 F0                MOVX    @DPTR,A
0362         ?C0268:
                                           ; SOURCE LINE # 335
0362 010000      R     AJMP    ?C0271
0365         ?C0060:
                                           ; SOURCE LINE # 337
0365 110000      R     ACALL   L?0327
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 40  

0368 7400        R     MOV     A,#HIGH ?SC_914
036A F0                MOVX    @DPTR,A
036B A3                INC     DPTR
036C 7400        R     MOV     A,#LOW ?SC_914
036E 110000      R     ACALL   L?0304
0371 110000      E     ACALL   _stricmp
0374 EF                MOV     A,R7
0375 4E                ORL     A,R6
0376 6003              JZ      $ + 5H
0378 010000      R     AJMP    ?C0065
                                           ; SOURCE LINE # 339
037B 90000000    R     MOV     DPTR,#ptr
037F 7400        E     MOV     A,#MBYTE SPI_Buffer
0381 F0                MOVX    @DPTR,A
0382 A3                INC     DPTR
0383 110000      R     ACALL   L?0347
0386 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 343
0387 110000      R     ACALL   L?0361
038A 5009              JNC     ?C0066
                                           ; SOURCE LINE # 344
038C         ?C0266:
038C 7B00        R     MOV     R3,#MBYTE ?SC_678
038E 7A00        R     MOV     R2,#HIGH ?SC_678
0390 7900        R     MOV     R1,#LOW ?SC_678
0392         ?C0270:
0392 010000      R     AJMP    ?C0271
                                           ; SOURCE LINE # 346
0395         ?C0066:
                                           ; SOURCE LINE # 347
0395 90000000    E     MOV     DPTR,#argc
0399 E0                MOVX    A,@DPTR
039A D3                SETB    C
039B 9407              SUBB    A,#07H
039D 4009              JC      ?C0067
                                           ; SOURCE LINE # 348
039F 7B00        R     MOV     R3,#MBYTE ?SC_916
03A1 7A00        R     MOV     R2,#HIGH ?SC_916
03A3 7900        R     MOV     R1,#LOW ?SC_916
03A5 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 349
03A8         ?C0067:
                                           ; SOURCE LINE # 352
03A8 90000000    E     MOV     DPTR,#argv+06H
03AC 110000      R     ACALL   L?0306
03AF 110000      E     ACALL   _a2h
03B2 90000000    R     MOV     DPTR,#spiaddr
03B6 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 358
03B9 7B00        R     MOV     R3,#MBYTE ?SC_943
03BB 7A00        R     MOV     R2,#HIGH ?SC_943
03BD 7900        R     MOV     R1,#LOW ?SC_943
03BF 90000000    R     MOV     DPTR,#spiaddr
03C3 110000      R     ACALL   L?0313
03C6 110000      R     ACALL   L?0340
03C9 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 361
03CC E4                CLR     A
03CD FF                MOV     R7,A
03CE FE                MOV     R6,A
03CF FD                MOV     R5,A
03D0 110000      R     ACALL   L?0383
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 41  

                                           ; SOURCE LINE # 362
03D3 90000000    R     MOV     DPTR,#i
03D7 7403              MOV     A,#03H
03D9 F0                MOVX    @DPTR,A
03DA         ?C0068:
03DA 90000000    E     MOV     DPTR,#argc
03DE E0                MOVX    A,@DPTR
03DF FF                MOV     R7,A
03E0 90000000    R     MOV     DPTR,#i
03E4 E0                MOVX    A,@DPTR
03E5 FE                MOV     R6,A
03E6 C3                CLR     C
03E7 9F                SUBB    A,R7
03E8 5057              JNC     ?C0069
                                           ; SOURCE LINE # 363
03EA 75F003            MOV     B,#03H
03ED EE                MOV     A,R6
03EE 110000      R     ACALL   L?0387
03F1 110000      R     ACALL   L?0306
03F4 110000      R     ACALL   L?0399
03F7 E0                MOVX    A,@DPTR
03F8 FB                MOV     R3,A
03F9 A3                INC     DPTR
03FA E4                CLR     A
03FB 75F001            MOV     B,#01H
03FE 110000      E     ACALL   ?C?ILDIX
0401 A9F0              MOV     R1,B
0403 FA                MOV     R2,A
0404 EF                MOV     A,R7
0405 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 364
0408 90000000    R     MOV     DPTR,#i
040C E0                MOVX    A,@DPTR
040D 75F003            MOV     B,#03H
0410 110000      R     ACALL   L?0387
0413 110000      R     ACALL   L?0306
0416 110000      E     ACALL   _a2h
0419 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
041D EF                MOV     A,R7
041E F0                MOVX    @DPTR,A
041F 7B00        R     MOV     R3,#MBYTE ?SC_962
0421 7A00        R     MOV     R2,#HIGH ?SC_962
0423 7900        R     MOV     R1,#LOW ?SC_962
0425 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 365
0428 90000000    R     MOV     DPTR,#size
042C 110000      R     ACALL   L?0313
042F E0                MOVX    A,@DPTR
0430 2401              ADD     A,#01H
0432 110000      R     ACALL   L?0390
0435 110000      R     ACALL   L?0383
                                           ; SOURCE LINE # 366
0438 90000000    R     MOV     DPTR,#i
043C E0                MOVX    A,@DPTR
043D 04                INC     A
043E F0                MOVX    @DPTR,A
043F 8099              SJMP    ?C0068
0441         ?C0069:
                                           ; SOURCE LINE # 367
0441 110000      R     ACALL   L?0346
0444 F0                MOVX    @DPTR,A
0445 90000000    R     MOV     DPTR,#size
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 42  

0449 A3                INC     DPTR
044A A3                INC     DPTR
044B E0                MOVX    A,@DPTR
044C FF                MOV     R7,A
044D A3                INC     DPTR
044E 110000      R     ACALL   L?0397
0451 EF                MOV     A,R7
0452 F0                MOVX    @DPTR,A
0453 90000000    R     MOV     DPTR,#spiaddr
0457 110000      R     ACALL   L?0313
045A E0                MOVX    A,@DPTR
045B FF                MOV     R7,A
045C         ?C0267:
045C 010000      E     AJMP    _SpiFlash_PageProgram_XMem
                                           ; SOURCE LINE # 368
045F         ?C0065:
                                           ; SOURCE LINE # 371
045F 7400        R     MOV     A,#MBYTE ?SC_970
0461 110000      R     ACALL   L?0335
0464 7400        R     MOV     A,#HIGH ?SC_970
0466 F0                MOVX    @DPTR,A
0467 A3                INC     DPTR
0468 7400        R     MOV     A,#LOW ?SC_970
046A 110000      R     ACALL   L?0304
046D 110000      E     ACALL   _stricmp
0470 EF                MOV     A,R7
0471 4E                ORL     A,R6
0472 7003              JNZ     ?C0072
                                           ; SOURCE LINE # 372
0474 010000      R     AJMP    SPI_Recovery
0477         ?C0072:
                                           ; SOURCE LINE # 373
0477 7400        R     MOV     A,#MBYTE ?SC_979
0479 110000      R     ACALL   L?0336
047C 7400        R     MOV     A,#HIGH ?SC_979
047E F0                MOVX    @DPTR,A
047F A3                INC     DPTR
0480 7400        R     MOV     A,#LOW ?SC_979
0482 110000      R     ACALL   L?0304
0485 110000      E     ACALL   _stricmp
0488 EF                MOV     A,R7
0489 4E                ORL     A,R6
048A 7003              JNZ     ?C0074
                                           ; SOURCE LINE # 374
048C 010000      R     AJMP    SPI_Reset_Command
048F         ?C0074:
                                           ; SOURCE LINE # 375
048F 7400        R     MOV     A,#MBYTE ?SC_985
0491 110000      R     ACALL   L?0336
0494 7400        R     MOV     A,#HIGH ?SC_985
0496 F0                MOVX    @DPTR,A
0497 A3                INC     DPTR
0498 7400        R     MOV     A,#LOW ?SC_985
049A 110000      R     ACALL   L?0304
049D 110000      E     ACALL   _stricmp
04A0 EF                MOV     A,R7
04A1 4E                ORL     A,R6
04A2 7003              JNZ     ?C0076
                                           ; SOURCE LINE # 376
04A4 010000      R     AJMP    SPI_9F_Command
04A7         ?C0076:
                                           ; SOURCE LINE # 378
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 43  

04A7 90000000    E     MOV     DPTR,#argc
04AB E0                MOVX    A,@DPTR
04AC FF                MOV     R7,A
04AD C3                CLR     C
04AE 9402              SUBB    A,#02H
04B0 5003              JNC     $ + 5H
04B2 010000      R     AJMP    ?C0078
04B5 110000      R     ACALL   L?0305
04B8 110000      E     ACALL   ?C?CLDPTR
04BB FE                MOV     R6,A
04BC C3                CLR     C
04BD 9430              SUBB    A,#030H
04BF 5003              JNC     $ + 5H
04C1 010000      R     AJMP    ?C0078
04C4 EE                MOV     A,R6
04C5 D3                SETB    C
04C6 9439              SUBB    A,#039H
04C8 4003              JC      $ + 5H
04CA 010000      R     AJMP    ?C0078
                                           ; SOURCE LINE # 383
04CD EF                MOV     A,R7
04CE C3                CLR     C
04CF 9403              SUBB    A,#03H
04D1 5009              JNC     ?C0079
                                           ; SOURCE LINE # 384
04D3 7B00        R     MOV     R3,#MBYTE ?SC_988
04D5 7A00        R     MOV     R2,#HIGH ?SC_988
04D7 7900        R     MOV     R1,#LOW ?SC_988
04D9         ?C0269:
04D9 010000      E     AJMP    _Puts
                                           ; SOURCE LINE # 386
04DC         ?C0079:
                                           ; SOURCE LINE # 388
04DC 110000      R     ACALL   L?0305
04DF 110000      E     ACALL   _a2h
04E2 90000000    R     MOV     DPTR,#rcnt
04E6 EF                MOV     A,R7
04E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 390
04E8 110000      R     ACALL   L?0358
04EB 90000000    R     MOV     DPTR,#wcnt
04EF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 391
04F0 4440              ORL     A,#040H
04F2 110000      R     ACALL   L?0367
04F5 24C3              ADD     A,#0C3H
04F7 110000      R     ACALL   L?0310
04FA EF                MOV     A,R7
                                           ; SOURCE LINE # 392
04FB 110000      R     ACALL   L?0365
04FE 24C6              ADD     A,#0C6H
0500 110000      R     ACALL   L?0310
0503 7404              MOV     A,#04H
                                           ; SOURCE LINE # 393
0505 110000      R     ACALL   L?0365
0508 24C7              ADD     A,#0C7H
050A 110000      R     ACALL   L?0310
050D 74D0              MOV     A,#0D0H
                                           ; SOURCE LINE # 394
050F 110000      R     ACALL   L?0365
0512 24DA              ADD     A,#0DAH
0514 110000      R     ACALL   L?0310
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 44  

0517 E4                CLR     A
                                           ; SOURCE LINE # 395
0518 110000      R     ACALL   L?0365
051B 24C8              ADD     A,#0C8H
051D 110000      R     ACALL   L?0310
0520 E4                CLR     A
0521 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 396
0522 90000000    R     MOV     DPTR,#rcnt
0526 E0                MOVX    A,@DPTR
0527 110000      R     ACALL   L?0367
052A 24C9              ADD     A,#0C9H
052C 110000      R     ACALL   L?0310
052F EF                MOV     A,R7
0530 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 397
0531 E4                CLR     A
0532 90000000    R     MOV     DPTR,#i
0536 F0                MOVX    @DPTR,A
0537         ?C0080:
0537 90000000    R     MOV     DPTR,#wcnt
053B E0                MOVX    A,@DPTR
053C FF                MOV     R7,A
053D A3                INC     DPTR
053E E0                MOVX    A,@DPTR
053F FE                MOV     R6,A
0540 C3                CLR     C
0541 9F                SUBB    A,R7
0542 5034              JNC     ?C0081
                                           ; SOURCE LINE # 398
0544 75F003            MOV     B,#03H
0547 EE                MOV     A,R6
0548 110000      R     ACALL   L?0319
054B 110000      R     ACALL   L?0306
054E 110000      E     ACALL   _a2h
0551 90000000    R     MOV     DPTR,#i
0555 E0                MOVX    A,@DPTR
0556 24CA              ADD     A,#0CAH
0558 FD                MOV     R5,A
0559 E4                CLR     A
055A 3404              ADDC    A,#04H
055C FC                MOV     R4,A
055D 759300      E     MOV     DPX,#?C?XDATASEG
0560 E500        E     MOV     A,regTW88+01H
0562 2D                ADD     A,R5
0563 F582              MOV     DPL,A
0565 E500        E     MOV     A,regTW88
0567 3C                ADDC    A,R4
0568 F583              MOV     DPH,A
056A 759300      E     MOV     DPX,#?C?XDATASEG
056D EF                MOV     A,R7
056E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 399
056F 90000000    R     MOV     DPTR,#i
0573 E0                MOVX    A,@DPTR
0574 04                INC     A
0575 F0                MOVX    @DPTR,A
0576 80BF              SJMP    ?C0080
0578         ?C0081:
                                           ; SOURCE LINE # 400
0578 7F01              MOV     R7,#01H
057A 110000      E     ACALL   _WaitVBlank
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 45  

                                           ; SOURCE LINE # 403
057D 110000      R     ACALL   L?0401
0580 E0                MOVX    A,@DPTR
0581 240D              ADD     A,#0DH
0583 110000      R     ACALL   L?0374
0586 FB                MOV     R3,A
0587 6052              JZ      ?C0083
                                           ; SOURCE LINE # 405
0589 759300      E     MOV     DPX,#?C?XDATASEG
058C E500        E     MOV     A,regTW88+01H
058E 24E1              ADD     A,#0E1H
0590 110000      R     ACALL   L?0310
0593 E0                MOVX    A,@DPTR
0594 54F0              ANL     A,#0F0H
0596 90000000    R     MOV     DPTR,#r4e1
059A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 406
059B E0                MOVX    A,@DPTR
059C 4B                ORL     A,R3
059D 110000      R     ACALL   L?0367
05A0 24E1              ADD     A,#0E1H
05A2 110000      R     ACALL   L?0310
05A5 EF                MOV     A,R7
05A6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 407
05A7 90000000    R     MOV     DPTR,#rcnt
05AB E0                MOVX    A,@DPTR
05AC 600B              JZ      ?C0084
                                           ; SOURCE LINE # 408
05AE 110000      R     ACALL   L?0369
05B1 110000      R     ACALL   L?0310
05B4 7401              MOV     A,#01H
05B6 F0                MOVX    @DPTR,A
05B7 8009              SJMP    ?C0085
05B9         ?C0084:
                                           ; SOURCE LINE # 410
05B9 110000      R     ACALL   L?0369
05BC 110000      R     ACALL   L?0310
05BF 7403              MOV     A,#03H
05C1 F0                MOVX    @DPTR,A
05C2         ?C0085:
                                           ; SOURCE LINE # 411
05C2 110000      R     ACALL   L?0401
05C5 E0                MOVX    A,@DPTR
05C6 240C              ADD     A,#0CH
05C8 110000      R     ACALL   L?0374
05CB 90000000    R     MOV     DPTR,#r4e1
05CF 110000      R     ACALL   L?0366
05D2 24E1              ADD     A,#0E1H
05D4 110000      R     ACALL   L?0310
05D7 EF                MOV     A,R7
05D8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 412
05D9 801B              SJMP    ?C0086
05DB         ?C0083:
                                           ; SOURCE LINE # 413
                                           ; SOURCE LINE # 414
05DB 90000000    R     MOV     DPTR,#rcnt
05DF E0                MOVX    A,@DPTR
05E0 600B              JZ      ?C0087
                                           ; SOURCE LINE # 415
05E2 110000      R     ACALL   L?0370
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 46  

05E5 110000      R     ACALL   L?0310
05E8 7401              MOV     A,#01H
05EA F0                MOVX    @DPTR,A
05EB 8009              SJMP    ?C0086
05ED         ?C0087:
                                           ; SOURCE LINE # 417
05ED 110000      R     ACALL   L?0370
05F0 110000      R     ACALL   L?0310
05F3 7403              MOV     A,#03H
05F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 418
05F6         ?C0086:
                                           ; SOURCE LINE # 423
05F6 E4                CLR     A
05F7 90000000    R     MOV     DPTR,#i
05FB F0                MOVX    @DPTR,A
05FC         ?C0089:
                                           ; SOURCE LINE # 424
05FC 110000      R     ACALL   L?0370
05FF 110000      R     ACALL   L?0310
0602 E0                MOVX    A,@DPTR
0603 90000000    R     MOV     DPTR,#vdata
0607 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 425
0608 E0                MOVX    A,@DPTR
0609 30E014            JNB     ACC.0,?C0090
                                           ; SOURCE LINE # 426
060C         ?C0092:
                                           ; SOURCE LINE # 427
060C 7F0A              MOV     R7,#0AH
060E 7E00              MOV     R6,#00H
0610 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 428
0613 90000000    R     MOV     DPTR,#i
0617 E0                MOVX    A,@DPTR
0618 04                INC     A
0619 F0                MOVX    @DPTR,A
061A E0                MOVX    A,@DPTR
061B C3                CLR     C
061C 94C8              SUBB    A,#0C8H
061E 40DC              JC      ?C0089
0620         ?C0090:
                                           ; SOURCE LINE # 429
0620 7B00        R     MOV     R3,#MBYTE ?SC_1027
0622 7A00        R     MOV     R2,#HIGH ?SC_1027
0624 7900        R     MOV     R1,#LOW ?SC_1027
0626 90000000    R     MOV     DPTR,#i
062A E0                MOVX    A,@DPTR
062B 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
062F F0                MOVX    @DPTR,A
0630 90000000    R     MOV     DPTR,#vdata
0634 E0                MOVX    A,@DPTR
0635 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0639 F0                MOVX    @DPTR,A
063A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 431
063D 90000000    R     MOV     DPTR,#rcnt
0641 E0                MOVX    A,@DPTR
0642 603D              JZ      ?C0032
                                           ; SOURCE LINE # 432
0644 7B00        R     MOV     R3,#MBYTE ?SC_1046
0646 7A00        R     MOV     R2,#HIGH ?SC_1046
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 47  

0648 7900        R     MOV     R1,#LOW ?SC_1046
064A 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 433
064D E4                CLR     A
064E 90000000    R     MOV     DPTR,#i
0652 F0                MOVX    @DPTR,A
0653         ?C0094:
0653 90000000    R     MOV     DPTR,#rcnt
0657 E0                MOVX    A,@DPTR
0658 FF                MOV     R7,A
0659 90000000    R     MOV     DPTR,#i
065D E0                MOVX    A,@DPTR
065E FE                MOV     R6,A
065F C3                CLR     C
0660 9F                SUBB    A,R7
0661 501E              JNC     ?C0032
                                           ; SOURCE LINE # 434
0663 7B00        R     MOV     R3,#MBYTE ?SC_1060
0665 7A00        R     MOV     R2,#HIGH ?SC_1060
0667 7900        R     MOV     R1,#LOW ?SC_1060
0669 110000      R     ACALL   L?0316
066C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 435
066F 90000000    R     MOV     DPTR,#i
0673 E0                MOVX    A,@DPTR
0674 04                INC     A
0675 F0                MOVX    @DPTR,A
0676 80DB              SJMP    ?C0094
                                           ; SOURCE LINE # 436
                                           ; SOURCE LINE # 437
0678         ?C0078:
                                           ; SOURCE LINE # 441
0678 7B00        R     MOV     R3,#MBYTE ?SC_1067
067A 7A00        R     MOV     R2,#HIGH ?SC_1067
067C 7900        R     MOV     R1,#LOW ?SC_1067
067E         ?C0271:
067E 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 442
0681         ?C0032:
0681 22                RET     
0682         L?0371:
0682 110000      E     ACALL   _a2h
0685 90000000    R     MOV     DPTR,#source
0689 22                RET     
068A         L?0399:
068A 110000      E     ACALL   _a2h
068D 90000000    R     MOV     DPTR,#mod
0691 22                RET     
             ; FUNCTION MonitorSPI (END)

             ; FUNCTION HelpMonitorSPIC (BEGIN)
                                           ; SOURCE LINE # 446
                                           ; SOURCE LINE # 447
                                           ; SOURCE LINE # 448
0000 7B00        R     MOV     R3,#MBYTE ?SC_1088
0002 7A00        R     MOV     R2,#HIGH ?SC_1088
0004 7900        R     MOV     R1,#LOW ?SC_1088
0006 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 449
0009 7B00        R     MOV     R3,#MBYTE ?SC_1127
000B 7A00        R     MOV     R2,#HIGH ?SC_1127
000D 7900        R     MOV     R1,#LOW ?SC_1127
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 48  

000F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 450
0012 7B00        R     MOV     R3,#MBYTE ?SC_1172
0014 7A00        R     MOV     R2,#HIGH ?SC_1172
0016 7900        R     MOV     R1,#LOW ?SC_1172
0018 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 451
001B 7B00        R     MOV     R3,#MBYTE ?SC_1212
001D 7A00        R     MOV     R2,#HIGH ?SC_1212
001F 7900        R     MOV     R1,#LOW ?SC_1212
0021 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 452
0024 7B00        R     MOV     R3,#MBYTE ?SC_1253
0026 7A00        R     MOV     R2,#HIGH ?SC_1253
0028 7900        R     MOV     R1,#LOW ?SC_1253
002A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 453
002D 7B00        R     MOV     R3,#MBYTE ?SC_1304
002F 7A00        R     MOV     R2,#HIGH ?SC_1304
0031 7900        R     MOV     R1,#LOW ?SC_1304
0033 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 454
0036 7B00        R     MOV     R3,#MBYTE ?SC_1365
0038 7A00        R     MOV     R2,#HIGH ?SC_1365
003A 7900        R     MOV     R1,#LOW ?SC_1365
003C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 455
003F 7B00        R     MOV     R3,#MBYTE ?SC_1410
0041 7A00        R     MOV     R2,#HIGH ?SC_1410
0043 7900        R     MOV     R1,#LOW ?SC_1410
0045 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 456
0048 7B00        R     MOV     R3,#MBYTE ?SC_1454
004A 7A00        R     MOV     R2,#HIGH ?SC_1454
004C 7900        R     MOV     R1,#LOW ?SC_1454
004E 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 457
0051 7B00        R     MOV     R3,#MBYTE ?SC_1515
0053 7A00        R     MOV     R2,#HIGH ?SC_1515
0055 7900        R     MOV     R1,#LOW ?SC_1515
0057 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 458
005A 7B00        R     MOV     R3,#MBYTE ?SC_1559
005C 7A00        R     MOV     R2,#HIGH ?SC_1559
005E 7900        R     MOV     R1,#LOW ?SC_1559
0060 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 459
0063 7B00        R     MOV     R3,#MBYTE ?SC_1602
0065 7A00        R     MOV     R2,#HIGH ?SC_1602
0067 7900        R     MOV     R1,#LOW ?SC_1602
0069 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 460
006C 7B00        R     MOV     R3,#MBYTE ?SC_1652
006E 7A00        R     MOV     R2,#HIGH ?SC_1652
0070 7900        R     MOV     R1,#LOW ?SC_1652
0072 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 461
0075 7B00        R     MOV     R3,#MBYTE ?SC_1707
0077 7A00        R     MOV     R2,#HIGH ?SC_1707
0079 7900        R     MOV     R1,#LOW ?SC_1707
007B 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 462
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 49  

007E 110000      R     ACALL   L?0381
0081 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 463
0084 7B00        R     MOV     R3,#MBYTE ?SC_1780
0086 7A00        R     MOV     R2,#HIGH ?SC_1780
0088 7900        R     MOV     R1,#LOW ?SC_1780
008A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 464
008D 110000      R     ACALL   L?0382
0090 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 465
0093 7B00        R     MOV     R3,#MBYTE ?SC_1824
0095 7A00        R     MOV     R2,#HIGH ?SC_1824
0097 7900        R     MOV     R1,#LOW ?SC_1824
0099 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 467
009C 110000      R     ACALL   L?0382
009F 010000      E     AJMP    _Printf
             ; FUNCTION HelpMonitorSPIC (END)

             ; FUNCTION print_spiflash_status_register_macronix (BEGIN)
                                           ; SOURCE LINE # 470
                                           ; SOURCE LINE # 471
                                           ; SOURCE LINE # 472
0000 110000      R     ACALL   L?0349
0003 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 473
0006 110000      R     ACALL   L?0392
0009 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 474
000C 7B00        R     MOV     R3,#MBYTE ?SC_1880
000E 7A00        R     MOV     R2,#HIGH ?SC_1880
0010 7900        R     MOV     R1,#LOW ?SC_1880
0012 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 475
0015 7B00        R     MOV     R3,#MBYTE ?SC_1954
0017 7A00        R     MOV     R2,#HIGH ?SC_1954
0019 7900        R     MOV     R1,#LOW ?SC_1954
001B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 476
001E 7B00        R     MOV     R3,#MBYTE ?SC_1995
0020 7A00        R     MOV     R2,#HIGH ?SC_1995
0022 7900        R     MOV     R1,#LOW ?SC_1995
0024 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 477
0027 7B00        R     MOV     R3,#MBYTE ?SC_2031
0029 7A00        R     MOV     R2,#HIGH ?SC_2031
002B 7900        R     MOV     R1,#LOW ?SC_2031
002D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 478
0030 7B00        R     MOV     R3,#MBYTE ?SC_2091
0032 7A00        R     MOV     R2,#HIGH ?SC_2091
0034 7900        R     MOV     R1,#LOW ?SC_2091
0036 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 479
0039 110000      R     ACALL   L?0349
003C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 480
003F 110000      R     ACALL   L?0394
0042 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 481
0045 7B00        R     MOV     R3,#MBYTE ?SC_2179
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 50  

0047 7A00        R     MOV     R2,#HIGH ?SC_2179
0049 7900        R     MOV     R1,#LOW ?SC_2179
004B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 482
004E 7B00        R     MOV     R3,#MBYTE ?SC_2245
0050 7A00        R     MOV     R2,#HIGH ?SC_2245
0052 7900        R     MOV     R1,#LOW ?SC_2245
0054 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 483
0057 7B00        R     MOV     R3,#MBYTE ?SC_2301
0059 7A00        R     MOV     R2,#HIGH ?SC_2301
005B 7900        R     MOV     R1,#LOW ?SC_2301
005D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 484
0060 7B00        R     MOV     R3,#MBYTE ?SC_2365
0062 7A00        R     MOV     R2,#HIGH ?SC_2365
0064 7900        R     MOV     R1,#LOW ?SC_2365
0066 010000      E     AJMP    _Puts
             ; FUNCTION print_spiflash_status_register_macronix (END)

             ; FUNCTION print_spiflash_status_register_winbond (BEGIN)
                                           ; SOURCE LINE # 486
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
0000 110000      R     ACALL   L?0350
0003 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 489
0006 110000      R     ACALL   L?0392
0009 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 490
000C 7B00        R     MOV     R3,#MBYTE ?SC_2409
000E 7A00        R     MOV     R2,#HIGH ?SC_2409
0010 7900        R     MOV     R1,#LOW ?SC_2409
0012 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 491
0015 7B00        R     MOV     R3,#MBYTE ?SC_2442
0017 7A00        R     MOV     R2,#HIGH ?SC_2442
0019 7900        R     MOV     R1,#LOW ?SC_2442
001B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 492
001E 7B00        R     MOV     R3,#MBYTE ?SC_2473
0020 7A00        R     MOV     R2,#HIGH ?SC_2473
0022 7900        R     MOV     R1,#LOW ?SC_2473
0024 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 493
0027 7B00        R     MOV     R3,#MBYTE ?SC_2502
0029 7A00        R     MOV     R2,#HIGH ?SC_2502
002B 7900        R     MOV     R1,#LOW ?SC_2502
002D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 494
0030 7B00        R     MOV     R3,#MBYTE ?SC_2546
0032 7A00        R     MOV     R2,#HIGH ?SC_2546
0034 7900        R     MOV     R1,#LOW ?SC_2546
0036 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 495
0039 110000      R     ACALL   L?0350
003C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 496
003F 110000      R     ACALL   L?0394
0042 010000      E     AJMP    _Puts
             ; FUNCTION print_spiflash_status_register_winbond (END)

C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 51  

             ; FUNCTION print_spiflash_status_register_eon_256 (BEGIN)
                                           ; SOURCE LINE # 498
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
0000 110000      R     ACALL   L?0350
0003 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 501
0006 110000      R     ACALL   L?0393
0009 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 502
000C 7B00        R     MOV     R3,#MBYTE ?SC_2595
000E 7A00        R     MOV     R2,#HIGH ?SC_2595
0010 7900        R     MOV     R1,#LOW ?SC_2595
0012 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 503
0015 7B00        R     MOV     R3,#MBYTE ?SC_1954
0017 7A00        R     MOV     R2,#HIGH ?SC_1954
0019 7900        R     MOV     R1,#LOW ?SC_1954
001B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 504
001E 7B00        R     MOV     R3,#MBYTE ?SC_1995
0020 7A00        R     MOV     R2,#HIGH ?SC_1995
0022 7900        R     MOV     R1,#LOW ?SC_1995
0024 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 505
0027 7B00        R     MOV     R3,#MBYTE ?SC_2031
0029 7A00        R     MOV     R2,#HIGH ?SC_2031
002B 7900        R     MOV     R1,#LOW ?SC_2031
002D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 506
0030 7B00        R     MOV     R3,#MBYTE ?SC_2091
0032 7A00        R     MOV     R2,#HIGH ?SC_2091
0034 7900        R     MOV     R1,#LOW ?SC_2091
0036 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 507
0039 110000      R     ACALL   L?0350
003C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 508
003F 110000      R     ACALL   L?0395
0042 010000      E     AJMP    _Puts
             ; FUNCTION print_spiflash_status_register_eon_256 (END)

             ; FUNCTION print_spiflash_status_register_micron (BEGIN)
                                           ; SOURCE LINE # 510
                                           ; SOURCE LINE # 511
                                           ; SOURCE LINE # 512
0000 110000      R     ACALL   L?0350
0003 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 513
0006 110000      R     ACALL   L?0393
0009 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 514
000C 7B00        R     MOV     R3,#MBYTE ?SC_2662
000E 7A00        R     MOV     R2,#HIGH ?SC_2662
0010 7900        R     MOV     R1,#LOW ?SC_2662
0012 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 515
0015 7B00        R     MOV     R3,#MBYTE ?SC_2729
0017 7A00        R     MOV     R2,#HIGH ?SC_2729
0019 7900        R     MOV     R1,#LOW ?SC_2729
001B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 516
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 52  

001E 7B00        R     MOV     R3,#MBYTE ?SC_2756
0020 7A00        R     MOV     R2,#HIGH ?SC_2756
0022 7900        R     MOV     R1,#LOW ?SC_2756
0024 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 517
0027 7B00        R     MOV     R3,#MBYTE ?SC_2774
0029 7A00        R     MOV     R2,#HIGH ?SC_2774
002B 7900        R     MOV     R1,#LOW ?SC_2774
002D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 518
0030 7B00        R     MOV     R3,#MBYTE ?SC_2808
0032 7A00        R     MOV     R2,#HIGH ?SC_2808
0034 7900        R     MOV     R1,#LOW ?SC_2808
0036 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 519
0039 7B00        R     MOV     R3,#MBYTE ?SC_2865
003B 7A00        R     MOV     R2,#HIGH ?SC_2865
003D 7900        R     MOV     R1,#LOW ?SC_2865
003F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 520
0042 110000      R     ACALL   L?0350
0045 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 521
0048 110000      R     ACALL   L?0395
004B 010000      E     AJMP    _Puts
             ; FUNCTION print_spiflash_status_register_micron (END)

             ; FUNCTION print_spiflash_status_register_default (BEGIN)
                                           ; SOURCE LINE # 523
                                           ; SOURCE LINE # 524
                                           ; SOURCE LINE # 525
0000 7B00        R     MOV     R3,#MBYTE ?SC_2914
0002 7A00        R     MOV     R2,#HIGH ?SC_2914
0004 7900        R     MOV     R1,#LOW ?SC_2914
0006 010000      E     AJMP    _Puts
             ; FUNCTION print_spiflash_status_register_default (END)

             ; FUNCTION print_spiflash_status_register_unknown (BEGIN)
                                           ; SOURCE LINE # 527
                                           ; SOURCE LINE # 528
                                           ; SOURCE LINE # 529
0000 110000      R     ACALL   L?0350
0003 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 530
0006 7B00        R     MOV     R3,#MBYTE ?SC_2947
0008 7A00        R     MOV     R2,#HIGH ?SC_2947
000A 7900        R     MOV     R1,#LOW ?SC_2947
000C 010000      E     AJMP    _Puts
             ; FUNCTION print_spiflash_status_register_unknown (END)

             ; FUNCTION _PrintSpiAddr (BEGIN)
                                           ; SOURCE LINE # 537
0000 90000000    R     MOV     DPTR,#spiaddr
0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 538
                                           ; SOURCE LINE # 539
0007 90000000    E     MOV     DPTR,#SpiFlash4ByteAddr
000B E0                MOVX    A,@DPTR
000C 6008              JZ      ?C0105
000E 7B00        R     MOV     R3,#MBYTE ?SC_2965
0010 7A00        R     MOV     R2,#HIGH ?SC_2965
0012 7900        R     MOV     R1,#LOW ?SC_2965
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 53  

0014 8006              SJMP    ?C0272
0016         ?C0105:
                                           ; SOURCE LINE # 540
0016 7B00        R     MOV     R3,#MBYTE ?SC_2972
0018 7A00        R     MOV     R2,#HIGH ?SC_2972
001A 7900        R     MOV     R1,#LOW ?SC_2972
001C         ?C0272:
001C 90000000    R     MOV     DPTR,#spiaddr
0020 110000      R     ACALL   L?0313
0023 110000      R     ACALL   L?0340
0026 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 541
0029         ?C0107:
0029 22                RET     
             ; FUNCTION _PrintSpiAddr (END)

             ; FUNCTION MonitorSPIC (BEGIN)
                                           ; SOURCE LINE # 542
                                           ; SOURCE LINE # 543
                                           ; SOURCE LINE # 553
0000 110000      R     ACALL   L?0359
0003 5003              JNC     ?C0108
                                           ; SOURCE LINE # 554
0005 010000      R     AJMP    ?C0276
                                           ; SOURCE LINE # 556
0008         ?C0108:
                                           ; SOURCE LINE # 558
0008 E4                CLR     A
0009 90000000    R     MOV     DPTR,#index
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 559
                                           ; SOURCE LINE # 563
000E 110000      R     ACALL   L?0303
0011 110000      E     ACALL   ?C?CLDPTR
0014 B4721C            CJNE    A,#072H,?C0110
                                           ; SOURCE LINE # 564
0017 110000      R     ACALL   L?0373
001A C3                CLR     C
001B 9430              SUBB    A,#030H
001D 90000000    R     MOV     DPTR,#read_byte
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 565
0022 D3                SETB    C
0023 9408              SUBB    A,#08H
0025 4003              JC      ?C0111
                                           ; SOURCE LINE # 567
0027         ?C0275:
0027 010000      R     AJMP    ?C0276
                                           ; SOURCE LINE # 569
002A         ?C0111:
                                           ; SOURCE LINE # 570
002A 90000000    R     MOV     DPTR,#index
002E 7401              MOV     A,#01H
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 571
0031 8019              SJMP    ?C0112
0033         ?C0110:
                                           ; SOURCE LINE # 572
0033 110000      R     ACALL   L?0305
0036 110000      E     ACALL   ?C?CLDPTR
0039 B47310            CJNE    A,#073H,?C0112
003C 110000      R     ACALL   L?0373
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 54  

003F B4720A            CJNE    A,#072H,?C0112
                                           ; SOURCE LINE # 574
0042 90000000    R     MOV     DPTR,#print_spiflash_status_register
0046 110000      R     ACALL   L?0306
0049 010000      E     AJMP    ?C?ICALL390
                                           ; SOURCE LINE # 576
004C         ?C0112:
                                           ; SOURCE LINE # 581
004C 110000      R     ACALL   L?0404
004F 2400        E     ADD     A,#LOW argv+03H
0051 F582              MOV     DPL,A
0053 E5F0              MOV     A,B
0055 3400        E     ADDC    A,#HIGH argv+03H
0057 F583              MOV     DPH,A
0059 759300      E     MOV     DPX,#?C?XDATASEG
005C 110000      R     ACALL   L?0306
005F 110000      E     ACALL   _a2h
0062 90000000    R     MOV     DPTR,#cmd
0066 EF                MOV     A,R7
0067 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 583
0068 E0                MOVX    A,@DPTR
0069 649F              XRL     A,#09FH
006B 6003              JZ      $ + 5H
006D 010000      R     AJMP    ?C0114
                                           ; SOURCE LINE # 584
0070 90000000    R     MOV     DPTR,#read_byte
0074 E0                MOVX    A,@DPTR
0075 6403              XRL     A,#03H
0077 6009              JZ      ?C0115
                                           ; SOURCE LINE # 585
0079 7B00        R     MOV     R3,#MBYTE ?SC_2979
007B 7A00        R     MOV     R2,#HIGH ?SC_2979
007D 7900        R     MOV     R1,#LOW ?SC_2979
007F 010000      R     AJMP    ?C0277
                                           ; SOURCE LINE # 587
0082         ?C0115:
                                           ; SOURCE LINE # 588
0082 7B00        R     MOV     R3,#MBYTE ?SC_2995
0084 7A00        R     MOV     R2,#HIGH ?SC_2995
0086 7900        R     MOV     R1,#LOW ?SC_2995
0088 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 589
008B 110000      R     ACALL   L?0362
008E 7403              MOV     A,#03H
0090 110000      R     ACALL   L?0375
0093 7F9F              MOV     R7,#09FH
                                           ; SOURCE LINE # 590
0095 110000      R     ACALL   L?0388
0098 EF                MOV     A,R7
0099 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 591
009A 6003              JZ      $ + 5H
009C 010000      R     AJMP    ?C0109
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 593
009F 110000      R     ACALL   L?0309
                                           ; SOURCE LINE # 594
00A2 110000      R     ACALL   L?0364
00A5 24D2              ADD     A,#0D2H
00A7 110000      R     ACALL   L?0310
00AA E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 55  

00AB 90000000    E     MOV     DPTR,#SPI_CmdBuffer+02H
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 596
00B0 7B00        R     MOV     R3,#MBYTE ?SC_3010
00B2 7A00        R     MOV     R2,#HIGH ?SC_3010
00B4 7900        R     MOV     R1,#LOW ?SC_3010
00B6 90000000    E     MOV     DPTR,#SPI_CmdBuffer
00BA E0                MOVX    A,@DPTR
00BB 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
00BF F0                MOVX    @DPTR,A
00C0 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
00C4 E0                MOVX    A,@DPTR
00C5 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
00C9 F0                MOVX    @DPTR,A
00CA 90000000    E     MOV     DPTR,#SPI_CmdBuffer+02H
00CE E0                MOVX    A,@DPTR
00CF 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
00D3 F0                MOVX    @DPTR,A
00D4 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 597
00D7 90000000    E     MOV     DPTR,#SPI_CmdBuffer
00DB E0                MOVX    A,@DPTR
00DC B4C215            CJNE    A,#0C2H,?C0117
                                           ; SOURCE LINE # 598
00DF 7B00        R     MOV     R3,#MBYTE ?SC_3030
00E1 7A00        R     MOV     R2,#HIGH ?SC_3030
00E3 7900        R     MOV     R1,#LOW ?SC_3030
                                           ; SOURCE LINE # 599
00E5 110000      R     ACALL   L?0372
00E8 7400        R     MOV     A,#MBYTE print_spiflash_status_register_macronix
00EA F0                MOVX    @DPTR,A
00EB A3                INC     DPTR
00EC 7400        R     MOV     A,#HIGH print_spiflash_status_register_macronix
00EE F0                MOVX    @DPTR,A
00EF A3                INC     DPTR
00F0 7400        R     MOV     A,#LOW print_spiflash_status_register_macronix
00F2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 600
00F3 22                RET     
00F4         ?C0117:
                                           ; SOURCE LINE # 601
00F4 90000000    E     MOV     DPTR,#SPI_CmdBuffer
00F8 E0                MOVX    A,@DPTR
00F9 B41C15            CJNE    A,#01CH,?C0119
                                           ; SOURCE LINE # 602
00FC 7B00        R     MOV     R3,#MBYTE ?SC_3039
00FE 7A00        R     MOV     R2,#HIGH ?SC_3039
0100 7900        R     MOV     R1,#LOW ?SC_3039
                                           ; SOURCE LINE # 603
0102 110000      R     ACALL   L?0372
0105 7400        R     MOV     A,#MBYTE print_spiflash_status_register_eon_256
0107 F0                MOVX    @DPTR,A
0108 A3                INC     DPTR
0109 7400        R     MOV     A,#HIGH print_spiflash_status_register_eon_256
010B F0                MOVX    @DPTR,A
010C A3                INC     DPTR
010D 7400        R     MOV     A,#LOW print_spiflash_status_register_eon_256
010F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
0110 22                RET     
0111         ?C0119:
                                           ; SOURCE LINE # 605
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 56  

0111 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0115 E0                MOVX    A,@DPTR
0116 B4EF15            CJNE    A,#0EFH,?C0121
                                           ; SOURCE LINE # 606
0119 7B00        R     MOV     R3,#MBYTE ?SC_3043
011B 7A00        R     MOV     R2,#HIGH ?SC_3043
011D 7900        R     MOV     R1,#LOW ?SC_3043
                                           ; SOURCE LINE # 607
011F 110000      R     ACALL   L?0400
0122 7400        R     MOV     A,#MBYTE print_spiflash_status_register_winbond
0124 F0                MOVX    @DPTR,A
0125 A3                INC     DPTR
0126 7400        R     MOV     A,#HIGH print_spiflash_status_register_winbond
0128 F0                MOVX    @DPTR,A
0129 A3                INC     DPTR
012A 7400        R     MOV     A,#LOW print_spiflash_status_register_winbond
012C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 608
012D 22                RET     
012E         ?C0121:
                                           ; SOURCE LINE # 609
012E 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0132 E0                MOVX    A,@DPTR
0133 B42015            CJNE    A,#020H,?C0123
                                           ; SOURCE LINE # 610
0136 7B00        R     MOV     R3,#MBYTE ?SC_3051
0138 7A00        R     MOV     R2,#HIGH ?SC_3051
013A 7900        R     MOV     R1,#LOW ?SC_3051
                                           ; SOURCE LINE # 611
013C 110000      R     ACALL   L?0400
013F 7400        R     MOV     A,#MBYTE print_spiflash_status_register_micron
0141 F0                MOVX    @DPTR,A
0142 A3                INC     DPTR
0143 7400        R     MOV     A,#HIGH print_spiflash_status_register_micron
0145 F0                MOVX    @DPTR,A
0146 A3                INC     DPTR
0147 7400        R     MOV     A,#LOW print_spiflash_status_register_micron
0149 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 612
014A 22                RET     
014B         ?C0123:
                                           ; SOURCE LINE # 613
014B 90000000    E     MOV     DPTR,#SPI_CmdBuffer
014F E0                MOVX    A,@DPTR
0150 B40108            CJNE    A,#01H,?C0125
                                           ; SOURCE LINE # 614
0153 7B00        R     MOV     R3,#MBYTE ?SC_3058
0155 7A00        R     MOV     R2,#HIGH ?SC_3058
0157 7900        R     MOV     R1,#LOW ?SC_3058
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 616
0159 8016              SJMP    ?C0278
015B         ?C0125:
                                           ; SOURCE LINE # 617
015B 90000000    E     MOV     DPTR,#SPI_CmdBuffer
015F E0                MOVX    A,@DPTR
0160 B4C808            CJNE    A,#0C8H,?C0127
                                           ; SOURCE LINE # 618
0163 7B00        R     MOV     R3,#MBYTE ?SC_3067
0165 7A00        R     MOV     R2,#HIGH ?SC_3067
0167 7900        R     MOV     R1,#LOW ?SC_3067
                                           ; SOURCE LINE # 619
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 57  

                                           ; SOURCE LINE # 620
0169 8006              SJMP    ?C0273
016B         ?C0127:
                                           ; SOURCE LINE # 621
                                           ; SOURCE LINE # 622
016B 7B00        R     MOV     R3,#MBYTE ?SC_3072
016D 7A00        R     MOV     R2,#HIGH ?SC_3072
016F 7900        R     MOV     R1,#LOW ?SC_3072
0171         ?C0273:
0171         ?C0278:
0171 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 623
0174 90000000    R     MOV     DPTR,#print_spiflash_status_register
0178 7400        R     MOV     A,#MBYTE print_spiflash_status_register_unknown
017A F0                MOVX    @DPTR,A
017B A3                INC     DPTR
017C 7400        R     MOV     A,#HIGH print_spiflash_status_register_unknown
017E F0                MOVX    @DPTR,A
017F A3                INC     DPTR
0180 7400        R     MOV     A,#LOW print_spiflash_status_register_unknown
0182 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 624
                                           ; SOURCE LINE # 625
                                           ; SOURCE LINE # 626
0183 22                RET     
0184         ?C0114:
                                           ; SOURCE LINE # 627
0184 90000000    R     MOV     DPTR,#cmd
0188 E0                MOVX    A,@DPTR
0189 6406              XRL     A,#06H
018B 6005              JZ      ?C0131
018D E0                MOVX    A,@DPTR
018E 6404              XRL     A,#04H
0190 7027              JNZ     ?C0130
0192         ?C0131:
                                           ; SOURCE LINE # 628
                                           ; SOURCE LINE # 629
0192 90000000    R     MOV     DPTR,#cmd
0196 E0                MOVX    A,@DPTR
0197 B40408            CJNE    A,#04H,?C0132
019A 7B00        R     MOV     R3,#MBYTE ?SC_3080
019C 7A00        R     MOV     R2,#HIGH ?SC_3080
019E 7900        R     MOV     R1,#LOW ?SC_3080
01A0 8006              SJMP    ?C0279
01A2         ?C0132:
                                           ; SOURCE LINE # 630
01A2 7B00        R     MOV     R3,#MBYTE ?SC_3088
01A4 7A00        R     MOV     R2,#HIGH ?SC_3088
01A6 7900        R     MOV     R1,#LOW ?SC_3088
01A8         ?C0279:
01A8 110000      E     ACALL   _Puts
01AB         ?C0133:
                                           ; SOURCE LINE # 631
01AB 110000      R     ACALL   L?0384
01AE F0                MOVX    @DPTR,A
01AF 7A04              MOV     R2,#04H
01B1 7D40              MOV     R5,#040H
                                           ; SOURCE LINE # 632
01B3 110000      R     ACALL   L?0352
                                           ; SOURCE LINE # 633
01B6 010000      R     AJMP    ?C0282
01B9         ?C0130:
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 58  

                                           ; SOURCE LINE # 634
01B9 90000000    R     MOV     DPTR,#cmd
01BD E0                MOVX    A,@DPTR
01BE 6405              XRL     A,#05H
01C0 7032              JNZ     ?C0135
                                           ; SOURCE LINE # 635
01C2 90000000    R     MOV     DPTR,#read_byte
01C6 E0                MOVX    A,@DPTR
01C7 7009              JNZ     ?C0136
                                           ; SOURCE LINE # 636
01C9 7B00        R     MOV     R3,#MBYTE ?SC_3096
01CB 7A00        R     MOV     R2,#HIGH ?SC_3096
01CD 7900        R     MOV     R1,#LOW ?SC_3096
01CF         ?C0277:
01CF 010000      E     AJMP    _Puts
                                           ; SOURCE LINE # 638
01D2         ?C0136:
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 640
01D2 110000      R     ACALL   L?0320
01D5 EF                MOV     A,R7
01D6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 641
01D7 E4                CLR     A
01D8 90000000    R     MOV     DPTR,#i
01DC F0                MOVX    @DPTR,A
01DD         ?C0137:
01DD 110000      R     ACALL   L?0342
01E0 E0                MOVX    A,@DPTR
01E1 FE                MOV     R6,A
01E2 C3                CLR     C
01E3 9F                SUBB    A,R7
01E4 4003              JC      $ + 5H
01E6 010000      R     AJMP    ?C0109
                                           ; SOURCE LINE # 642
01E9 110000      R     ACALL   L?0314
01EC 110000      R     ACALL   L?0386
01EF E0                MOVX    A,@DPTR
01F0 04                INC     A
01F1 F0                MOVX    @DPTR,A
01F2 80E9              SJMP    ?C0137
                                           ; SOURCE LINE # 643
01F4         ?C0135:
                                           ; SOURCE LINE # 644
01F4 90000000    R     MOV     DPTR,#cmd
01F8 E0                MOVX    A,@DPTR
01F9 6401              XRL     A,#01H
01FB 704F              JNZ     ?C0141
                                           ; SOURCE LINE # 645
01FD 110000      R     ACALL   L?0330
0200 5003              JNC     ?C0142
                                           ; SOURCE LINE # 646
0202 010000      R     AJMP    ?C0285
                                           ; SOURCE LINE # 648
0205         ?C0142:
                                           ; SOURCE LINE # 649
0205 110000      R     ACALL   L?0317
0208 110000      R     ACALL   L?0306
020B 110000      E     ACALL   _a2h
020E 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0212 EF                MOV     A,R7
0213 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 59  

                                           ; SOURCE LINE # 650
0214 110000      R     ACALL   L?0404
0217 2400        E     ADD     A,#LOW argv+09H
0219 F582              MOV     DPL,A
021B E5F0              MOV     A,B
021D 3400        E     ADDC    A,#HIGH argv+09H
021F F583              MOV     DPH,A
0221 759300      E     MOV     DPX,#?C?XDATASEG
0224 110000      R     ACALL   L?0306
0227 110000      E     ACALL   _a2h
022A 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
022E EF                MOV     A,R7
022F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
0230 110000      R     ACALL   L?0384
0233 7404              MOV     A,#04H
0235 F0                MOVX    @DPTR,A
0236 FA                MOV     R2,A
0237 7D42              MOV     R5,#042H
                                           ; SOURCE LINE # 653
0239 110000      R     ACALL   L?0352
023C 90000000    R     MOV     DPTR,#ret
0240 EF                MOV     A,R7
0241 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 654
0242 7D0A              MOV     R5,#0AH
0244 7F0A              MOV     R7,#0AH
0246 110000      E     ACALL   _SpiFlash_check_busy
0249         ?C0280:
                                           ; SOURCE LINE # 655
0249 010000      R     AJMP    ?C0282
024C         ?C0141:
                                           ; SOURCE LINE # 656
024C 90000000    R     MOV     DPTR,#cmd
0250 E0                MOVX    A,@DPTR
0251 64B7              XRL     A,#0B7H
0253 6004              JZ      ?C0145
0255 E0                MOVX    A,@DPTR
0256 B4E910            CJNE    A,#0E9H,?C0144
0259         ?C0145:
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
0259 90000000    R     MOV     DPTR,#cmd
025D E0                MOVX    A,@DPTR
025E FF                MOV     R7,A
025F 110000      E     ACALL   _SpiFlash_4B_DmaCmd
0262 90000000    R     MOV     DPTR,#ret
0266 EF                MOV     A,R7
0267 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 659
0268 22                RET     
0269         ?C0144:
                                           ; SOURCE LINE # 660
0269 90000000    R     MOV     DPTR,#cmd
026D E0                MOVX    A,@DPTR
026E 6402              XRL     A,#02H
0270 6003              JZ      $ + 5H
0272 010000      R     AJMP    ?C0147
                                           ; SOURCE LINE # 661
0275 110000      R     ACALL   L?0330
0278 5003              JNC     ?C0148
                                           ; SOURCE LINE # 662
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 60  

027A         ?C0281:
027A 010000      R     AJMP    ?C0285
                                           ; SOURCE LINE # 664
027D         ?C0148:
                                           ; SOURCE LINE # 665
027D 90000000    R     MOV     DPTR,#index
0281 E0                MOVX    A,@DPTR
0282 240B              ADD     A,#0BH
0284 FF                MOV     R7,A
0285 E4                CLR     A
0286 33                RLC     A
0287 D3                SETB    C
0288 110000      R     ACALL   L?0332
028B 4010              JC      ?C0149
                                           ; SOURCE LINE # 666
028D 7B00        R     MOV     R3,#MBYTE ?SC_3111
028F 7A00        R     MOV     R2,#HIGH ?SC_3111
0291 7900        R     MOV     R1,#LOW ?SC_3111
0293 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 667
0296 90000000    E     MOV     DPTR,#argc
029A 740B              MOV     A,#0BH
029C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 668
029D         ?C0149:
                                           ; SOURCE LINE # 669
029D 110000      R     ACALL   L?0317
02A0 110000      R     ACALL   L?0306
02A3 110000      R     ACALL   L?0377
                                           ; SOURCE LINE # 670
02A6 7B00        R     MOV     R3,#MBYTE ?SC_3138
02A8 7A00        R     MOV     R2,#HIGH ?SC_3138
02AA 7900        R     MOV     R1,#LOW ?SC_3138
02AC 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 671
02AF 110000      R     ACALL   L?0311
02B2 E0                MOVX    A,@DPTR
02B3 FF                MOV     R7,A
02B4 110000      R     ACALL   _PrintSpiAddr
                                           ; SOURCE LINE # 677
02B7 90000000    R     MOV     DPTR,#i
02BB 7403              MOV     A,#03H
02BD F0                MOVX    @DPTR,A
02BE E4                CLR     A
02BF A3                INC     DPTR
02C0 F0                MOVX    @DPTR,A
02C1         ?C0150:
02C1 90000000    E     MOV     DPTR,#argc
02C5 110000      R     ACALL   L?0344
02C8 E0                MOVX    A,@DPTR
02C9 FE                MOV     R6,A
02CA C3                CLR     C
02CB 9F                SUBB    A,R7
02CC 5045              JNC     ?C0151
                                           ; SOURCE LINE # 678
02CE EE                MOV     A,R6
02CF FF                MOV     R7,A
02D0 90000000    R     MOV     DPTR,#index
02D4 E0                MOVX    A,@DPTR
02D5 2F                ADD     A,R7
02D6 FF                MOV     R7,A
02D7 E4                CLR     A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 61  

02D8 33                RLC     A
02D9 FE                MOV     R6,A
02DA 90000000    E     MOV     DPTR,#argv
02DE 75F003            MOV     B,#03H
02E1 EF                MOV     A,R7
02E2 110000      E     ACALL   ?C?OFFXADD
02E5 EE                MOV     A,R6
02E6 75F003            MOV     B,#03H
02E9 A4                MUL     AB
02EA 2583              ADD     A,DPH
02EC F583              MOV     DPH,A
02EE 759300      E     MOV     DPX,#?C?XDATASEG
02F1 110000      R     ACALL   L?0306
02F4 110000      E     ACALL   _a2h
;---- Variable 'dat0' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 679
02F7 90000000    R     MOV     DPTR,#cnt
02FB E0                MOVX    A,@DPTR
02FC 2400        E     ADD     A,#LOW SPI_Buffer
02FE F582              MOV     DPL,A
0300 E4                CLR     A
0301 110000      R     ACALL   L?0326
0304 EF                MOV     A,R7
0305 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 680
0306 90000000    R     MOV     DPTR,#i
030A E0                MOVX    A,@DPTR
030B 04                INC     A
030C F0                MOVX    @DPTR,A
030D A3                INC     DPTR
030E E0                MOVX    A,@DPTR
030F 04                INC     A
0310 F0                MOVX    @DPTR,A
0311 80AE              SJMP    ?C0150
0313         ?C0151:
                                           ; SOURCE LINE # 681
0313 110000      R     ACALL   L?0311
0316 E0                MOVX    A,@DPTR
0317 FF                MOV     R7,A
0318 E4                CLR     A
0319 90000000    E     MOV     DPTR,#?_SpiFlash_PageProgram_XMem?BYTE+04H
031D F0                MOVX    @DPTR,A
031E A3                INC     DPTR
031F F0                MOVX    @DPTR,A
0320 90000000    E     MOV     DPTR,#argc
0324 E0                MOVX    A,@DPTR
0325 FB                MOV     R3,A
0326 E4                CLR     A
0327 110000      R     ACALL   L?0398
032A EB                MOV     A,R3
032B F0                MOVX    @DPTR,A
032C 110000      E     ACALL   _SpiFlash_PageProgram_XMem
                                           ; SOURCE LINE # 682
032F 8064              SJMP    ?C0284
0331         ?C0147:
                                           ; SOURCE LINE # 683
0331 90000000    R     MOV     DPTR,#cmd
0335 E0                MOVX    A,@DPTR
0336 6420              XRL     A,#020H
0338 6005              JZ      ?C0155
033A E0                MOVX    A,@DPTR
033B 64D8              XRL     A,#0D8H
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 62  

033D 705D              JNZ     ?C0154
033F         ?C0155:
                                           ; SOURCE LINE # 684
033F 90000000    R     MOV     DPTR,#index
0343 E0                MOVX    A,@DPTR
0344 2403              ADD     A,#03H
0346 110000      R     ACALL   L?0331
0349 5002              JNC     ?C0156
                                           ; SOURCE LINE # 685
034B         ?C0283:
034B 807E              SJMP    ?C0285
                                           ; SOURCE LINE # 687
034D         ?C0156:
                                           ; SOURCE LINE # 688
034D 110000      R     ACALL   L?0318
0350 110000      R     ACALL   L?0306
0353 110000      R     ACALL   L?0377
                                           ; SOURCE LINE # 689
0356 90000000    R     MOV     DPTR,#cmd
035A E0                MOVX    A,@DPTR
035B B4D808            CJNE    A,#0D8H,?C0157
035E 7B00        R     MOV     R3,#MBYTE ?SC_3144
0360 7A00        R     MOV     R2,#HIGH ?SC_3144
0362 7900        R     MOV     R1,#LOW ?SC_3144
0364 8006              SJMP    ?C0286
0366         ?C0157:
                                           ; SOURCE LINE # 690
0366 7B00        R     MOV     R3,#MBYTE ?SC_3150
0368 7A00        R     MOV     R2,#HIGH ?SC_3150
036A 7900        R     MOV     R1,#LOW ?SC_3150
036C         ?C0286:
036C 110000      E     ACALL   _Puts
036F         ?C0158:
                                           ; SOURCE LINE # 691
036F 110000      R     ACALL   L?0312
0372 E0                MOVX    A,@DPTR
0373 FF                MOV     R7,A
0374 110000      R     ACALL   _PrintSpiAddr
                                           ; SOURCE LINE # 693
0377 90000000    R     MOV     DPTR,#cmd
037B E0                MOVX    A,@DPTR
037C 90000000    R     MOV     DPTR,#spiaddr
0380 B4D80A            CJNE    A,#0D8H,?C0159
                                           ; SOURCE LINE # 694
0383 110000      R     ACALL   L?0313
0386 E0                MOVX    A,@DPTR
0387 FF                MOV     R7,A
0388 110000      E     ACALL   _SpiFlash_BlockErase
038B 8008              SJMP    ?C0274
038D         ?C0159:
                                           ; SOURCE LINE # 696
038D 110000      R     ACALL   L?0313
0390 E0                MOVX    A,@DPTR
0391 FF                MOV     R7,A
0392 110000      E     ACALL   _SpiFlash_SectorErase
0395         ?C0274:
0395         ?C0282:
0395         ?C0284:
0395 90000000    R     MOV     DPTR,#ret
0399 EF                MOV     A,R7
039A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 697
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 63  

039B 22                RET     
039C         ?C0154:
                                           ; SOURCE LINE # 698
039C 90000000    R     MOV     DPTR,#cmd
03A0 E0                MOVX    A,@DPTR
03A1 6403              XRL     A,#03H
03A3 601C              JZ      ?C0163
03A5 E0                MOVX    A,@DPTR
03A6 640B              XRL     A,#0BH
03A8 6017              JZ      ?C0163
03AA E0                MOVX    A,@DPTR
03AB 643B              XRL     A,#03BH
03AD 6012              JZ      ?C0163
03AF E0                MOVX    A,@DPTR
03B0 646B              XRL     A,#06BH
03B2 600D              JZ      ?C0163
03B4 E0                MOVX    A,@DPTR
03B5 64BB              XRL     A,#0BBH
03B7 6008              JZ      ?C0163
03B9 E0                MOVX    A,@DPTR
03BA 64EB              XRL     A,#0EBH
03BC 6003              JZ      $ + 5H
03BE 010000      R     AJMP    ?C0162
03C1         ?C0163:
                                           ; SOURCE LINE # 703
                                           ; SOURCE LINE # 708
03C1 90000000    E     MOV     DPTR,#argc
03C5 E0                MOVX    A,@DPTR
03C6 C3                CLR     C
03C7 9404              SUBB    A,#04H
03C9 5008              JNC     ?C0164
                                           ; SOURCE LINE # 709
03CB         ?C0285:
03CB 7B00        R     MOV     R3,#MBYTE ?SC_678
03CD 7A00        R     MOV     R2,#HIGH ?SC_678
03CF 7900        R     MOV     R1,#LOW ?SC_678
03D1 8043              SJMP    ?C0287
                                           ; SOURCE LINE # 711
03D3         ?C0164:
                                           ; SOURCE LINE # 712
03D3 90000000    R     MOV     DPTR,#read_byte
03D7 E0                MOVX    A,@DPTR
03D8 7003              JNZ     ?C0165
                                           ; SOURCE LINE # 713
03DA         ?C0276:
03DA 010000      R     AJMP    HelpMonitorSPIC
                                           ; SOURCE LINE # 715
03DD         ?C0165:
                                           ; SOURCE LINE # 717
03DD 759300      E     MOV     DPX,#?C?XDATASEG
03E0 E500        E     MOV     A,regTW88+01H
03E2 24C0              ADD     A,#0C0H
03E4 110000      R     ACALL   L?0310
03E7 E0                MOVX    A,@DPTR
03E8 90000000    R     MOV     DPTR,#SPI_mode_Reg
03EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 718
03ED 90000000    R     MOV     DPTR,#cmd
03F1 E0                MOVX    A,@DPTR
03F2 B40324            CJNE    A,#03H,?C0166
                                           ; SOURCE LINE # 719
03F5 E4                CLR     A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 64  

03F6 90000000    R     MOV     DPTR,#SPI_mode
03FA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 720
03FB 90000000    R     MOV     DPTR,#w_len
03FF 7403              MOV     A,#03H
                                           ; SOURCE LINE # 721
0401 110000      R     ACALL   L?0355
0404 24E1              ADD     A,#0E1H
0406 110000      R     ACALL   L?0310
0409 E0                MOVX    A,@DPTR
040A 54C0              ANL     A,#0C0H
040C 64C0              XRL     A,#0C0H
040E 7060              JNZ     ?C0168
                                           ; SOURCE LINE # 722
0410 7B00        R     MOV     R3,#MBYTE ?SC_3156
0412 7A00        R     MOV     R2,#HIGH ?SC_3156
0414 7900        R     MOV     R1,#LOW ?SC_3156
0416         ?C0287:
0416 010000      E     AJMP    _Printf
                                           ; SOURCE LINE # 724
                                           ; SOURCE LINE # 725
0419         ?C0166:
                                           ; SOURCE LINE # 726
0419 90000000    R     MOV     DPTR,#cmd
041D E0                MOVX    A,@DPTR
041E B40B08            CJNE    A,#0BH,?C0169
                                           ; SOURCE LINE # 727
0421 90000000    R     MOV     DPTR,#SPI_mode
0425 7401              MOV     A,#01H
                                           ; SOURCE LINE # 728
                                           ; SOURCE LINE # 729
0427 800E              SJMP    ?C0288
0429         ?C0169:
                                           ; SOURCE LINE # 730
0429 90000000    R     MOV     DPTR,#cmd
042D E0                MOVX    A,@DPTR
042E B43B10            CJNE    A,#03BH,?C0171
                                           ; SOURCE LINE # 731
0431 90000000    R     MOV     DPTR,#SPI_mode
0435 7402              MOV     A,#02H
0437         ?C0288:
0437 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 732
0438 90000000    R     MOV     DPTR,#w_len
043C 7404              MOV     A,#04H
043E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 733
043F 802F              SJMP    ?C0168
0441         ?C0171:
                                           ; SOURCE LINE # 734
0441 90000000    R     MOV     DPTR,#cmd
0445 E0                MOVX    A,@DPTR
0446 B46B08            CJNE    A,#06BH,?C0173
                                           ; SOURCE LINE # 735
0449 90000000    R     MOV     DPTR,#SPI_mode
044D 7403              MOV     A,#03H
                                           ; SOURCE LINE # 736
                                           ; SOURCE LINE # 737
044F 8018              SJMP    ?C0289
0451         ?C0173:
                                           ; SOURCE LINE # 738
0451 90000000    R     MOV     DPTR,#cmd
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 65  

0455 E0                MOVX    A,@DPTR
0456 90000000    R     MOV     DPTR,#SPI_mode
045A B4BB0A            CJNE    A,#0BBH,?C0175
                                           ; SOURCE LINE # 739
045D 7404              MOV     A,#04H
045F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
0460 90000000    R     MOV     DPTR,#w_len
0464 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 741
0465 8009              SJMP    ?C0168
0467         ?C0175:
                                           ; SOURCE LINE # 742
                                           ; SOURCE LINE # 744
0467 7405              MOV     A,#05H
0469         ?C0289:
0469 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 745
046A 90000000    R     MOV     DPTR,#w_len
046E 04                INC     A
046F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 746
0470         ?C0168:
                                           ; SOURCE LINE # 749
0470 90000000    E     MOV     DPTR,#SpiFlash4ByteAddr
0474 E0                MOVX    A,@DPTR
0475 6007              JZ      ?C0177
                                           ; SOURCE LINE # 750
0477 90000000    R     MOV     DPTR,#w_len
047B E0                MOVX    A,@DPTR
047C 04                INC     A
047D F0                MOVX    @DPTR,A
047E         ?C0177:
                                           ; SOURCE LINE # 752
047E 110000      R     ACALL   L?0318
0481 110000      R     ACALL   L?0306
0484 110000      E     ACALL   _a2h
0487 90000000    R     MOV     DPTR,#spiaddr
048B 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 753
048E 110000      R     ACALL   L?0312
0491 E0                MOVX    A,@DPTR
0492 FF                MOV     R7,A
0493 110000      R     ACALL   _PrintSpiAddr
                                           ; SOURCE LINE # 759
0496 110000      R     ACALL   L?0312
0499 E0                MOVX    A,@DPTR
049A FF                MOV     R7,A
049B 110000      E     ACALL   _SpiFlashSetAddress2CmdBuffer
                                           ; SOURCE LINE # 761
049E 90000000    R     MOV     DPTR,#SPI_mode_Reg
04A2 E0                MOVX    A,@DPTR
04A3 54F8              ANL     A,#0F8H
04A5 90000000    R     MOV     DPTR,#SPI_mode
04A9 110000      R     ACALL   L?0366
04AC 24C0              ADD     A,#0C0H
04AE 110000      R     ACALL   L?0310
04B1 EF                MOV     A,R7
04B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 763
                                           ; SOURCE LINE # 764
04B3 110000      R     ACALL   L?0320
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 66  

04B6 EF                MOV     A,R7
04B7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 765
04B8 705F              JNZ     ?C0178
                                           ; SOURCE LINE # 766
04BA 90000000    R     MOV     DPTR,#cmd
04BE E0                MOVX    A,@DPTR
04BF 643B              XRL     A,#03BH
04C1 600F              JZ      ?C0180
04C3 E0                MOVX    A,@DPTR
04C4 646B              XRL     A,#06BH
04C6 600A              JZ      ?C0180
04C8 E0                MOVX    A,@DPTR
04C9 64BB              XRL     A,#0BBH
04CB 6005              JZ      ?C0180
04CD E0                MOVX    A,@DPTR
04CE 64EB              XRL     A,#0EBH
04D0 701A              JNZ     ?C0179
04D2         ?C0180:
                                           ; SOURCE LINE # 769
                                           ; SOURCE LINE # 770
04D2 E4                CLR     A
04D3 90000000    R     MOV     DPTR,#i
04D7 F0                MOVX    @DPTR,A
04D8         ?C0181:
04D8 110000      R     ACALL   L?0342
04DB E0                MOVX    A,@DPTR
04DC FE                MOV     R6,A
04DD C3                CLR     C
04DE 9F                SUBB    A,R7
04DF 5038              JNC     ?C0178
                                           ; SOURCE LINE # 771
04E1 110000      R     ACALL   L?0314
04E4 110000      R     ACALL   L?0386
04E7 E0                MOVX    A,@DPTR
04E8 04                INC     A
04E9 F0                MOVX    @DPTR,A
04EA 80EC              SJMP    ?C0181
                                           ; SOURCE LINE # 772
04EC         ?C0179:
                                           ; SOURCE LINE # 773
                                           ; SOURCE LINE # 774
04EC E4                CLR     A
04ED 90000000    R     MOV     DPTR,#i
04F1 F0                MOVX    @DPTR,A
04F2         ?C0185:
04F2 110000      R     ACALL   L?0343
04F5 E0                MOVX    A,@DPTR
04F6 FE                MOV     R6,A
04F7 C3                CLR     C
04F8 9F                SUBB    A,R7
04F9 501E              JNC     ?C0178
                                           ; SOURCE LINE # 775
04FB 7B00        R     MOV     R3,#MBYTE ?SC_0
04FD 7A00        R     MOV     R2,#HIGH ?SC_0
04FF 7900        R     MOV     R1,#LOW ?SC_0
0501 7400        E     MOV     A,#LOW SPI_CmdBuffer
0503 2E                ADD     A,R6
0504 110000      R     ACALL   L?0402
0507 E0                MOVX    A,@DPTR
0508 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
050C F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 67  

050D 110000      E     ACALL   _Printf
0510 90000000    R     MOV     DPTR,#i
0514 E0                MOVX    A,@DPTR
0515 04                INC     A
0516 F0                MOVX    @DPTR,A
0517 80D9              SJMP    ?C0185
                                           ; SOURCE LINE # 776
                                           ; SOURCE LINE # 777
0519         ?C0178:
                                           ; SOURCE LINE # 780
0519 90000000    R     MOV     DPTR,#SPI_mode_Reg
051D E0                MOVX    A,@DPTR
051E 110000      R     ACALL   L?0367
0521 24C0              ADD     A,#0C0H
0523 110000      R     ACALL   L?0310
0526 EF                MOV     A,R7
0527 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 781
0528 22                RET     
0529         ?C0162:
                                           ; SOURCE LINE # 782
                                           ; SOURCE LINE # 784
0529 90000000    R     MOV     DPTR,#read_byte
052D E0                MOVX    A,@DPTR
052E 6005              JZ      ?C0189
                                           ; SOURCE LINE # 785
0530 E4                CLR     A
0531 A3                INC     DPTR
0532 F0                MOVX    @DPTR,A
0533 8008              SJMP    ?C0190
0535         ?C0189:
                                           ; SOURCE LINE # 786
                                           ; SOURCE LINE # 787
0535 110000      R     ACALL   L?0359
0538 90000000    R     MOV     DPTR,#w_len
053C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 788
053D         ?C0190:
                                           ; SOURCE LINE # 789
053D E4                CLR     A
053E 90000000    R     MOV     DPTR,#i
0542 F0                MOVX    @DPTR,A
0543         ?C0191:
0543 90000000    R     MOV     DPTR,#w_len
0547 110000      R     ACALL   L?0344
054A E0                MOVX    A,@DPTR
054B C3                CLR     C
054C 9F                SUBB    A,R7
054D 501E              JNC     ?C0192
                                           ; SOURCE LINE # 790
054F 110000      R     ACALL   L?0318
0552 110000      R     ACALL   L?0306
0555 110000      E     ACALL   _a2h
0558 90000000    R     MOV     DPTR,#i
055C E0                MOVX    A,@DPTR
055D 2400        E     ADD     A,#LOW SPI_CmdBuffer
055F 110000      R     ACALL   L?0402
0562 EF                MOV     A,R7
0563 F0                MOVX    @DPTR,A
0564 90000000    R     MOV     DPTR,#i
0568 E0                MOVX    A,@DPTR
0569 04                INC     A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 68  

056A F0                MOVX    @DPTR,A
056B 80D6              SJMP    ?C0191
056D         ?C0192:
                                           ; SOURCE LINE # 793
056D 90000000    R     MOV     DPTR,#cmd
0571 E0                MOVX    A,@DPTR
0572 FF                MOV     R7,A
0573 90000000    R     MOV     DPTR,#w_len
0577 E0                MOVX    A,@DPTR
0578 4440              ORL     A,#040H
057A FD                MOV     R5,A
057B 90000000    R     MOV     DPTR,#read_byte
057F E0                MOVX    A,@DPTR
0580 FB                MOV     R3,A
0581 110000      R     ACALL   L?0362
0584 EB                MOV     A,R3
0585 F0                MOVX    @DPTR,A
0586 E4                CLR     A
0587 A3                INC     DPTR
0588 F0                MOVX    @DPTR,A
0589 7BD0              MOV     R3,#0D0H
058B 7A04              MOV     R2,#04H
                                           ; SOURCE LINE # 794
058D 110000      R     ACALL   L?0388
0590 EF                MOV     A,R7
0591 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 795
0592 701D              JNZ     ?C0109
                                           ; SOURCE LINE # 796
0594 90000000    R     MOV     DPTR,#i
0598 F0                MOVX    @DPTR,A
0599         ?C0195:
0599 110000      R     ACALL   L?0343
059C E0                MOVX    A,@DPTR
059D FE                MOV     R6,A
059E C3                CLR     C
059F 9F                SUBB    A,R7
05A0 500F              JNC     ?C0109
                                           ; SOURCE LINE # 797
05A2 110000      R     ACALL   L?0315
05A5 110000      E     ACALL   _Printf
05A8 90000000    R     MOV     DPTR,#i
05AC E0                MOVX    A,@DPTR
05AD 04                INC     A
05AE F0                MOVX    @DPTR,A
05AF 80E8              SJMP    ?C0195
                                           ; SOURCE LINE # 798
                                           ; SOURCE LINE # 799
                                           ; SOURCE LINE # 800
05B1         ?C0109:
05B1 22                RET     
05B2         L?0320:
05B2 90000000    R     MOV     DPTR,#cmd
05B6 E0                MOVX    A,@DPTR
05B7 FF                MOV     R7,A
05B8 90000000    R     MOV     DPTR,#read_byte
05BC E0                MOVX    A,@DPTR
05BD FD                MOV     R5,A
05BE 90000000    E     MOV     DPTR,#?_SpiFlash_DmaCmd?BYTE+04H
05C2 E4                CLR     A
05C3 F0                MOVX    @DPTR,A
05C4 A3                INC     DPTR
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 69  

05C5 ED                MOV     A,R5
05C6 F0                MOVX    @DPTR,A
05C7 E4                CLR     A
05C8 A3                INC     DPTR
05C9 F0                MOVX    @DPTR,A
05CA 7BD0              MOV     R3,#0D0H
05CC 7A04              MOV     R2,#04H
05CE 7D40              MOV     R5,#040H
05D0 110000      E     ACALL   _SpiFlash_DmaCmd
05D3 7D0A              MOV     R5,#0AH
05D5 7F0A              MOV     R7,#0AH
05D7 110000      E     ACALL   _SpiFlash_wait_done
05DA 90000000    R     MOV     DPTR,#ret
05DE 22                RET     
05DF         L?0352:
05DF 7BD0              MOV     R3,#0D0H
05E1 110000      E     ACALL   _SpiFlash_DmaCmd
05E4 7D0A              MOV     R5,#0AH
05E6 7F0A              MOV     R7,#0AH
05E8 110000      E     ACALL   _SpiFlash_wait_done
05EB 22                RET     
05EC         L?0372:
05EC 110000      E     ACALL   _Puts
05EF 90000000    R     MOV     DPTR,#print_spiflash_status_register
05F3 22                RET     
05F4         L?0377:
05F4 110000      E     ACALL   _a2h
05F7 90000000    R     MOV     DPTR,#spiaddr
05FB 110000      E     ACALL   ?C?LSTXDATA
05FE 22                RET     
05FF         L?0386:
05FF 110000      E     ACALL   _Printf
0602 90000000    R     MOV     DPTR,#i
0606 22                RET     
0607         L?0388:
0607 110000      E     ACALL   _SpiFlash_DmaCmd
060A 7D0A              MOV     R5,#0AH
060C 7F0A              MOV     R7,#0AH
060E 110000      E     ACALL   _SpiFlash_wait_done
0611 90000000    R     MOV     DPTR,#ret
0615 22                RET     
0616         L?0400:
0616 110000      E     ACALL   _Puts
0619 90000000    R     MOV     DPTR,#print_spiflash_status_register
061D 22                RET     
             ; FUNCTION MonitorSPIC (END)

             ; FUNCTION EE_DataInfomation (BEGIN)
                                           ; SOURCE LINE # 821
                                           ; SOURCE LINE # 822
                                           ; SOURCE LINE # 823
0000 7B00        R     MOV     R3,#MBYTE ?SC_3185
0002 7A00        R     MOV     R2,#HIGH ?SC_3185
0004 7900        R     MOV     R1,#LOW ?SC_3185
0006 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 824
0009 7B00        R     MOV     R3,#MBYTE ?SC_3225
000B 7A00        R     MOV     R2,#HIGH ?SC_3225
000D 7900        R     MOV     R1,#LOW ?SC_3225
000F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 825
0012 7B00        R     MOV     R3,#MBYTE ?SC_3247
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 70  

0014 7A00        R     MOV     R2,#HIGH ?SC_3247
0016 7900        R     MOV     R1,#LOW ?SC_3247
0018 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 826
001B 7B00        R     MOV     R3,#MBYTE ?SC_3278
001D 7A00        R     MOV     R2,#HIGH ?SC_3278
001F 7900        R     MOV     R1,#LOW ?SC_3278
0021 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 827
0024 7B00        R     MOV     R3,#MBYTE ?SC_3337
0026 7A00        R     MOV     R2,#HIGH ?SC_3337
0028 7900        R     MOV     R1,#LOW ?SC_3337
002A 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 828
002D 7B00        R     MOV     R3,#MBYTE ?SC_3400
002F 7A00        R     MOV     R2,#HIGH ?SC_3400
0031 7900        R     MOV     R1,#LOW ?SC_3400
0033 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 829
0036 7B00        R     MOV     R3,#MBYTE ?SC_3437
0038 7A00        R     MOV     R2,#HIGH ?SC_3437
003A 7900        R     MOV     R1,#LOW ?SC_3437
003C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 830
003F 7B00        R     MOV     R3,#MBYTE ?SC_3469
0041 7A00        R     MOV     R2,#HIGH ?SC_3469
0043 7900        R     MOV     R1,#LOW ?SC_3469
0045 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 831
0048 7B00        R     MOV     R3,#MBYTE ?SC_3501
004A 7A00        R     MOV     R2,#HIGH ?SC_3501
004C 7900        R     MOV     R1,#LOW ?SC_3501
004E 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 832
0051 7B00        R     MOV     R3,#MBYTE ?SC_3533
0053 7A00        R     MOV     R2,#HIGH ?SC_3533
0055 7900        R     MOV     R1,#LOW ?SC_3533
0057 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 833
005A 7B00        R     MOV     R3,#MBYTE ?SC_3565
005C 7A00        R     MOV     R2,#HIGH ?SC_3565
005E 7900        R     MOV     R1,#LOW ?SC_3565
0060 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 834
0063 7B00        R     MOV     R3,#MBYTE ?SC_3583
0065 7A00        R     MOV     R2,#HIGH ?SC_3583
0067 7900        R     MOV     R1,#LOW ?SC_3583
0069 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 835
006C 7B00        R     MOV     R3,#MBYTE ?SC_3610
006E 7A00        R     MOV     R2,#HIGH ?SC_3610
0070 7900        R     MOV     R1,#LOW ?SC_3610
0072 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 836
0075 7B00        R     MOV     R3,#MBYTE ?SC_3633
0077 7A00        R     MOV     R2,#HIGH ?SC_3633
0079 7900        R     MOV     R1,#LOW ?SC_3633
007B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 837
007E 7B00        R     MOV     R3,#MBYTE ?SC_3650
0080 7A00        R     MOV     R2,#HIGH ?SC_3650
0082 7900        R     MOV     R1,#LOW ?SC_3650
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 71  

0084 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 838
0087 7B00        R     MOV     R3,#MBYTE ?SC_3674
0089 7A00        R     MOV     R2,#HIGH ?SC_3674
008B 7900        R     MOV     R1,#LOW ?SC_3674
008D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 839
0090 7B00        R     MOV     R3,#MBYTE ?SC_3694
0092 7A00        R     MOV     R2,#HIGH ?SC_3694
0094 7900        R     MOV     R1,#LOW ?SC_3694
0096 010000      E     AJMP    _Puts
             ; FUNCTION EE_DataInfomation (END)

             ; FUNCTION HelpMonitorEE (BEGIN)
                                           ; SOURCE LINE # 844
                                           ; SOURCE LINE # 845
                                           ; SOURCE LINE # 846
0000 7B00        R     MOV     R3,#MBYTE ?SC_3714
0002 7A00        R     MOV     R2,#HIGH ?SC_3714
0004 7900        R     MOV     R1,#LOW ?SC_3714
0006 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 847
0009 7B00        R     MOV     R3,#MBYTE ?SC_3747
000B 7A00        R     MOV     R2,#HIGH ?SC_3747
000D 7900        R     MOV     R1,#LOW ?SC_3747
000F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 848
0012 7B00        R     MOV     R3,#MBYTE ?SC_3791
0014 7A00        R     MOV     R2,#HIGH ?SC_3791
0016 7900        R     MOV     R1,#LOW ?SC_3791
0018 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 849
001B 7B00        R     MOV     R3,#MBYTE ?SC_3842
001D 7A00        R     MOV     R2,#HIGH ?SC_3842
001F 7900        R     MOV     R1,#LOW ?SC_3842
0021 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 850
0024 7B00        R     MOV     R3,#MBYTE ?SC_3892
0026 7A00        R     MOV     R2,#HIGH ?SC_3892
0028 7900        R     MOV     R1,#LOW ?SC_3892
002A 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 851
002D 7B00        R     MOV     R3,#MBYTE ?SC_3938
002F 7A00        R     MOV     R2,#HIGH ?SC_3938
0031 7900        R     MOV     R1,#LOW ?SC_3938
0033 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 852
0036 7B00        R     MOV     R3,#MBYTE ?SC_3985
0038 7A00        R     MOV     R2,#HIGH ?SC_3985
003A 7900        R     MOV     R1,#LOW ?SC_3985
003C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 853
003F 7B00        R     MOV     R3,#MBYTE ?SC_4043
0041 7A00        R     MOV     R2,#HIGH ?SC_4043
0043 7900        R     MOV     R1,#LOW ?SC_4043
0045 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 854
0048 7B00        R     MOV     R3,#MBYTE ?SC_4081
004A 7A00        R     MOV     R2,#HIGH ?SC_4081
004C 7900        R     MOV     R1,#LOW ?SC_4081
004E 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 855
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 72  

0051 7B00        R     MOV     R3,#MBYTE ?SC_4114
0053 7A00        R     MOV     R2,#HIGH ?SC_4114
0055 7900        R     MOV     R1,#LOW ?SC_4114
0057 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 856
005A 7B00        R     MOV     R3,#MBYTE ?SC_4146
005C 7A00        R     MOV     R2,#HIGH ?SC_4146
005E 7900        R     MOV     R1,#LOW ?SC_4146
0060 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 857
0063 7B00        R     MOV     R3,#MBYTE ?SC_4182
0065 7A00        R     MOV     R2,#HIGH ?SC_4182
0067 7900        R     MOV     R1,#LOW ?SC_4182
0069 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 859
006C 110000      R     ACALL   L?0382
006F 010000      E     AJMP    _Puts
             ; FUNCTION HelpMonitorEE (END)

             ; FUNCTION MonitorEE (BEGIN)
                                           ; SOURCE LINE # 869
                                           ; SOURCE LINE # 870
                                           ; SOURCE LINE # 875
0000 110000      R     ACALL   L?0359
0003 5002              JNC     ?C0200
                                           ; SOURCE LINE # 876
0005 800A              SJMP    ?C0290
                                           ; SOURCE LINE # 878
0007         ?C0200:
                                           ; SOURCE LINE # 879
0007 110000      R     ACALL   L?0302
000A 110000      E     ACALL   _stricmp
000D EF                MOV     A,R7
000E 4E                ORL     A,R6
000F 7003              JNZ     ?C0202
                                           ; SOURCE LINE # 880
0011         ?C0290:
0011 010000      R     AJMP    HelpMonitorEE
                                           ; SOURCE LINE # 882
0014         ?C0202:
                                           ; SOURCE LINE # 884
0014 90000000    E     MOV     DPTR,#argv+06H
0018 110000      R     ACALL   L?0306
001B 110000      E     ACALL   _a2h
001E 90000000    R     MOV     DPTR,#index
0022 EE                MOV     A,R6
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 885
0027 90000000    E     MOV     DPTR,#argv+09H
002B 110000      R     ACALL   L?0306
002E 110000      E     ACALL   _a2h
0031 90000000    R     MOV     DPTR,#dat
0035 EF                MOV     A,R7
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 888
0037 7400        R     MOV     A,#MBYTE ?SC_4214
0039 110000      R     ACALL   L?0351
003C 7400        R     MOV     A,#HIGH ?SC_4214
003E F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 73  

003F A3                INC     DPTR
0040 7400        R     MOV     A,#LOW ?SC_4214
0042 110000      R     ACALL   L?0304
0045 110000      E     ACALL   _stricmp
0048 EF                MOV     A,R7
0049 4E                ORL     A,R6
004A 700C              JNZ     ?C0204
                                           ; SOURCE LINE # 889
004C 7B00        R     MOV     R3,#MBYTE ?SC_4221
004E 7A00        R     MOV     R2,#HIGH ?SC_4221
0050 7900        R     MOV     R1,#LOW ?SC_4221
0052 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 890
0055 010000      E     AJMP    E3P_Format
                                           ; SOURCE LINE # 892
0058         ?C0204:
                                           ; SOURCE LINE # 894
0058 7400        R     MOV     A,#MBYTE ?SC_4240
005A 110000      R     ACALL   L?0351
005D 7400        R     MOV     A,#HIGH ?SC_4240
005F F0                MOVX    @DPTR,A
0060 A3                INC     DPTR
0061 7400        R     MOV     A,#LOW ?SC_4240
0063 110000      R     ACALL   L?0304
0066 110000      E     ACALL   _stricmp
0069 EF                MOV     A,R7
006A 4E                ORL     A,R6
006B 700C              JNZ     ?C0206
                                           ; SOURCE LINE # 895
006D 7B00        R     MOV     R3,#MBYTE ?SC_4245
006F 7A00        R     MOV     R2,#HIGH ?SC_4245
0071 7900        R     MOV     R1,#LOW ?SC_4245
0073 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 897
0076 010000      E     AJMP    E3P_Configure
                                           ; SOURCE LINE # 899
0079         ?C0206:
                                           ; SOURCE LINE # 901
0079 7400        R     MOV     A,#MBYTE ?SC_4272
007B 110000      R     ACALL   L?0368
007E 7400        R     MOV     A,#HIGH ?SC_4272
0080 F0                MOVX    @DPTR,A
0081 A3                INC     DPTR
0082 7400        R     MOV     A,#LOW ?SC_4272
0084 110000      R     ACALL   L?0304
0087 110000      E     ACALL   _stricmp
008A EF                MOV     A,R7
008B 4E                ORL     A,R6
008C 700C              JNZ     ?C0208
                                           ; SOURCE LINE # 902
008E 7B00        R     MOV     R3,#MBYTE ?SC_4279
0090 7A00        R     MOV     R2,#HIGH ?SC_4279
0092 7900        R     MOV     R1,#LOW ?SC_4279
0094 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 903
0097 010000      E     AJMP    E3P_Repair
                                           ; SOURCE LINE # 905
009A         ?C0208:
                                           ; SOURCE LINE # 907
009A 7400        R     MOV     A,#MBYTE ?SC_4349
009C 110000      R     ACALL   L?0368
009F 7400        R     MOV     A,#HIGH ?SC_4349
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 74  

00A1 F0                MOVX    @DPTR,A
00A2 A3                INC     DPTR
00A3 7400        R     MOV     A,#LOW ?SC_4349
00A5 110000      R     ACALL   L?0304
00A8 110000      E     ACALL   _stricmp
00AB EF                MOV     A,R7
00AC 4E                ORL     A,R6
00AD 701A              JNZ     ?C0210
                                           ; SOURCE LINE # 908
00AF 7B00        R     MOV     R3,#MBYTE ?SC_4357
00B1 7A00        R     MOV     R2,#HIGH ?SC_4357
00B3 7900        R     MOV     R1,#LOW ?SC_4357
00B5 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 909
00B8 7F44              MOV     R7,#044H
00BA 7E00              MOV     R6,#00H
00BC 110000      E     ACALL   _SaveFWRevEE
                                           ; SOURCE LINE # 910
00BF 110000      E     ACALL   ClearBasicEE
                                           ; SOURCE LINE # 911
00C2 E4                CLR     A
00C3 FF                MOV     R7,A
00C4 110000      E     ACALL   _SaveDebugLevelEE
                                           ; SOURCE LINE # 912
00C7 803F              SJMP    ?C0291
                                           ; SOURCE LINE # 914
00C9         ?C0210:
                                           ; SOURCE LINE # 916
00C9 7400        R     MOV     A,#MBYTE ?SC_4381
00CB 110000      R     ACALL   L?0385
00CE 7400        R     MOV     A,#HIGH ?SC_4381
00D0 F0                MOVX    @DPTR,A
00D1 A3                INC     DPTR
00D2 7400        R     MOV     A,#LOW ?SC_4381
00D4 110000      R     ACALL   L?0304
00D7 110000      E     ACALL   _stricmp
00DA EF                MOV     A,R7
00DB 4E                ORL     A,R6
00DC 700C              JNZ     ?C0212
                                           ; SOURCE LINE # 917
00DE 7B00        R     MOV     R3,#MBYTE ?SC_4387
00E0 7A00        R     MOV     R2,#HIGH ?SC_4387
00E2 7900        R     MOV     R1,#LOW ?SC_4387
00E4 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 918
00E7 010000      E     AJMP    E3P_Check
                                           ; SOURCE LINE # 920
00EA         ?C0212:
                                           ; SOURCE LINE # 922
00EA 7400        R     MOV     A,#MBYTE ?SC_4398
00EC 110000      R     ACALL   L?0385
00EF 7400        R     MOV     A,#HIGH ?SC_4398
00F1 F0                MOVX    @DPTR,A
00F2 A3                INC     DPTR
00F3 7400        R     MOV     A,#LOW ?SC_4398
00F5 110000      R     ACALL   L?0304
00F8 110000      E     ACALL   _stricmp
00FB EF                MOV     A,R7
00FC 4E                ORL     A,R6
00FD 700C              JNZ     ?C0214
                                           ; SOURCE LINE # 923
00FF 7B00        R     MOV     R3,#MBYTE ?SC_4403
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 75  

0101 7A00        R     MOV     R2,#HIGH ?SC_4403
0103 7900        R     MOV     R1,#LOW ?SC_4403
0105 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 924
0108         ?C0291:
0108 010000      E     AJMP    E3P_PrintInfo
                                           ; SOURCE LINE # 926
010B         ?C0214:
                                           ; SOURCE LINE # 928
010B 7400        R     MOV     A,#MBYTE ?SC_4413
010D 110000      R     ACALL   L?0405
0110 7400        R     MOV     A,#HIGH ?SC_4413
0112 F0                MOVX    @DPTR,A
0113 A3                INC     DPTR
0114 7400        R     MOV     A,#LOW ?SC_4413
0116 110000      R     ACALL   L?0304
0119 110000      E     ACALL   _stricmp
011C EF                MOV     A,R7
011D 4E                ORL     A,R6
011E 700C              JNZ     ?C0216
                                           ; SOURCE LINE # 929
0120 7B00        R     MOV     R3,#MBYTE ?SC_4419
0122 7A00        R     MOV     R2,#HIGH ?SC_4419
0124 7900        R     MOV     R1,#LOW ?SC_4419
0126 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 930
0129 010000      E     AJMP    E3P_Clean
                                           ; SOURCE LINE # 932
012C         ?C0216:
                                           ; SOURCE LINE # 934
012C 110000      R     ACALL   L?0327
012F 7400        R     MOV     A,#HIGH ?SC_914
0131 F0                MOVX    @DPTR,A
0132 A3                INC     DPTR
0133 7400        R     MOV     A,#LOW ?SC_914
0135 110000      R     ACALL   L?0304
0138 110000      E     ACALL   _stricmp
013B EF                MOV     A,R7
013C 4E                ORL     A,R6
013D 7070              JNZ     ?C0218
                                           ; SOURCE LINE # 935
013F 90000000    E     MOV     DPTR,#argc
0143 E0                MOVX    A,@DPTR
0144 6404              XRL     A,#04H
0146 6003              JZ      $ + 5H
0148 010000      R     AJMP    ?C0201
                                           ; SOURCE LINE # 936
014B 7B00        R     MOV     R3,#MBYTE ?SC_4437
014D 7A00        R     MOV     R2,#HIGH ?SC_4437
014F 7900        R     MOV     R1,#LOW ?SC_4437
0151 90000000    R     MOV     DPTR,#index
0155 E0                MOVX    A,@DPTR
0156 FF                MOV     R7,A
0157 A3                INC     DPTR
0158 E0                MOVX    A,@DPTR
0159 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
015D CF                XCH     A,R7
015E F0                MOVX    @DPTR,A
015F A3                INC     DPTR
0160 EF                MOV     A,R7
0161 F0                MOVX    @DPTR,A
0162 90000000    R     MOV     DPTR,#dat
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 76  

0166 E0                MOVX    A,@DPTR
0167 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
016B F0                MOVX    @DPTR,A
016C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 937
016F 90000000    R     MOV     DPTR,#index
0173 E0                MOVX    A,@DPTR
0174 FE                MOV     R6,A
0175 A3                INC     DPTR
0176 E0                MOVX    A,@DPTR
0177 FF                MOV     R7,A
0178 90000000    R     MOV     DPTR,#dat
017C E0                MOVX    A,@DPTR
017D FD                MOV     R5,A
017E 110000      E     ACALL   _E3P_Write
                                           ; SOURCE LINE # 938
0181 110000      R     ACALL   L?0378
0184 90000000    R     MOV     DPTR,#dat1
0188 EF                MOV     A,R7
0189 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 939
018A A3                INC     DPTR
018B E0                MOVX    A,@DPTR
018C FE                MOV     R6,A
018D A3                INC     DPTR
018E E0                MOVX    A,@DPTR
018F FF                MOV     R7,A
0190 110000      E     ACALL   _E3P_Read
0193 90000000    R     MOV     DPTR,#dat
0197 EF                MOV     A,R7
0198 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 940
0199 7B00        R     MOV     R3,#MBYTE ?SC_4464
019B 7A00        R     MOV     R2,#HIGH ?SC_4464
019D 7900        R     MOV     R1,#LOW ?SC_4464
019F 110000      R     ACALL   L?0356
01A2 ED                MOV     A,R5
01A3 F0                MOVX    @DPTR,A
01A4 90000000    R     MOV     DPTR,#dat1
01A8 E0                MOVX    A,@DPTR
01A9 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
                                           ; SOURCE LINE # 941
                                           ; SOURCE LINE # 942
01AD 8031              SJMP    ?C0292
01AF         ?C0218:
                                           ; SOURCE LINE # 944
01AF 7400        R     MOV     A,#MBYTE ?SC_4501
01B1 110000      R     ACALL   L?0405
01B4 7400        R     MOV     A,#HIGH ?SC_4501
01B6 F0                MOVX    @DPTR,A
01B7 A3                INC     DPTR
01B8 7400        R     MOV     A,#LOW ?SC_4501
01BA 110000      R     ACALL   L?0304
01BD 110000      E     ACALL   _stricmp
01C0 EF                MOV     A,R7
01C1 4E                ORL     A,R6
01C2 7022              JNZ     ?C0221
                                           ; SOURCE LINE # 945
01C4 90000000    E     MOV     DPTR,#argc
01C8 E0                MOVX    A,@DPTR
01C9 6403              XRL     A,#03H
01CB 705E              JNZ     ?C0201
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 77  

                                           ; SOURCE LINE # 946
01CD 110000      R     ACALL   L?0378
01D0 90000000    R     MOV     DPTR,#dat
01D4 EF                MOV     A,R7
01D5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 947
01D6 7B00        R     MOV     R3,#MBYTE ?SC_4503
01D8 7A00        R     MOV     R2,#HIGH ?SC_4503
01DA 7900        R     MOV     R1,#LOW ?SC_4503
01DC 110000      R     ACALL   L?0356
01DF ED                MOV     A,R5
01E0         ?C0292:
01E0 F0                MOVX    @DPTR,A
01E1 A3                INC     DPTR
01E2 EF                MOV     A,R7
01E3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 948
                                           ; SOURCE LINE # 949
01E4 8042              SJMP    ?C0293
01E6         ?C0221:
                                           ; SOURCE LINE # 952
01E6 110000      R     ACALL   L?0322
01E9 7400        R     MOV     A,#HIGH ?SC_604
01EB F0                MOVX    @DPTR,A
01EC A3                INC     DPTR
01ED 7400        R     MOV     A,#LOW ?SC_604
01EF 110000      R     ACALL   L?0304
01F2 110000      E     ACALL   _stricmp
01F5 EF                MOV     A,R7
01F6 4E                ORL     A,R6
01F7 700E              JNZ     ?C0224
                                           ; SOURCE LINE # 953
01F9 7B00        R     MOV     R3,#MBYTE ?SC_4537
01FB 7A00        R     MOV     R2,#HIGH ?SC_4537
01FD 7900        R     MOV     R1,#LOW ?SC_4537
01FF 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 954
0202 E4                CLR     A
0203 FF                MOV     R7,A
0204 010000      E     AJMP    _E3P_DumpBlocks
                                           ; SOURCE LINE # 961
0207         ?C0224:
                                           ; SOURCE LINE # 964
0207 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
020B 7400        R     MOV     A,#MBYTE ?SC_4551
020D F0                MOVX    @DPTR,A
020E A3                INC     DPTR
020F 7400        R     MOV     A,#HIGH ?SC_4551
0211 F0                MOVX    @DPTR,A
0212 A3                INC     DPTR
0213 7400        R     MOV     A,#LOW ?SC_4551
0215 110000      R     ACALL   L?0304
0218 110000      E     ACALL   _stricmp
021B EF                MOV     A,R7
021C 4E                ORL     A,R6
021D 7003              JNZ     ?C0226
                                           ; SOURCE LINE # 965
021F 010000      R     AJMP    EE_DataInfomation
                                           ; SOURCE LINE # 967
0222         ?C0226:
                                           ; SOURCE LINE # 970
0222 7B00        R     MOV     R3,#MBYTE ?SC_1067
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 78  

0224 7A00        R     MOV     R2,#HIGH ?SC_1067
0226 7900        R     MOV     R1,#LOW ?SC_1067
0228         ?C0293:
0228 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 972
022B         ?C0201:
022B 22                RET     
022C         L?0378:
022C 90000000    R     MOV     DPTR,#index
0230 E0                MOVX    A,@DPTR
0231 FE                MOV     R6,A
0232 A3                INC     DPTR
0233 E0                MOVX    A,@DPTR
0234 FF                MOV     R7,A
0235 110000      E     ACALL   _E3P_Read
0238 22                RET     
             ; FUNCTION MonitorEE (END)

             ; FUNCTION SPI_Status (BEGIN)
                                           ; SOURCE LINE # 980
                                           ; SOURCE LINE # 981
                                           ; SOURCE LINE # 988
0000 110000      R     ACALL   L?0363
0003 7403              MOV     A,#03H
0005 F0                MOVX    @DPTR,A
0006 E4                CLR     A
0007 A3                INC     DPTR
0008 F0                MOVX    @DPTR,A
0009 7F9F              MOV     R7,#09FH
                                           ; SOURCE LINE # 989
000B 110000      R     ACALL   L?0334
                                           ; SOURCE LINE # 990
                                           ; SOURCE LINE # 991
000E 110000      R     ACALL   L?0307
                                           ; SOURCE LINE # 992
0011 110000      R     ACALL   L?0364
0014 24D2              ADD     A,#0D2H
0016 110000      R     ACALL   L?0310
0019 E0                MOVX    A,@DPTR
001A 90000000    E     MOV     DPTR,#SPI_CmdBuffer+02H
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 994
001F 90000000    R     MOV     DPTR,#ret
0023 E0                MOVX    A,@DPTR
0024 6009              JZ      ?C0228
                                           ; SOURCE LINE # 995
0026 7B00        R     MOV     R3,#MBYTE ?SC_4556
0028 7A00        R     MOV     R2,#HIGH ?SC_4556
002A 7900        R     MOV     R1,#LOW ?SC_4556
002C 110000      E     ACALL   _Puts
002F         ?C0228:
                                           ; SOURCE LINE # 996
002F 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0033 E0                MOVX    A,@DPTR
0034 FF                MOV     R7,A
0035 90000000    R     MOV     DPTR,#vid
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 997
003A 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
003E E0                MOVX    A,@DPTR
003F FE                MOV     R6,A
;---- Variable 'dat1' assigned to Register 'R6' ----
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 79  

                                           ; SOURCE LINE # 998
0040 A3                INC     DPTR
0041 E0                MOVX    A,@DPTR
0042 FD                MOV     R5,A
0043 90000000    R     MOV     DPTR,#cid
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1000
0048 7B00        R     MOV     R3,#MBYTE ?SC_4575
004A 7A00        R     MOV     R2,#HIGH ?SC_4575
004C 7900        R     MOV     R1,#LOW ?SC_4575
004E 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0052 EF                MOV     A,R7
0053 F0                MOVX    @DPTR,A
0054 A3                INC     DPTR
0055 EE                MOV     A,R6
0056 F0                MOVX    @DPTR,A
0057 A3                INC     DPTR
0058 ED                MOV     A,R5
0059 F0                MOVX    @DPTR,A
005A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1002
005D 90000000    R     MOV     DPTR,#vid
0061 E0                MOVX    A,@DPTR
0062 24E0              ADD     A,#0E0H
0064 6035              JZ      ?C0234
0066 245E              ADD     A,#05EH
0068 6010              JZ      ?C0231
006A 24D3              ADD     A,#0D3H
006C 6014              JZ      ?C0232
006E 24D3              ADD     A,#0D3H
0070 7031              JNZ     ?C0235
                                           ; SOURCE LINE # 1003
0072         ?C0230:
0072 7B00        R     MOV     R3,#MBYTE ?SC_4605
0074 7A00        R     MOV     R2,#HIGH ?SC_4605
0076 7900        R     MOV     R1,#LOW ?SC_4605
0078 802F              SJMP    ?C0298
                                           ; SOURCE LINE # 1004
007A         ?C0231:
007A 7B00        R     MOV     R3,#MBYTE ?SC_4611
007C 7A00        R     MOV     R2,#HIGH ?SC_4611
007E 7900        R     MOV     R1,#LOW ?SC_4611
0080         ?C0295:
0080 8027              SJMP    ?C0298
                                           ; SOURCE LINE # 1005
0082         ?C0232:
0082 7B00        R     MOV     R3,#MBYTE ?SC_4616
0084 7A00        R     MOV     R2,#HIGH ?SC_4616
0086 7900        R     MOV     R1,#LOW ?SC_4616
0088 110000      E     ACALL   _Puts
008B 90000000    R     MOV     DPTR,#cid
008F E0                MOVX    A,@DPTR
0090 B41819            CJNE    A,#018H,?C0229
0093 7B00        R     MOV     R3,#MBYTE ?SC_4621
0095 7A00        R     MOV     R2,#HIGH ?SC_4621
0097 7900        R     MOV     R1,#LOW ?SC_4621
0099         ?C0296:
0099 800E              SJMP    ?C0298
                                           ; SOURCE LINE # 1006
009B         ?C0234:
009B 7B00        R     MOV     R3,#MBYTE ?SC_4625
009D 7A00        R     MOV     R2,#HIGH ?SC_4625
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 80  

009F 7900        R     MOV     R1,#LOW ?SC_4625
00A1         ?C0297:
00A1 8006              SJMP    ?C0298
                                           ; SOURCE LINE # 1007
00A3         ?C0235:
00A3 7B00        R     MOV     R3,#MBYTE ?SC_4634
00A5 7A00        R     MOV     R2,#HIGH ?SC_4634
00A7 7900        R     MOV     R1,#LOW ?SC_4634
00A9         ?C0298:
00A9 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1008
00AC         ?C0229:
                                           ; SOURCE LINE # 1010
00AC 90000000    R     MOV     DPTR,#vid
00B0 E0                MOVX    A,@DPTR
00B1 FF                MOV     R7,A
00B2 64C2              XRL     A,#0C2H
00B4 6005              JZ      ?C0237
00B6 EF                MOV     A,R7
00B7 641C              XRL     A,#01CH
00B9 702E              JNZ     ?C0236
00BB         ?C0237:
                                           ; SOURCE LINE # 1012
00BB 110000      R     ACALL   L?0363
00BE 04                INC     A
                                           ; SOURCE LINE # 1013
00BF 110000      R     ACALL   L?0321
                                           ; SOURCE LINE # 1014
00C2 110000      R     ACALL   L?0353
00C5 24D0              ADD     A,#0D0H
00C7 110000      R     ACALL   L?0310
00CA 110000      R     ACALL   L?0406
                                           ; SOURCE LINE # 1015
00CD 7405              MOV     A,#05H
00CF 110000      R     ACALL   L?0337
00D2 F0                MOVX    @DPTR,A
00D3 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1016
00D6 90000000    E     MOV     DPTR,#SPI_CmdBuffer
00DA E0                MOVX    A,@DPTR
00DB 20E603            JB      ACC.6,$ + 6H
00DE 010000      R     AJMP    ?C0246
00E1 7B00        R     MOV     R3,#MBYTE ?SC_4666
00E3 7A00        R     MOV     R2,#HIGH ?SC_4666
00E5 7900        R     MOV     R1,#LOW ?SC_4666
                                           ; SOURCE LINE # 1017
00E7 8074              SJMP    ?C0299
00E9         ?C0236:
                                           ; SOURCE LINE # 1018
00E9 90000000    R     MOV     DPTR,#vid
00ED E0                MOVX    A,@DPTR
00EE 64EF              XRL     A,#0EFH
00F0 7056              JNZ     ?C0240
                                           ; SOURCE LINE # 1019
00F2 A3                INC     DPTR
00F3 E0                MOVX    A,@DPTR
00F4 6418              XRL     A,#018H
00F6 90000000    E     MOV     DPTR,#?_SpiFlash_DmaCmd?BYTE+04H
00FA 701E              JNZ     ?C0241
                                           ; SOURCE LINE # 1021
00FC F0                MOVX    @DPTR,A
00FD A3                INC     DPTR
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 81  

00FE 04                INC     A
00FF F0                MOVX    @DPTR,A
0100 E4                CLR     A
0101 A3                INC     DPTR
0102 F0                MOVX    @DPTR,A
0103 7F35              MOV     R7,#035H
                                           ; SOURCE LINE # 1022
0105 110000      R     ACALL   L?0334
                                           ; SOURCE LINE # 1023
0108 110000      R     ACALL   L?0353
010B 24D0              ADD     A,#0D0H
010D 110000      R     ACALL   L?0310
0110 110000      R     ACALL   L?0406
                                           ; SOURCE LINE # 1024
0113 7435              MOV     A,#035H
0115 110000      R     ACALL   L?0337
                                           ; SOURCE LINE # 1025
0118 802A              SJMP    ?C0294
011A         ?C0241:
                                           ; SOURCE LINE # 1026
                                           ; SOURCE LINE # 1028
011A E4                CLR     A
011B F0                MOVX    @DPTR,A
011C A3                INC     DPTR
011D 7402              MOV     A,#02H
                                           ; SOURCE LINE # 1029
011F 110000      R     ACALL   L?0321
                                           ; SOURCE LINE # 1030
                                           ; SOURCE LINE # 1031
0122 110000      R     ACALL   L?0307
0125 E0                MOVX    A,@DPTR
0126 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
012A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1032
012B 7B00        R     MOV     R3,#MBYTE ?SC_4680
012D 7A00        R     MOV     R2,#HIGH ?SC_4680
012F 7900        R     MOV     R1,#LOW ?SC_4680
0131 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0135 7405              MOV     A,#05H
0137 110000      R     ACALL   L?0338
013A F0                MOVX    @DPTR,A
013B 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
013F E0                MOVX    A,@DPTR
0140 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
0144         ?C0294:
0144 F0                MOVX    @DPTR,A
0145 010000      E     AJMP    _Printf
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
0148         ?C0240:
                                           ; SOURCE LINE # 1035
0148 90000000    R     MOV     DPTR,#vid
014C E0                MOVX    A,@DPTR
014D 6420              XRL     A,#020H
014F 7068              JNZ     ?C0246
                                           ; SOURCE LINE # 1036
0151 A3                INC     DPTR
0152 E0                MOVX    A,@DPTR
0153 6418              XRL     A,#018H
0155 6009              JZ      ?C0245
                                           ; SOURCE LINE # 1037
0157 7B00        R     MOV     R3,#MBYTE ?SC_4708
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 82  

0159 7A00        R     MOV     R2,#HIGH ?SC_4708
015B 7900        R     MOV     R1,#LOW ?SC_4708
015D         ?C0299:
015D 010000      E     AJMP    _Puts
                                           ; SOURCE LINE # 1039
0160         ?C0245:
                                           ; SOURCE LINE # 1042
0160 110000      R     ACALL   L?0363
0163 04                INC     A
0164 110000      R     ACALL   L?0375
0167 7F85              MOV     R7,#085H
                                           ; SOURCE LINE # 1043
0169 110000      R     ACALL   L?0403
                                           ; SOURCE LINE # 1044
016C 110000      R     ACALL   L?0354
016F 24D0              ADD     A,#0D0H
0171 110000      R     ACALL   L?0310
0174 110000      R     ACALL   L?0407
                                           ; SOURCE LINE # 1045
0177 7B00        R     MOV     R3,#MBYTE ?SC_4722
0179 7A00        R     MOV     R2,#HIGH ?SC_4722
017B 7900        R     MOV     R1,#LOW ?SC_4722
017D E0                MOVX    A,@DPTR
017E 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
0182 F0                MOVX    @DPTR,A
0183 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 1049
0186 110000      R     ACALL   L?0363
0189 7402              MOV     A,#02H
018B 110000      R     ACALL   L?0376
018E 7FB5              MOV     R7,#0B5H
                                           ; SOURCE LINE # 1050
0190 110000      R     ACALL   L?0403
                                           ; SOURCE LINE # 1051
                                           ; SOURCE LINE # 1052
0193 110000      R     ACALL   L?0308
0196 E0                MOVX    A,@DPTR
0197 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
019B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1053
019C 7B00        R     MOV     R3,#MBYTE ?SC_4748
019E 7A00        R     MOV     R2,#HIGH ?SC_4748
01A0 7900        R     MOV     R1,#LOW ?SC_4748
01A2 90000000    E     MOV     DPTR,#SPI_CmdBuffer
01A6 E0                MOVX    A,@DPTR
01A7 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
01AB F0                MOVX    @DPTR,A
01AC 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
01B0 E0                MOVX    A,@DPTR
01B1 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+04H
01B5 F0                MOVX    @DPTR,A
01B6 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 1054
                                           ; SOURCE LINE # 1055
01B9         ?C0246:
01B9 22                RET     
01BA         L?0321:
01BA F0                MOVX    @DPTR,A
01BB E4                CLR     A
01BC A3                INC     DPTR
01BD F0                MOVX    @DPTR,A
01BE 7BD0              MOV     R3,#0D0H
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 83  

01C0 7A04              MOV     R2,#04H
01C2 7D40              MOV     R5,#040H
01C4 7F05              MOV     R7,#05H
01C6 110000      E     ACALL   _SpiFlash_DmaCmd
01C9 7D0A              MOV     R5,#0AH
01CB 7F0A              MOV     R7,#0AH
01CD 110000      E     ACALL   _SpiFlash_wait_done
01D0 22                RET     
01D1         L?0334:
01D1 7BD0              MOV     R3,#0D0H
01D3 7A04              MOV     R2,#04H
01D5 7D40              MOV     R5,#040H
01D7 110000      E     ACALL   _SpiFlash_DmaCmd
01DA 7D0A              MOV     R5,#0AH
01DC 7F0A              MOV     R7,#0AH
01DE 110000      E     ACALL   _SpiFlash_wait_done
01E1 22                RET     
01E2         L?0403:
01E2 110000      E     ACALL   _SpiFlash_DmaCmd
01E5 7D0A              MOV     R5,#0AH
01E7 7F0A              MOV     R7,#0AH
01E9 110000      E     ACALL   _SpiFlash_wait_done
01EC 22                RET     
             ; FUNCTION SPI_Status (END)

             ; FUNCTION _SPI_dump (BEGIN)
                                           ; SOURCE LINE # 1061
0000 90000000    R     MOV     DPTR,#spiaddr
0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1062
                                           ; SOURCE LINE # 1063
0007 90000000    R     MOV     DPTR,#ptr
000B 7400        E     MOV     A,#MBYTE SPI_Buffer
000D F0                MOVX    @DPTR,A
000E A3                INC     DPTR
000F 110000      R     ACALL   L?0347
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1064
0013 E4                CLR     A
0014 7F80              MOV     R7,#080H
0016 FE                MOV     R6,A
0017 FD                MOV     R5,A
0018 FC                MOV     R4,A
0019 A3                INC     DPTR
001A 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1067
001D 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+04H
0021 110000      R     ACALL   L?0347
0024 F0                MOVX    @DPTR,A
0025 90000000    R     MOV     DPTR,#cnt
0029 A3                INC     DPTR
002A A3                INC     DPTR
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D A3                INC     DPTR
002E E0                MOVX    A,@DPTR
002F 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+06H
0033 CF                XCH     A,R7
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 EF                MOV     A,R7
0037 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 84  

0038 90000000    R     MOV     DPTR,#spiaddr
003C 110000      R     ACALL   L?0313
003F E0                MOVX    A,@DPTR
0040 FF                MOV     R7,A
0041 110000      E     ACALL   _SpiFlash_Read_XMem
                                           ; SOURCE LINE # 1070
0044 E4                CLR     A
0045 90000000    R     MOV     DPTR,#j
0049 F0                MOVX    @DPTR,A
004A         ?C0247:
                                           ; SOURCE LINE # 1071
004A 90000000    R     MOV     DPTR,#j
004E E0                MOVX    A,@DPTR
004F 75F010            MOV     B,#010H
0052 A4                MUL     AB
0053 FF                MOV     R7,A
0054 E4                CLR     A
0055 FC                MOV     R4,A
0056 FD                MOV     R5,A
0057 90000000    R     MOV     DPTR,#spiaddr
005B E0                MOVX    A,@DPTR
005C F8                MOV     R0,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F F9                MOV     R1,A
0060 A3                INC     DPTR
0061 E0                MOVX    A,@DPTR
0062 FA                MOV     R2,A
0063 A3                INC     DPTR
0064 E0                MOVX    A,@DPTR
0065 2F                ADD     A,R7
0066 FF                MOV     R7,A
0067 EA                MOV     A,R2
0068 35F0              ADDC    A,B
006A FE                MOV     R6,A
006B ED                MOV     A,R5
006C 39                ADDC    A,R1
006D FD                MOV     R5,A
006E EC                MOV     A,R4
006F 38                ADDC    A,R0
0070 FC                MOV     R4,A
0071 110000      R     ACALL   L?0341
0074 7B00        R     MOV     R3,#MBYTE ?SC_4785
0076 7A00        R     MOV     R2,#HIGH ?SC_4785
0078 7900        R     MOV     R1,#LOW ?SC_4785
007A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1072
007D E4                CLR     A
007E 90000000    R     MOV     DPTR,#i
0082 F0                MOVX    @DPTR,A
0083         ?C0250:
0083 90000000    R     MOV     DPTR,#i
0087 E0                MOVX    A,@DPTR
0088 FF                MOV     R7,A
0089 C3                CLR     C
008A 9408              SUBB    A,#08H
008C 500B              JNC     ?C0251
008E 110000      R     ACALL   L?0324
0091 110000      R     ACALL   L?0389
0094 E0                MOVX    A,@DPTR
0095 04                INC     A
0096 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 85  

0097 80EA              SJMP    ?C0250
0099         ?C0251:
                                           ; SOURCE LINE # 1073
0099 7B00        R     MOV     R3,#MBYTE ?SC_4799
009B 7A00        R     MOV     R2,#HIGH ?SC_4799
009D 7900        R     MOV     R1,#LOW ?SC_4799
009F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1074
00A2         ?C0253:
00A2 110000      R     ACALL   L?0408
00A5 500B              JNC     ?C0254
00A7 110000      R     ACALL   L?0324
00AA 110000      R     ACALL   L?0389
00AD E0                MOVX    A,@DPTR
00AE 04                INC     A
00AF F0                MOVX    @DPTR,A
00B0 80F0              SJMP    ?C0253
00B2         ?C0254:
                                           ; SOURCE LINE # 1075
00B2 7B00        R     MOV     R3,#MBYTE ?SC_4802
00B4 7A00        R     MOV     R2,#HIGH ?SC_4802
00B6 7900        R     MOV     R1,#LOW ?SC_4802
00B8 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1076
00BB E4                CLR     A
00BC 90000000    R     MOV     DPTR,#i
00C0 F0                MOVX    @DPTR,A
00C1         ?C0256:
00C1 110000      R     ACALL   L?0408
00C4 502F              JNC     ?C0249
                                           ; SOURCE LINE # 1077
00C6 110000      R     ACALL   L?0325
00C9 E0                MOVX    A,@DPTR
00CA FF                MOV     R7,A
;---- Variable 'c' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1078
00CB C3                CLR     C
00CC 9420              SUBB    A,#020H
00CE 4013              JC      ?C0259
00D0 EF                MOV     A,R7
00D1 9480              SUBB    A,#080H
00D3 500E              JNC     ?C0259
00D5 7B00        R     MOV     R3,#MBYTE ?SC_4805
00D7 7A00        R     MOV     R2,#HIGH ?SC_4805
00D9 7900        R     MOV     R1,#LOW ?SC_4805
00DB 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
00DF EF                MOV     A,R7
00E0 F0                MOVX    @DPTR,A
00E1 8006              SJMP    ?C0300
00E3         ?C0259:
                                           ; SOURCE LINE # 1079
00E3 7B00        R     MOV     R3,#MBYTE ?SC_4808
00E5 7A00        R     MOV     R2,#HIGH ?SC_4808
00E7 7900        R     MOV     R1,#LOW ?SC_4808
00E9         ?C0300:
00E9 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1080
00EC         ?C0258:
00EC 90000000    R     MOV     DPTR,#i
00F0 E0                MOVX    A,@DPTR
00F1 04                INC     A
00F2 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   MONITOR_SPI                                                       07/18/2018 10:44:46 PAGE 86  

00F3 80CC              SJMP    ?C0256
                                           ; SOURCE LINE # 1081
00F5         ?C0249:
00F5 90000000    R     MOV     DPTR,#j
00F9 E0                MOVX    A,@DPTR
00FA 04                INC     A
00FB F0                MOVX    @DPTR,A
00FC E0                MOVX    A,@DPTR
00FD C3                CLR     C
00FE 9408              SUBB    A,#08H
0100 5003              JNC     $ + 5H
0102 010000      R     AJMP    ?C0247
                                           ; SOURCE LINE # 1082
0105         ?C0261:
0105 22                RET     
0106         L?0389:
0106 E0                MOVX    A,@DPTR
0107 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
010B F0                MOVX    @DPTR,A
010C 110000      E     ACALL   _Printf
010F 90000000    R     MOV     DPTR,#i
0113 22                RET     
             ; FUNCTION _SPI_dump (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6432    ----
   CONSTANT SIZE    =   4810    ----
   XDATA SIZE       =     19      52
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
