C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE I2CSPI
OBJECT MODULE PLACED IN .\Output\I2cSpi.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE Source36\I2cSpi.c LARGE OMF2 ROM(D512K) OPTIMIZE(9,SPEED) REGFILE(.\Outp
                    -ut\TW8836B_EVB11.ORC) BROWSE INCDIR(SiI-SW;SiI-SW\HAL;SiI-SW\DEBUG;SiI-SW\CEC;.\Source36\LIB) DEFINE(EVB_11,nullFn=//) D
                    -EBUG CODE PRINT(.\List\I2cSpi.lst) TABS(2) OBJECT(.\Output\I2cSpi.obj)

line level    source

   1          /**
   2           * @file
   3           *  I2cSpi.c 
   4           * @author Brian Kang
   5           * @version 1.0
   6           * @section LICENSE
   7           *  Copyright (C) 2015~2015 Intersil Corporation
   8           * @section DESCRIPTION
   9           *  i2cspi dma.
  10           *  to support i2cspi, we needs two TW8836B board.
  11           *  And, this is for the master board.
  12           *  The master board uses i2c ports() to control the slave board.
  13           *  To upload the master board firmware, use ext_mcu_i2c() ports.
  14           *
  15           *  To save the slave's hex file, I am using 0x60000~0x7FFFF;(max 128K).
  16           *
  17           * @section DESCRIPTION
  18           *  - CPU : DP80390
  19           *  - Language: Keil C
  20           ******************************************************************************
  21           */
  22          /*
  23          Disclaimer: THIS INFORMATION IS PROVIDED 'AS-IS' FOR EVALUATION PURPOSES ONLY.  
  24          INTERSIL CORPORATION AND ITS SUBSIDIARIES ('INTERSIL') DISCLAIM ALL WARRANTIES, 
  25          INCLUDING WITHOUT LIMITATION FITNESS FOR A PARTICULAR PURPOSE AND MERCHANTABILITY.  
  26          Intersil provides evaluation platforms to help our customers to develop products. 
  27          However, factors beyond Intersil's control could significantly affect Intersil 
  28          product performance. 
  29          It remains the customers' responsibility to verify the actual system performance.
  30          */
  31          
  32          #include <intrins.h>
  33          #include "Config.h"
  34          #include "reg.h"
  35          #include "typedefs.h"
  36          #include "TW8836.h"
  37          
  38          #include "Global.h"
  39          #include "CPU.h"
  40          #include "Printf.h"
  41          #include "util.h"
  42          #include "Monitor.h"
  43          #include "I2C.h"
  44          #include "SPI.h"
  45          #include "I2cSpi.h"
  46          #include "main.h"
  47          #include "Debug.H"
  48          
  49          /*choose one of three.*/
  50          //#define UPLOAD_FROM_SLAVE
  51          #define UPLOAD_FROM_MASTER
  52          //#define UPLOAD_FROM_PATTERN
  53          
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 2   

  54          //#define USE_HW_RESET_PIN
  55          
  56          
  57          /* defines for customer codes.
  58          */
  59          #define uint32_t  DWORD
  60          #define uint16_t  WORD
  61          #define uint8_t   BYTE
  62          #define TW8836_ERR  BYTE
  63          #define FLASH_SIZE  0x400000  /*32Mbit=4MByte=0x400000 */
  64          
  65          #define FLASH_BLOCK_SIZE  0x10000 /* 64KBytes */
  66          #define FLASH_SECTOR_SIZE 0x1000  /* 4KBytes */
  67          #define XMEM_BUFF_START   0x700 /* */
  68          #define XMEM_BUFF_SIZE    128   /* */
  69          
  70          
  71          #define port_TW8836_reverse p1_6  /*pin114:GPIO60/INT13/P1.6/VD0*/
  72          #define port_TW8836_lock  p1_7  /*pin115:GPIO61/INT13/P1.7/VD1*/
  73          #define pin_TW8836_RESET  62    /*pin116:GPIO62/Gate0/P3.2/VD2*/
  74          #define pin_TW8836_MCU    63    /*pin117:GPIO63/Gate1/P3.3/VD3*/
  75          
  76          
  77          
  78          //BKTODO::Remove
  79          BYTE I2cSpiFlashDmaWait(BYTE wait)
  80          {
  81   1        BYTE i;
  82   1        BYTE vdata;
  83   1        volatile BYTE written;
  84   1      
  85   1        WriteI2C_8A(0xFF,0x04); 
  86   1        written = ReadI2C_8A(DMAREG_4F4) & 0x06;
  87   1        //REG4C4[0] is a self clear flag register.
  88   1        for(i=0; i < wait; i++) {
  89   2          vdata = ReadI2C_8A(DMAREG_4F4) & 0x07;
  90   2          if((vdata & 0x07) == written)
  91   2            return 0;
  92   2          delay1ms(10);
  93   2        }
  94   1        Printf("\n\rI2cSpiFlashDmaWait Busy.0x%bx",vdata);
  95   1        return 1; //fail:busy
  96   1      }
  97          
  98          /*
  99          dma_option: that was sent options without REG4F4[0].
 100          wait5ms: max wait loop. base 5ms
 101          return:
 102            if fail, max_wait
 103            if success, loop count
 104          If it failed, read REG4F4 and then print..
 105          */
 106          //BKTODO --remove
 107          BYTE I2cSpiFlashDmaWait_loop(BYTE dma_option, BYTE wait5ms)
 108          {
 109   1        BYTE i;
 110   1        volatile BYTE vdata;
 111   1        BYTE written;
 112   1      
 113   1        Printf("DMA wait:");
 114   1        WriteI2C_8A(0xFF,0x04); 
 115   1        written = ReadI2C_8A(DMAREG_4F4) & 0x16;
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 3   

 116   1        //REG4C4[0] is a self clear flag register.
 117   1        for(i=0; i < wait5ms; i++) {
 118   2          vdata = ReadI2C_8A(0xFF); //??is it work??
 119   2          Printf("%02bx:",vdata);
 120   2      
 121   2          vdata = ReadI2C_8A(DMAREG_4F4);
 122   2          Printf("%02bx ",vdata);
 123   2          if((vdata & 0x17) == dma_option) {
 124   3            Printf("==>Success\n");
 125   3            return i;
 126   3          }
 127   2          //delay1ms(5);
 128   2        }
 129   1        //Printf("\n\rI2cSpiFlashDmaWait_loop Busy. REG4F4:0x%bx",vdata);
 130   1        Printf("=>Fail\n");
 131   1        return i; //fail:busy
 132   1      }
 133          //#if 0
 134          //BYTE I2cSpiFlashDmaWait_CheckPage4(BYTE wait5ms)
 135          //{
 136          //  BYTE i;
 137          //  volatile BYTE vdata;
 138          //
 139          //  for(i=0; i < wait5ms; i++) {
 140          //    vdata = ReadI2C_8A(0xFF);
 141          //    if(vdata == 0x04)
 142          //      return i;
 143          //    delay1ms(5);
 144          //  }
 145          //  return i; //fail:busy
 146          //}
 147          //#endif
 148          
 149          #if 0
              BYTE I2cSpiFlash_Check_StatusRegister(WORD loop_count)
              {
                WORD i;
                BYTE bTemp;
                BYTE ret;
              
                WriteI2C_8A(0xFF,0x04); 
                WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) | 0x01); //CmdLen:1
                WriteI2C_8A(DMAREG_4F5, 0x00); //Len high
                WriteI2C_8A(DMAREG_4F6, 0x04); //pBuff high
                WriteI2C_8A(DMAREG_4F7, 0xD0); //pBuff low
                WriteI2C_8A(DMAREG_4F8, 0x00); //Len middle
                WriteI2C_8A(DMAREG_4F9, 0x01); //Len low
                WriteI2C_8A(DMAREG_4FA, SPICMD_RDSR); //Cmd
                Printf("CMD:%02x ",SPICMD_RDSR);
              
                for(i=0; i < loop_count; i++) {
                  WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_NONE);
                  ret = I2cSpiFlashDmaWait_loop(SPI_CMD_OPT_NONE, 40);
                  if(ret == 40) {
                    bTemp = ReadI2C_8A(DMAREG_4F4);
                    Printf("\n%d:DMA fail loop 200ms. REG4F4 was :%bx", i, 40, bTemp);
                  }
                  else {
                    //read status register value
                    bTemp = ReadI2C_8A(0xD0);
                    //Printf("\nRDSR:%bx",bTemp);
                    //check done flag in the status register.
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 4   

                    if((bTemp & 0x01) == 0) {
                      Printf("\n%bd:StatusRegister:%bx wait:%bd",i,bTemp, ret);
                      return 0;
                    }
                  }
                  delay1ms(5);
                }
                Printf("\nI2cSpiFlash_Check_StatusRegister FAIL");
                return 1;
              }
              #endif
 189          
 190          
 191          BYTE I2cSpiFlashDmaStart(BYTE dma_option, BYTE wait)
 192          {
 193   1        BYTE i;
 194   1        volatile BYTE vdata;
 195   1      
 196   1        // DMA-start
 197   1        WriteI2C_8A(0xFF,0x04);
 198   1        WriteI2C_8A(DMAREG_4F4, 0x01 | dma_option); 
 199   1      
 200   1        //wait a done flag
 201   1        if(wait) {
 202   2          //REG4C4[0] is a self clear flag register.
 203   2          for(i=0; i < wait; i++) {
 204   3            vdata = ReadI2C_8A(DMAREG_4F4);
 205   3            if((vdata & 0x01)==0)
 206   3              return 0;
 207   3            delay1ms(10);
 208   3          }
 209   2          ePrintf("\n\rSpiFlashDmaWait DMA Busy.");
 210   2          return 2; //fail:busy
 211   2        }
 212   1        return 0;
 213   1      }
 214          BYTE I2cSpiFlashChipRegCmd(BYTE cmd, BYTE cmd_buff_len, BYTE data_buff_len, BYTE dma_option, BYTE wait)
 215          {
 216   1        BYTE i;
 217   1        BYTE ret;
 218   1      
 219   1      #if 0
                if(cmd==SPICMD_PP 
                || cmd==SPICMD_READ_DUAL_O
                || cmd==SPICMD_READ_QUAD_O
                || cmd==SPICMD_READ_DUAL_IO
                || cmd==SPICMD_READ_QUAD_IO)
                  return SpiFlashXMemCmd(cmd,cmd_buff_len, data_buff_len, dma_option, wait);
              #endif
 227   1        
 228   1        WriteI2C_8A(0xFF,0x04);
 229   1        WriteI2C_8A(DMAREG_4F3,(DMA_DEST_CHIPREG << 6) | (1+cmd_buff_len)); //cmd+cmd_buff_len
 230   1        WriteI2C_8A(DMAREG_4F6, DMA_BUFF_REG_ADDR_PAGE);
 231   1        WriteI2C_8A(DMAREG_4F7, DMA_BUFF_REG_ADDR_INDEX);
 232   1      
 233   1        WriteI2C_8A(DMAREG_4F5, 0x00 );     // 0xDA or 0xF5 data Buff count high
 234   1        WriteI2C_8A(DMAREG_4F8, 0x00 );     // data Buff count middle
 235   1        WriteI2C_8A(DMAREG_4F9, data_buff_len); // data Buff count Lo
 236   1      
 237   1        WriteI2C_8A(DMAREG_4FA, cmd );              // cmd
 238   1      //#if 0
 239   1      //  for(i=0; i < cmd_buff_len; i++)             // & cmd buffer.
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 5   

 240   1      //    WriteI2C_8A(DMAREG_4FB+i, SPI_CmdBuffer[i]);    // normally address.
 241   1      //#else
 242   1        if(cmd_buff_len)
 243   1          WriteI2CS_8A(DMAREG_4FB,cmd_buff_len,SPI_CmdBuffer);
 244   1      //#endif
 245   1      
 246   1        //do you want to execute on vblank ?
 247   1        //if you use vblank too early, it makes system slower.
 248   1      //  if(vblank)
 249   1      //    WaitVBlank(vblank);
 250   1      
 251   1        //busy check  
 252   1        //we are using a default: CMD:05 busy bit:0 polarity:High(1 means, busy)
 253   1        //if micron 512, we need special handling
 254   1      
 255   1        ret=I2cSpiFlashDmaStart(dma_option,wait);
 256   1        //if(cmd==SPICMD_EX4B) SpiFlash4ByteAddr = 0;
 257   1        //if(cmd==SPICMD_EN4B) SpiFlash4ByteAddr = 1;
 258   1        if(ret) {
 259   2          return 0xFF;
 260   2        }
 261   1      
 262   1        //read
 263   1        for(i=0; i < data_buff_len; i++) 
 264   1          SPI_CmdBuffer[i] = ReadI2C_8A(0xD0+i);    
 265   1      
 266   1        return 0; //success
 267   1      
 268   1      }
 269          
 270          void I2cSpiFlashSetAddress2CmdBuffer(DWORD spiaddr)
 271          {
 272   1        //if(SpiFlash4ByteAddr) {
 273   1        //  SPI_CmdBuffer[0] = spiaddr >> 24;
 274   1        //  SPI_CmdBuffer[1] = spiaddr >> 16;
 275   1        //  SPI_CmdBuffer[2] = spiaddr >> 8;
 276   1        //  SPI_CmdBuffer[3] = spiaddr;
 277   1        //}
 278   1        //else 
 279   1        {
 280   2          SPI_CmdBuffer[0] = spiaddr >> 16;
 281   2          SPI_CmdBuffer[1] = spiaddr >> 8;
 282   2          SPI_CmdBuffer[2] = spiaddr;
 283   2        }
 284   1      }
 285          
 286          
 287          
 288          /*CRC16 (X^16 + X^12 + X^5 + 1) */
 289          CODE WORD crctab[256] = {
 290              0x0000,  0x1021,  0x2042,  0x3063,  0x4084,  0x50A5,  0x60C6,  0x70E7,
 291              0x8108,  0x9129,  0xA14A,  0xB16B,  0xC18C,  0xD1AD,  0xE1CE,  0xF1EF,
 292              0x1231,  0x0210,  0x3273,  0x2252,  0x52B5,  0x4294,  0x72F7,  0x62D6,
 293              0x9339,  0x8318,  0xB37B,  0xA35A,  0xD3BD,  0xC39C,  0xF3FF,  0xE3DE,
 294              0x2462,  0x3443,  0x0420,  0x1401,  0x64E6,  0x74C7,  0x44A4,  0x5485,
 295              0xA56A,  0xB54B,  0x8528,  0x9509,  0xE5EE,  0xF5CF,  0xC5AC,  0xD58D,
 296              0x3653,  0x2672,  0x1611,  0x0630,  0x76D7,  0x66F6,  0x5695,  0x46B4,
 297              0xB75B,  0xA77A,  0x9719,  0x8738,  0xF7DF,  0xE7FE,  0xD79D,  0xC7BC,
 298              0x48C4,  0x58E5,  0x6886,  0x78A7,  0x0840,  0x1861,  0x2802,  0x3823,
 299              0xC9CC,  0xD9ED,  0xE98E,  0xF9AF,  0x8948,  0x9969,  0xA90A,  0xB92B,
 300              0x5AF5,  0x4AD4,  0x7AB7,  0x6A96,  0x1A71,  0x0A50,  0x3A33,  0x2A12,
 301              0xDBFD,  0xCBDC,  0xFBBF,  0xEB9E,  0x9B79,  0x8B58,  0xBB3B,  0xAB1A,
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 6   

 302              0x6CA6,  0x7C87,  0x4CE4,  0x5CC5,  0x2C22,  0x3C03,  0x0C60,  0x1C41,
 303              0xEDAE,  0xFD8F,  0xCDEC,  0xDDCD,  0xAD2A,  0xBD0B,  0x8D68,  0x9D49,
 304              0x7E97,  0x6EB6,  0x5ED5,  0x4EF4,  0x3E13,  0x2E32,  0x1E51,  0x0E70,
 305              0xFF9F,  0xEFBE,  0xDFDD,  0xCFFC,  0xBF1B,  0xAF3A,  0x9F59,  0x8F78,
 306              0x9188,  0x81A9,  0xB1CA,  0xA1EB,  0xD10C,  0xC12D,  0xF14E,  0xE16F,
 307              0x1080,  0x00A1,  0x30C2,  0x20E3,  0x5004,  0x4025,  0x7046,  0x6067,
 308              0x83B9,  0x9398,  0xA3FB,  0xB3DA,  0xC33D,  0xD31C,  0xE37F,  0xF35E,
 309              0x02B1,  0x1290,  0x22F3,  0x32D2,  0x4235,  0x5214,  0x6277,  0x7256,
 310              0xB5EA,  0xA5CB,  0x95A8,  0x8589,  0xF56E,  0xE54F,  0xD52C,  0xC50D,
 311              0x34E2,  0x24C3,  0x14A0,  0x0481,  0x7466,  0x6447,  0x5424,  0x4405,
 312              0xA7DB,  0xB7FA,  0x8799,  0x97B8,  0xE75F,  0xF77E,  0xC71D,  0xD73C,
 313              0x26D3,  0x36F2,  0x0691,  0x16B0,  0x6657,  0x7676,  0x4615,  0x5634,
 314              0xD94C,  0xC96D,  0xF90E,  0xE92F,  0x99C8,  0x89E9,  0xB98A,  0xA9AB,
 315              0x5844,  0x4865,  0x7806,  0x6827,  0x18C0,  0x08E1,  0x3882,  0x28A3,
 316              0xCB7D,  0xDB5C,  0xEB3F,  0xFB1E,  0x8BF9,  0x9BD8,  0xABBB,  0xBB9A,
 317              0x4A75,  0x5A54,  0x6A37,  0x7A16,  0x0AF1,  0x1AD0,  0x2AB3,  0x3A92,
 318              0xFD2E,  0xED0F,  0xDD6C,  0xCD4D,  0xBDAA,  0xAD8B,  0x9DE8,  0x8DC9,
 319              0x7C26,  0x6C07,  0x5C64,  0x4C45,  0x3CA2,  0x2C83,  0x1CE0,  0x0CC1,
 320              0xEF1F,  0xFF3E,  0xCF5D,  0xDF7C,  0xAF9B,  0xBFBA,  0x8FD9,  0x9FF8,
 321              0x6E17,  0x7E36,  0x4E55,  0x5E74,  0x2E93,  0x3EB2,  0x0ED1,  0x1EF0
 322          };
 323          //#ifdef UPLOAD_FROM_SLAVE
 324          //#else
 325          WORD g_CRC;
 326          WORD local_crc;
 327          //#endif
 328          
 329          
 330          /*
 331            Use GPIO
 332          */
 333          #ifdef USE_HW_RESET_PIN
              
              #define IO_TW8836_RSTB      0x62
              #define IO_TW8836_SPIMCU_EN   0x63
              #define GPIO_LOW    0
              #define GPIO_HIGH   1
              #define GPIO_INPUT    0
              #define GPIO_OUTPUT   1
              //#if 0
              //BYTE TW_GPIO_PinEnable(BYTE gpio)
              //{
              //  BYTE group,number;
              //  BYTE bTemp;
              //
              //  group = gpio >>4;
              //  number = gpio & 0x0F;
              //  if((group > 7)
              //  || (number > 7)) {
              //    Printf("Invalid GPIO:%02bx", gpio);
              //    return 1;
              //  }
              //  bTemp = ReadTW88(REG080+group);
              //  bTemp |= (1 << number);
              //  WriteTW88(REG080+group, bTemp);
              //  return 0;
              //}
              //#endif
              void TW_GPIO_PinWrite(BYTE gpio, BYTE lowhigh)
              {
                BYTE group,number;
                BYTE bTemp;
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 7   

                BYTE mask;
              
                group = gpio >>4;
                number = gpio & 0x0F;
                mask = (1 << number);
              
                bTemp = ReadTW88(REG090+group);
                if(lowhigh) bTemp |= mask;
                else    bTemp &= ~mask;
                WriteTW88(REG090+group, bTemp);
              }
              
              void TW_GPIO_PinDataDirection(BYTE gpio, BYTE inoup)
              {
                BYTE group,number;
                BYTE bTemp;
                BYTE mask;
              
                group = gpio >>4;
                number = gpio & 0x0F;
                mask = (1 << number);
              
                bTemp = ReadTW88(REG088+group);
                if(inoup)   bTemp |= mask;
                else    bTemp &= ~mask;
                WriteTW88(REG088+group, bTemp);
              }
              
              void I2CSPI_reset_TW8836(BYTE fDisableMcu)
              {
                BYTE bTemp;
                Printf("Entering TW8836ResetMcu function. %bd\r\n",fDisableMcu);
                //BKTODO: I have two more PORT. those are used ..
                //USE #116. GPIO62/Gate0/P3.2/VD2 for IO_TW8836_RSTB.
                //    #117. GPIO63/Gate1/P3.3/VD3 for IO_TW8836_SPIMCU_EN.
                Puts("IO_TW8836_RSTB is GPIO62/Gate0/P3.2/VD2\r\n");
                Puts("IO_TW8836_SPIMCU_EN is GPIO63/Gate1/P3.3/VD3\r\n");
              
                bTemp = ReadTW88(REG086);
                Printf("REG086:%02bx ",ReadTW88(REG086));  //EnGPIO
                Printf("REG08E:%02bx ",ReadTW88(REG08E));  //EnOutput
                Printf("REG096:%02bx ",ReadTW88(REG096));  //Output
                Printf("REG09E:%02bx ",ReadTW88(REG09E));  //Input
                Puts("\r\n");
                //=================
                //default was
                //  TW_GPIO_PinDataDirection( IO_TW8836_RSTB, GPIO_OUTPUT );
                //  TW_GPIO_PinDataDirection( IO_TW8836_SPIMCU_EN, GPIO_INPUT ); 
              
                if(fDisableMcu) {
                  TW_GPIO_PinWrite( IO_TW8836_RSTB, GPIO_LOW ); 
                  TW_GPIO_PinWrite( IO_TW8836_SPIMCU_EN, GPIO_LOW );
                  TW_GPIO_PinDataDirection( IO_TW8836_SPIMCU_EN, GPIO_OUTPUT );
                  delay1ms(500);  
                  TW_GPIO_PinWrite( IO_TW8836_RSTB, GPIO_HIGH );
                    delay1ms(500); //for LVR
                  TW_GPIO_PinWrite( IO_TW8836_SPIMCU_EN, GPIO_HIGH );
                  TW_GPIO_PinDataDirection( IO_TW8836_SPIMCU_EN, GPIO_INPUT );  
                }
                else {
                  TW_GPIO_PinWrite( IO_TW8836_RSTB, GPIO_LOW ); 
                  delay1ms(500);
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 8   

                  TW_GPIO_PinWrite( IO_TW8836_RSTB, GPIO_HIGH );
                    delay1ms(500);  //for LVR
                }
              }
              BYTE I2CSPI_init_port(void)
              {
                //Use GPIO62,GPIO63.
                //clear
                WriteTW88(REG080+6, 0x00); //En
                WriteTW88(REG090+6, 0x00); //OUT Data
                WriteTW88(REG088+6, 0x00); //En.Output
                //set default
                WriteTW88(REG080+6, 0x0C); //En
                WriteTW88(REG090+6, 0x0C); //OUT Data
                WriteTW88(REG088+6, 0x04); //En.Output
              
                return 0;
              }
              #else //..USE_HW_RESET_PIN
 445          
 446          BYTE I2CSPI_mcu_halt_rerun(BYTE fHalt)
 447          {
 448   1        BYTE i,bTemp;
 449   1      
 450   1        WriteI2C_8A(0xFF,0x04);
 451   1        WriteI2C_8A(0xED,0x55);
 452   1        WriteI2C_8A(0xED,0xAA);
 453   1        if(fHalt==0) {
 454   2          /* rerun MCU */ 
 455   2          WriteI2C_8A(0xEC,0x01);
 456   2          return 0;
 457   2        }
 458   1        /* halt MCU */
 459   1        WriteI2C_8A(0xEC,0x00);
 460   1        
 461   1        /* wait max 500ms*/
 462   1        WriteI2C_8A(0xFF,0x04);    
 463   1        for(i=0; i < 100; i++) {
 464   2          bTemp = ReadI2C_8A(0xC4);
 465   2          if((bTemp & 0x80)==0)
 466   2            return 0;
 467   2          delay1ms(5);
 468   2        }
 469   1        return 1; /* fail */
 470   1      }
 471          #endif //.. USE_HW_RESET_PIN
 472          
 473          
 474          /* Note: Do not enable xmem access on SPIDMA */
 475          
 476          BYTE I2CSPI_enable_xmem_access(void)
 477          {
 478   1        volatile BYTE bTemp;
 479   1        BYTE i;
 480   1      
 481   1        /*enable XMEM access */
 482   1        WriteI2C_8A(0xFF,0x04);
 483   1        bTemp = ReadI2C_8A(0xC2);
 484   1        WriteI2C_8A(0xC2, bTemp | 0x01);
 485   1        //wait.....
 486   1        for(i=0; i < 100; i++) {
 487   2          bTemp = ReadI2C_8A(0xC2);
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 9   

 488   2          if(bTemp & 0x02)
 489   2            break;
 490   2          delay1ms(10);
 491   2        }
 492   1        if(i==100)
 493   1          return 1;
 494   1        return 0;
 495   1      }
 496          BYTE I2CSPI_disable_xmem_access(void)
 497          {
 498   1        volatile BYTE bTemp;
 499   1        BYTE i;
 500   1      
 501   1        WriteI2C_8A(0xFF,0x04);
 502   1        bTemp = ReadI2C_8A(0xC2);
 503   1        WriteI2C_8A(0xC2, bTemp & ~0x01);
 504   1        //wait.....
 505   1        for(i=0; i < 100; i++) {
 506   2          bTemp = ReadI2C_8A(0xC2);
 507   2          if((bTemp & 0x02)==0)
 508   2            break;
 509   2          delay1ms(10);
 510   2        }
 511   1        if(i==100)
 512   1          return 1;
 513   1        return 0;
 514   1      }
 515          
 516          
 517          /* 
 518           I recommand to use pull-up register for pin_TW8836_MCU.
 519          */
 520          #if 0
              BYTE I2CSPI_hw_reset_TW8836(BYTE disable_mcu)
              {
              #if 0 
                if(disable_mcu) {
                  pin_TW8836_MCU = 0;
                  GPIO_DIR(pin_TW8836_MCU, OUTPUT);
                }
                else {  
                  /* if your GPIO was INPUT, and pull-up reg, we don't need to control */     
                  pin_TW8836_MCU = 1;
                }
                pin_TW8836_RESET =0;
                delay1ms(500);
                pin_TW8836_RESET =1;
                delay1ms(120); /* for LVR */
                if(disable_mcu) {
                  pin_TW8836_MCU = 1;
                  GPIO_DIR(pin_TW8836_MCU, INPUT);
                  /* it becomes tri-state, and pull-up will pull it up */
                }
              #else
                BYTE bTemp;
                bTemp = disable_mcu;
              #endif
                return 0;
              }
              #endif
 548          
 549          #if 0
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 10  

              BYTE I2CSPI_sw_reset_TW8836(BYTE option)
              {
                /* check clock first */
              
                if(option) {
                  /* use tricky LVR */
                }
                return 0;
              }
              #endif
 560          
 561          /*!
 562          * dump DMA related register
 563          * If you have a bug, execute it to debug.
 564          */
 565          void I2CSPI_dump_DmaReg(BYTE option)
 566          {
 567   1        BYTE i;
 568   1        BYTE bTemp;
 569   1        WORD wTemp;
 570   1        DWORD dTemp;
 571   1      
 572   1        WriteI2C_8A(0xFF,0x04);
 573   1        bTemp = ReadI2C_8A(DMAREG_4F3) & 0x0F;
 574   1        Puts("Cmd:");
 575   1        for(i=0; i < bTemp; i++) {
 576   2          Printf(" %02bx", ReadI2C_8A(DMAREG_4FA));
 577   2        }
 578   1        Printf(" Option:%02bx", option);
 579   1      
 580   1        dTemp =ReadI2C_8A(DMAREG_4F5);  dTemp <<= 8;
 581   1        dTemp |=ReadI2C_8A(DMAREG_4F8); dTemp <<= 8;
 582   1        dTemp |=ReadI2C_8A(DMAREG_4F9);
 583   1        if(dTemp) {
 584   2          Printf(" BuffLen:%lx",dTemp);
 585   2      
 586   2          bTemp = ReadI2C_8A(DMAREG_4F4);
 587   2          if(bTemp & 0x02) Puts(" W");
 588   2          else             Puts(" R");
 589   2        
 590   2          bTemp = ReadI2C_8A(DMAREG_4F3);
 591   2          switch(bTemp >> 6) {
 592   3          case 0: Puts(" FontRam"); break;
 593   3          case 1: Puts(" ChipReg"); break;
 594   3          case 2: Puts(" SpiOSDLut"); break;
 595   3          default: Puts(" XRam"); break;
 596   3          }
 597   2          bTemp &= 0x30;
 598   2          bTemp >>= 4;
 599   2          switch(bTemp) {
 600   3          case 0: Puts(" Inc"); break;
 601   3          case 1: Puts(" Dec"); break;
 602   3          case 2: Puts(" Fix"); break;
 603   3          default: Puts(" Wrong"); break;
 604   3          }   
 605   2          wTemp = ReadI2C_8A(DMAREG_4F6); wTemp <<= 8;
 606   2          wTemp = ReadI2C_8A(DMAREG_4F7);
 607   2          Printf(" pBuff:%x",wTemp);
 608   2        }
 609   1        bTemp = ReadI2C_8A(DMAREG_4F4);
 610   1        if(bTemp & 0x10)
 611   1          Puts(" AutoBusy");
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 11  

 612   1        if(bTemp & 0x04) {
 613   2          Puts(" BusyCheck");
 614   2          bTemp = ReadI2C_8A(DMAREG_4D8);
 615   2          Printf(" BusyCmd:%02bx", bTemp);
 616   2          bTemp = ReadI2C_8A(DMAREG_4D9);
 617   2          Puts(" Pol:");
 618   2          if(bTemp & 0x08) Puts("low");
 619   2          else             Puts("high");
 620   2          Printf(" Bit:%bd", bTemp & 0x07);
 621   2        }
 622   1      }
 623          
 624          /*!
 625          * Check REG4F4[0] register.
 626          * It is DMA start command and it a self clear flag.
 627          * If it is cleared, it means the DMA command is accepted.
 628          * If we using erase / pp commands,
 629          * we have to read the status register from SpiFlash to check the BUSY bit.
 630          * If we using REG4F4[2], with erase / pp commands,
 631          *  TW8836B will clear REG4F4[0] when it receives the erase / pp commands
 632          *  and, keep checks the status register with REG4D8 and REG4D9.
 633          * If you did not wait, and try to use the other DMA command,
 634          *  this new DMA command will be blocked until the BUSY bit is cleared.
 635          *
 636          * method1:
 637          * do erase/pp without REG4F4[2].
 638          *   read status register with SPICMD_RDSR until the BUSY bit is cleared.
 639          *
 640          * method2:
 641          * do erase/pp with REG4F4[2], and REG4D8,REG4D9.
 642          * executes SPICMD_RDSR. or SPICMD_WRDI
 643          * In this case, we do not need to compare the BUSY bit.
 644          *   We only need to check REG4F4[0] with a enough big wait value.
 645          *   This method looks strange but it is more faster then method1.
 646          *
 647          * Sector Erase(SE) needs 100~400ms
 648          * Block Erase(BE) needs 120~1600mS
 649          *
 650          * If SE, use (,50,10,0) to wait 500mS
 651          * If BE, use (,200,10,0) to wait 2000mS
 652          */
 653          WORD I2CSPI_IsCmdAccepted(BYTE option, WORD loop, BYTE delay, BYTE debug)
 654          {
 655   1        WORD i;
 656   1        volatile BYTE vdata;
 657   1      
 658   1        if(debug)
 659   1          Puts("\n");
 660   1      
 661   1        WriteI2C_8A(0xFF,0x04); 
 662   1        for(i=0; i < loop; i++) {   
 663   2          if(debug) {
 664   3            vdata = ReadI2C_8A(0xFF); //??
 665   3            Printf("%02bx:",vdata);
 666   3          }
 667   2          vdata = ReadI2C_8A(DMAREG_4F4);
 668   2          if(debug)
 669   2            Printf("%02bx ",vdata);
 670   2      
 671   2          if((vdata & 0x17) == option)
 672   2            return i;
 673   2      
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 12  

 674   2          if(delay)
 675   2            delay1ms((WORD)delay);
 676   2        }
 677   1        if(debug)
 678   1          I2CSPI_dump_DmaReg(option);
 679   1        return loop;  //fail:busy
 680   1      }
 681          
 682          
 683          BYTE I2CSPI_write_enable(void)
 684          {
 685   1        WORD wRet;
 686   1      
 687   1        WriteI2C_8A(0xFF,0x04);
 688   1        WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) | 0x01); //cmd len:1
 689   1        WriteI2C_8A(DMAREG_4F5, 0); //length high
 690   1        WriteI2C_8A(DMAREG_4F8, 0); //length middle
 691   1        WriteI2C_8A(DMAREG_4F9, 0); //length low
 692   1        WriteI2C_8A(DMAREG_4FA, SPICMD_WREN);
 693   1        WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_NONE); 
 694   1      #if 1  //BKFYI: it was always 0.
 695   1        wRet=I2CSPI_IsCmdAccepted(SPI_CMD_OPT_NONE, 50,0, OFF); //loop:50 delay:0ms
 696   1        if(wRet==50) {
 697   2          Puts("\nWREN fail");
 698   2          return 1;
 699   2        }
 700   1      #endif
 701   1        return 0;
 702   1      }
 703          /* called within SE,BE, or PP */
 704          /* return 0:success, 1:Fail
 705            the status register value will be placed at REG4D0
 706          */
 707          BYTE I2CSPI_read_status_reg(WORD loop, BYTE base)
 708          {
 709   1        WORD wRet;
 710   1      
 711   1        WriteI2C_8A(0xFF, 4);
 712   1        WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) | 0x01);  //Cmd len:1
 713   1        WriteI2C_8A(DMAREG_4F5, 0x00);  //length high
 714   1        WriteI2C_8A(DMAREG_4F6, 0x04);  //pBuff high
 715   1        WriteI2C_8A(DMAREG_4F7, 0xD0);  //pBuff low
 716   1        WriteI2C_8A(DMAREG_4F8, 0x00);  //length middle
 717   1        WriteI2C_8A(DMAREG_4F9, 0x01);  //length low
 718   1        WriteI2C_8A(DMAREG_4FA, SPICMD_RDSR);
 719   1        WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_NONE);
 720   1      
 721   1        wRet=I2CSPI_IsCmdAccepted(SPI_CMD_OPT_NONE, loop, base, OFF); //loop:20 unit:10ms
 722   1        if(wRet==loop) {
 723   2          dPrintf("\nSPICMD_RDSR fail. increase loop:%d base:%bd",loop,base);
 724   2          return 1;
 725   2        }
 726   1      //good0 dPrintf("\nSPICMD_RDSR use %dx%bdms", wRet, base);
 727   1        return 0;
 728   1      }
 729          
 730          BYTE I2CSPI_check_status_reg(void)
 731          {
 732   1        BYTE i;
 733   1        volatile BYTE bTemp,ret;
 734   1      
 735   1        for(i=0; i < 10; i++) {
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 13  

 736   2          ret=I2CSPI_read_status_reg(100,10);
 737   2          if(ret==0) {
 738   3            WriteI2C_8A(0xFF, 4);
 739   3            bTemp = ReadI2C_8A(0xD0);
 740   3            if((bTemp & 0x01)==0)
 741   3              return 0;
 742   3          }
 743   2          delay1ms(50);
 744   2        }
 745   1        return 1; //fail
 746   1      }
 747          
 748          
 749          BYTE I2CSPI_sector_erase(DWORD spi_addr)
 750          {
 751   1        BYTE ret;
 752   1      
 753   1        dPrintf("SE %07lx",spi_addr);
 754   1        I2CSPI_write_enable();
 755   1      
 756   1        WriteI2C_8A(0xFF,0x04);
 757   1        WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) +4);  //Cmd Len:1+3
 758   1        WriteI2C_8A(DMAREG_4F5, 0); //length high
 759   1        WriteI2C_8A(DMAREG_4F8, 0); //length middle
 760   1        WriteI2C_8A(DMAREG_4F9, 0); //length low
 761   1        WriteI2C_8A(DMAREG_4FA, SPICMD_SE);
 762   1        WriteI2C_8A(DMAREG_4FB, (BYTE)(spi_addr>>16));
 763   1        WriteI2C_8A(DMAREG_4FC, (BYTE)(spi_addr>>8));
 764   1        WriteI2C_8A(DMAREG_4FD, (BYTE)spi_addr);
 765   1        WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_WRITE_BUSY);
 766   1      #if 1 //BKFYI:It alwasy 0.
 767   1        ret=I2CSPI_IsCmdAccepted(SPI_CMD_OPT_WRITE_BUSY, 20,0, ON);
 768   1        if(ret==20) {
 769   2          Puts("\nSE fail");
 770   2          return 1;
 771   2        }
 772   1      #endif
 773   1        /* SE with BUSY needs a command to check the done action */
 774   1        /* BKFYI:it use 200ms on Micron */
 775   1        ret=I2CSPI_read_status_reg(100,10); /*250~800msec*/
 776   1        if(ret) {
 777   2          Puts(" RDSR fail on SE");
 778   2          return 1;
 779   2        }
 780   1        return 0;
 781   1      }
 782          
 783          BYTE I2CSPI_block_erase(DWORD spi_addr)
 784          {
 785   1        BYTE ret;
 786   1      
 787   1        dPrintf("BE %07lx",spi_addr);
 788   1        I2CSPI_write_enable();
 789   1      
 790   1        WriteI2C_8A(0xFF,0x04);
 791   1        WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) +4);  //Cmd Len:1+3
 792   1        WriteI2C_8A(DMAREG_4F5, 0); //length high
 793   1        WriteI2C_8A(DMAREG_4F8, 0); //length middle
 794   1        WriteI2C_8A(DMAREG_4F9, 0); //length low
 795   1        WriteI2C_8A(DMAREG_4FA, SPICMD_BE);
 796   1        WriteI2C_8A(DMAREG_4FB, (BYTE)(spi_addr>>16));
 797   1        WriteI2C_8A(DMAREG_4FC, (BYTE)(spi_addr>>8));
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 14  

 798   1        WriteI2C_8A(DMAREG_4FD, (BYTE)spi_addr);
 799   1        WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_WRITE_BUSY);
 800   1      #if 1
 801   1        ret=I2CSPI_IsCmdAccepted( SPI_CMD_OPT_WRITE_BUSY, 20,0, ON);
 802   1        if(ret==20) {
 803   2          Puts("\nBE fail");
 804   2          return 1;
 805   2        }
 806   1      #endif
 807   1        /* BE with BUSY needs a command to check the done action */
 808   1        /* BKFYI:it use 620ms on Micron */
 809   1        ret=I2CSPI_read_status_reg(300,10); /*750~3000msec*/
 810   1        if(ret) {
 811   2          Puts(" RDSR fail on BE");
 812   2          return 1;
 813   2        }
 814   1        return 0;
 815   1      }
 816          
 817          #ifdef UPLOAD_FROM_SLAVE
              /* from slave SPIFLASH to slave XMEM address 0*/
              /* max XMEM is 2K=0x800 */
              BYTE I2CSPI_download_slave_to_xmem(DWORD spiaddr, WORD length)
              {
                WORD wRet;
              
                WriteI2C_8A(0xFF,0x04);
                WriteI2C_8A(DMAREG_4F3, (DMA_DEST_MCU_XMEM << 6) +4); //XMEM,Increase,len:1+3
                WriteI2C_8A(DMAREG_4F6, 0x00);  //XMEM start 0
                WriteI2C_8A(DMAREG_4F7, 0x00);
                WriteI2C_8A(DMAREG_4F5, (BYTE)(length>>16));
                WriteI2C_8A(DMAREG_4F8, (BYTE)(length>>8));
                WriteI2C_8A(DMAREG_4F9, (BYTE)length);
                WriteI2C_8A(DMAREG_4FA, SPICMD_READ_SLOW);
                WriteI2C_8A(DMAREG_4FB, (BYTE)(spiaddr>>16));
                WriteI2C_8A(DMAREG_4FC, (BYTE)(spiaddr>>8));
                WriteI2C_8A(DMAREG_4FD, (BYTE)spiaddr);
                WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_BUSY);  /* TODO: READ not need BUSY */
                ret=I2CSPI_IsCmdAccepted(SPI_CMD_OPT_BUSY, 200,10, ON); //loop:20 unit:10ms
                if(ret==200) {
                  Puts("\nREAD_SLOW fail");
                  return 1;
                }
                //dPrintf("\nSPICMD_READ_SLOW 0x%x use %bdx10ms",length, ret);
                dPrintf("\n0x%06lx 0x%x bytes use %dx10ms",spiaddr, length, wRet);
              
                return 0;
              }
              #endif
 847          
 848          #if 0
              /* FROM master SPIFLASH */
              BYTE Master_DmaWait(BYTE dma_option, BYTE loop, WORD unit)
              {
                BYTE i;
                volatile BYTE vdata;
              
                //REG4C4[0] is a self clear flag register.
                for(i=0; i < loop; i++) {
                  vdata = ReadTW88(REG4F4);
                  if((vdata & 0x17) == dma_option)
                    return i;
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 15  

                  delay1ms(unit);
                }
                return i; //fail:busy
              }
              #endif
 865          
 866          #ifdef UPLOAD_FROM_MASTER
 867          BYTE I2CSPI_download_master_to_xmem(DWORD spiaddr, WORD length)
 868          {
 869   1        BYTE ret;
 870   1        WORD i;
 871   1        BYTE *p = &SPI_Buffer[0];
 872   1        BYTE bTemp;
 873   1      
 874   1      
 875   1        if(length > 128) {
 876   2          Puts("\n!!I only have 128...you are killing me!!");
 877   2        }
 878   1        SpiFlash_Read_XMem(spiaddr, (WORD)SPI_Buffer, length);
 879   1        //SpiFlashDmaRead2XMem(SPI_Buffer,spiaddr,length, SPIFLASH_WAIT_READ);
 880   1        dPrintf("\n0x%06lx 0x%x bytes use %bdx10ms",spiaddr, length, ret);
 881   1      
 882   1        /* send to slaver's xmdm */
 883   1        ret=I2CSPI_enable_xmem_access();
 884   1        if(ret) {
 885   2          Puts("Fail En XMEM");
 886   2          return 1;
 887   2        }
 888   1      
 889   1        /* start from 0 */
 890   1        WriteI2C_8A(0xFF,0x04);
 891   1        WriteI2C_8A(0xDB,0x00);
 892   1        WriteI2C_8A(0xDC,0x00);
 893   1        for(i=0; i <length; i++) {
 894   2          bTemp = *p++;
 895   2          WriteI2C_8A(0xDD, bTemp);
 896   2          g_CRC = (g_CRC << 8) ^ crctab[(g_CRC >>8) ^ bTemp];
 897   2          local_crc = (local_crc << 8) ^ crctab[(local_crc >>8) ^ bTemp];
 898   2        }
 899   1      
 900   1        I2CSPI_disable_xmem_access();
 901   1      
 902   1        return 0;
 903   1      }
 904          #endif
 905          
 906          
 907          //#ifdef UPLOAD_FROM_PATTERN
 908          //void I2CSPI_prepare_pattern(void)
 909          //{
 910          //  BYTE *p = &SPI_Buffer[0];
 911          //  BYTE i;
 912          //  for(i=0; i < 128; i++) {
 913          //    *p++ = i;
 914          //  }
 915          //}
 916          //
 917          //BYTE I2CSPI_download_pattern_to_xmem(DWORD spiaddr, WORD length, BYTE *p)
 918          //{
 919          //  BYTE ret;
 920          //  WORD i;
 921          //  //BYTE *p = &SPI_Buffer[0];
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 16  

 922          //  BYTE bTemp;
 923          //
 924          //  dPrintf("\n0x%06lx 0x%x bytes use %bdx10ms",spiaddr, length, ret);
 925          //
 926          //  /* send to slaver's xmdm */
 927          //  ret=I2CSPI_enable_xmem_access();
 928          //  if(ret) {
 929          //    Puts("Fail En XEMD");
 930          //    return 1;
 931          //  }
 932          //
 933          //  /* start from 0 */
 934          //  WriteI2C_8A(0xFF,0x04);
 935          //  WriteI2C_8A(0xDB,0x00);
 936          //  WriteI2C_8A(0xDC,0x00);
 937          //  for(i=0; i <length; i++) {
 938          //    bTemp = *p++;
 939          //    WriteI2C_8A(0xDD, bTemp);
 940          //    g_CRC = (g_CRC << 8) ^ crctab[(g_CRC >>8) ^ bTemp];
 941          //  }
 942          //  
 943          //  I2CSPI_disable_xmem_access();
 944          // 
 945          //  return 0;
 946          //}
 947          //#endif
 948          
 949          /* Page is 256 byte */
 950          BYTE I2CSPI_upload_from_xmem(DWORD spiaddr, WORD length)
 951          {
 952   1        BYTE ret;
 953   1      
 954   1        I2CSPI_write_enable();
 955   1      
 956   1        //PP
 957   1        WriteI2C_8A(0xFF,0x04);
 958   1        WriteI2C_8A(DMAREG_4F3, (DMA_DEST_MCU_XMEM << 6) +4); //XMEM,Increase,len:1+3
 959   1        WriteI2C_8A(DMAREG_4F6, 0x00);  //XMEM start 0
 960   1        WriteI2C_8A(DMAREG_4F7, 0x00);
 961   1        WriteI2C_8A(DMAREG_4F5, 0x00); /* page is 256 bytes */
 962   1        WriteI2C_8A(DMAREG_4F8, (BYTE)(length>>8));
 963   1        WriteI2C_8A(DMAREG_4F9, (BYTE)length);
 964   1        WriteI2C_8A(DMAREG_4FA, SPICMD_PP);
 965   1        WriteI2C_8A(DMAREG_4FB, (BYTE)(spiaddr>>16));
 966   1        WriteI2C_8A(DMAREG_4FC, (BYTE)(spiaddr>>8));
 967   1        WriteI2C_8A(DMAREG_4FD, (BYTE)spiaddr);
 968   1        WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_WRITE_BUSY);
 969   1        ret=I2CSPI_IsCmdAccepted(SPI_CMD_OPT_WRITE_BUSY, 20,0, OFF); //loop:20 unit:10ms
 970   1        if(ret==20) {
 971   2          Puts("\nSPICMD_PP fail ");
 972   2          return 1;
 973   2        }
 974   1        //dPrintf("\nSPICMD_PP 0x%x use %dx10ms",length, wRet);
 975   1      
 976   1        ret=I2CSPI_read_status_reg(5,10); /*0.5~5msec*/
 977   1        if(ret) {
 978   2          Puts(" RDSR fail");
 979   2          return 1;
 980   2        }
 981   1        return 0;
 982   1      }
 983          
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 17  

 984          
 985          #ifdef UPLOAD_FROM_SLAVE
              WORD I2CSPI_prepare_crc(WORD crc, WORD data_size)
              {
                WORD crc_calc = crc;
                WORD i;
                BYTE value;
                //BYTE bTemp;
                BYTE ret;
                
                //enable XMEM access
                ret = I2CSPI_enable_xmem_access();
                if(ret) {
                  Puts(" !!status error!!");
                  return 0xDEAD;
                }
              
                /* start from 0 */
                WriteI2C_8A(0xFF,0x04);
                WriteI2C_8A(0xDB,0x00);
                WriteI2C_8A(0xDC,0x00);
              
                WriteI2C_8A(0xFF,0x04);
                for(i=0; i < data_size; i++) {
                  value = ReadI2C_8A(0xDD);
                  crc_calc = (crc_calc << 8) ^ crctab[(crc_calc >>8) ^ value];
                }
                //disable XMEM access
                I2CSPI_disable_xmem_access();
              
                return crc_calc;
              }
              #endif
1017          
1018          BYTE I2CSPI_check_crc(DWORD spiaddr, DWORD length,  BYTE loop, WORD crc)
1019          {
1020   1        WORD readed;
1021   1        BYTE ret;
1022   1        //WORD unit;
1023   1        dPrintf("\ncheck_crc 0x%06lx size:0x%lx loop:%bd",spiaddr, length, loop);
1024   1      
1025   1        WriteI2C_8A(0xFF,0x04);
1026   1        WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) + 0x20+ 4); //Reg,Fix,len:1+3
1027   1        WriteI2C_8A(DMAREG_4F6, 0x04);  //Reg Buffer
1028   1        WriteI2C_8A(DMAREG_4F7, 0xD0);
1029   1        WriteI2C_8A(DMAREG_4F5, (BYTE)(length>>16));
1030   1        WriteI2C_8A(DMAREG_4F8, (BYTE)(length>>8));
1031   1        WriteI2C_8A(DMAREG_4F9, (BYTE)length);
1032   1        WriteI2C_8A(DMAREG_4FA, SPICMD_READ_SLOW);
1033   1        WriteI2C_8A(DMAREG_4FB, (BYTE)(spiaddr>>16));
1034   1        WriteI2C_8A(DMAREG_4FC, (BYTE)(spiaddr>>8));
1035   1        WriteI2C_8A(DMAREG_4FD, (BYTE)spiaddr);
1036   1        WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_NONE);
1037   1      
1038   1        ret=I2CSPI_IsCmdAccepted(SPI_CMD_OPT_NONE, loop,10, ON); //loop:20 unit:10ms
1039   1        if(ret==loop) {
1040   2          Printf("increase loop was %d",loop);
1041   2          return 1;    
1042   2        }
1043   1        //dPrintf("\nSPICMD_READ_SLOW 0x%x use %bdx10ms",length, ret);
1044   1      
1045   1        WriteI2C_8A(0xFF,0x04);
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 18  

1046   1        readed =  ReadI2C_8A(0xEE);
1047   1        readed <<= 8;
1048   1        readed |=  ReadI2C_8A(0xEF);
1049   1        if(crc != readed) {
1050   2          Printf("\nCRC %04x->%04x ", crc, readed);
1051   2          return 1;
1052   2        }
1053   1        return 0;
1054   1      }
1055          
1056          DWORD I2CSPI_get_SPICLK(BYTE pllclk)
1057          {
1058   1        DWORD pll, clock;
1059   1        BYTE bTemp;
1060   1      
1061   1        if(pllclk == 0) {
1062   2          WriteI2C_8A(0xFF, 0);
1063   2          pll = ReadI2C_8A(0x0F8)&0x0F;
1064   2          pll <<=8;
1065   2          pll |= ReadI2C_8A(0xF9);
1066   2          pll <<=8;
1067   2          pll |= ReadI2C_8A(0xFA);
1068   2          //------------
1069   2          pll >>= 6;
1070   2          pll *= 421875;
1071   2          pll >>= 3;
1072   2          /*read post divider */
1073   2          bTemp = ReadI2C_8A(0xFD);
1074   2          bTemp &= 0xC0;
1075   2          bTemp >>=6;
1076   2          pll >>= bTemp;
1077   2        }
1078   1        else {
1079   2          pll = 108000000L; /* 0x020000 */
1080   2        }
1081   1        /*read pllclk divider */
1082   1        WriteI2C_8A(0xFF, 4);
1083   1        bTemp = ReadI2C_8A(0xE1) & 0x0F;
1084   1        switch(bTemp) {
1085   2        case 0: clock = pll;    break;
1086   2        case 1: clock = pll*2/3;  break; //1.5
1087   2        case 2: clock = pll >> 1; break; //2
1088   2        case 3: clock = pll*2/5;  break; //2.5
1089   2        case 4: clock = pll/3;    break; //3
1090   2        case 5: clock = pll*2/7;  break; //3.5
1091   2        case 6: clock = pll >> 2; break; //4
1092   2        case 7: clock = pll/5;    break; //5
1093   2        case 8: clock = pll >> 3; break; //8
1094   2        case 9: clock = pll >> 4; break; //16
1095   2        default:clock = pll >> 5; break; //32
1096   2        }
1097   1        return clock;
1098   1      }
1099          
1100          DWORD I2CSPI_get_PCLK(void)
1101          {
1102   1        DWORD pll, clock;
1103   1        BYTE bTemp;
1104   1        BYTE divider;
1105   1      
1106   1        WriteI2C_8A(0xFF, 0);
1107   1        pll = ReadI2C_8A(0x0E8)&0x0F;
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 19  

1108   1        pll <<=8;
1109   1        pll |= ReadI2C_8A(0xE9);
1110   1        pll <<=8;
1111   1        pll |= ReadI2C_8A(0xEA);
1112   1        //------------
1113   1        pll >>= 6;
1114   1        pll *= 421875;
1115   1        pll >>= 3;
1116   1        /*read post divider */
1117   1        bTemp = ReadI2C_8A(0xED);
1118   1        bTemp &= 0xC0;
1119   1        bTemp >>=6;
1120   1        pll >>= bTemp;
1121   1      
1122   1        bTemp = ReadI2C_8A(0xF6);
1123   1        divider = bTemp & 0x03;
1124   1        if(bTemp & 0x10)
1125   1          divider |= 0x04;  
1126   1      
1127   1        switch(divider) {
1128   2        case 0: clock = pll;    break;
1129   2        case 1: clock = pll *2/3; break; //div1.5
1130   2        case 2: clock = pll >>1;  break; //div2
1131   2        case 3: clock = pll *2/5; break; //div2.5
1132   2        case 4: clock = pll /3;   break; //div3
1133   2        case 5: clock = pll *2/7; break; //div3.5
1134   2        case 6: clock = pll >>2;  break; //div4
1135   2        case 7: clock = pll / 5;  break; //div5
1136   2        }
1137   1        return clock;
1138   1      }
1139          
1140          
1141          BYTE I2CSPI_check_slave_TW8836B(void)
1142          {
1143   1        BYTE clock; /* MHz */
1144   1        DWORD dClock;
1145   1        BYTE bTemp;
1146   1        BYTE ping;
1147   1        BYTE i;
1148   1      
1149   1        ping=1;
1150   1      
1151   1        /* MCU status */
1152   1        WriteI2C_8A(0xFF,0x04); 
1153   1        bTemp = ReadI2C_8A(0xC4);
1154   1        Puts("\nSlave MCU was"); 
1155   1        if((bTemp & 0x80)==0) {
1156   2          Puts(" Stopped");
1157   2          Puts("==>You need a HW Reset at the end.");
1158   2          ping=0;
1159   2        }
1160   1        else          
1161   1          Puts(" Runing");
1162   1      
1163   1        /* XMEM access: REG4C2[0] */
1164   1        WriteI2C_8A(0xFF,0x04);
1165   1        bTemp = ReadI2C_8A(0xC2);
1166   1        if(bTemp & 0x01) {
1167   2          Puts("XMem access was enabled");
1168   2          WriteI2C_8A(0xC2, 0x00);
1169   2          Puts("==>disable access");
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 20  

1170   2        }
1171   1      
1172   1        /* SPIMCU clock */
1173   1        bTemp = ReadI2C_8A(0xE1);
1174   1        bTemp &= 0x30;
1175   1        bTemp >>= 4;
1176   1        switch(bTemp) {
1177   2        case 0: Puts(" 27MHz"); clock = 27; break;    /* ping will be failed */
1178   2        case 1: Puts(" 32KHz"); clock = 2;  break;    /* please stop...*/
1179   2        case 3: Puts(" Unknown Hz"); clock = 1; break;  /* please stop... */
1180   2        default: clock=0;   break; /* I will check the next step. */
1181   2        }
1182   1        if(clock==1 || clock==2)
1183   1          return 1;
1184   1      
1185   1        if(clock==0) {
1186   2          WriteI2C_8A(0xFF,0x00);
1187   2          bTemp = ReadI2C_8A(0xFC);
1188   2          if(bTemp & 0x80) {
1189   3            Puts(" SSPLL1 PowerDown");
1190   3            return 1;
1191   3          }
1192   2          WriteI2C_8A(0xFF,0x04);
1193   2          bTemp = ReadI2C_8A(0xE0);
1194   2          if(bTemp & 0x01) /* PLL108M */
1195   2            dClock = I2CSPI_get_SPICLK(1);
1196   2          else {
1197   3            WriteI2C_8A(0xFF,0x00);
1198   3            bTemp = ReadI2C_8A(0x4B);
1199   3            if(bTemp & 0x20) {
1200   4              Puts(" SSPLL1 uses SSPLL2"); /*you can, but I do not like */
1201   4              return 1;
1202   4            }
1203   3            dClock = I2CSPI_get_SPICLK(0);
1204   3          }
1205   2          dClock += 500000; //roundup
1206   2          clock = dClock / 1000000;
1207   2          Printf(" SPICLK:%bdMHz ",clock);
1208   2          //Printf(" SPICLK:%bdMHz %ldHz",clock,dClock);
1209   2          /* I do not care MCUCLK */
1210   2        }
1211   1      
1212   1        WriteI2C_8A(0xFF,0x00);
1213   1        bTemp = ReadI2C_8A(0xEC);
1214   1        if(bTemp & 0x80) {
1215   2          Puts(" SSPLL2 PowerDown");
1216   2          return 1;
1217   2        }
1218   1        WriteI2C_8A(0xFF,0x00);
1219   1        bTemp = ReadI2C_8A(0x4B);
1220   1        if(bTemp & 0x10) {
1221   2          Puts(" SSPLL2 uses SSPLL1"); /*you can, but I do not like */
1222   2          return 1;
1223   2        }
1224   1        
1225   1        dClock = I2CSPI_get_PCLK();
1226   1        dClock += 500000; //roundup
1227   1        clock = dClock / 1000000;
1228   1        Printf(" PCLK:%bdMHz ",clock);
1229   1        //Printf(" SPICLK:%bdMHz %ldHz",clock,dClock);
1230   1      
1231   1        /* pol:REG20D[4] */
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 21  

1232   1        WriteI2C_8A(0xFF,0x00);
1233   1        bTemp = ReadI2C_8A(0x4B);
1234   1        Printf(" PCLKO_Pol:%bd", (bTemp & 0x10) ? 1:0);
1235   1      
1236   1        /* SPIOSD REG400[2] */
1237   1        WriteI2C_8A(0xFF,0x04);
1238   1        bTemp = ReadI2C_8A(0x00);
1239   1        if(bTemp & 0x04) {
1240   2          Puts("SPIOSD was On");
1241   2          WriteI2C_8A(0x00, bTemp & ~0x04);
1242   2          Puts("==>disable");
1243   2        }
1244   1      
1245   1        /*------------------*/
1246   1        /* I2CSPI registers */
1247   1        /*------------------*/
1248   1      
1249   1        /* SPIDMA: REG4F4[0] */
1250   1        WriteI2C_8A(0xFF,0x04);
1251   1        bTemp = ReadI2C_8A(0xF4);
1252   1        if(bTemp & 0x01) {
1253   2          Puts("I2CSPI DMA was busy");
1254   2          return 1;
1255   2        }
1256   1        /* SPIDMA: REG4C4[0] */
1257   1        WriteI2C_8A(0xFF,0x04);
1258   1        bTemp = ReadI2C_8A(0xC4);
1259   1        if(bTemp & 0x01) {
1260   2          Puts("SPI DMA was busy");
1261   2          return 1;
1262   2        }
1263   1        /* busy check REG4D8[] REG4D9[] */
1264   1        WriteI2C_8A(0xFF,0x04);
1265   1        bTemp = ReadI2C_8A(0xD8);
1266   1        if(bTemp != 0x05) {
1267   2          Printf("Busy Cmd was :%02bx",bTemp);
1268   2        }
1269   1        bTemp = ReadI2C_8A(0xD9);
1270   1        if((bTemp & 0x07) != 0x00) {
1271   2          Printf("Busy Bit was %bd",bTemp & 0x07);
1272   2          Printf(" Pol was %d", (bTemp & 0x08) ? 1:0);
1273   2        }
1274   1        else {
1275   2          if((bTemp & 0x08) ==0)
1276   2            Printf("Busy Pol was Low");
1277   2        }
1278   1      
1279   1        /* PING */
1280   1        if(ping) {
1281   2          WriteI2C_8A(0xFF, 0x00);  
1282   2          WriteI2C_8A(0x09, 0x00);
1283   2          WriteI2C_8A(0x0F, 0x60);
1284   2          for(i=0; i < 20; i++) {
1285   3            bTemp = ReadI2C_8A(0x09);
1286   3            if((bTemp & 0xF0) == 0xA0)
1287   3              break;
1288   3            delay1ms(5);
1289   3          }
1290   2          if(i==20) {
1291   3            Puts(" Ping Failed");
1292   3          }
1293   2          else {
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 22  

1294   3            Printf(" Ping at %bd*5ms with %02bX",i, bTemp);
1295   3            //CRC
1296   3            //WriteI2C_8A(0xFF, 0x00);
1297   3            //bTemp = ReadI2C_8A(0xF8);
1298   3            //Printf(" CRC:%02bX",bTemp);
1299   3            //bTemp = ReadI2C_8A(0xF9);
1300   3            //Printf("_%02bX",bTemp);
1301   3          }
1302   2        }
1303   1      
1304   1      
1305   1        Puts("==>TW8836B");
1306   1        return 0;
1307   1      }
1308          
1309          #if 0
              BYTE I2CSPI_check_Quad_Read(void)
              {
                //check Quad & dummy
                //read first several bytes.
                //startup code starts with 02 A8 7F 41..
              }
              #endif
1317          
1318          BYTE I2CSPI_check_slave_SPIFLASH(void)
1319          {
1320   1        BYTE bTemp;
1321   1        BYTE ret;
1322   1      
1323   1        /* JEDEC */
1324   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDID, 0, 3, SPI_CMD_OPT_NONE, 200);
1325   1        if(ret) {
1326   2          Puts("\nJEDEC failed");
1327   2          return 1;
1328   2        }
1329   1        WriteI2C_8A(0xFF,0x04);
1330   1        ReadI2CS_8A(0xD0, 3, SPI_CmdBuffer);
1331   1        Printf("\nJEDEC %02bx %02bx %02bx ", SPI_CmdBuffer[0], SPI_CmdBuffer[1],SPI_CmdBuffer[2]);
1332   1        if(SPI_CmdBuffer[0]==SPIFLASH_MID_MICRON) {
1333   2          Puts("Micron");
1334   2        }
1335   1        else {
1336   2          Puts("...stop");
1337   2          return 0;
1338   2        }
1339   1      
1340   1        /* status reg CMD:05 */
1341   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDSR, 0, 1, SPI_CMD_OPT_NONE, 200);
1342   1        if(ret) {
1343   2          Puts(" RDSR failed");
1344   2          return 1;
1345   2        }
1346   1        WriteI2C_8A(0xFF,0x04);
1347   1        bTemp = ReadI2C_8A(0xD0);
1348   1        Printf(" SR:%02bX", bTemp);
1349   1        if(bTemp & 0x01) 
1350   1          return 1;
1351   1      
1352   1        /* nonvolatile reg CMD:B5 xxxx xxxx xxxx xxxx */
1353   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDNVREG, 0, 2, SPI_CMD_OPT_NONE, 200);
1354   1        if(ret) {
1355   2          Puts(" RDNVREG failed");
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 23  

1356   2          return 1;
1357   2        }
1358   1        WriteI2C_8A(0xFF,0x04);
1359   1        ReadI2CS_8A(0xD0, 2, SPI_CmdBuffer);
1360   1        Printf(" NVREG:%02bx_%02bx ", SPI_CmdBuffer[0], SPI_CmdBuffer[1]);
1361   1      
1362   1        /* volatile reg CMD:85 xxxx 1xxx*/
1363   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDVREG, 0, 1, SPI_CMD_OPT_NONE, 200);
1364   1        if(ret) {
1365   2          Puts(" RDVREG failed");
1366   2          return 1;
1367   2        }
1368   1        WriteI2C_8A(0xFF,0x04);
1369   1        bTemp = ReadI2C_8A(0xD0);
1370   1        Printf(" VREG:%02bX", bTemp);
1371   1        if((bTemp & 0x08) != 0x08) {  /*xxxx 1xxx*/
1372   2          Puts("!!warnning!! ");
1373   2          return 1;
1374   2        }
1375   1      
1376   1        /* Enhanced volatile reg CMD:65 00xx xxxx*/
1377   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDVEREG, 0, 1, SPI_CMD_OPT_NONE, 200);
1378   1        if(ret) {
1379   2          Puts(" RDVEREG failed");
1380   2          return 1;
1381   2        }
1382   1        WriteI2C_8A(0xFF,0x04);
1383   1        bTemp = ReadI2C_8A(0xD0);
1384   1        Printf(" VEREG:%02bX", bTemp);
1385   1        if((bTemp & 0xC0) != 0xC0) {  /*11xx xxxx*/
1386   2          Puts("!!warnning!! ");
1387   2          //return 1;
1388   2        } 
1389   1      
1390   1        /* flag status reg */ 
1391   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDFREG, 0, 1, SPI_CMD_OPT_NONE, 200);
1392   1        if(ret) {
1393   2          Puts(" RDFREG failed");
1394   2          return 1;
1395   2        }
1396   1        WriteI2C_8A(0xFF,0x04);
1397   1        bTemp = ReadI2C_8A(0xD0);
1398   1        Printf(" FREG:%02bX", bTemp);
1399   1        if((bTemp & 0xF6) != 0x80) { /*0111x11x*/
1400   2          Puts("!!warnning!! ");
1401   2          //return 1;
1402   2        }
1403   1      
1404   1        /* locked CMD:E8 */
1405   1        ret = I2cSpiFlashChipRegCmd(SPICMD_RDLOCK, 0, 1, SPI_CMD_OPT_NONE, 200);
1406   1        if(ret) {
1407   2          Puts(" RDLOCK failed");
1408   2          return 1;
1409   2        }
1410   1        WriteI2C_8A(0xFF,0x04);
1411   1        bTemp = ReadI2C_8A(0xD0);
1412   1        Printf(" LOCK:%02bX", bTemp);
1413   1        //if((bTemp & 0x03)) {  /*xxxx xx11*/
1414   1        //  Puts("!!warnning!! ");
1415   1        //  //return 1;
1416   1        //}
1417   1        Puts("==>SPIFLASH");
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 24  

1418   1        return 0;
1419   1      }
1420          /* example:
1421           MCU_I2C[8A]>i2cspi
1422          i2cspi uses EXT_MCU_SCLK(SDAT) for master, SCLK(SDAT) for slave
1423          
1424          i2cspi mcu [halt|rerun]
1425          i2cspi xmem [on|off]
1426          i2cspi xmem d start length
1427          i2cspi xmem 00 start length
1428          i2cspi xmem 0F start length
1429          i2cspi xmem AB start length
1430          i2cspi xr spiaddr length
1431          i2cspi xw spiaddr length
1432          i2cspi crc [spiaddr length]
1433          i2cspi se spiaddr
1434          i2cspi upload src_at_master dest_at_slave size
1435             example: i2cspi upload 60000 0 107E1
1436          
1437          MCU_I2C[8A]>i2cspi upload 60000 0 113f0
1438          I2CSPI upload src:0060000 dest:0000000 len:000113F0
1439          Slave MCU was Runing SPICLK:72MHz  PCLK:36MHz  PCLKO_Pol:0 Ping at 1*5ms with A0==>TW8836B
1440          JEDEC EF 40 18 ...stop
1441          Erase:
1442          06 B
1443          06 S
1444          06 S
1445          Uplopad: ....
1446          ..
1447          check CRC:0382
1448          06 00 
1449          run slave
1450          finished
1451          UsedTime:64.83sec
1452          Ping has ACK      CRC server flag:A0,count:0,crc:B5EA
1453          EVB crc wrong     CRC server flag:D0,count:3,value:00455642,crc:091D
1454          1.2 crc wrong     CRC server flag:D0,count:2,value:0000,crc:1887       <<==look it has BUG
1455          151211 crc wrong    CRC server flag:D0,count:3,value:000F0C0B,crc:EBE8
1456          09:19:40 crc wrong    CRC server flag:D0,count:3,value:00281309,crc:DBB1
1457          ==>SUCCESS
1458          MCU_I2C[8A]>
1459          
1460          
1461          
1462          */
1463          BYTE I2CSPI_i2ccmd_ping(void)
1464          {
1465   1        BYTE i;
1466   1        BYTE bTemp;
1467   1        
1468   1        WriteI2C_8A(0xFF, 0);
1469   1        WriteI2C_8A(0x09, 0x00);
1470   1        WriteI2C_8A(0x0F, 0x60);
1471   1        for(i=0; i < 100; i++) {
1472   2          bTemp = ReadI2C_8A(0x09);
1473   2          if((bTemp & 0xF0)==0xA0) {
1474   3            Printf("Ping has ACK\n");
1475   3            return 0;
1476   3          }
1477   2          delay1ms(10);
1478   2        }
1479   1        Printf("Ping failed\n");
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 25  

1480   1        return 1; 
1481   1      }
1482          
1483          BYTE I2CSPI_i2ccmd_read(BYTE cmd)
1484          {
1485   1        BYTE i;
1486   1        BYTE bTemp;
1487   1        BYTE result;
1488   1        WORD read_crc,crc_calc;
1489   1      
1490   1        if(cmd < 7
1491   1        || cmd > 0x0A) {
1492   2          Printf("invalid cmd :%02x\n", cmd);
1493   2          return 1;
1494   2        }
1495   1      
1496   1        WriteI2C_8A(0xFF, 4);
1497   1        WriteI2C_8A(0xFA, 0x00);  /* cmd:read */
1498   1        WriteI2C_8A(0xFB, cmd);   /* parameter */
1499   1        WriteI2C_8A(0xFF, 0);
1500   1        WriteI2C_8A(0x09, 0x00);  /* clear flag */
1501   1        WriteI2C_8A(0x0F, 0x50);    /* start */
1502   1        for(i=0; i < 100; i++) {
1503   2          bTemp = ReadI2C_8A(0x09); /* read flag */
1504   2          result = bTemp & 0xF0;
1505   2          if(result==0xD0) {
1506   3            /* I am waiting done */
1507   3            break;
1508   3          }
1509   2          else if(result != 0x00 
1510   2          &&      result != 0xA0) {
1511   3            /* someting wrong */
1512   3            Printf("err %02bx\n",bTemp);
1513   3            return 1;
1514   3          }
1515   2          delay1ms(10);
1516   2        }
1517   1        if(i==100) {
1518   2          Printf("err timeout\n");
1519   2          return 1;
1520   2        }
1521   1        Printf("Flag:0x%02bx ", bTemp);
1522   1        //generate CRC
1523   1        crc_calc = 0;
1524   1        crc_calc = (crc_calc << 8) ^ crctab[(crc_calc >>8) ^ (WORD)bTemp];
1525   1        /* low nibble is a result length */
1526   1        i = bTemp & 0x0F;
1527   1        WriteI2C_8A(0xFF, 4);
1528   1        while(i) {
1529   2          i--;
1530   2          bTemp = ReadI2C_8A(0xFB+3-i);
1531   2          Printf("%02bx ",bTemp);
1532   2          crc_calc = (crc_calc << 8) ^ crctab[(crc_calc >>8) ^ (WORD)bTemp];
1533   2        }
1534   1        switch(cmd) {
1535   2        case 0x07: /* model */
1536   2          Printf("%c%c%c ", 
1537   2            ReadI2C_8A(0xFC),ReadI2C_8A(0xFD),ReadI2C_8A(0xFE));
1538   2          break;
1539   2        case 0x08: /* revision */
1540   2          Printf("%bd.%bd ", ReadI2C_8A(0xFD),ReadI2C_8A(0xFE));
1541   2          break;
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 26  

1542   2        case 0x09: /* date */
1543   2          Printf("%02bd%02bd%02bd ",
1544   2            ReadI2C_8A(0xFC), ReadI2C_8A(0xFD),ReadI2C_8A(0xFE));
1545   2          break;
1546   2        case 0x0A: /* time */
1547   2          Printf("%02bd:%02bd:%02bd ",
1548   2            ReadI2C_8A(0xFC), ReadI2C_8A(0xFD),ReadI2C_8A(0xFE));
1549   2          break;
1550   2        }
1551   1      
1552   1        //read CRC
1553   1        WriteI2C_8A(0xFF,4);
1554   1        read_crc = ReadI2C_8A(0xF8);
1555   1        read_crc <<= 8;
1556   1        read_crc |= ReadI2C_8A(0xF9);
1557   1      
1558   1        if(read_crc == crc_calc)
1559   1          Printf("crc ok\n");
1560   1        else
1561   1          Printf("crc wrong read:%04X calc:%04X\n",read_crc, crc_calc);
1562   1        WriteI2C_8A(0xFF,0);
1563   1        return 0;
1564   1      }
1565          
1566          
1567          /*
1568          step
1569          
1570          check input parameter.
1571          
1572          check TW8836B
1573          disable XMEM access, if it was accesabled.
1574          halt MCU
1575          check MCU was halted  
1576          Erase sector - un-aligned
1577          Erase block
1578          Erase sector - remained
1579          Download
1580            read data from Host File or SpiFlash.
1581            download to XMEM  
1582          
1583          check whole CRC
1584          re-run MCU
1585          */
1586          //BYTE I2CSPI_Download_validate(uint32_t src_addr, uint32_t dest_addr, uint32_t upload_len)
1587          //{
1588          //}
1589          
1590          /*
1591          S_CRC 000000 010000 [F1F1]
1592          S_CRC 010000 000A2A [E171]
1593          CRC   000000 010A2A [F072]
1594          
1595          
1596          94.55ms start. (about 32KhZ)
1597          33.54ms use I2C_delay_base=1 (about 110KHz)
1598          32.60ms remove ReadI2C_8A(DMAREG_4F4)
1599          31.66mS use WriteI2CS_8A()
1600          30.99mS remove ReadI2C_8A(0xC2);
1601          */
1602          BYTE I2CSPI_upload(uint32_t src_addr, uint32_t dest_addr, uint32_t upload_len)
1603          {
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 27  

1604   1        DWORD src_spi_addr, dest_spi_addr;
1605   1        DWORD remain;
1606   1        WORD data_size;
1607   1        WORD crc;
1608   1        BYTE bTemp;
1609   1        BYTE ret;
1610   1        DWORD UsedTime;
1611   1      //  volatile BYTE vdata;
1612   1      //  BYTE *p;
1613   1      //  BYTE i;
1614   1        BYTE saved_I2C_delay_base;
1615   1      
1616   1        Printf("\nI2CSPI upload src:%07lx dest:%07lx len:%lx",
1617   1          src_addr,
1618   1          dest_addr,
1619   1          upload_len);
1620   1        /* check size */
1621   1        /* check start address align */
1622   1      
1623   1      #ifdef USE_HW_RESET_PIN
                I2CSPI_init_port();
              #endif
1626   1      
1627   1        /*---------------------*/
1628   1        /* check slave TW8836B */
1629   1        /*---------------------*/
1630   1        /* 1. check I2C connection */
1631   1        WriteI2C_8A(0xFF,0x00); 
1632   1        bTemp = ReadI2C_8A(0x00);
1633   1        if(bTemp != 0x36) {
1634   2          Printf(" invalid ID:%02bx", bTemp);
1635   2          return 1;
1636   2        }
1637   1      
1638   1        /* check slave SPIFLASH */
1639   1        ret=I2CSPI_check_slave_TW8836B();
1640   1      
1641   1        //read XMEM access, if it is enabled, disable Xmem access.
1642   1        // maybe, you was hanged-up when you try to update the XMem data.
1643   1        WriteI2C_8A(0xFF,0x04);
1644   1        bTemp = ReadI2C_8A(0xC2);
1645   1        if(bTemp & 0x01) {
1646   2          WriteI2C_8A(0xC2, 0x00);
1647   2          Puts("\nDisable XMEM access");
1648   2        }
1649   1      
1650   1        /* check slave SPIFLASH */
1651   1        ret=I2CSPI_check_slave_SPIFLASH();
1652   1      
1653   1      
1654   1      #ifdef USE_HW_RESET_PIN
                /* reset TW8836 with MCU_Disable */
                I2CSPI_reset_TW8836(1);
              #else 
1658   1        /* halt MCU */
1659   1        I2CSPI_mcu_halt_rerun(1);
1660   1      #endif
1661   1      
1662   1        WriteI2C_8A(0xFF,0x04); 
1663   1        bTemp = ReadI2C_8A(0xC4);
1664   1        if((bTemp & 0x80)) {
1665   2          Puts("\nSlave MCU was"); 
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 28  

1666   2          Puts(" Runing");
1667   2          return 1;
1668   2        }
1669   1      
1670   1        /* check align */
1671   1        if(dest_addr & 0x0FFF) {
1672   2          Printf("dest_addr is not 4KB aligned");
1673   2          return 1;
1674   2        }
1675   1      
1676   1        SFRB_ET0 = 0;
1677   1        UsedTime = SystemClock;
1678   1        SFRB_ET0 = 1;
1679   1      
1680   1        saved_I2C_delay_base = I2C_delay_base;
1681   1        I2C_delay_base = 1;
1682   1      
1683   1      
1684   1        /* ERASE */ 
1685   1        Puts("\nErase:");
1686   1        dest_spi_addr = dest_addr;
1687   1        remain = upload_len;
1688   1        while(dest_spi_addr & 0x0000F000) {
1689   2          /* use sector erase if start_addr is not 64KByte align */
1690   2          ret = I2CSPI_sector_erase(dest_spi_addr);
1691   2          if(ret) {
1692   3            Printf("SE stopped at spi_addr:%lx\n",dest_spi_addr); 
1693   3            I2C_delay_base = saved_I2C_delay_base;
1694   3            return 1;
1695   3          }
1696   2          Puts("S");
1697   2          dest_spi_addr += FLASH_SECTOR_SIZE;
1698   2          if(remain >= FLASH_SECTOR_SIZE)
1699   2            remain -= FLASH_SECTOR_SIZE;
1700   2          else
1701   2            remain = 0;
1702   2        }
1703   1        /* block erase */
1704   1        while(remain >= FLASH_BLOCK_SIZE) {
1705   2          ret = I2CSPI_block_erase(dest_spi_addr);
1706   2          if(ret) {
1707   3            Printf("BE stopped at spi_addr:%lx\n",dest_spi_addr); 
1708   3            I2C_delay_base = saved_I2C_delay_base;
1709   3            return 1;
1710   3          }
1711   2          Puts("B");
1712   2          dest_spi_addr += FLASH_BLOCK_SIZE;
1713   2          remain -= FLASH_BLOCK_SIZE;
1714   2        }
1715   1        /* sector erase */
1716   1        while(remain) {
1717   2          ret = I2CSPI_sector_erase(dest_spi_addr);
1718   2          if(ret) {
1719   3            Printf("SE stopped at spi_addr:%lx\n",dest_spi_addr); 
1720   3            I2C_delay_base = saved_I2C_delay_base;
1721   3            return 1;
1722   3          }
1723   2          Puts("S");
1724   2          dest_spi_addr += FLASH_SECTOR_SIZE;
1725   2          if(remain >= FLASH_SECTOR_SIZE)
1726   2            remain -= FLASH_SECTOR_SIZE;
1727   2          else
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 29  

1728   2            remain = 0;
1729   2        }
1730   1      
1731   1        /* download */
1732   1        /*
1733   1          step1: read data from src_addr to XMEM 
1734   1            step2: write data from XMEM to dest_addr
1735   1          use 128Byte
1736   1        */
1737   1        Puts("\nUplopad: ");
1738   1        src_spi_addr = src_addr;
1739   1        dest_spi_addr = dest_addr;
1740   1        remain = upload_len;
1741   1        crc = 0;
1742   1      
1743   1        while(remain) {
1744   2          if(remain >= XMEM_BUFF_SIZE) data_size = XMEM_BUFF_SIZE;
1745   2          else             data_size = remain;
1746   2          remain -= data_size;
1747   2      #ifdef UPLOAD_FROM_MASTER
1748   2          g_CRC = crc;
1749   2          ret=I2CSPI_download_master_to_xmem(src_spi_addr, data_size);
1750   2          crc = g_CRC;
1751   2      #endif
1752   2          if(ret) {
1753   3            Printf("FAIL:spi2xmem %07lx size:%x", src_spi_addr, data_size);
1754   3            return 1;
1755   3          }
1756   2          src_spi_addr +=data_size;
1757   2              
1758   2          ret=I2CSPI_upload_from_xmem(dest_spi_addr, data_size);
1759   2          if(ret) {
1760   3            Printf("FAIL:xmem2spi %07lx size:%x", dest_spi_addr, data_size);
1761   3          }
1762   2      
1763   2          /* check local_crc */
1764   2      
1765   2      
1766   2          dest_spi_addr += data_size;
1767   2      
1768   2          Puts(".");
1769   2        }
1770   1      
1771   1        /* check CRC */
1772   1        Printf("\ncheck CRC:%04X", crc);
1773   1        dest_spi_addr = dest_addr;
1774   1        ret = I2CSPI_check_crc(dest_spi_addr, upload_len, (upload_len >> 12), crc);
1775   1        if(ret) {
1776   2          Printf("ERR:CRC");
1777   2          /* skip return to see the result */
1778   2        }
1779   1      
1780   1        Puts("\nrun slave");
1781   1      #ifdef USE_HW_RESET_PIN
                /* reset TW8836 without MCU_Disable. TW8836B MCU will be started */
                I2CSPI_reset_TW8836(0);
              #else 
1785   1        /* re-run MCU */
1786   1        I2CSPI_mcu_halt_rerun(0);
1787   1      #endif
1788   1      
1789   1        Puts("\nfinished");
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 30  

1790   1      
1791   1        SFRB_ET0 = 0;
1792   1        UsedTime = SystemClock - UsedTime;
1793   1        SFRB_ET0 = 1;
1794   1        I2C_delay_base = saved_I2C_delay_base;
1795   1        Printf("\n\rUsedTime:%ld.%ldsec", UsedTime/100, UsedTime%100 );
1796   1      
1797   1        /* Hello!!*/
1798   1        delay1ms(1000);
1799   1        delay1ms(1000);
1800   1        Puts("\n");
1801   1        ret=I2CSPI_i2ccmd_ping();
1802   1        if(ret==0) {
1803   2          //ask model
1804   2          ret=I2CSPI_i2ccmd_read(0x07);
1805   2          //ask revision
1806   2          ret=I2CSPI_i2ccmd_read(0x08);
1807   2          //ask compiled date
1808   2          ret=I2CSPI_i2ccmd_read(0x09);
1809   2          //ask compiled time
1810   2          ret=I2CSPI_i2ccmd_read(0x0A);
1811   2        }
1812   1        return 0;
1813   1      }
1814          
1815          BYTE I2CSPI_Buffer[16];
1816          BYTE I2CSPI_upload_faster(uint32_t src_addr, uint32_t dest_addr, uint32_t upload_len)
1817          {
1818   1        DWORD src_spi_addr, dest_spi_addr;
1819   1        DWORD remain;
1820   1        WORD data_size;
1821   1        WORD crc;
1822   1        BYTE bTemp;
1823   1        BYTE ret;
1824   1        DWORD UsedTime;
1825   1        volatile BYTE vdata;
1826   1        BYTE *p;
1827   1        BYTE i;
1828   1        BYTE saved_I2C_delay_base;
1829   1      
1830   1        Printf("\nI2CSPI upload src:%07lx dest:%07lx len:%lx",
1831   1          src_addr,
1832   1          dest_addr,
1833   1          upload_len);
1834   1        /* check size */
1835   1        /* check start address align */
1836   1      
1837   1      #ifdef USE_HW_RESET_PIN
                I2CSPI_init_port();
              #endif
1840   1        /*---------------------*/
1841   1        /* check slave TW8836B */
1842   1        /*---------------------*/
1843   1        /* 1. check I2C connection */
1844   1        WriteI2C_8A(0xFF,0x00); 
1845   1        bTemp = ReadI2C_8A(0x00);
1846   1        if(bTemp != 0x36) {
1847   2          Printf(" invalid ID:%02bx", bTemp);
1848   2          return 1;
1849   2        }
1850   1      
1851   1        /* check slave SPIFLASH */
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 31  

1852   1        ret=I2CSPI_check_slave_TW8836B();
1853   1      
1854   1        //read XMEM access, if it is enabled, disable Xmem access.
1855   1        // maybe, you was hanged-up when you try to update the XMem data.
1856   1        WriteI2C_8A(0xFF,0x04);
1857   1        bTemp = ReadI2C_8A(0xC2);
1858   1        if(bTemp & 0x01) {
1859   2          WriteI2C_8A(0xC2, 0x00);
1860   2          Puts("\nDisable XMEM access");
1861   2        }
1862   1      
1863   1        /* check slave SPIFLASH */
1864   1        ret=I2CSPI_check_slave_SPIFLASH();
1865   1      
1866   1      
1867   1      #ifdef USE_HW_RESET_PIN
                /* reset TW8836 with MCU_Disable */
                I2CSPI_reset_TW8836(1);
              #else 
1871   1        /* halt MCU */
1872   1        I2CSPI_mcu_halt_rerun(1);
1873   1      #endif
1874   1      
1875   1        WriteI2C_8A(0xFF,0x04); 
1876   1        bTemp = ReadI2C_8A(0xC4);  
1877   1        if((bTemp & 0x80)) {
1878   2          Puts("\nSlave MCU was");
1879   2          Puts(" Runing");
1880   2          return 1;
1881   2        }
1882   1      
1883   1        /* check align */
1884   1        if(dest_addr & 0x0FFF) {
1885   2          Printf("dest_addr is not 4KB aligned");
1886   2          return 1;
1887   2        }
1888   1      
1889   1        SFRB_ET0 = 0;
1890   1        UsedTime = SystemClock;
1891   1        SFRB_ET0 = 1;
1892   1      
1893   1        saved_I2C_delay_base = I2C_delay_base;
1894   1        I2C_delay_base = 1;
1895   1      
1896   1      
1897   1        /* ERASE */ 
1898   1        Puts("\nErase:");
1899   1        dest_spi_addr = dest_addr;
1900   1        remain = upload_len;
1901   1        while(dest_spi_addr & 0x0000F000) {
1902   2          /* use sector erase if start_addr is not 64KByte align */
1903   2          ret = I2CSPI_sector_erase(dest_spi_addr);
1904   2          if(ret) {
1905   3            Printf("SE stopped at spi_addr:%lx\n",dest_spi_addr); 
1906   3            I2C_delay_base = saved_I2C_delay_base;
1907   3            return 1;
1908   3          }
1909   2          Puts("S");
1910   2          dest_spi_addr += FLASH_SECTOR_SIZE;
1911   2          if(remain >= FLASH_SECTOR_SIZE)
1912   2            remain -= FLASH_SECTOR_SIZE;
1913   2          else
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 32  

1914   2            remain = 0;
1915   2        }
1916   1        /* block erase */
1917   1        while(remain > (FLASH_BLOCK_SIZE-FLASH_SECTOR_SIZE)) {
1918   2          ret = I2CSPI_block_erase(dest_spi_addr);
1919   2          if(ret) {
1920   3            Printf("BE stopped at spi_addr:%lx\n",dest_spi_addr); 
1921   3            I2C_delay_base = saved_I2C_delay_base;
1922   3            return 1;
1923   3          }
1924   2          Puts("B");
1925   2          dest_spi_addr += FLASH_BLOCK_SIZE;
1926   2          remain -= FLASH_BLOCK_SIZE;
1927   2        }
1928   1        /* sector erase */
1929   1        while(remain) {
1930   2          ret = I2CSPI_sector_erase(dest_spi_addr);
1931   2          if(ret) {
1932   3            Printf("SE stopped at spi_addr:%lx\n",dest_spi_addr); 
1933   3            I2C_delay_base = saved_I2C_delay_base;
1934   3            return 1;
1935   3          }
1936   2          Puts("S");
1937   2          dest_spi_addr += FLASH_SECTOR_SIZE;
1938   2          if(remain >= FLASH_SECTOR_SIZE)
1939   2            remain -= FLASH_SECTOR_SIZE;
1940   2          else
1941   2            remain = 0;
1942   2        }
1943   1      
1944   1        /* download */
1945   1        /*
1946   1          step1: read data from src_addr to XMEM 
1947   1            step2: write data from XMEM to dest_addr
1948   1          use 128Byte
1949   1        */
1950   1        Puts("\nUplopad: ");
1951   1        src_spi_addr = src_addr;
1952   1        dest_spi_addr = dest_addr;
1953   1        remain = upload_len;
1954   1        crc = 0;
1955   1      
1956   1      
1957   1        WriteI2C_8A(0xFF,0x04);
1958   1        WriteI2C_8A(DMAREG_4F5, 0x00); /* page is 256 bytes */
1959   1        WriteI2C_8A(DMAREG_4F6, 0x00);  //XMEM start 0
1960   1        WriteI2C_8A(DMAREG_4F7, 0x00);  //SPI_Buffer[] is at _0_.
1961   1      
1962   1        while(remain) {
1963   2          if(remain >= XMEM_BUFF_SIZE) data_size = XMEM_BUFF_SIZE;
1964   2          else             data_size = remain;
1965   2          remain -= data_size;
1966   2      
1967   2          SpiFlash_Read_XMem(src_spi_addr, (WORD)SPI_Buffer, data_size);
1968   2          //SpiFlashDmaRead2XMem(SPI_Buffer,src_spi_addr,data_size, SPIFLASH_WAIT_READ);
1969   2          local_crc = 0;
1970   2      
1971   2          /* enable_xmem_access*/
1972   2      //#if 1 //faster
1973   2      //    WriteI2C_8A(0xC2, 0x01);
1974   2      //#else
1975   2          //WriteI2C_8A(0xC2, ReadI2C_8A(0xC2) | 0x01);
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 33  

1976   2          ret=I2CSPI_enable_xmem_access();
1977   2          if(ret)
1978   2            Puts("\nFail enable_xeme_access");
1979   2      //#endif
1980   2      
1981   2          WriteI2C_8A(0xDB,0x00);
1982   2          WriteI2C_8A(0xDC,0x00);
1983   2          p = &SPI_Buffer[0];
1984   2          for(i=0; i < data_size; i++) {
1985   3            bTemp = *p++;
1986   3            WriteI2C_8A(0xDD, bTemp);
1987   3            crc = (crc << 8) ^ crctab[(crc >>8) ^ bTemp];
1988   3            local_crc = (local_crc << 8) ^ crctab[(local_crc >>8) ^ bTemp];
1989   3          }
1990   2          /*disable_xmem_access*/
1991   2      //#if 1 //faster
1992   2      //    WriteI2C_8A(0xC2, 0x00);
1993   2      //#else
1994   2      //    WriteI2C_8A(0xC2, ReadI2C_8A(0xC2) & ~0x01);
1995   2          ret=I2CSPI_disable_xmem_access();
1996   2          if(ret)
1997   2            Puts("\nFail disable_xeme_access");
1998   2      //#endif
1999   2      
2000   2          src_spi_addr +=data_size;
2001   2      
2002   2          //----------------------------------    
2003   2          //ret=I2CSPI_upload_from_xmem(dest_spi_addr, data_size);
2004   2          //----------------------------------
2005   2      //#if 1 //faster
2006   2          I2CSPI_Buffer[0x5]=0; // if use other command, it have to cleard
2007   2          I2CSPI_Buffer[0x6]=0; //
2008   2          I2CSPI_Buffer[0x7]=0; //
2009   2          I2CSPI_Buffer[0x8]=0; //length middle
2010   2          I2CSPI_Buffer[0x9]=0; //length low
2011   2          I2CSPI_Buffer[0xA]=SPICMD_WREN;
2012   2          WriteI2CS_8A(0xF5,6,&I2CSPI_Buffer[5]);
2013   2          I2CSPI_Buffer[0x3]=(DMA_DEST_CHIPREG << 6) +1;  //len:1
2014   2          I2CSPI_Buffer[0x4]=0x01 | SPI_CMD_OPT_NONE; 
2015   2          WriteI2CS_8A(0xF3,2,&I2CSPI_Buffer[3]);
2016   2      
2017   2          I2CSPI_Buffer[0x8]=(BYTE)(data_size>>8);
2018   2          I2CSPI_Buffer[0x9]=(BYTE)data_size;
2019   2          I2CSPI_Buffer[0xA]=SPICMD_PP;
2020   2          I2CSPI_Buffer[0xB]=(BYTE)(dest_spi_addr>>16);
2021   2          I2CSPI_Buffer[0xC]=(BYTE)(dest_spi_addr>>8);
2022   2          I2CSPI_Buffer[0xD]=(BYTE)dest_spi_addr;
2023   2          WriteI2CS_8A(0xF8,6,&I2CSPI_Buffer[8]);
2024   2          I2CSPI_Buffer[0x3]=(DMA_DEST_MCU_XMEM << 6) +4; //XMEM,Increase,len:1+3
2025   2          I2CSPI_Buffer[0x4]=0x01 | SPI_CMD_OPT_WRITE;
2026   2          WriteI2CS_8A(0xF3,2,&I2CSPI_Buffer[3]);
2027   2      //#else
2028   2      //    WriteI2C_8A(DMAREG_4F8, 0); //length middle
2029   2      //    WriteI2C_8A(DMAREG_4F9, 0); //length low
2030   2      //    WriteI2C_8A(DMAREG_4FA, SPICMD_WREN);
2031   2      //    WriteI2C_8A(DMAREG_4F3, (DMA_DEST_CHIPREG << 6) +1);  //len:1
2032   2      //    WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_NONE); 
2033   2      //  
2034   2      //    WriteI2C_8A(DMAREG_4F8, (BYTE)(data_size>>8));
2035   2      //    WriteI2C_8A(DMAREG_4F9, (BYTE)data_size);
2036   2      //    WriteI2C_8A(DMAREG_4FA, SPICMD_PP);
2037   2      //    WriteI2C_8A(DMAREG_4FB, (BYTE)(dest_spi_addr>>16));
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 34  

2038   2      //    WriteI2C_8A(DMAREG_4FC, (BYTE)(dest_spi_addr>>8));
2039   2      //    WriteI2C_8A(DMAREG_4FD, (BYTE)dest_spi_addr);
2040   2      //    WriteI2C_8A(DMAREG_4F3, (DMA_DEST_MCU_XMEM << 6) +4); //XMEM,Increase,len:1+3
2041   2      //    WriteI2C_8A(DMAREG_4F4, 0x01 | SPI_CMD_OPT_WRITE_BUSY);
2042   2      //#endif
2043   2          for(i=0; i < 100; i++) {
2044   3            vdata = ReadI2C_8A(DMAREG_4F4);
2045   3            if((vdata & 0x17) == SPI_CMD_OPT_WRITE)
2046   3              break;
2047   3          }
2048   2          if(i==100) {
2049   3            Printf("FAIL:xmem2spi %07lx size:%x", dest_spi_addr, data_size);
2050   3          }
2051   2          ret = I2CSPI_check_status_reg();
2052   2          if(ret) {
2053   3            //Puts("\nFail:CheckStatus");
2054   3            WriteI2C_8A(0xFF, 4);
2055   3            bTemp = ReadI2C_8A(0xD0);
2056   3            Printf("\nFail:CheckStatus %02bx",bTemp);
2057   3          }
2058   2      
2059   2          ret = I2CSPI_check_crc(dest_spi_addr, (DWORD)data_size, 100, local_crc);
2060   2          if(ret) 
2061   2            Printf("\nERR: local_crc");
2062   2      
2063   2          dest_spi_addr += data_size;
2064   2      
2065   2          Puts(".");
2066   2        }
2067   1      
2068   1        /* check CRC */
2069   1        Printf("\ncheck CRC:%04X", crc);
2070   1        dest_spi_addr = dest_addr;
2071   1        ret = I2CSPI_check_crc(dest_spi_addr, upload_len, (upload_len >> 12), crc);
2072   1        if(ret) {
2073   2          Printf("ERR:CRC");
2074   2          /* skip return to see the result */
2075   2        }
2076   1      
2077   1        Puts("\nrun slave");
2078   1      #ifdef USE_HW_RESET_PIN
                /* reset TW8836 without MCU_Disable. TW8836B MCU will be started */
                I2CSPI_reset_TW8836(0);
              #else 
2082   1        /* re-run MCU */
2083   1        I2CSPI_mcu_halt_rerun(0);
2084   1      #endif
2085   1      
2086   1        Puts("\nfinished");
2087   1      
2088   1        SFRB_ET0 = 0;
2089   1        UsedTime = SystemClock - UsedTime;
2090   1        SFRB_ET0 = 1;
2091   1        I2C_delay_base = saved_I2C_delay_base;
2092   1        Printf("\n\rUsedTime:%ld.%ldsec", UsedTime/100, UsedTime%100 );
2093   1      
2094   1        return 0;
2095   1      }
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 35  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0151 (BEGIN)
0000         L?0338:
0000 EB                MOV     A,R3
0001 4F                ORL     A,R7
0002 FF                MOV     R7,A
0003 EA                MOV     A,R2
0004 FE                MOV     R6,A
0005 E9                MOV     A,R1
0006 FD                MOV     R5,A
0007 E8                MOV     A,R0
0008 FC                MOV     R4,A
0009         L?0339:
0009 90000000    R     MOV     DPTR,#pll
000D 110000      E     ACALL   ?C?LSTXDATA
0010         L?0340:
0010 90000000    R     MOV     DPTR,#pll
0014         L?0341:
0014 E0                MOVX    A,@DPTR
0015 FC                MOV     R4,A
0016 A3                INC     DPTR
0017 E0                MOVX    A,@DPTR
0018 FD                MOV     R5,A
0019         L?0342:
0019 A3                INC     DPTR
001A E0                MOVX    A,@DPTR
001B FE                MOV     R6,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F 22                RET     
0020         L?0343:
0020 90000000    R     MOV     DPTR,#dest_spi_addr
0024 E0                MOVX    A,@DPTR
0025 FC                MOV     R4,A
0026 A3                INC     DPTR
0027 E0                MOVX    A,@DPTR
0028 FD                MOV     R5,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B FE                MOV     R6,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E 2400              ADD     A,#00H
0030 FF                MOV     R7,A
0031 EE                MOV     A,R6
0032 3410              ADDC    A,#010H
0034 FE                MOV     R6,A
0035 E4                CLR     A
0036 3D                ADDC    A,R5
0037 FD                MOV     R5,A
0038 E4                CLR     A
0039 3C                ADDC    A,R4
003A FC                MOV     R4,A
003B 90000000    R     MOV     DPTR,#dest_spi_addr
003F 110000      E     ACALL   ?C?LSTXDATA
0042 E4                CLR     A
0043 FF                MOV     R7,A
0044 7E10              MOV     R6,#010H
0046         L?0344:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 36  

0046 FD                MOV     R5,A
0047         L?0345:
0047 90000000    R     MOV     DPTR,#remain
004B         L?0346:
004B FC                MOV     R4,A
004C         L?0347:
004C E0                MOVX    A,@DPTR
004D F8                MOV     R0,A
004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 F9                MOV     R1,A
0051 A3                INC     DPTR
0052 E0                MOVX    A,@DPTR
0053 FA                MOV     R2,A
0054 A3                INC     DPTR
0055 E0                MOVX    A,@DPTR
0056 FB                MOV     R3,A
0057 22                RET     
0058         L?0349:
0058 FF                MOV     R7,A
0059 E0                MOVX    A,@DPTR
005A FD                MOV     R5,A
005B         L?0350:
005B EF                MOV     A,R7
005C 6D                XRL     A,R5
005D         L?0351:
005D 25E0              ADD     A,ACC
005F FF                MOV     R7,A
0060 E4                CLR     A
0061 33                RLC     A
0062 FE                MOV     R6,A
0063 7400        R     MOV     A,#LOW crctab
0065 2F                ADD     A,R7
0066 F582              MOV     DPL,A
0068 7400        R     MOV     A,#HIGH crctab
006A 3E                ADDC    A,R6
006B F583              MOV     DPH,A
006D 759300      E     MOV     DPX,#?C?CODESEG
0070 22                RET     
0071         L?0352:
0071         L?0353:
0071 90000000    R     MOV     DPTR,#remain
0075         L?0354:
0075 E0                MOVX    A,@DPTR
0076 FC                MOV     R4,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 FD                MOV     R5,A
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C FE                MOV     R6,A
007D A3                INC     DPTR
007E E0                MOVX    A,@DPTR
007F 22                RET     
0080         L?0356:
0080 FF                MOV     R7,A
0081 E4                CLR     A
0082 FC                MOV     R4,A
0083 FD                MOV     R5,A
0084 EB                MOV     A,R3
0085 2F                ADD     A,R7
0086 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 37  

0087 EA                MOV     A,R2
0088 3E                ADDC    A,R6
0089 FE                MOV     R6,A
008A ED                MOV     A,R5
008B 39                ADDC    A,R1
008C FD                MOV     R5,A
008D EC                MOV     A,R4
008E 38                ADDC    A,R0
008F FC                MOV     R4,A
0090 010000      E     AJMP    ?C?LSTXDATA
0093         L?0359:
0093 90000000    R     MOV     DPTR,#pll
0097         L?0360:
0097 EB                MOV     A,R3
0098 4F                ORL     A,R7
0099 FF                MOV     R7,A
009A EA                MOV     A,R2
009B FE                MOV     R6,A
009C E9                MOV     A,R1
009D FD                MOV     R5,A
009E E8                MOV     A,R0
009F FC                MOV     R4,A
00A0 010000      E     AJMP    ?C?LSTXDATA
00A3         L?0362:
00A3 2400              ADD     A,#00H
00A5 FF                MOV     R7,A
00A6 EE                MOV     A,R6
00A7 3410              ADDC    A,#010H
00A9 FE                MOV     R6,A
00AA E4                CLR     A
00AB 3D                ADDC    A,R5
00AC         L?0363:
00AC 90000000    R     MOV     DPTR,#dest_spi_addr
00B0         L?0364:
00B0 FD                MOV     R5,A
00B1 E4                CLR     A
00B2 3C                ADDC    A,R4
00B3 FC                MOV     R4,A
00B4 010000      E     AJMP    ?C?LSTXDATA
00B7         L?0367:
00B7         L?0368:
00B7 9400              SUBB    A,#00H
00B9 FF                MOV     R7,A
00BA EE                MOV     A,R6
00BB 9410              SUBB    A,#010H
00BD         L?0369:
00BD FE                MOV     R6,A
00BE ED                MOV     A,R5
00BF 9400              SUBB    A,#00H
00C1 FD                MOV     R5,A
00C2 EC                MOV     A,R4
00C3 9400              SUBB    A,#00H
00C5 22                RET     
00C6         L?0370:
00C6         L?0371:
00C6 E4                CLR     A
00C7 90000000    R     MOV     DPTR,#?_I2cSpiFlashChipRegCmd?BYTE+03H
00CB F0                MOVX    @DPTR,A
00CC A3                INC     DPTR
00CD 74C8              MOV     A,#0C8H
00CF F0                MOVX    @DPTR,A
00D0 22                RET     
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 38  

00D1         L?0372:
00D1 110000      E     ACALL   ?C?ULDIV
00D4         L?0373:
00D4 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
00D8 010000      E     AJMP    ?C?LSTXDATA
00DB         L?0374:
00DB 7808              MOV     R0,#08H
00DD 110000      E     ACALL   ?C?LSHL
00E0         L?0375:
00E0 90000000    R     MOV     DPTR,#pll
00E4 110000      E     ACALL   ?C?LSTXDATA
00E7 90000000    R     MOV     DPTR,#pll
00EB 22                RET     
00EC         L?0378:
00EC C3                CLR     C
00ED 9400              SUBB    A,#00H
00EF FF                MOV     R7,A
00F0 EE                MOV     A,R6
00F1 9400              SUBB    A,#00H
00F3 FE                MOV     R6,A
00F4 ED                MOV     A,R5
00F5 9401              SUBB    A,#01H
00F7 FD                MOV     R5,A
00F8 EC                MOV     A,R4
00F9 9400              SUBB    A,#00H
00FB FC                MOV     R4,A
00FC 010000      E     AJMP    ?C?LSTXDATA
00FF         L?0379:
00FF FF                MOV     R7,A
0100 E4                CLR     A
0101 FC                MOV     R4,A
0102 FD                MOV     R5,A
0103 EB                MOV     A,R3
0104 2F                ADD     A,R7
0105 FF                MOV     R7,A
0106 EA                MOV     A,R2
0107 3E                ADDC    A,R6
0108 FE                MOV     R6,A
0109 ED                MOV     A,R5
010A 39                ADDC    A,R1
010B FD                MOV     R5,A
010C EC                MOV     A,R4
010D 38                ADDC    A,R0
010E FC                MOV     R4,A
010F 010000      E     AJMP    ?C?LSTXDATA
0112         L?0381:
0112 7B00        R     MOV     R3,#MBYTE ?SC_1708
0114 7A00        R     MOV     R2,#HIGH ?SC_1708
0116 7900        R     MOV     R1,#LOW ?SC_1708
0118         L?0382:
0118 E0                MOVX    A,@DPTR
0119 FF                MOV     R7,A
011A A3                INC     DPTR
011B E0                MOVX    A,@DPTR
011C CF                XCH     A,R7
011D         L?0383:
011D 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0121 F0                MOVX    @DPTR,A
0122 A3                INC     DPTR
0123 EF                MOV     A,R7
0124 F0                MOVX    @DPTR,A
0125 22                RET     
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 39  

0126         L?0387:
0126 7808              MOV     R0,#08H
0128 110000      E     ACALL   ?C?LSHL
012B         L?0388:
012B 90000000    R     MOV     DPTR,#dTemp
012F 110000      E     ACALL   ?C?LSTXDATA
0132 90000000    R     MOV     DPTR,#dTemp
0136 22                RET     
0137         L?0389:
0137 90000000    E     MOV     DPTR,#SPI_CmdBuffer
013B         L?0390:
013B E0                MOVX    A,@DPTR
013C 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0140 F0                MOVX    @DPTR,A
0141 22                RET     
0142         L?0393:
0142 C3                CLR     C
0143 E500        E     MOV     A,SystemClock+03H
0145 9B                SUBB    A,R3
0146 FF                MOV     R7,A
0147 E500        E     MOV     A,SystemClock+02H
0149 9A                SUBB    A,R2
014A FE                MOV     R6,A
014B E500        E     MOV     A,SystemClock+01H
014D 99                SUBB    A,R1
014E FD                MOV     R5,A
014F E500        E     MOV     A,SystemClock
0151 98                SUBB    A,R0
0152 FC                MOV     R4,A
0153 110000      E     ACALL   ?C?LSTXDATA
0156 D2A9              SETB    SFRB_ET0
0158 22                RET     
0159         L?0394:
0159         L?0395:
0159 90000000    R     MOV     DPTR,#dest_spi_addr
015D         L?0396:
015D 110000      E     ACALL   ?C?LSTXDATA
0160 90000000    R     MOV     DPTR,#upload_len
0164 22                RET     
0165         L?0397:
0165         L?0398:
0165 90000000    R     MOV     DPTR,#dest_spi_addr
0169         L?0399:
0169 110000      E     ACALL   ?C?LSTXDATA
016C 90000000    R     MOV     DPTR,#upload_len
0170 22                RET     
0171         L?0403:
0171 E4                CLR     A
0172 93                MOVC    A,@A+DPTR
0173 FC                MOV     R4,A
0174 7401              MOV     A,#01H
0176 93                MOVC    A,@A+DPTR
0177 FD                MOV     R5,A
0178 90000000    R     MOV     DPTR,#local_crc+01H
017C E0                MOVX    A,@DPTR
017D FE                MOV     R6,A
017E EC                MOV     A,R4
017F 6E                XRL     A,R6
0180 FF                MOV     R7,A
0181 ED                MOV     A,R5
0182 90000000    R     MOV     DPTR,#local_crc
0186 CF                XCH     A,R7
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 40  

0187 F0                MOVX    @DPTR,A
0188 A3                INC     DPTR
0189 EF                MOV     A,R7
018A F0                MOVX    @DPTR,A
018B 22                RET     
018C         L?0404:
018C E0                MOVX    A,@DPTR
018D FF                MOV     R7,A
018E A3                INC     DPTR
018F E0                MOVX    A,@DPTR
0190 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+09H
0194 CF                XCH     A,R7
0195 F0                MOVX    @DPTR,A
0196 EF                MOV     A,R7
0197         L?0405:
0197 A3                INC     DPTR
0198 F0                MOVX    @DPTR,A
0199 90000000    R     MOV     DPTR,#dest_spi_addr
019D 22                RET     
019E         L?0406:
019E 90000000    R     MOV     DPTR,#data_size
01A2         L?0407:
01A2 E0                MOVX    A,@DPTR
01A3 FF                MOV     R7,A
01A4 A3                INC     DPTR
01A5 E0                MOVX    A,@DPTR
01A6 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
01AA CF                XCH     A,R7
01AB F0                MOVX    @DPTR,A
01AC A3                INC     DPTR
01AD EF                MOV     A,R7
01AE 22                RET     
01AF         L?0408:
01AF 110000      E     ACALL   ?C?ULDIV
01B2 AC00              MOV     R4,AR0
01B4 AD01              MOV     R5,AR1
01B6 AE02              MOV     R6,AR2
01B8 AF03              MOV     R7,AR3
01BA 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
01BE 110000      E     ACALL   ?C?LSTXDATA
01C1 7B00        R     MOV     R3,#MBYTE ?SC_1753
01C3 7A00        R     MOV     R2,#HIGH ?SC_1753
01C5 7900        R     MOV     R1,#LOW ?SC_1753
01C7 22                RET     
01C8         L?0409:
01C8         L?0410:
01C8 E0                MOVX    A,@DPTR
01C9 04                INC     A
01CA F0                MOVX    @DPTR,A
01CB E0                MOVX    A,@DPTR
01CC C3                CLR     C
01CD 9464              SUBB    A,#064H
01CF 22                RET     
01D0         L?0411:
01D0 FE                MOV     R6,A
01D1 EA                MOV     A,R2
01D2 6E                XRL     A,R6
01D3 FF                MOV     R7,A
01D4 EB                MOV     A,R3
01D5 CF                XCH     A,R7
01D6 F0                MOVX    @DPTR,A
01D7 A3                INC     DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 41  

01D8 EF                MOV     A,R7
01D9 F0                MOVX    @DPTR,A
01DA 22                RET     
01DB         L?0412:
01DB         L?0413:
01DB 7810              MOV     R0,#010H
01DD 110000      E     ACALL   ?C?ULSHR
01E0 AD07              MOV     R5,AR7
01E2 7FFB              MOV     R7,#0FBH
01E4 22                RET     
01E5         L?0414:
01E5         L?0415:
01E5 7808              MOV     R0,#08H
01E7 110000      E     ACALL   ?C?ULSHR
01EA AD07              MOV     R5,AR7
01EC 7FFC              MOV     R7,#0FCH
01EE 22                RET     
01EF         L?0416:
01EF         L?0417:
01EF 90000000    R     MOV     DPTR,#ret
01F3 EF                MOV     A,R7
01F4 F0                MOVX    @DPTR,A
01F5 22                RET     
01F6         L?0419:
01F6 EF                MOV     A,R7
01F7 F0                MOVX    @DPTR,A
01F8 7B00        R     MOV     R3,#MBYTE ?SC_42
01FA 7A00        R     MOV     R2,#HIGH ?SC_42
01FC 7900        R     MOV     R1,#LOW ?SC_42
01FE         L?0420:
01FE E0                MOVX    A,@DPTR
01FF 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0203 F0                MOVX    @DPTR,A
0204 22                RET     
0205         L?0421:
0205 7808              MOV     R0,#08H
0207 110000      E     ACALL   ?C?LSHL
020A         L?0422:
020A 90000000    R     MOV     DPTR,#pll
020E 010000      E     AJMP    ?C?LSTXDATA
0211         L?0423:
0211 7400        E     MOV     A,#MBYTE SPI_Buffer
0213 F0                MOVX    @DPTR,A
0214 A3                INC     DPTR
0215         L?0424:
0215 7400        E     MOV     A,#HIGH SPI_Buffer
0217 F0                MOVX    @DPTR,A
0218 A3                INC     DPTR
0219 7400        E     MOV     A,#LOW SPI_Buffer
021B F0                MOVX    @DPTR,A
021C 22                RET     
021D         L?0427:
021D AF00        E     MOV     R7,SystemClock+03H
021F AE00        E     MOV     R6,SystemClock+02H
0221 AD00        E     MOV     R5,SystemClock+01H
0223 AC00        E     MOV     R4,SystemClock
0225 110000      E     ACALL   ?C?LSTXDATA
0228 D2A9              SETB    SFRB_ET0
022A 90000000    E     MOV     DPTR,#I2C_delay_base
022E E0                MOVX    A,@DPTR
022F 22                RET     
0230         L?0428:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 42  

0230 E0                MOVX    A,@DPTR
0231 90000000    E     MOV     DPTR,#I2C_delay_base
0235 F0                MOVX    @DPTR,A
0236         L?0429:
0236 E4                CLR     A
0237 7B64              MOV     R3,#064H
0239 FA                MOV     R2,A
023A F9                MOV     R1,A
023B F8                MOV     R0,A
023C 22                RET     
023D         L?0430:
023D         L?0431:
023D 90000000    R     MOV     DPTR,#ret
0241 EF                MOV     A,R7
0242 F0                MOVX    @DPTR,A
0243 22                RET     
0244         L?0432:
0244 7E10              MOV     R6,#010H
0246         L?0433:
0246 E4                CLR     A
0247 FF                MOV     R7,A
0248         L?0434:
0248 FD                MOV     R5,A
0249 FC                MOV     R4,A
024A 90000000    R     MOV     DPTR,#remain
024E 22                RET     
024F         L?0435:
024F 90000000    R     MOV     DPTR,#?_I2CSPI_IsCmdAccepted?BYTE+04H
0253 7401              MOV     A,#01H
0255 F0                MOVX    @DPTR,A
0256 E4                CLR     A
0257         L?0436:
0257 FB                MOV     R3,A
0258 7D14              MOV     R5,#014H
025A FC                MOV     R4,A
025B 7F06              MOV     R7,#06H
025D 22                RET     
025E         L?0437:
025E         L?0438:
025E E4                CLR     A
025F 7F02              MOV     R7,#02H
0261 FE                MOV     R6,A
0262 FD                MOV     R5,A
0263 FC                MOV     R4,A
0264 90000000    R     MOV     DPTR,#pll
0268 22                RET     
0269         L?0440:
0269 E0                MOVX    A,@DPTR
026A FB                MOV     R3,A
026B A3                INC     DPTR
026C E4                CLR     A
026D 75F001            MOV     B,#01H
0270 110000      E     ACALL   ?C?ILDIX
0273 A9F0              MOV     R1,B
0275 FA                MOV     R2,A
0276 010000      E     AJMP    ?C?CLDPTR
0279         L?0441:
0279 FC                MOV     R4,A
027A         L?0442:
027A 90000000    R     MOV     DPTR,#remain
027E 010000      E     AJMP    ?C?LSTXDATA
0281         L?0443:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 43  

0281 FC                MOV     R4,A
0282         L?0444:
0282 90000000    R     MOV     DPTR,#remain
0286 010000      E     AJMP    ?C?LSTXDATA
0289         L?0445:
0289         L?0446:
0289 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
028D 010000      E     AJMP    ?C?LSTXDATA
0290         L?0447:
0290         L?0448:
0290 A3                INC     DPTR
0291 A3                INC     DPTR
0292 A3                INC     DPTR
0293 E0                MOVX    A,@DPTR
0294 FD                MOV     R5,A
0295 7FFD              MOV     R7,#0FDH
0297 22                RET     
0298         L?0449:
0298         L?0450:
0298 90000000    R     MOV     DPTR,#dClock
029C 010000      E     AJMP    ?C?LSTXDATA
029F         L?0456:
029F F0                MOVX    @DPTR,A
02A0 90000000    E     MOV     DPTR,#I2C_delay_base
02A4 7401              MOV     A,#01H
02A6 F0                MOVX    @DPTR,A
02A7 7B00        R     MOV     R3,#MBYTE ?SC_1571
02A9 7A00        R     MOV     R2,#HIGH ?SC_1571
02AB 7900        R     MOV     R1,#LOW ?SC_1571
02AD 22                RET     
02AE         L?0458:
02AE E0                MOVX    A,@DPTR
02AF FB                MOV     R3,A
02B0 A3                INC     DPTR
02B1 E0                MOVX    A,@DPTR
02B2 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+06H
02B6 CB                XCH     A,R3
02B7 F0                MOVX    @DPTR,A
02B8 A3                INC     DPTR
02B9 EB                MOV     A,R3
02BA F0                MOVX    @DPTR,A
02BB 22                RET     
02BC         L?0459:
02BC 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
02C0         L?0460:
02C0 E0                MOVX    A,@DPTR
02C1 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
02C5 F0                MOVX    @DPTR,A
02C6 22                RET     
02C7         L?0461:
02C7         L?0462:
02C7 90000000    R     MOV     DPTR,#data_size
02CB E0                MOVX    A,@DPTR
02CC FE                MOV     R6,A
02CD A3                INC     DPTR
02CE E0                MOVX    A,@DPTR
02CF 22                RET     
02D0         L?0466:
02D0 EF                MOV     A,R7
02D1 F0                MOVX    @DPTR,A
02D2 ED                MOV     A,R5
02D3         L?0467:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 44  

02D3 A3                INC     DPTR
02D4 F0                MOVX    @DPTR,A
02D5 7D04              MOV     R5,#04H
02D7 7FFF              MOV     R7,#0FFH
02D9 22                RET     
02DA         L?0468:
02DA E0                MOVX    A,@DPTR
02DB FF                MOV     R7,A
02DC A3                INC     DPTR
02DD E0                MOVX    A,@DPTR
02DE 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
02E2 CF                XCH     A,R7
02E3 F0                MOVX    @DPTR,A
02E4 A3                INC     DPTR
02E5 EF                MOV     A,R7
02E6 22                RET     
02E7         L?0469:
02E7 7B40              MOV     R3,#040H
02E9 7A42              MOV     R2,#042H
02EB 790F              MOV     R1,#0FH
02ED 7800              MOV     R0,#00H
02EF 90000000    R     MOV     DPTR,#dClock
02F3 22                RET     
02F4         L?0470:
02F4 A3                INC     DPTR
02F5 A3                INC     DPTR
02F6 E0                MOVX    A,@DPTR
02F7 FF                MOV     R7,A
02F8 A3                INC     DPTR
02F9 E0                MOVX    A,@DPTR
02FA A3                INC     DPTR
02FB CF                XCH     A,R7
02FC F0                MOVX    @DPTR,A
02FD A3                INC     DPTR
02FE EF                MOV     A,R7
02FF F0                MOVX    @DPTR,A
0300 22                RET     
0301         L?0473:
0301         L?0474:
0301 E4                CLR     A
0302 93                MOVC    A,@A+DPTR
0303 FA                MOV     R2,A
0304 7401              MOV     A,#01H
0306 93                MOVC    A,@A+DPTR
0307 FB                MOV     R3,A
0308 22                RET     
0309         L?0475:
0309 7BF3              MOV     R3,#0F3H
030B 7A6F              MOV     R2,#06FH
030D 7906              MOV     R1,#06H
030F 7800              MOV     R0,#00H
0311 010000      E     AJMP    ?C?LMUL
0314         L?0476:
0314 780C              MOV     R0,#0CH
0316 110000      E     ACALL   ?C?ULSHR
0319 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+08H
031D EF                MOV     A,R7
031E F0                MOVX    @DPTR,A
031F 22                RET     
0320         L?0486:
0320 5430              ANL     A,#030H
0322 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 45  

0323 E0                MOVX    A,@DPTR
0324 FF                MOV     R7,A
0325 C4                SWAP    A
0326 540F              ANL     A,#0FH
0328 F0                MOVX    @DPTR,A
0329 14                DEC     A
032A 22                RET     
032B         L?0487:
032B E4                CLR     A
032C F0                MOVX    @DPTR,A
032D A3                INC     DPTR
032E EF                MOV     A,R7
032F F0                MOVX    @DPTR,A
0330 E0                MOVX    A,@DPTR
0331 F8                MOV     R0,A
0332 E4                CLR     A
0333 F0                MOVX    @DPTR,A
0334 E8                MOV     A,R0
0335 22                RET     
0336         L?0488:
0336 E4                CLR     A
0337 7F02              MOV     R7,#02H
0339 FE                MOV     R6,A
033A FD                MOV     R5,A
033B FC                MOV     R4,A
033C 90000000    R     MOV     DPTR,#pll
0340 22                RET     
0341         L?0489:
0341 110000      E     ACALL   ?C?ULSHR
0344 90000000    R     MOV     DPTR,#pll
0348 010000      E     AJMP    ?C?LSTXDATA
034B         L?0490:
034B 2420              ADD     A,#020H
034D FF                MOV     R7,A
034E EE                MOV     A,R6
034F 34A1              ADDC    A,#0A1H
0351 FE                MOV     R6,A
0352 ED                MOV     A,R5
0353 3407              ADDC    A,#07H
0355 22                RET     
0356         L?0492:
0356         L?0493:
0356 EF                MOV     A,R7
0357 F0                MOVX    @DPTR,A
0358 7D04              MOV     R5,#04H
035A 7FFF              MOV     R7,#0FFH
035C 22                RET     
035D         L?0494:
035D         L?0495:
035D E0                MOVX    A,@DPTR
035E FF                MOV     R7,A
035F A3                INC     DPTR
0360 E0                MOVX    A,@DPTR
0361 C3                CLR     C
0362 9F                SUBB    A,R7
0363 22                RET     
0364         L?0496:
0364         L?0497:
0364 7B00        R     MOV     R3,#MBYTE ?SC_49
0366 7A00        R     MOV     R2,#HIGH ?SC_49
0368 7900        R     MOV     R1,#LOW ?SC_49
036A 22                RET     
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 46  

036B         L?0498:
036B         L?0499:
036B 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
036F EF                MOV     A,R7
0370 F0                MOVX    @DPTR,A
0371 22                RET     
0372         L?0500:
0372         L?0501:
0372 E4                CLR     A
0373 90000000    R     MOV     DPTR,#?_I2CSPI_IsCmdAccepted?BYTE+04H
0377 F0                MOVX    @DPTR,A
0378 22                RET     
0379         L?0502:
0379 90000000    R     MOV     DPTR,#loop
037D E0                MOVX    A,@DPTR
037E FC                MOV     R4,A
037F A3                INC     DPTR
0380 E0                MOVX    A,@DPTR
0381 FD                MOV     R5,A
0382 22                RET     
0383         L?0503:
0383 7E00              MOV     R6,#00H
0385 EF                MOV     A,R7
0386 540F              ANL     A,#0FH
0388 FF                MOV     R7,A
0389 E4                CLR     A
038A FC                MOV     R4,A
038B FD                MOV     R5,A
038C 22                RET     
038D         L?0504:
038D         L?0505:
038D 7B00        R     MOV     R3,#MBYTE ?SC_597
038F 7A00        R     MOV     R2,#HIGH ?SC_597
0391 7900        R     MOV     R1,#LOW ?SC_597
0393 22                RET     
0394         L?0506:
0394         L?0507:
0394 7B00        R     MOV     R3,#MBYTE ?SC_656
0396 7A00        R     MOV     R2,#HIGH ?SC_656
0398 7900        R     MOV     R1,#LOW ?SC_656
039A 22                RET     
039B         L?0508:
039B 110000      E     ACALL   ?C?ULDIV
039E 90000000    R     MOV     DPTR,#clock
03A2 EF                MOV     A,R7
03A3 F0                MOVX    @DPTR,A
03A4 22                RET     
03A5         L?0509:
03A5         L?0510:
03A5 7B00        R     MOV     R3,#MBYTE ?SC_1174
03A7 7A00        R     MOV     R2,#HIGH ?SC_1174
03A9 7900        R     MOV     R1,#LOW ?SC_1174
03AB 22                RET     
03AC         L?0511:
03AC 110000      E     ACALL   ?C?LSTXDATA
03AF 7B00        R     MOV     R3,#MBYTE ?SC_1459
03B1 7A00        R     MOV     R2,#HIGH ?SC_1459
03B3 7900        R     MOV     R1,#LOW ?SC_1459
03B5 22                RET     
03B6         L?0512:
03B6 EE                MOV     A,R6
03B7 540F              ANL     A,#0FH
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 47  

03B9 FE                MOV     R6,A
03BA E4                CLR     A
03BB FD                MOV     R5,A
03BC FC                MOV     R4,A
03BD EE                MOV     A,R6
03BE 4F                ORL     A,R7
03BF 22                RET     
03C0         L?0513:
03C0 A3                INC     DPTR
03C1 A3                INC     DPTR
03C2 E0                MOVX    A,@DPTR
03C3 FE                MOV     R6,A
03C4 EE                MOV     A,R6
03C5 54F0              ANL     A,#0F0H
03C7 FE                MOV     R6,A
03C8 EE                MOV     A,R6
03C9 22                RET     
03CA         L?0514:
03CA 2400              ADD     A,#00H
03CC FF                MOV     R7,A
03CD E4                CLR     A
03CE 3E                ADDC    A,R6
03CF FE                MOV     R6,A
03D0 ED                MOV     A,R5
03D1 3401              ADDC    A,#01H
03D3 22                RET     
             ; FUNCTION Com0151 (END)

             ; FUNCTION _I2cSpiFlashDmaWait (BEGIN)
                                           ; SOURCE LINE # 79
0000 90000000    R     MOV     DPTR,#wait
                                           ; SOURCE LINE # 80
                                           ; SOURCE LINE # 85
0004 110000      R     ACALL   L?0492
0007 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 86
000A 7FF4              MOV     R7,#0F4H
000C 110000      E     ACALL   _ReadI2C_8A
000F EF                MOV     A,R7
0010 5406              ANL     A,#06H
0012 90000000    R     MOV     DPTR,#written
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 88
0017 E4                CLR     A
0018 90000000    R     MOV     DPTR,#i
001C F0                MOVX    @DPTR,A
001D         ?C0001:
001D 90000000    R     MOV     DPTR,#wait
0021 110000      R     ACALL   L?0494
0024 5028              JNC     ?C0002
                                           ; SOURCE LINE # 89
0026 7FF4              MOV     R7,#0F4H
0028 110000      E     ACALL   _ReadI2C_8A
002B EF                MOV     A,R7
002C 5407              ANL     A,#07H
002E 90000000    R     MOV     DPTR,#vdata
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 90
0033 5407              ANL     A,#07H
0035 FF                MOV     R7,A
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 48  

0038 B50703            CJNE    A,AR7,?C0004
                                           ; SOURCE LINE # 91
003B 7F00              MOV     R7,#00H
003D 22                RET     
003E         ?C0004:
                                           ; SOURCE LINE # 92
003E 7F0A              MOV     R7,#0AH
0040 7E00              MOV     R6,#00H
0042 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 93
0045 90000000    R     MOV     DPTR,#i
0049 E0                MOVX    A,@DPTR
004A 04                INC     A
004B F0                MOVX    @DPTR,A
004C 80CF              SJMP    ?C0001
004E         ?C0002:
                                           ; SOURCE LINE # 94
004E 7B00        R     MOV     R3,#MBYTE ?SC_0
0050 7A00        R     MOV     R2,#HIGH ?SC_0
0052 7900        R     MOV     R1,#LOW ?SC_0
0054 90000000    R     MOV     DPTR,#vdata
0058 110000      R     ACALL   L?0390
005B 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 95
005E 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 96
0060         ?C0005:
0060 22                RET     
             ; FUNCTION _I2cSpiFlashDmaWait (END)

             ; FUNCTION _I2cSpiFlashDmaWait_loop (BEGIN)
                                           ; SOURCE LINE # 107
0000 90000000    R     MOV     DPTR,#dma_option
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 108
                                           ; SOURCE LINE # 113
0009 7B00        R     MOV     R3,#MBYTE ?SC_32
000B 7A00        R     MOV     R2,#HIGH ?SC_32
000D 7900        R     MOV     R1,#LOW ?SC_32
000F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 114
0012 7D04              MOV     R5,#04H
0014 7FFF              MOV     R7,#0FFH
0016 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 115
0019 7FF4              MOV     R7,#0F4H
001B 110000      E     ACALL   _ReadI2C_8A
001E EF                MOV     A,R7
001F 5416              ANL     A,#016H
0021 90000000    R     MOV     DPTR,#written
0025 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 117
0026 E4                CLR     A
0027 90000000    R     MOV     DPTR,#i
002B F0                MOVX    @DPTR,A
002C         ?C0006:
002C 90000000    R     MOV     DPTR,#wait5ms
0030 110000      R     ACALL   L?0494
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 49  

0033 5044              JNC     ?C0007
                                           ; SOURCE LINE # 118
0035 7FFF              MOV     R7,#0FFH
0037 110000      E     ACALL   _ReadI2C_8A
003A 90000000    R     MOV     DPTR,#vdata
                                           ; SOURCE LINE # 119
003E 110000      R     ACALL   L?0419
0041 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 121
0044 7FF4              MOV     R7,#0F4H
0046 110000      E     ACALL   _ReadI2C_8A
0049 90000000    R     MOV     DPTR,#vdata
004D EF                MOV     A,R7
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 122
004F 110000      R     ACALL   L?0496
0052 110000      R     ACALL   L?0420
0055 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 123
0058 90000000    R     MOV     DPTR,#vdata
005C E0                MOVX    A,@DPTR
005D 5417              ANL     A,#017H
005F FF                MOV     R7,A
0060 90000000    R     MOV     DPTR,#dma_option
0064 E0                MOVX    A,@DPTR
0065 B50708            CJNE    A,AR7,?C0008
                                           ; SOURCE LINE # 124
0068 7B00        R     MOV     R3,#MBYTE ?SC_56
006A 7A00        R     MOV     R2,#HIGH ?SC_56
006C 7900        R     MOV     R1,#LOW ?SC_56
                                           ; SOURCE LINE # 125
006E 800F              SJMP    ?C0271
                                           ; SOURCE LINE # 126
                                           ; SOURCE LINE # 128
0070         ?C0008:
0070 90000000    R     MOV     DPTR,#i
0074 E0                MOVX    A,@DPTR
0075 04                INC     A
0076 F0                MOVX    @DPTR,A
0077 80B3              SJMP    ?C0006
0079         ?C0007:
                                           ; SOURCE LINE # 130
0079 7B00        R     MOV     R3,#MBYTE ?SC_68
007B 7A00        R     MOV     R2,#HIGH ?SC_68
007D 7900        R     MOV     R1,#LOW ?SC_68
007F         ?C0271:
007F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 131
0082 90000000    R     MOV     DPTR,#i
0086 E0                MOVX    A,@DPTR
0087 FF                MOV     R7,A
                                           ; SOURCE LINE # 132
0088         ?C0010:
0088 22                RET     
             ; FUNCTION _I2cSpiFlashDmaWait_loop (END)

             ; FUNCTION _I2cSpiFlashDmaStart (BEGIN)
                                           ; SOURCE LINE # 191
0000 90000000    R     MOV     DPTR,#dma_option
                                           ; SOURCE LINE # 192
                                           ; SOURCE LINE # 197
0004 110000      R     ACALL   L?0466
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 50  

0007 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 198
000A 90000000    R     MOV     DPTR,#dma_option
000E E0                MOVX    A,@DPTR
000F 4401              ORL     A,#01H
0011 FD                MOV     R5,A
0012 7FF4              MOV     R7,#0F4H
0014 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 201
0017 90000000    R     MOV     DPTR,#wait
001B E0                MOVX    A,@DPTR
001C 603A              JZ      ?C0011
                                           ; SOURCE LINE # 203
001E E4                CLR     A
001F A3                INC     DPTR
0020 F0                MOVX    @DPTR,A
0021         ?C0012:
0021 90000000    R     MOV     DPTR,#wait
0025 110000      R     ACALL   L?0495
0028 5022              JNC     ?C0013
                                           ; SOURCE LINE # 204
002A 7FF4              MOV     R7,#0F4H
002C 110000      E     ACALL   _ReadI2C_8A
002F 90000000    R     MOV     DPTR,#vdata
0033 EF                MOV     A,R7
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 205
0035 E0                MOVX    A,@DPTR
0036 20E003            JB      ACC.0,?C0015
                                           ; SOURCE LINE # 206
0039 7F00              MOV     R7,#00H
003B 22                RET     
003C         ?C0015:
                                           ; SOURCE LINE # 207
003C 7F0A              MOV     R7,#0AH
003E 7E00              MOV     R6,#00H
0040 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 208
0043 90000000    R     MOV     DPTR,#i
0047 E0                MOVX    A,@DPTR
0048 04                INC     A
0049 F0                MOVX    @DPTR,A
004A 80D5              SJMP    ?C0012
004C         ?C0013:
                                           ; SOURCE LINE # 209
004C 7B00        R     MOV     R3,#MBYTE ?SC_76
004E 7A00        R     MOV     R2,#HIGH ?SC_76
0050 7900        R     MOV     R1,#LOW ?SC_76
0052 110000      E     ACALL   _ePrintf
                                           ; SOURCE LINE # 210
0055 7F02              MOV     R7,#02H
0057 22                RET     
                                           ; SOURCE LINE # 211
0058         ?C0011:
                                           ; SOURCE LINE # 212
0058 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 213
005A         ?C0016:
005A 22                RET     
             ; FUNCTION _I2cSpiFlashDmaStart (END)

             ; FUNCTION _I2cSpiFlashChipRegCmd (BEGIN)
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 51  

                                           ; SOURCE LINE # 214
0000 90000000    R     MOV     DPTR,#cmd
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
0009 EB                MOV     A,R3
                                           ; SOURCE LINE # 215
                                           ; SOURCE LINE # 228
000A 110000      R     ACALL   L?0467
000D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 229
0010 90000000    R     MOV     DPTR,#cmd_buff_len
0014 E0                MOVX    A,@DPTR
0015 04                INC     A
0016 4440              ORL     A,#040H
0018 FD                MOV     R5,A
0019 7FF3              MOV     R7,#0F3H
001B 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 230
001E 7D04              MOV     R5,#04H
0020 7FF6              MOV     R7,#0F6H
0022 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 231
0025 7DD0              MOV     R5,#0D0H
0027 7FF7              MOV     R7,#0F7H
0029 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 233
002C E4                CLR     A
002D FD                MOV     R5,A
002E 7FF5              MOV     R7,#0F5H
0030 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 234
0033 E4                CLR     A
0034 FD                MOV     R5,A
0035 7FF8              MOV     R7,#0F8H
0037 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 235
003A 90000000    R     MOV     DPTR,#data_buff_len
003E E0                MOVX    A,@DPTR
003F FD                MOV     R5,A
0040 7FF9              MOV     R7,#0F9H
0042 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 237
0045 90000000    R     MOV     DPTR,#cmd
0049 E0                MOVX    A,@DPTR
004A FD                MOV     R5,A
004B 7FFA              MOV     R7,#0FAH
004D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 242
0050 90000000    R     MOV     DPTR,#cmd_buff_len
0054 E0                MOVX    A,@DPTR
0055 FD                MOV     R5,A
0056 600B              JZ      ?C0017
                                           ; SOURCE LINE # 243
0058 7B00        E     MOV     R3,#MBYTE SPI_CmdBuffer
005A 7A00        E     MOV     R2,#HIGH SPI_CmdBuffer
005C 7900        E     MOV     R1,#LOW SPI_CmdBuffer
005E 7FFB              MOV     R7,#0FBH
0060 110000      E     ACALL   _WriteI2CS_8A
0063         ?C0017:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 52  

                                           ; SOURCE LINE # 255
0063 90000000    R     MOV     DPTR,#dma_option
0067 E0                MOVX    A,@DPTR
0068 FF                MOV     R7,A
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B FD                MOV     R5,A
006C 110000      R     ACALL   _I2cSpiFlashDmaStart
;---- Variable 'ret' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 258
006F EF                MOV     A,R7
0070 6003              JZ      ?C0018
                                           ; SOURCE LINE # 259
0072 7FFF              MOV     R7,#0FFH
0074 22                RET     
                                           ; SOURCE LINE # 260
0075         ?C0018:
                                           ; SOURCE LINE # 263
0075 E4                CLR     A
0076 90000000    R     MOV     DPTR,#i
007A F0                MOVX    @DPTR,A
007B         ?C0020:
007B 90000000    R     MOV     DPTR,#data_buff_len
007F E0                MOVX    A,@DPTR
0080 FF                MOV     R7,A
0081 90000000    R     MOV     DPTR,#i
0085 E0                MOVX    A,@DPTR
0086 FE                MOV     R6,A
0087 C3                CLR     C
0088 9F                SUBB    A,R7
0089 5023              JNC     ?C0021
                                           ; SOURCE LINE # 264
008B EE                MOV     A,R6
008C 24D0              ADD     A,#0D0H
008E FF                MOV     R7,A
008F 110000      E     ACALL   _ReadI2C_8A
0092 90000000    R     MOV     DPTR,#i
0096 E0                MOVX    A,@DPTR
0097 2400        E     ADD     A,#LOW SPI_CmdBuffer
0099 F582              MOV     DPL,A
009B E4                CLR     A
009C 3400        E     ADDC    A,#HIGH SPI_CmdBuffer
009E F583              MOV     DPH,A
00A0 759300      E     MOV     DPX,#?C?XDATASEG
00A3 EF                MOV     A,R7
00A4 F0                MOVX    @DPTR,A
00A5 90000000    R     MOV     DPTR,#i
00A9 E0                MOVX    A,@DPTR
00AA 04                INC     A
00AB F0                MOVX    @DPTR,A
00AC 80CD              SJMP    ?C0020
00AE         ?C0021:
                                           ; SOURCE LINE # 266
00AE 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 268
00B0         ?C0019:
00B0 22                RET     
             ; FUNCTION _I2cSpiFlashChipRegCmd (END)

             ; FUNCTION _I2cSpiFlashSetAddress2CmdBuffer (BEGIN)
                                           ; SOURCE LINE # 270
0000 90000000    R     MOV     DPTR,#spiaddr
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 53  

0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 271
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
0007 90000000    R     MOV     DPTR,#spiaddr
000B 110000      R     ACALL   L?0341
000E 7810              MOV     R0,#010H
0010 110000      E     ACALL   ?C?ULSHR
0013 90000000    E     MOV     DPTR,#SPI_CmdBuffer
0017 EF                MOV     A,R7
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 281
0019 90000000    R     MOV     DPTR,#spiaddr
001D 110000      R     ACALL   L?0341
0020 7808              MOV     R0,#08H
0022 110000      E     ACALL   ?C?ULSHR
0025 90000000    E     MOV     DPTR,#SPI_CmdBuffer+01H
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 282
002B 90000000    R     MOV     DPTR,#spiaddr
002F A3                INC     DPTR
0030 A3                INC     DPTR
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 90000000    E     MOV     DPTR,#SPI_CmdBuffer+02H
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 283
                                           ; SOURCE LINE # 284
0038 22                RET     
             ; FUNCTION _I2cSpiFlashSetAddress2CmdBuffer (END)

             ; FUNCTION _I2CSPI_mcu_halt_rerun (BEGIN)
                                           ; SOURCE LINE # 446
0000 90000000    R     MOV     DPTR,#fHalt
                                           ; SOURCE LINE # 447
                                           ; SOURCE LINE # 450
0004 110000      R     ACALL   L?0492
0007 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 451
000A 7D55              MOV     R5,#055H
000C 7FED              MOV     R7,#0EDH
000E 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 452
0011 7DAA              MOV     R5,#0AAH
0013 7FED              MOV     R7,#0EDH
0015 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 453
0018 90000000    R     MOV     DPTR,#fHalt
001C E0                MOVX    A,@DPTR
001D 700A              JNZ     ?C0024
                                           ; SOURCE LINE # 455
001F 7D01              MOV     R5,#01H
0021 7FEC              MOV     R7,#0ECH
0023 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 456
0026 7F00              MOV     R7,#00H
0028 22                RET     
                                           ; SOURCE LINE # 457
0029         ?C0024:
                                           ; SOURCE LINE # 459
0029 E4                CLR     A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 54  

002A FD                MOV     R5,A
002B 7FEC              MOV     R7,#0ECH
002D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 462
0030 7D04              MOV     R5,#04H
0032 7FFF              MOV     R7,#0FFH
0034 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 463
0037 E4                CLR     A
0038 90000000    R     MOV     DPTR,#i
003C F0                MOVX    @DPTR,A
003D         ?C0026:
                                           ; SOURCE LINE # 464
003D 7FC4              MOV     R7,#0C4H
003F 110000      E     ACALL   _ReadI2C_8A
;---- Variable 'bTemp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 465
0042 EF                MOV     A,R7
0043 20E703            JB      ACC.7,?C0029
                                           ; SOURCE LINE # 466
0046 7F00              MOV     R7,#00H
0048 22                RET     
0049         ?C0029:
                                           ; SOURCE LINE # 467
0049 7F05              MOV     R7,#05H
004B 7E00              MOV     R6,#00H
004D 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 468
0050 90000000    R     MOV     DPTR,#i
0054 110000      R     ACALL   L?0409
0057 40E4              JC      ?C0026
0059         ?C0027:
                                           ; SOURCE LINE # 469
0059 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 470
005B         ?C0025:
005B 22                RET     
             ; FUNCTION _I2CSPI_mcu_halt_rerun (END)

             ; FUNCTION I2CSPI_enable_xmem_access (BEGIN)
                                           ; SOURCE LINE # 476
                                           ; SOURCE LINE # 477
                                           ; SOURCE LINE # 482
0000 7D04              MOV     R5,#04H
0002 7FFF              MOV     R7,#0FFH
0004 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
0007 110000      R     ACALL   L?0471
000A 4401              ORL     A,#01H
000C FD                MOV     R5,A
000D 7FC2              MOV     R7,#0C2H
000F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 486
0012 E4                CLR     A
0013 90000000    R     MOV     DPTR,#i
0017 F0                MOVX    @DPTR,A
0018         ?C0030:
                                           ; SOURCE LINE # 487
                                           ; SOURCE LINE # 488
0018 110000      R     ACALL   L?0471
001B 20E110            JB      ACC.1,?C0031
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 55  

                                           ; SOURCE LINE # 489
001E         ?C0033:
                                           ; SOURCE LINE # 490
001E 7F0A              MOV     R7,#0AH
0020 7E00              MOV     R6,#00H
0022 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 491
0025 90000000    R     MOV     DPTR,#i
0029 110000      R     ACALL   L?0409
002C 40EA              JC      ?C0030
002E         ?C0031:
                                           ; SOURCE LINE # 492
002E 90000000    R     MOV     DPTR,#i
0032 E0                MOVX    A,@DPTR
0033 7F00              MOV     R7,#00H
0035 B46402            CJNE    A,#064H,?C0034
                                           ; SOURCE LINE # 493
0038 7F01              MOV     R7,#01H
003A         ?C0034:
                                           ; SOURCE LINE # 494
                                           ; SOURCE LINE # 495
003A         ?C0035:
003A 22                RET     
003B         L?0471:
003B 7FC2              MOV     R7,#0C2H
003D 110000      E     ACALL   _ReadI2C_8A
0040 90000000    R     MOV     DPTR,#bTemp
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
0046 E0                MOVX    A,@DPTR
0047 22                RET     
             ; FUNCTION I2CSPI_enable_xmem_access (END)

             ; FUNCTION I2CSPI_disable_xmem_access (BEGIN)
                                           ; SOURCE LINE # 496
                                           ; SOURCE LINE # 497
                                           ; SOURCE LINE # 501
0000 7D04              MOV     R5,#04H
0002 7FFF              MOV     R7,#0FFH
0004 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 503
0007 110000      R     ACALL   L?0472
000A 54FE              ANL     A,#0FEH
000C FD                MOV     R5,A
000D 7FC2              MOV     R7,#0C2H
000F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 505
0012 E4                CLR     A
0013 90000000    R     MOV     DPTR,#i
0017 F0                MOVX    @DPTR,A
0018         ?C0036:
                                           ; SOURCE LINE # 506
                                           ; SOURCE LINE # 507
0018 110000      R     ACALL   L?0472
001B 30E110            JNB     ACC.1,?C0037
                                           ; SOURCE LINE # 508
001E         ?C0039:
                                           ; SOURCE LINE # 509
001E 7F0A              MOV     R7,#0AH
0020 7E00              MOV     R6,#00H
0022 110000      E     ACALL   _delay1ms
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 56  

                                           ; SOURCE LINE # 510
0025 90000000    R     MOV     DPTR,#i
0029 110000      R     ACALL   L?0410
002C 40EA              JC      ?C0036
002E         ?C0037:
                                           ; SOURCE LINE # 511
002E 90000000    R     MOV     DPTR,#i
0032 E0                MOVX    A,@DPTR
0033 7F00              MOV     R7,#00H
0035 B46402            CJNE    A,#064H,?C0040
                                           ; SOURCE LINE # 512
0038 7F01              MOV     R7,#01H
003A         ?C0040:
                                           ; SOURCE LINE # 513
                                           ; SOURCE LINE # 514
003A         ?C0041:
003A 22                RET     
003B         L?0472:
003B 7FC2              MOV     R7,#0C2H
003D 110000      E     ACALL   _ReadI2C_8A
0040 90000000    R     MOV     DPTR,#bTemp
0044 EF                MOV     A,R7
0045 F0                MOVX    @DPTR,A
0046 E0                MOVX    A,@DPTR
0047 22                RET     
             ; FUNCTION I2CSPI_disable_xmem_access (END)

             ; FUNCTION _I2CSPI_dump_DmaReg (BEGIN)
                                           ; SOURCE LINE # 565
0000 90000000    R     MOV     DPTR,#option
                                           ; SOURCE LINE # 566
                                           ; SOURCE LINE # 572
0004 110000      R     ACALL   L?0493
0007 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 573
000A 7FF3              MOV     R7,#0F3H
000C 110000      E     ACALL   _ReadI2C_8A
000F EF                MOV     A,R7
0010 540F              ANL     A,#0FH
0012 90000000    R     MOV     DPTR,#bTemp
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 574
0017 7B00        R     MOV     R3,#MBYTE ?SC_104
0019 7A00        R     MOV     R2,#HIGH ?SC_104
001B 7900        R     MOV     R1,#LOW ?SC_104
001D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 575
0020 E4                CLR     A
0021 90000000    R     MOV     DPTR,#i
0025 F0                MOVX    @DPTR,A
0026         ?C0042:
0026 90000000    R     MOV     DPTR,#bTemp
002A E0                MOVX    A,@DPTR
002B FF                MOV     R7,A
002C 90000000    R     MOV     DPTR,#i
0030 E0                MOVX    A,@DPTR
0031 C3                CLR     C
0032 9F                SUBB    A,R7
0033 501A              JNC     ?C0043
                                           ; SOURCE LINE # 576
0035 7FFA              MOV     R7,#0FAH
0037 110000      E     ACALL   _ReadI2C_8A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 57  

003A 110000      R     ACALL   L?0498
003D 7B00        R     MOV     R3,#MBYTE ?SC_109
003F 7A00        R     MOV     R2,#HIGH ?SC_109
0041 7900        R     MOV     R1,#LOW ?SC_109
0043 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 577
0046 90000000    R     MOV     DPTR,#i
004A E0                MOVX    A,@DPTR
004B 04                INC     A
004C F0                MOVX    @DPTR,A
004D 80D7              SJMP    ?C0042
004F         ?C0043:
                                           ; SOURCE LINE # 578
004F 7B00        R     MOV     R3,#MBYTE ?SC_116
0051 7A00        R     MOV     R2,#HIGH ?SC_116
0053 7900        R     MOV     R1,#LOW ?SC_116
0055 90000000    R     MOV     DPTR,#option
0059 110000      R     ACALL   L?0390
005C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 580
005F 7FF5              MOV     R7,#0F5H
0061 110000      E     ACALL   _ReadI2C_8A
0064 E4                CLR     A
0065 FC                MOV     R4,A
0066 FD                MOV     R5,A
0067 FE                MOV     R6,A
0068 110000      R     ACALL   L?0388
006B 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 581
006E 110000      R     ACALL   L?0387
0071 110000      R     ACALL   L?0347
0074 C000              PUSH    AR0
0076 C001              PUSH    AR1
0078 C002              PUSH    AR2
007A C003              PUSH    AR3
007C 7FF8              MOV     R7,#0F8H
007E 110000      E     ACALL   _ReadI2C_8A
0081 D003              POP     AR3
0083 D002              POP     AR2
0085 D001              POP     AR1
0087 D000              POP     AR0
0089 90000000    R     MOV     DPTR,#dTemp
008D 110000      R     ACALL   L?0360
0090 90000000    R     MOV     DPTR,#dTemp
0094 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 582
0097 110000      R     ACALL   L?0387
009A 110000      R     ACALL   L?0347
009D C000              PUSH    AR0
009F C001              PUSH    AR1
00A1 C002              PUSH    AR2
00A3 C003              PUSH    AR3
00A5 7FF9              MOV     R7,#0F9H
00A7 110000      E     ACALL   _ReadI2C_8A
00AA D003              POP     AR3
00AC D002              POP     AR2
00AE D001              POP     AR1
00B0 D000              POP     AR0
00B2 EB                MOV     A,R3
00B3 4F                ORL     A,R7
00B4 FF                MOV     R7,A
00B5 EA                MOV     A,R2
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 58  

00B6 FE                MOV     R6,A
00B7 E9                MOV     A,R1
00B8 FD                MOV     R5,A
00B9 E8                MOV     A,R0
00BA FC                MOV     R4,A
                                           ; SOURCE LINE # 583
00BB 110000      R     ACALL   L?0388
00BE 110000      R     ACALL   L?0341
00C1 EC                MOV     A,R4
00C2 4D                ORL     A,R5
00C3 4E                ORL     A,R6
00C4 4F                ORL     A,R7
00C5 7003              JNZ     $ + 5H
00C7 010000      R     AJMP    ?C0045
                                           ; SOURCE LINE # 584
00CA 7B00        R     MOV     R3,#MBYTE ?SC_130
00CC 7A00        R     MOV     R2,#HIGH ?SC_130
00CE 7900        R     MOV     R1,#LOW ?SC_130
00D0 90000000    R     MOV     DPTR,#dTemp
00D4 A3                INC     DPTR
00D5 A3                INC     DPTR
00D6 A3                INC     DPTR
00D7 E0                MOVX    A,@DPTR
00D8 110000      R     ACALL   L?0373
00DB 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 586
00DE 110000      R     ACALL   L?0392
                                           ; SOURCE LINE # 587
00E1 30E108            JNB     ACC.1,?C0046
00E4 7B00        R     MOV     R3,#MBYTE ?SC_143
00E6 7A00        R     MOV     R2,#HIGH ?SC_143
00E8 7900        R     MOV     R1,#LOW ?SC_143
00EA 8006              SJMP    ?C0272
00EC         ?C0046:
                                           ; SOURCE LINE # 588
00EC 7B00        R     MOV     R3,#MBYTE ?SC_146
00EE 7A00        R     MOV     R2,#HIGH ?SC_146
00F0 7900        R     MOV     R1,#LOW ?SC_146
00F2         ?C0272:
00F2 110000      E     ACALL   _Puts
00F5         ?C0047:
                                           ; SOURCE LINE # 590
00F5 7FF3              MOV     R7,#0F3H
00F7 110000      R     ACALL   L?0451
                                           ; SOURCE LINE # 591
00FA E0                MOVX    A,@DPTR
00FB FF                MOV     R7,A
00FC C4                SWAP    A
00FD 13                RRC     A
00FE 13                RRC     A
00FF 5403              ANL     A,#03H
0101 14                DEC     A
0102 600F              JZ      ?C0050
0104 14                DEC     A
0105 6014              JZ      ?C0051
0107 2402              ADD     A,#02H
0109 7018              JNZ     ?C0052
                                           ; SOURCE LINE # 592
010B         ?C0049:
010B 7B00        R     MOV     R3,#MBYTE ?SC_149
010D 7A00        R     MOV     R2,#HIGH ?SC_149
010F 7900        R     MOV     R1,#LOW ?SC_149
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 59  

0111 8016              SJMP    ?C0275
                                           ; SOURCE LINE # 593
0113         ?C0050:
0113 7B00        R     MOV     R3,#MBYTE ?SC_158
0115 7A00        R     MOV     R2,#HIGH ?SC_158
0117 7900        R     MOV     R1,#LOW ?SC_158
0119         ?C0273:
0119 800E              SJMP    ?C0275
                                           ; SOURCE LINE # 594
011B         ?C0051:
011B 7B00        R     MOV     R3,#MBYTE ?SC_167
011D 7A00        R     MOV     R2,#HIGH ?SC_167
011F 7900        R     MOV     R1,#LOW ?SC_167
0121         ?C0274:
0121 8006              SJMP    ?C0275
                                           ; SOURCE LINE # 595
0123         ?C0052:
0123 7B00        R     MOV     R3,#MBYTE ?SC_178
0125 7A00        R     MOV     R2,#HIGH ?SC_178
0127 7900        R     MOV     R1,#LOW ?SC_178
0129         ?C0275:
0129 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 596
012C         ?C0048:
                                           ; SOURCE LINE # 597
012C 90000000    R     MOV     DPTR,#bTemp
0130 E0                MOVX    A,@DPTR
                                           ; SOURCE LINE # 598
                                           ; SOURCE LINE # 599
0131 110000      R     ACALL   L?0486
0134 600F              JZ      ?C0055
0136 14                DEC     A
0137 6014              JZ      ?C0056
0139 2402              ADD     A,#02H
013B 7018              JNZ     ?C0057
                                           ; SOURCE LINE # 600
013D         ?C0054:
013D 7B00        R     MOV     R3,#MBYTE ?SC_184
013F 7A00        R     MOV     R2,#HIGH ?SC_184
0141 7900        R     MOV     R1,#LOW ?SC_184
0143 8016              SJMP    ?C0278
                                           ; SOURCE LINE # 601
0145         ?C0055:
0145 7B00        R     MOV     R3,#MBYTE ?SC_189
0147 7A00        R     MOV     R2,#HIGH ?SC_189
0149 7900        R     MOV     R1,#LOW ?SC_189
014B         ?C0276:
014B 800E              SJMP    ?C0278
                                           ; SOURCE LINE # 602
014D         ?C0056:
014D 7B00        R     MOV     R3,#MBYTE ?SC_194
014F 7A00        R     MOV     R2,#HIGH ?SC_194
0151 7900        R     MOV     R1,#LOW ?SC_194
0153         ?C0277:
0153 8006              SJMP    ?C0278
                                           ; SOURCE LINE # 603
0155         ?C0057:
0155 7B00        R     MOV     R3,#MBYTE ?SC_199
0157 7A00        R     MOV     R2,#HIGH ?SC_199
0159 7900        R     MOV     R1,#LOW ?SC_199
015B         ?C0278:
015B 110000      E     ACALL   _Puts
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 60  

                                           ; SOURCE LINE # 604
015E         ?C0053:
                                           ; SOURCE LINE # 605
015E 7FF6              MOV     R7,#0F6H
0160 110000      E     ACALL   _ReadI2C_8A
;---- Variable 'wTemp' assigned to Register 'R6/R7' ----
0163 EF                MOV     A,R7
0164 FE                MOV     R6,A
                                           ; SOURCE LINE # 606
0165 7FF7              MOV     R7,#0F7H
0167 110000      E     ACALL   _ReadI2C_8A
016A 7E00              MOV     R6,#00H
                                           ; SOURCE LINE # 607
016C 7B00        R     MOV     R3,#MBYTE ?SC_206
016E 7A00        R     MOV     R2,#HIGH ?SC_206
0170 7900        R     MOV     R1,#LOW ?SC_206
0172 EE                MOV     A,R6
0173 110000      R     ACALL   L?0383
0176 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 608
0179         ?C0045:
                                           ; SOURCE LINE # 609
0179 110000      R     ACALL   L?0392
                                           ; SOURCE LINE # 610
017C 30E409            JNB     ACC.4,?C0058
                                           ; SOURCE LINE # 611
017F 7B00        R     MOV     R3,#MBYTE ?SC_216
0181 7A00        R     MOV     R2,#HIGH ?SC_216
0183 7900        R     MOV     R1,#LOW ?SC_216
0185 110000      E     ACALL   _Puts
0188         ?C0058:
                                           ; SOURCE LINE # 612
0188 90000000    R     MOV     DPTR,#bTemp
018C E0                MOVX    A,@DPTR
018D 30E25E            JNB     ACC.2,?C0062
                                           ; SOURCE LINE # 613
0190 7B00        R     MOV     R3,#MBYTE ?SC_226
0192 7A00        R     MOV     R2,#HIGH ?SC_226
0194 7900        R     MOV     R1,#LOW ?SC_226
0196 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 614
0199 7FD8              MOV     R7,#0D8H
019B 110000      R     ACALL   L?0451
                                           ; SOURCE LINE # 615
019E 7B00        R     MOV     R3,#MBYTE ?SC_237
01A0 7A00        R     MOV     R2,#HIGH ?SC_237
01A2 7900        R     MOV     R1,#LOW ?SC_237
01A4 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
01A8 F0                MOVX    @DPTR,A
01A9 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 616
01AC 7FD9              MOV     R7,#0D9H
01AE 110000      E     ACALL   _ReadI2C_8A
01B1 90000000    R     MOV     DPTR,#bTemp
01B5 EF                MOV     A,R7
01B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 617
01B7 7B00        R     MOV     R3,#MBYTE ?SC_252
01B9 7A00        R     MOV     R2,#HIGH ?SC_252
01BB 7900        R     MOV     R1,#LOW ?SC_252
01BD 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 618
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 61  

01C0 90000000    R     MOV     DPTR,#bTemp
01C4 E0                MOVX    A,@DPTR
01C5 30E308            JNB     ACC.3,?C0060
01C8 7B00        R     MOV     R3,#MBYTE ?SC_258
01CA 7A00        R     MOV     R2,#HIGH ?SC_258
01CC 7900        R     MOV     R1,#LOW ?SC_258
01CE 8006              SJMP    ?C0279
01D0         ?C0060:
                                           ; SOURCE LINE # 619
01D0 7B00        R     MOV     R3,#MBYTE ?SC_262
01D2 7A00        R     MOV     R2,#HIGH ?SC_262
01D4 7900        R     MOV     R1,#LOW ?SC_262
01D6         ?C0279:
01D6 110000      E     ACALL   _Puts
01D9         ?C0061:
                                           ; SOURCE LINE # 620
01D9 7B00        R     MOV     R3,#MBYTE ?SC_267
01DB 7A00        R     MOV     R2,#HIGH ?SC_267
01DD 7900        R     MOV     R1,#LOW ?SC_267
01DF 90000000    R     MOV     DPTR,#bTemp
01E3 E0                MOVX    A,@DPTR
01E4 5407              ANL     A,#07H
01E6 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
01EA F0                MOVX    @DPTR,A
01EB 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 621
                                           ; SOURCE LINE # 622
01EE         ?C0062:
01EE 22                RET     
01EF         L?0392:
01EF 7FF4              MOV     R7,#0F4H
01F1 110000      E     ACALL   _ReadI2C_8A
01F4 90000000    R     MOV     DPTR,#bTemp
01F8 EF                MOV     A,R7
01F9 F0                MOVX    @DPTR,A
01FA 22                RET     
01FB         L?0451:
01FB 110000      E     ACALL   _ReadI2C_8A
01FE 90000000    R     MOV     DPTR,#bTemp
0202 EF                MOV     A,R7
0203 F0                MOVX    @DPTR,A
0204 22                RET     
             ; FUNCTION _I2CSPI_dump_DmaReg (END)

             ; FUNCTION _I2CSPI_IsCmdAccepted (BEGIN)
                                           ; SOURCE LINE # 653
0000 90000000    R     MOV     DPTR,#option
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 EC                MOV     A,R4
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A ED                MOV     A,R5
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D EB                MOV     A,R3
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 654
                                           ; SOURCE LINE # 658
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 62  

0011 6009              JZ      ?C0063
                                           ; SOURCE LINE # 659
0013 7B00        R     MOV     R3,#MBYTE ?SC_276
0015 7A00        R     MOV     R2,#HIGH ?SC_276
0017 7900        R     MOV     R1,#LOW ?SC_276
0019 110000      E     ACALL   _Puts
001C         ?C0063:
                                           ; SOURCE LINE # 661
001C 7D04              MOV     R5,#04H
001E 7FFF              MOV     R7,#0FFH
0020 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 662
0023 E4                CLR     A
0024 90000000    R     MOV     DPTR,#i
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A F0                MOVX    @DPTR,A
002B         ?C0064:
002B 90000000    R     MOV     DPTR,#loop
002F E0                MOVX    A,@DPTR
0030 FE                MOV     R6,A
0031 A3                INC     DPTR
0032 E0                MOVX    A,@DPTR
0033 FF                MOV     R7,A
0034 C3                CLR     C
0035 90000000    R     MOV     DPTR,#i+01H
0039 E0                MOVX    A,@DPTR
003A 9F                SUBB    A,R7
003B 90000000    R     MOV     DPTR,#i
003F E0                MOVX    A,@DPTR
0040 9E                SUBB    A,R6
0041 506B              JNC     ?C0065
                                           ; SOURCE LINE # 663
0043 90000000    R     MOV     DPTR,#debug
0047 E0                MOVX    A,@DPTR
0048 600F              JZ      ?C0067
                                           ; SOURCE LINE # 664
004A 7FFF              MOV     R7,#0FFH
004C 110000      E     ACALL   _ReadI2C_8A
004F 90000000    R     MOV     DPTR,#vdata
                                           ; SOURCE LINE # 665
0053 110000      R     ACALL   L?0419
0056 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 666
0059         ?C0067:
                                           ; SOURCE LINE # 667
0059 7FF4              MOV     R7,#0F4H
005B 110000      E     ACALL   _ReadI2C_8A
005E 90000000    R     MOV     DPTR,#vdata
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 668
0064 90000000    R     MOV     DPTR,#debug
0068 E0                MOVX    A,@DPTR
0069 600D              JZ      ?C0068
                                           ; SOURCE LINE # 669
006B 110000      R     ACALL   L?0496
006E 90000000    R     MOV     DPTR,#vdata
0072 110000      R     ACALL   L?0420
0075 110000      E     ACALL   _Printf
0078         ?C0068:
                                           ; SOURCE LINE # 671
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 63  

0078 90000000    R     MOV     DPTR,#vdata
007C E0                MOVX    A,@DPTR
007D 5417              ANL     A,#017H
007F FF                MOV     R7,A
0080 90000000    R     MOV     DPTR,#option
0084 E0                MOVX    A,@DPTR
0085 B50706            CJNE    A,AR7,?C0069
                                           ; SOURCE LINE # 672
0088 90000000    R     MOV     DPTR,#i
008C 8034              SJMP    ?C0280
008E         ?C0069:
                                           ; SOURCE LINE # 674
008E 90000000    R     MOV     DPTR,#delay
0092 E0                MOVX    A,@DPTR
0093 FF                MOV     R7,A
0094 6005              JZ      ?C0066
                                           ; SOURCE LINE # 675
0096 7E00              MOV     R6,#00H
0098 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 676
009B         ?C0066:
009B 90000000    R     MOV     DPTR,#i+01H
009F E0                MOVX    A,@DPTR
00A0 04                INC     A
00A1 F0                MOVX    @DPTR,A
00A2 7007              JNZ     ?C0262
00A4 90000000    R     MOV     DPTR,#i
00A8 E0                MOVX    A,@DPTR
00A9 04                INC     A
00AA F0                MOVX    @DPTR,A
00AB         ?C0262:
00AB 010000      R     AJMP    ?C0064
00AE         ?C0065:
                                           ; SOURCE LINE # 677
00AE 90000000    R     MOV     DPTR,#debug
00B2 E0                MOVX    A,@DPTR
00B3 6009              JZ      ?C0072
                                           ; SOURCE LINE # 678
00B5 90000000    R     MOV     DPTR,#option
00B9 E0                MOVX    A,@DPTR
00BA FF                MOV     R7,A
00BB 110000      R     ACALL   _I2CSPI_dump_DmaReg
00BE         ?C0072:
                                           ; SOURCE LINE # 679
00BE 90000000    R     MOV     DPTR,#loop
00C2         ?C0280:
00C2 E0                MOVX    A,@DPTR
00C3 FE                MOV     R6,A
00C4 A3                INC     DPTR
00C5 E0                MOVX    A,@DPTR
00C6 FF                MOV     R7,A
                                           ; SOURCE LINE # 680
00C7         ?C0070:
00C7 22                RET     
             ; FUNCTION _I2CSPI_IsCmdAccepted (END)

             ; FUNCTION I2CSPI_write_enable (BEGIN)
                                           ; SOURCE LINE # 683
                                           ; SOURCE LINE # 684
                                           ; SOURCE LINE # 687
0000 7D04              MOV     R5,#04H
0002 7FFF              MOV     R7,#0FFH
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 64  

0004 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 688
0007 7D41              MOV     R5,#041H
0009 7FF3              MOV     R7,#0F3H
000B 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 689
000E E4                CLR     A
000F FD                MOV     R5,A
0010 7FF5              MOV     R7,#0F5H
0012 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 690
0015 E4                CLR     A
0016 FD                MOV     R5,A
0017 7FF8              MOV     R7,#0F8H
0019 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 691
001C E4                CLR     A
001D FD                MOV     R5,A
001E 7FF9              MOV     R7,#0F9H
0020 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 692
0023 7D06              MOV     R5,#06H
0025 7FFA              MOV     R7,#0FAH
0027 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 693
002A 7D01              MOV     R5,#01H
002C 7FF4              MOV     R7,#0F4H
002E 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 695
0031 110000      R     ACALL   L?0500
0034 FB                MOV     R3,A
0035 7D32              MOV     R5,#032H
0037 FC                MOV     R4,A
0038 FF                MOV     R7,A
0039 110000      R     ACALL   _I2CSPI_IsCmdAccepted
;---- Variable 'wRet' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 696
003C EF                MOV     A,R7
003D 6432              XRL     A,#032H
003F 4E                ORL     A,R6
0040 700C              JNZ     ?C0073
                                           ; SOURCE LINE # 697
0042 7B00        R     MOV     R3,#MBYTE ?SC_278
0044 7A00        R     MOV     R2,#HIGH ?SC_278
0046 7900        R     MOV     R1,#LOW ?SC_278
0048 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 698
004B 7F01              MOV     R7,#01H
004D 22                RET     
                                           ; SOURCE LINE # 699
004E         ?C0073:
                                           ; SOURCE LINE # 701
004E 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 702
0050         ?C0074:
0050 22                RET     
             ; FUNCTION I2CSPI_write_enable (END)

             ; FUNCTION _I2CSPI_read_status_reg (BEGIN)
                                           ; SOURCE LINE # 707
0000 90000000    R     MOV     DPTR,#loop
0004 EE                MOV     A,R6
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 65  

0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
                                           ; SOURCE LINE # 708
                                           ; SOURCE LINE # 711
0007 110000      R     ACALL   L?0466
000A 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 712
000D 7D41              MOV     R5,#041H
000F 7FF3              MOV     R7,#0F3H
0011 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 713
0014 E4                CLR     A
0015 FD                MOV     R5,A
0016 7FF5              MOV     R7,#0F5H
0018 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 714
001B 7D04              MOV     R5,#04H
001D 7FF6              MOV     R7,#0F6H
001F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 715
0022 7DD0              MOV     R5,#0D0H
0024 7FF7              MOV     R7,#0F7H
0026 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 716
0029 E4                CLR     A
002A FD                MOV     R5,A
002B 7FF8              MOV     R7,#0F8H
002D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 717
0030 7D01              MOV     R5,#01H
0032 7FF9              MOV     R7,#0F9H
0034 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 718
0037 7D05              MOV     R5,#05H
0039 7FFA              MOV     R7,#0FAH
003B 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 719
003E 7D01              MOV     R5,#01H
0040 7FF4              MOV     R7,#0F4H
0042 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 721
0045 110000      R     ACALL   L?0502
0048 A3                INC     DPTR
0049 E0                MOVX    A,@DPTR
004A FB                MOV     R3,A
004B 110000      R     ACALL   L?0500
004E FF                MOV     R7,A
004F 110000      R     ACALL   _I2CSPI_IsCmdAccepted
;---- Variable 'wRet' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 722
0052 110000      R     ACALL   L?0502
0055 B50722            CJNE    A,AR7,?C0075
0058 EC                MOV     A,R4
0059 B5061E            CJNE    A,AR6,?C0075
                                           ; SOURCE LINE # 723
005C 7B00        R     MOV     R3,#MBYTE ?SC_289
005E 7A00        R     MOV     R2,#HIGH ?SC_289
0060 7900        R     MOV     R1,#LOW ?SC_289
0062 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
0066 F0                MOVX    @DPTR,A
0067 A3                INC     DPTR
0068 ED                MOV     A,R5
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 66  

0069 F0                MOVX    @DPTR,A
006A 90000000    R     MOV     DPTR,#base
006E E0                MOVX    A,@DPTR
006F 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+05H
0073 F0                MOVX    @DPTR,A
0074 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 724
0077 7F01              MOV     R7,#01H
0079 22                RET     
                                           ; SOURCE LINE # 725
007A         ?C0075:
                                           ; SOURCE LINE # 727
007A 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 728
007C         ?C0076:
007C 22                RET     
             ; FUNCTION _I2CSPI_read_status_reg (END)

             ; FUNCTION I2CSPI_check_status_reg (BEGIN)
                                           ; SOURCE LINE # 730
                                           ; SOURCE LINE # 731
                                           ; SOURCE LINE # 735
0000 E4                CLR     A
0001 90000000    R     MOV     DPTR,#i
0005 F0                MOVX    @DPTR,A
0006         ?C0077:
                                           ; SOURCE LINE # 736
0006 7D0A              MOV     R5,#0AH
0008 7F64              MOV     R7,#064H
000A 7E00              MOV     R6,#00H
000C 110000      R     ACALL   _I2CSPI_read_status_reg
000F 90000000    R     MOV     DPTR,#ret
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 737
0015 E0                MOVX    A,@DPTR
0016 7019              JNZ     ?C0080
                                           ; SOURCE LINE # 738
0018 7D04              MOV     R5,#04H
001A 7FFF              MOV     R7,#0FFH
001C 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 739
001F 7FD0              MOV     R7,#0D0H
0021 110000      E     ACALL   _ReadI2C_8A
0024 90000000    R     MOV     DPTR,#bTemp
0028 EF                MOV     A,R7
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
002A E0                MOVX    A,@DPTR
002B 20E003            JB      ACC.0,?C0080
                                           ; SOURCE LINE # 741
002E 7F00              MOV     R7,#00H
0030 22                RET     
                                           ; SOURCE LINE # 742
0031         ?C0080:
                                           ; SOURCE LINE # 743
0031 7F32              MOV     R7,#032H
0033 7E00              MOV     R6,#00H
0035 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 744
0038 90000000    R     MOV     DPTR,#i
003C E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 67  

003D 04                INC     A
003E F0                MOVX    @DPTR,A
003F E0                MOVX    A,@DPTR
0040 C3                CLR     C
0041 940A              SUBB    A,#0AH
0043 40C1              JC      ?C0077
0045         ?C0078:
                                           ; SOURCE LINE # 745
0045 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 746
0047         ?C0082:
0047 22                RET     
             ; FUNCTION I2CSPI_check_status_reg (END)

             ; FUNCTION _I2CSPI_sector_erase (BEGIN)
                                           ; SOURCE LINE # 749
0000 90000000    R     MOV     DPTR,#spi_addr
0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 750
                                           ; SOURCE LINE # 753
0007 7B00        R     MOV     R3,#MBYTE ?SC_334
0009 7A00        R     MOV     R2,#HIGH ?SC_334
000B 7900        R     MOV     R1,#LOW ?SC_334
000D 90000000    R     MOV     DPTR,#spi_addr
0011 110000      R     ACALL   L?0341
0014 110000      R     ACALL   L?0445
0017 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 754
001A 110000      R     ACALL   I2CSPI_write_enable
                                           ; SOURCE LINE # 756
001D 7D04              MOV     R5,#04H
001F 7FFF              MOV     R7,#0FFH
0021 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 757
0024 7D44              MOV     R5,#044H
0026 7FF3              MOV     R7,#0F3H
0028 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 758
002B E4                CLR     A
002C FD                MOV     R5,A
002D 7FF5              MOV     R7,#0F5H
002F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 759
0032 E4                CLR     A
0033 FD                MOV     R5,A
0034 7FF8              MOV     R7,#0F8H
0036 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 760
0039 E4                CLR     A
003A FD                MOV     R5,A
003B 7FF9              MOV     R7,#0F9H
003D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 761
0040 7D20              MOV     R5,#020H
0042 7FFA              MOV     R7,#0FAH
                                           ; SOURCE LINE # 762
0044 110000      R     ACALL   L?0477
0047 110000      R     ACALL   L?0341
004A 110000      R     ACALL   L?0412
                                           ; SOURCE LINE # 763
004D 110000      R     ACALL   L?0477
0050 110000      R     ACALL   L?0341
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 68  

0053 110000      R     ACALL   L?0414
0056 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 764
0059 90000000    R     MOV     DPTR,#spi_addr
005D 110000      R     ACALL   L?0447
0060 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 765
0063 7D07              MOV     R5,#07H
0065 7FF4              MOV     R7,#0F4H
0067 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 767
006A 110000      R     ACALL   L?0435
006D 110000      R     ACALL   _I2CSPI_IsCmdAccepted
0070 90000000    R     MOV     DPTR,#ret
0074 EF                MOV     A,R7
0075 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 768
0076 BF1408            CJNE    R7,#014H,?C0083
                                           ; SOURCE LINE # 769
0079 7B00        R     MOV     R3,#MBYTE ?SC_343
007B 7A00        R     MOV     R2,#HIGH ?SC_343
007D 7900        R     MOV     R1,#LOW ?SC_343
                                           ; SOURCE LINE # 770
007F 8017              SJMP    ?C0281
                                           ; SOURCE LINE # 771
0081         ?C0083:
                                           ; SOURCE LINE # 775
0081 7D0A              MOV     R5,#0AH
0083 7F64              MOV     R7,#064H
0085 7E00              MOV     R6,#00H
0087 110000      R     ACALL   _I2CSPI_read_status_reg
008A 90000000    R     MOV     DPTR,#ret
008E EF                MOV     A,R7
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 776
0090 600C              JZ      ?C0085
                                           ; SOURCE LINE # 777
0092 7B00        R     MOV     R3,#MBYTE ?SC_352
0094 7A00        R     MOV     R2,#HIGH ?SC_352
0096 7900        R     MOV     R1,#LOW ?SC_352
0098         ?C0281:
0098 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 778
009B 7F01              MOV     R7,#01H
009D 22                RET     
                                           ; SOURCE LINE # 779
009E         ?C0085:
                                           ; SOURCE LINE # 780
009E 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 781
00A0         ?C0084:
00A0 22                RET     
00A1         L?0477:
00A1 110000      E     ACALL   _WriteI2C_8A
00A4 90000000    R     MOV     DPTR,#spi_addr
00A8 22                RET     
             ; FUNCTION _I2CSPI_sector_erase (END)

             ; FUNCTION _I2CSPI_block_erase (BEGIN)
                                           ; SOURCE LINE # 783
0000 90000000    R     MOV     DPTR,#spi_addr
0004 110000      E     ACALL   ?C?LSTXDATA
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 69  

                                           ; SOURCE LINE # 784
                                           ; SOURCE LINE # 787
0007 7B00        R     MOV     R3,#MBYTE ?SC_369
0009 7A00        R     MOV     R2,#HIGH ?SC_369
000B 7900        R     MOV     R1,#LOW ?SC_369
000D 90000000    R     MOV     DPTR,#spi_addr
0011 110000      R     ACALL   L?0341
0014 110000      R     ACALL   L?0445
0017 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 788
001A 110000      R     ACALL   I2CSPI_write_enable
                                           ; SOURCE LINE # 790
001D 7D04              MOV     R5,#04H
001F 7FFF              MOV     R7,#0FFH
0021 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 791
0024 7D44              MOV     R5,#044H
0026 7FF3              MOV     R7,#0F3H
0028 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 792
002B E4                CLR     A
002C FD                MOV     R5,A
002D 7FF5              MOV     R7,#0F5H
002F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 793
0032 E4                CLR     A
0033 FD                MOV     R5,A
0034 7FF8              MOV     R7,#0F8H
0036 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 794
0039 E4                CLR     A
003A FD                MOV     R5,A
003B 7FF9              MOV     R7,#0F9H
003D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 795
0040 7DD8              MOV     R5,#0D8H
0042 7FFA              MOV     R7,#0FAH
                                           ; SOURCE LINE # 796
0044 110000      R     ACALL   L?0478
0047 110000      R     ACALL   L?0341
004A 110000      R     ACALL   L?0412
                                           ; SOURCE LINE # 797
004D 110000      R     ACALL   L?0478
0050 110000      R     ACALL   L?0341
0053 110000      R     ACALL   L?0414
0056 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 798
0059 90000000    R     MOV     DPTR,#spi_addr
005D 110000      R     ACALL   L?0447
0060 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 799
0063 7D07              MOV     R5,#07H
0065 7FF4              MOV     R7,#0F4H
0067 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 801
006A 110000      R     ACALL   L?0435
006D 110000      R     ACALL   _I2CSPI_IsCmdAccepted
0070 90000000    R     MOV     DPTR,#ret
0074 EF                MOV     A,R7
0075 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 802
0076 BF1408            CJNE    R7,#014H,?C0086
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 70  

                                           ; SOURCE LINE # 803
0079 7B00        R     MOV     R3,#MBYTE ?SC_378
007B 7A00        R     MOV     R2,#HIGH ?SC_378
007D 7900        R     MOV     R1,#LOW ?SC_378
                                           ; SOURCE LINE # 804
007F 8017              SJMP    ?C0282
                                           ; SOURCE LINE # 805
0081         ?C0086:
                                           ; SOURCE LINE # 809
0081 7D0A              MOV     R5,#0AH
0083 7F2C              MOV     R7,#02CH
0085 7E01              MOV     R6,#01H
0087 110000      R     ACALL   _I2CSPI_read_status_reg
008A 90000000    R     MOV     DPTR,#ret
008E EF                MOV     A,R7
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 810
0090 600C              JZ      ?C0088
                                           ; SOURCE LINE # 811
0092 7B00        R     MOV     R3,#MBYTE ?SC_387
0094 7A00        R     MOV     R2,#HIGH ?SC_387
0096 7900        R     MOV     R1,#LOW ?SC_387
0098         ?C0282:
0098 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 812
009B 7F01              MOV     R7,#01H
009D 22                RET     
                                           ; SOURCE LINE # 813
009E         ?C0088:
                                           ; SOURCE LINE # 814
009E 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 815
00A0         ?C0087:
00A0 22                RET     
00A1         L?0478:
00A1 110000      E     ACALL   _WriteI2C_8A
00A4 90000000    R     MOV     DPTR,#spi_addr
00A8 22                RET     
             ; FUNCTION _I2CSPI_block_erase (END)

             ; FUNCTION _I2CSPI_download_master_to_xmem (BEGIN)
                                           ; SOURCE LINE # 867
0000 90000000    R     MOV     DPTR,#spiaddr
0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 868
                                           ; SOURCE LINE # 871
0007 90000000    R     MOV     DPTR,#p
000B 110000      R     ACALL   L?0423
                                           ; SOURCE LINE # 875
000E D3                SETB    C
000F 90000000    R     MOV     DPTR,#length+01H
0013 E0                MOVX    A,@DPTR
0014 9480              SUBB    A,#080H
0016 90000000    R     MOV     DPTR,#length
001A E0                MOVX    A,@DPTR
001B 9400              SUBB    A,#00H
001D 4009              JC      ?C0089
                                           ; SOURCE LINE # 876
001F 7B00        R     MOV     R3,#MBYTE ?SC_404
0021 7A00        R     MOV     R2,#HIGH ?SC_404
0023 7900        R     MOV     R1,#LOW ?SC_404
0025 110000      E     ACALL   _Puts
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 71  

                                           ; SOURCE LINE # 877
0028         ?C0089:
                                           ; SOURCE LINE # 878
0028 90000000    R     MOV     DPTR,#spiaddr
002C 110000      R     ACALL   L?0341
002F 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+04H
0033 110000      R     ACALL   L?0424
0036 90000000    R     MOV     DPTR,#length
003A 110000      R     ACALL   L?0458
003D 110000      E     ACALL   _SpiFlash_Read_XMem
                                           ; SOURCE LINE # 880
0040 7B00        R     MOV     R3,#MBYTE ?SC_446
0042 7A00        R     MOV     R2,#HIGH ?SC_446
0044 7900        R     MOV     R1,#LOW ?SC_446
0046 90000000    R     MOV     DPTR,#spiaddr
004A 110000      R     ACALL   L?0341
004D 110000      R     ACALL   L?0446
0050 90000000    R     MOV     DPTR,#length
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 A3                INC     DPTR
0057 E0                MOVX    A,@DPTR
0058 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+07H
005C CF                XCH     A,R7
005D F0                MOVX    @DPTR,A
005E A3                INC     DPTR
005F EF                MOV     A,R7
0060 F0                MOVX    @DPTR,A
0061 90000000    R     MOV     DPTR,#ret
0065 E0                MOVX    A,@DPTR
0066 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+09H
006A F0                MOVX    @DPTR,A
006B 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 883
006E 110000      R     ACALL   I2CSPI_enable_xmem_access
0071 90000000    R     MOV     DPTR,#ret
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 884
0077 600C              JZ      ?C0090
                                           ; SOURCE LINE # 885
0079 7B00        R     MOV     R3,#MBYTE ?SC_479
007B 7A00        R     MOV     R2,#HIGH ?SC_479
007D 7900        R     MOV     R1,#LOW ?SC_479
007F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 886
0082 7F01              MOV     R7,#01H
0084 22                RET     
                                           ; SOURCE LINE # 887
0085         ?C0090:
                                           ; SOURCE LINE # 890
0085 7D04              MOV     R5,#04H
0087 7FFF              MOV     R7,#0FFH
0089 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 891
008C E4                CLR     A
008D FD                MOV     R5,A
008E 7FDB              MOV     R7,#0DBH
0090 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 892
0093 E4                CLR     A
0094 FD                MOV     R5,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 72  

0095 7FDC              MOV     R7,#0DCH
0097 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 893
009A E4                CLR     A
009B 90000000    R     MOV     DPTR,#i
009F F0                MOVX    @DPTR,A
00A0 A3                INC     DPTR
00A1 F0                MOVX    @DPTR,A
00A2         ?C0092:
00A2 90000000    R     MOV     DPTR,#length
00A6 E0                MOVX    A,@DPTR
00A7 FE                MOV     R6,A
00A8 A3                INC     DPTR
00A9 E0                MOVX    A,@DPTR
00AA FF                MOV     R7,A
00AB C3                CLR     C
00AC 90000000    R     MOV     DPTR,#i+01H
00B0 E0                MOVX    A,@DPTR
00B1 9F                SUBB    A,R7
00B2 90000000    R     MOV     DPTR,#i
00B6 E0                MOVX    A,@DPTR
00B7 9E                SUBB    A,R6
00B8 5049              JNC     ?C0093
                                           ; SOURCE LINE # 894
00BA 90000000    R     MOV     DPTR,#p
00BE 110000      R     ACALL   L?0440
00C1 90000000    R     MOV     DPTR,#bTemp
00C5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 895
00C6 E0                MOVX    A,@DPTR
00C7 FD                MOV     R5,A
00C8 7FDD              MOV     R7,#0DDH
00CA 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 896
00CD 90000000    R     MOV     DPTR,#g_CRC
00D1 E0                MOVX    A,@DPTR
00D2 90000000    R     MOV     DPTR,#bTemp
00D6 110000      R     ACALL   L?0349
00D9 110000      R     ACALL   L?0473
00DC 90000000    R     MOV     DPTR,#g_CRC+01H
00E0 E0                MOVX    A,@DPTR
00E1 90000000    R     MOV     DPTR,#g_CRC
00E5 110000      R     ACALL   L?0411
                                           ; SOURCE LINE # 897
00E8 A3                INC     DPTR
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB 110000      R     ACALL   L?0350
00EE 110000      R     ACALL   L?0403
                                           ; SOURCE LINE # 898
00F1 90000000    R     MOV     DPTR,#i+01H
00F5 E0                MOVX    A,@DPTR
00F6 04                INC     A
00F7 F0                MOVX    @DPTR,A
00F8 7007              JNZ     ?C0264
00FA 90000000    R     MOV     DPTR,#i
00FE E0                MOVX    A,@DPTR
00FF 04                INC     A
0100 F0                MOVX    @DPTR,A
0101         ?C0264:
0101 809F              SJMP    ?C0092
0103         ?C0093:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 73  

                                           ; SOURCE LINE # 900
0103 110000      R     ACALL   I2CSPI_disable_xmem_access
                                           ; SOURCE LINE # 902
0106 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 903
0108         ?C0091:
0108 22                RET     
             ; FUNCTION _I2CSPI_download_master_to_xmem (END)

             ; FUNCTION _I2CSPI_upload_from_xmem (BEGIN)
                                           ; SOURCE LINE # 950
0000 90000000    R     MOV     DPTR,#spiaddr
0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 951
                                           ; SOURCE LINE # 954
0007 110000      R     ACALL   I2CSPI_write_enable
                                           ; SOURCE LINE # 957
000A 7D04              MOV     R5,#04H
000C 7FFF              MOV     R7,#0FFH
000E 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 958
0011 7DC4              MOV     R5,#0C4H
0013 7FF3              MOV     R7,#0F3H
0015 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 959
0018 E4                CLR     A
0019 FD                MOV     R5,A
001A 7FF6              MOV     R7,#0F6H
001C 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 960
001F E4                CLR     A
0020 FD                MOV     R5,A
0021 7FF7              MOV     R7,#0F7H
0023 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 961
0026 E4                CLR     A
0027 FD                MOV     R5,A
0028 7FF5              MOV     R7,#0F5H
002A 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 962
002D 90000000    R     MOV     DPTR,#length
0031 E0                MOVX    A,@DPTR
0032 FD                MOV     R5,A
0033 7FF8              MOV     R7,#0F8H
0035 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 963
0038 90000000    R     MOV     DPTR,#length
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FD                MOV     R5,A
003F 7FF9              MOV     R7,#0F9H
0041 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 964
0044 7D02              MOV     R5,#02H
0046 7FFA              MOV     R7,#0FAH
                                           ; SOURCE LINE # 965
0048 110000      R     ACALL   L?0479
004B 110000      R     ACALL   L?0341
004E 110000      R     ACALL   L?0413
                                           ; SOURCE LINE # 966
0051 110000      R     ACALL   L?0479
0054 110000      R     ACALL   L?0341
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 74  

0057 110000      R     ACALL   L?0415
005A 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 967
005D 90000000    R     MOV     DPTR,#spiaddr
0061 110000      R     ACALL   L?0448
0064 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 968
0067 7D07              MOV     R5,#07H
0069 7FF4              MOV     R7,#0F4H
006B 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 969
006E 110000      R     ACALL   L?0501
0071 110000      R     ACALL   L?0436
0074 110000      R     ACALL   _I2CSPI_IsCmdAccepted
0077 90000000    R     MOV     DPTR,#ret
007B EF                MOV     A,R7
007C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 970
007D BF1408            CJNE    R7,#014H,?C0095
                                           ; SOURCE LINE # 971
0080 7B00        R     MOV     R3,#MBYTE ?SC_492
0082 7A00        R     MOV     R2,#HIGH ?SC_492
0084 7900        R     MOV     R1,#LOW ?SC_492
                                           ; SOURCE LINE # 972
0086 8017              SJMP    ?C0283
                                           ; SOURCE LINE # 973
0088         ?C0095:
                                           ; SOURCE LINE # 976
0088 7D0A              MOV     R5,#0AH
008A 7F05              MOV     R7,#05H
008C 7E00              MOV     R6,#00H
008E 110000      R     ACALL   _I2CSPI_read_status_reg
0091 90000000    R     MOV     DPTR,#ret
0095 EF                MOV     A,R7
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 977
0097 600C              JZ      ?C0097
                                           ; SOURCE LINE # 978
0099 7B00        R     MOV     R3,#MBYTE ?SC_509
009B 7A00        R     MOV     R2,#HIGH ?SC_509
009D 7900        R     MOV     R1,#LOW ?SC_509
009F         ?C0283:
009F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 979
00A2 7F01              MOV     R7,#01H
00A4 22                RET     
                                           ; SOURCE LINE # 980
00A5         ?C0097:
                                           ; SOURCE LINE # 981
00A5 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 982
00A7         ?C0096:
00A7 22                RET     
00A8         L?0479:
00A8 110000      E     ACALL   _WriteI2C_8A
00AB 90000000    R     MOV     DPTR,#spiaddr
00AF 22                RET     
             ; FUNCTION _I2CSPI_upload_from_xmem (END)

             ; FUNCTION _I2CSPI_check_crc (BEGIN)
                                           ; SOURCE LINE # 1018
0000 90000000    R     MOV     DPTR,#spiaddr
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 75  

0004 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1019
                                           ; SOURCE LINE # 1023
0007 7B00        R     MOV     R3,#MBYTE ?SC_520
0009 7A00        R     MOV     R2,#HIGH ?SC_520
000B 7900        R     MOV     R1,#LOW ?SC_520
000D 90000000    R     MOV     DPTR,#spiaddr
0011 110000      R     ACALL   L?0341
0014 110000      R     ACALL   L?0446
0017 90000000    R     MOV     DPTR,#length
001B 110000      R     ACALL   L?0341
001E 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+07H
0022 110000      E     ACALL   ?C?LSTXDATA
0025 90000000    R     MOV     DPTR,#loop
0029 E0                MOVX    A,@DPTR
002A 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+0BH
002E F0                MOVX    @DPTR,A
002F 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 1025
0032 7D04              MOV     R5,#04H
0034 7FFF              MOV     R7,#0FFH
0036 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1026
0039 7D64              MOV     R5,#064H
003B 7FF3              MOV     R7,#0F3H
003D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1027
0040 7D04              MOV     R5,#04H
0042 7FF6              MOV     R7,#0F6H
0044 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1028
0047 7DD0              MOV     R5,#0D0H
0049 7FF7              MOV     R7,#0F7H
                                           ; SOURCE LINE # 1029
004B 110000      R     ACALL   L?0480
004E 110000      R     ACALL   L?0341
0051 7810              MOV     R0,#010H
0053 110000      E     ACALL   ?C?ULSHR
0056 AD07              MOV     R5,AR7
0058 7FF5              MOV     R7,#0F5H
                                           ; SOURCE LINE # 1030
005A 110000      R     ACALL   L?0480
005D 110000      R     ACALL   L?0341
0060 7808              MOV     R0,#08H
0062 110000      E     ACALL   ?C?ULSHR
0065 AD07              MOV     R5,AR7
0067 7FF8              MOV     R7,#0F8H
0069 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1031
006C 90000000    R     MOV     DPTR,#length
0070 A3                INC     DPTR
0071 A3                INC     DPTR
0072 A3                INC     DPTR
0073 E0                MOVX    A,@DPTR
0074 FD                MOV     R5,A
0075 7FF9              MOV     R7,#0F9H
0077 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1032
007A 7D03              MOV     R5,#03H
007C 7FFA              MOV     R7,#0FAH
                                           ; SOURCE LINE # 1033
007E 110000      R     ACALL   L?0481
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 76  

0081 110000      R     ACALL   L?0341
0084 110000      R     ACALL   L?0413
                                           ; SOURCE LINE # 1034
0087 110000      R     ACALL   L?0481
008A 110000      R     ACALL   L?0341
008D 110000      R     ACALL   L?0415
0090 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1035
0093 90000000    R     MOV     DPTR,#spiaddr
0097 110000      R     ACALL   L?0448
009A 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1036
009D 7D01              MOV     R5,#01H
009F 7FF4              MOV     R7,#0F4H
00A1 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1038
00A4 90000000    R     MOV     DPTR,#loop
00A8 E0                MOVX    A,@DPTR
00A9 FD                MOV     R5,A
00AA 7C00              MOV     R4,#00H
00AC 90000000    R     MOV     DPTR,#?_I2CSPI_IsCmdAccepted?BYTE+04H
00B0 7401              MOV     A,#01H
00B2 F0                MOVX    @DPTR,A
00B3 7B0A              MOV     R3,#0AH
00B5 E4                CLR     A
00B6 FF                MOV     R7,A
00B7 110000      R     ACALL   _I2CSPI_IsCmdAccepted
;---- Variable 'ret' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1039
00BA 90000000    R     MOV     DPTR,#loop
00BE E0                MOVX    A,@DPTR
00BF FE                MOV     R6,A
00C0 B5070D            CJNE    A,AR7,?C0098
                                           ; SOURCE LINE # 1040
00C3 7B00        R     MOV     R3,#MBYTE ?SC_559
00C5 7A00        R     MOV     R2,#HIGH ?SC_559
00C7 7900        R     MOV     R1,#LOW ?SC_559
00C9 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
00CD EE                MOV     A,R6
                                           ; SOURCE LINE # 1041
00CE 8057              SJMP    ?C0284
                                           ; SOURCE LINE # 1042
00D0         ?C0098:
                                           ; SOURCE LINE # 1045
00D0 7D04              MOV     R5,#04H
00D2 7FFF              MOV     R7,#0FFH
00D4 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1046
00D7 7FEE              MOV     R7,#0EEH
00D9 110000      E     ACALL   _ReadI2C_8A
00DC 90000000    R     MOV     DPTR,#readed
                                           ; SOURCE LINE # 1047
00E0 110000      R     ACALL   L?0487
00E3 90000000    R     MOV     DPTR,#readed
00E7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1048
00E8 7FEF              MOV     R7,#0EFH
00EA 110000      E     ACALL   _ReadI2C_8A
00ED 90000000    R     MOV     DPTR,#readed
00F1 E0                MOVX    A,@DPTR
00F2 FE                MOV     R6,A
00F3 A3                INC     DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 77  

00F4 E0                MOVX    A,@DPTR
00F5 4F                ORL     A,R7
00F6 FF                MOV     R7,A
00F7 90000000    R     MOV     DPTR,#readed
00FB EE                MOV     A,R6
00FC F0                MOVX    @DPTR,A
00FD FE                MOV     R6,A
00FE A3                INC     DPTR
00FF EF                MOV     A,R7
0100 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1049
0101 90000000    R     MOV     DPTR,#crc
0105 E0                MOVX    A,@DPTR
0106 FC                MOV     R4,A
0107 A3                INC     DPTR
0108 E0                MOVX    A,@DPTR
0109 FD                MOV     R5,A
010A 6F                XRL     A,R7
010B 7002              JNZ     ?C0265
010D EC                MOV     A,R4
010E 6E                XRL     A,R6
010F         ?C0265:
010F 601D              JZ      ?C0100
                                           ; SOURCE LINE # 1050
0111 7B00        R     MOV     R3,#MBYTE ?SC_580
0113 7A00        R     MOV     R2,#HIGH ?SC_580
0115 7900        R     MOV     R1,#LOW ?SC_580
0117 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
011B EC                MOV     A,R4
011C F0                MOVX    @DPTR,A
011D A3                INC     DPTR
011E ED                MOV     A,R5
011F F0                MOVX    @DPTR,A
0120 90000000    R     MOV     DPTR,#readed
0124 110000      R     ACALL   L?0468
0127         ?C0284:
0127 F0                MOVX    @DPTR,A
0128 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1051
012B 7F01              MOV     R7,#01H
012D 22                RET     
                                           ; SOURCE LINE # 1052
012E         ?C0100:
                                           ; SOURCE LINE # 1053
012E 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 1054
0130         ?C0099:
0130 22                RET     
0131         L?0480:
0131 110000      E     ACALL   _WriteI2C_8A
0134 90000000    R     MOV     DPTR,#length
0138 22                RET     
0139         L?0481:
0139 110000      E     ACALL   _WriteI2C_8A
013C 90000000    R     MOV     DPTR,#spiaddr
0140 22                RET     
             ; FUNCTION _I2CSPI_check_crc (END)

             ; FUNCTION _I2CSPI_get_SPICLK (BEGIN)
                                           ; SOURCE LINE # 1056
;---- Variable 'pllclk' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1057
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 78  

                                           ; SOURCE LINE # 1061
0000 EF                MOV     A,R7
0001 6003              JZ      $ + 5H
0003 010000      R     AJMP    ?C0101
                                           ; SOURCE LINE # 1062
0006 FD                MOV     R5,A
0007 7FFF              MOV     R7,#0FFH
0009 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1063
000C 7FF8              MOV     R7,#0F8H
000E 110000      E     ACALL   _ReadI2C_8A
0011 110000      R     ACALL   L?0503
                                           ; SOURCE LINE # 1064
0014 110000      R     ACALL   L?0339
0017 110000      R     ACALL   L?0421
                                           ; SOURCE LINE # 1065
001A 90000000    R     MOV     DPTR,#pll
001E 110000      R     ACALL   L?0347
0021 C000              PUSH    AR0
0023 C001              PUSH    AR1
0025 C002              PUSH    AR2
0027 C003              PUSH    AR3
0029 7FF9              MOV     R7,#0F9H
002B 110000      E     ACALL   _ReadI2C_8A
002E D003              POP     AR3
0030 D002              POP     AR2
0032 D001              POP     AR1
0034 D000              POP     AR0
                                           ; SOURCE LINE # 1066
0036 110000      R     ACALL   L?0338
0039 110000      R     ACALL   L?0421
                                           ; SOURCE LINE # 1067
003C 90000000    R     MOV     DPTR,#pll
0040 110000      R     ACALL   L?0347
0043 C000              PUSH    AR0
0045 C001              PUSH    AR1
0047 C002              PUSH    AR2
0049 C003              PUSH    AR3
004B 7FFA              MOV     R7,#0FAH
004D 110000      E     ACALL   _ReadI2C_8A
0050 D003              POP     AR3
0052 D002              POP     AR2
0054 D001              POP     AR1
0056 D000              POP     AR0
                                           ; SOURCE LINE # 1069
0058 110000      R     ACALL   L?0338
005B 7806              MOV     R0,#06H
005D 110000      E     ACALL   ?C?ULSHR
                                           ; SOURCE LINE # 1070
0060 110000      R     ACALL   L?0339
0063 110000      R     ACALL   L?0475
                                           ; SOURCE LINE # 1071
0066 110000      R     ACALL   L?0339
0069 7803              MOV     R0,#03H
006B 110000      E     ACALL   ?C?ULSHR
006E 110000      R     ACALL   L?0422
                                           ; SOURCE LINE # 1073
0071 7FFD              MOV     R7,#0FDH
0073 110000      E     ACALL   _ReadI2C_8A
0076 90000000    R     MOV     DPTR,#bTemp
007A EF                MOV     A,R7
007B F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 79  

                                           ; SOURCE LINE # 1074
007C 54C0              ANL     A,#0C0H
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1075
007F E0                MOVX    A,@DPTR
0080 C4                SWAP    A
0081 13                RRC     A
0082 13                RRC     A
0083 5403              ANL     A,#03H
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1076
0086 110000      R     ACALL   L?0340
0089 90000000    R     MOV     DPTR,#bTemp
008D E0                MOVX    A,@DPTR
008E F9                MOV     R1,A
008F F8                MOV     R0,A
0090 110000      E     ACALL   ?C?ULSHR
                                           ; SOURCE LINE # 1077
0093 8008              SJMP    ?C0285
0095         ?C0101:
                                           ; SOURCE LINE # 1078
                                           ; SOURCE LINE # 1079
0095 7F00              MOV     R7,#00H
0097 7EF3              MOV     R6,#0F3H
0099 7D6F              MOV     R5,#06FH
009B 7C06              MOV     R4,#06H
009D         ?C0285:
009D 110000      R     ACALL   L?0422
                                           ; SOURCE LINE # 1080
00A0         ?C0102:
                                           ; SOURCE LINE # 1082
00A0 7D04              MOV     R5,#04H
00A2 7FFF              MOV     R7,#0FFH
00A4 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1083
00A7 7FE1              MOV     R7,#0E1H
00A9 110000      E     ACALL   _ReadI2C_8A
00AC EF                MOV     A,R7
00AD 540F              ANL     A,#0FH
00AF 90000000    R     MOV     DPTR,#bTemp
00B3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1084
00B4 B40A00            CJNE    A,#0AH,?C0266
00B7         ?C0266:
00B7 4003              JC      $ + 5H
00B9 010000      R     AJMP    ?C0114
00BC 90000000    R     MOV     DPTR,#?C0267
00C0 F8                MOV     R0,A
00C1 28                ADD     A,R0
00C2 28                ADD     A,R0
00C3 73                JMP     @A+DPTR
00C4         ?C0267:
00C4 010000      R     AJMP    ?C0104
00C7 010000      R     AJMP    ?C0105
00CA 010000      R     AJMP    ?C0106
00CD 010000      R     AJMP    ?C0107
00D0 010000      R     AJMP    ?C0108
00D3 010000      R     AJMP    ?C0109
00D6 010000      R     AJMP    ?C0110
00D9 010000      R     AJMP    ?C0111
00DC 010000      R     AJMP    ?C0112
00DF 010000      R     AJMP    ?C0113
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 80  

                                           ; SOURCE LINE # 1085
00E2         ?C0104:
00E2 110000      R     ACALL   L?0340
00E5 8066              SJMP    ?C0292
                                           ; SOURCE LINE # 1086
00E7         ?C0105:
00E7 E4                CLR     A
00E8 7F02              MOV     R7,#02H
00EA FE                MOV     R6,A
00EB FD                MOV     R5,A
00EC 90000000    R     MOV     DPTR,#pll
00F0 110000      R     ACALL   L?0346
00F3 110000      E     ACALL   ?C?LMUL
00F6 E4                CLR     A
00F7 7B03              MOV     R3,#03H
00F9 8029              SJMP    ?C0289
                                           ; SOURCE LINE # 1087
00FB         ?C0106:
00FB 110000      R     ACALL   L?0340
00FE 7801              MOV     R0,#01H
0100 110000      E     ACALL   ?C?ULSHR
0103         ?C0286:
0103 8048              SJMP    ?C0292
                                           ; SOURCE LINE # 1088
0105         ?C0107:
0105 110000      R     ACALL   L?0488
0108 110000      R     ACALL   L?0347
010B 110000      E     ACALL   ?C?LMUL
010E E4                CLR     A
010F 7B05              MOV     R3,#05H
0111         ?C0287:
0111 8011              SJMP    ?C0289
                                           ; SOURCE LINE # 1089
0113         ?C0108:
0113 E4                CLR     A
0114 7B03              MOV     R3,#03H
0116 801E              SJMP    ?C0290
                                           ; SOURCE LINE # 1090
0118         ?C0109:
0118 110000      R     ACALL   L?0488
011B 110000      R     ACALL   L?0347
011E 110000      E     ACALL   ?C?LMUL
0121 E4                CLR     A
0122 7B07              MOV     R3,#07H
0124         ?C0289:
0124 FA                MOV     R2,A
0125 F9                MOV     R1,A
0126 F8                MOV     R0,A
0127 8013              SJMP    ?C0291
                                           ; SOURCE LINE # 1091
0129         ?C0110:
0129 110000      R     ACALL   L?0340
012C 7802              MOV     R0,#02H
012E 110000      E     ACALL   ?C?ULSHR
0131         ?C0288:
0131 801A              SJMP    ?C0292
                                           ; SOURCE LINE # 1092
0133         ?C0111:
0133 E4                CLR     A
0134 7B05              MOV     R3,#05H
0136         ?C0290:
0136 FA                MOV     R2,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 81  

0137 F9                MOV     R1,A
0138 F8                MOV     R0,A
0139 110000      R     ACALL   L?0340
013C         ?C0291:
013C 110000      E     ACALL   ?C?ULDIV
013F 90000000    R     MOV     DPTR,#clock
0143 801F              SJMP    ?C0295
                                           ; SOURCE LINE # 1093
0145         ?C0112:
0145 110000      R     ACALL   L?0340
0148 7803              MOV     R0,#03H
014A 110000      E     ACALL   ?C?ULSHR
014D         ?C0292:
014D A3                INC     DPTR
014E         ?C0293:
014E 8014              SJMP    ?C0295
                                           ; SOURCE LINE # 1094
0150         ?C0113:
0150 110000      R     ACALL   L?0340
0153 7804              MOV     R0,#04H
0155 110000      E     ACALL   ?C?ULSHR
0158 A3                INC     DPTR
0159         ?C0294:
0159 8009              SJMP    ?C0295
                                           ; SOURCE LINE # 1095
015B         ?C0114:
015B 110000      R     ACALL   L?0340
015E 7805              MOV     R0,#05H
0160 110000      E     ACALL   ?C?ULSHR
0163 A3                INC     DPTR
0164         ?C0295:
0164 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1096
0167         ?C0103:
                                           ; SOURCE LINE # 1097
0167 90000000    R     MOV     DPTR,#clock
016B 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1098
016E         ?C0115:
016E 22                RET     
             ; FUNCTION _I2CSPI_get_SPICLK (END)

             ; FUNCTION I2CSPI_get_PCLK (BEGIN)
                                           ; SOURCE LINE # 1100
                                           ; SOURCE LINE # 1101
                                           ; SOURCE LINE # 1106
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 7FFF              MOV     R7,#0FFH
0004 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1107
0007 7FE8              MOV     R7,#0E8H
0009 110000      E     ACALL   _ReadI2C_8A
000C 110000      R     ACALL   L?0503
                                           ; SOURCE LINE # 1108
000F 110000      R     ACALL   L?0375
0012 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1109
0015 110000      R     ACALL   L?0374
0018 110000      R     ACALL   L?0347
001B C000              PUSH    AR0
001D C001              PUSH    AR1
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 82  

001F C002              PUSH    AR2
0021 C003              PUSH    AR3
0023 7FE9              MOV     R7,#0E9H
0025 110000      E     ACALL   _ReadI2C_8A
0028 D003              POP     AR3
002A D002              POP     AR2
002C D001              POP     AR1
002E D000              POP     AR0
0030 110000      R     ACALL   L?0359
                                           ; SOURCE LINE # 1110
0033 90000000    R     MOV     DPTR,#pll
0037 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1111
003A 110000      R     ACALL   L?0374
003D 110000      R     ACALL   L?0347
0040 C000              PUSH    AR0
0042 C001              PUSH    AR1
0044 C002              PUSH    AR2
0046 C003              PUSH    AR3
0048 7FEA              MOV     R7,#0EAH
004A 110000      E     ACALL   _ReadI2C_8A
004D D003              POP     AR3
004F D002              POP     AR2
0051 D001              POP     AR1
0053 D000              POP     AR0
0055 110000      R     ACALL   L?0359
                                           ; SOURCE LINE # 1113
0058 90000000    R     MOV     DPTR,#pll
005C 110000      R     ACALL   L?0341
005F 7806              MOV     R0,#06H
0061 110000      E     ACALL   ?C?ULSHR
                                           ; SOURCE LINE # 1114
0064 110000      R     ACALL   L?0375
0067 110000      R     ACALL   L?0341
006A 110000      R     ACALL   L?0475
                                           ; SOURCE LINE # 1115
006D 110000      R     ACALL   L?0375
0070 110000      R     ACALL   L?0341
0073 7803              MOV     R0,#03H
0075 110000      R     ACALL   L?0489
                                           ; SOURCE LINE # 1117
0078 7FED              MOV     R7,#0EDH
007A 110000      E     ACALL   _ReadI2C_8A
;---- Variable 'bTemp' assigned to Register 'R3' ----
007D AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 1118
007F EB                MOV     A,R3
0080 54C0              ANL     A,#0C0H
                                           ; SOURCE LINE # 1119
0082 C4                SWAP    A
0083 13                RRC     A
0084 13                RRC     A
0085 5403              ANL     A,#03H
0087 FB                MOV     R3,A
                                           ; SOURCE LINE # 1120
0088 90000000    R     MOV     DPTR,#pll
008C 110000      R     ACALL   L?0341
008F A803              MOV     R0,AR3
0091 110000      R     ACALL   L?0489
                                           ; SOURCE LINE # 1122
0094 7FF6              MOV     R7,#0F6H
0096 110000      E     ACALL   _ReadI2C_8A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 83  

0099 AB07              MOV     R3,AR7
                                           ; SOURCE LINE # 1123
009B EB                MOV     A,R3
009C 5403              ANL     A,#03H
009E FF                MOV     R7,A
;---- Variable 'divider' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1124
009F EB                MOV     A,R3
00A0 30E404            JNB     ACC.4,?C0116
                                           ; SOURCE LINE # 1125
00A3 EF                MOV     A,R7
00A4 4404              ORL     A,#04H
00A6 FF                MOV     R7,A
00A7         ?C0116:
                                           ; SOURCE LINE # 1127
00A7 EF                MOV     A,R7
00A8 B40800            CJNE    A,#08H,?C0268
00AB         ?C0268:
00AB 4003              JC      $ + 5H
00AD 010000      R     AJMP    ?C0117
00B0 90000000    R     MOV     DPTR,#?C0269
00B4 F8                MOV     R0,A
00B5 28                ADD     A,R0
00B6 28                ADD     A,R0
00B7 73                JMP     @A+DPTR
00B8         ?C0269:
00B8 010000      R     AJMP    ?C0118
00BB 010000      R     AJMP    ?C0119
00BE 010000      R     AJMP    ?C0120
00C1 010000      R     AJMP    ?C0121
00C4 010000      R     AJMP    ?C0122
00C7 010000      R     AJMP    ?C0123
00CA 010000      R     AJMP    ?C0124
00CD 010000      R     AJMP    ?C0125
                                           ; SOURCE LINE # 1128
00D0         ?C0118:
00D0 90000000    R     MOV     DPTR,#pll
00D4 110000      R     ACALL   L?0341
00D7 804C              SJMP    ?C0298
                                           ; SOURCE LINE # 1129
00D9         ?C0119:
00D9 110000      R     ACALL   L?0437
00DC 110000      R     ACALL   L?0347
00DF 110000      E     ACALL   ?C?LMUL
00E2 E4                CLR     A
00E3 7B03              MOV     R3,#03H
00E5 802D              SJMP    ?C0299
                                           ; SOURCE LINE # 1130
00E7         ?C0120:
00E7 90000000    R     MOV     DPTR,#pll
00EB 110000      R     ACALL   L?0341
00EE 7801              MOV     R0,#01H
00F0 110000      E     ACALL   ?C?ULSHR
00F3         ?C0296:
00F3 8030              SJMP    ?C0298
                                           ; SOURCE LINE # 1131
00F5         ?C0121:
00F5 110000      R     ACALL   L?0437
00F8 110000      R     ACALL   L?0347
00FB 110000      E     ACALL   ?C?LMUL
00FE E4                CLR     A
00FF 7B05              MOV     R3,#05H
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 84  

0101         ?C0297:
0101 8011              SJMP    ?C0299
                                           ; SOURCE LINE # 1132
0103         ?C0122:
0103 E4                CLR     A
0104 7B03              MOV     R3,#03H
0106 8023              SJMP    ?C0300
                                           ; SOURCE LINE # 1133
0108         ?C0123:
0108 110000      R     ACALL   L?0438
010B 110000      R     ACALL   L?0347
010E 110000      E     ACALL   ?C?LMUL
0111 E4                CLR     A
0112 7B07              MOV     R3,#07H
0114         ?C0299:
0114 FA                MOV     R2,A
0115 F9                MOV     R1,A
0116 F8                MOV     R0,A
0117 801C              SJMP    ?C0301
                                           ; SOURCE LINE # 1134
0119         ?C0124:
0119 90000000    R     MOV     DPTR,#pll
011D 110000      R     ACALL   L?0341
0120 7802              MOV     R0,#02H
0122 110000      E     ACALL   ?C?ULSHR
0125         ?C0298:
0125 A3                INC     DPTR
0126 8014              SJMP    ?C0302
                                           ; SOURCE LINE # 1135
0128         ?C0125:
0128 E4                CLR     A
0129 7B05              MOV     R3,#05H
012B         ?C0300:
012B FA                MOV     R2,A
012C F9                MOV     R1,A
012D F8                MOV     R0,A
012E 90000000    R     MOV     DPTR,#pll
0132 110000      R     ACALL   L?0341
0135         ?C0301:
0135 110000      E     ACALL   ?C?ULDIV
0138 90000000    R     MOV     DPTR,#clock
013C         ?C0302:
013C 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1136
013F         ?C0117:
                                           ; SOURCE LINE # 1137
013F 90000000    R     MOV     DPTR,#clock
0143 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1138
0146         ?C0126:
0146 22                RET     
             ; FUNCTION I2CSPI_get_PCLK (END)

             ; FUNCTION I2CSPI_check_slave_TW8836B (BEGIN)
                                           ; SOURCE LINE # 1141
                                           ; SOURCE LINE # 1142
                                           ; SOURCE LINE # 1149
0000 90000000    R     MOV     DPTR,#ping
0004 7401              MOV     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1152
                                           ; SOURCE LINE # 1153
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 85  

0007 110000      R     ACALL   L?0355
                                           ; SOURCE LINE # 1154
000A 110000      R     ACALL   L?0504
000D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1155
0010 90000000    R     MOV     DPTR,#bTemp
0014 E0                MOVX    A,@DPTR
0015 20E71A            JB      ACC.7,?C0127
                                           ; SOURCE LINE # 1156
0018 7B00        R     MOV     R3,#MBYTE ?SC_612
001A 7A00        R     MOV     R2,#HIGH ?SC_612
001C 7900        R     MOV     R1,#LOW ?SC_612
001E 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1157
0021 7B00        R     MOV     R3,#MBYTE ?SC_621
0023 7A00        R     MOV     R2,#HIGH ?SC_621
0025 7900        R     MOV     R1,#LOW ?SC_621
0027 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1158
002A E4                CLR     A
002B 90000000    R     MOV     DPTR,#ping
002F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1159
0030 8006              SJMP    ?C0128
0032         ?C0127:
                                           ; SOURCE LINE # 1161
0032 110000      R     ACALL   L?0506
0035 110000      E     ACALL   _Puts
0038         ?C0128:
                                           ; SOURCE LINE # 1164
0038 110000      R     ACALL   L?0425
                                           ; SOURCE LINE # 1165
003B 7FC2              MOV     R7,#0C2H
003D 110000      R     ACALL   L?0357
                                           ; SOURCE LINE # 1166
0040 30E019            JNB     ACC.0,?C0129
                                           ; SOURCE LINE # 1167
0043 7B00        R     MOV     R3,#MBYTE ?SC_664
0045 7A00        R     MOV     R2,#HIGH ?SC_664
0047 7900        R     MOV     R1,#LOW ?SC_664
0049 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1168
004C E4                CLR     A
004D FD                MOV     R5,A
004E 7FC2              MOV     R7,#0C2H
0050 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1169
0053 7B00        R     MOV     R3,#MBYTE ?SC_688
0055 7A00        R     MOV     R2,#HIGH ?SC_688
0057 7900        R     MOV     R1,#LOW ?SC_688
0059 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1170
005C         ?C0129:
                                           ; SOURCE LINE # 1173
005C 7FE1              MOV     R7,#0E1H
005E 110000      R     ACALL   L?0357
                                           ; SOURCE LINE # 1174
                                           ; SOURCE LINE # 1175
                                           ; SOURCE LINE # 1176
0061 110000      R     ACALL   L?0486
0064 6016              JZ      ?C0132
0066 24FE              ADD     A,#0FEH
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 86  

0068 6020              JZ      ?C0133
006A 2403              ADD     A,#03H
006C 702E              JNZ     ?C0134
                                           ; SOURCE LINE # 1177
006E         ?C0131:
006E 7B00        R     MOV     R3,#MBYTE ?SC_706
0070 7A00        R     MOV     R2,#HIGH ?SC_706
0072 7900        R     MOV     R1,#LOW ?SC_706
0074 110000      R     ACALL   L?0482
0077 741B              MOV     A,#01BH
0079 F0                MOVX    @DPTR,A
007A 8026              SJMP    ?C0130
                                           ; SOURCE LINE # 1178
007C         ?C0132:
007C 7B00        R     MOV     R3,#MBYTE ?SC_713
007E 7A00        R     MOV     R2,#HIGH ?SC_713
0080 7900        R     MOV     R1,#LOW ?SC_713
0082 110000      R     ACALL   L?0482
0085 7402              MOV     A,#02H
0087 F0                MOVX    @DPTR,A
0088 8018              SJMP    ?C0130
                                           ; SOURCE LINE # 1179
008A         ?C0133:
008A 7B00        R     MOV     R3,#MBYTE ?SC_720
008C 7A00        R     MOV     R2,#HIGH ?SC_720
008E 7900        R     MOV     R1,#LOW ?SC_720
0090 110000      E     ACALL   _Puts
0093 90000000    R     MOV     DPTR,#clock
0097 7401              MOV     A,#01H
0099 F0                MOVX    @DPTR,A
009A 8006              SJMP    ?C0130
                                           ; SOURCE LINE # 1180
009C         ?C0134:
009C E4                CLR     A
009D 90000000    R     MOV     DPTR,#clock
00A1 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1181
00A2         ?C0130:
                                           ; SOURCE LINE # 1182
00A2 90000000    R     MOV     DPTR,#clock
00A6 E0                MOVX    A,@DPTR
00A7 FF                MOV     R7,A
00A8 6401              XRL     A,#01H
00AA 6004              JZ      ?C0136
00AC EF                MOV     A,R7
00AD B40203            CJNE    A,#02H,?C0135
00B0         ?C0136:
                                           ; SOURCE LINE # 1183
00B0 7F01              MOV     R7,#01H
00B2 22                RET     
00B3         ?C0135:
                                           ; SOURCE LINE # 1185
00B3 90000000    R     MOV     DPTR,#clock
00B7 E0                MOVX    A,@DPTR
00B8 7060              JNZ     ?C0138
                                           ; SOURCE LINE # 1186
00BA FD                MOV     R5,A
00BB 7FFF              MOV     R7,#0FFH
00BD 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1187
00C0 7FFC              MOV     R7,#0FCH
00C2 110000      R     ACALL   L?0365
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 87  

                                           ; SOURCE LINE # 1188
00C5 30E709            JNB     ACC.7,?C0139
                                           ; SOURCE LINE # 1189
00C8 7B00        R     MOV     R3,#MBYTE ?SC_732
00CA 7A00        R     MOV     R2,#HIGH ?SC_732
00CC 7900        R     MOV     R1,#LOW ?SC_732
                                           ; SOURCE LINE # 1190
00CE 010000      R     AJMP    ?C0308
                                           ; SOURCE LINE # 1191
00D1         ?C0139:
                                           ; SOURCE LINE # 1192
00D1 110000      R     ACALL   L?0425
                                           ; SOURCE LINE # 1193
00D4 7FE0              MOV     R7,#0E0H
00D6 110000      R     ACALL   L?0365
                                           ; SOURCE LINE # 1194
00D9 30E004            JNB     ACC.0,?C0140
                                           ; SOURCE LINE # 1195
00DC 7F01              MOV     R7,#01H
00DE 8011              SJMP    ?C0304
00E0         ?C0140:
                                           ; SOURCE LINE # 1196
                                           ; SOURCE LINE # 1197
                                           ; SOURCE LINE # 1198
00E0 110000      R     ACALL   L?0348
                                           ; SOURCE LINE # 1199
00E3 30E509            JNB     ACC.5,?C0142
                                           ; SOURCE LINE # 1200
00E6 7B00        R     MOV     R3,#MBYTE ?SC_750
00E8 7A00        R     MOV     R2,#HIGH ?SC_750
00EA 7900        R     MOV     R1,#LOW ?SC_750
00EC         ?C0303:
                                           ; SOURCE LINE # 1201
00EC 010000      R     AJMP    ?C0308
                                           ; SOURCE LINE # 1202
00EF         ?C0142:
                                           ; SOURCE LINE # 1203
00EF E4                CLR     A
00F0 FF                MOV     R7,A
00F1         ?C0304:
00F1 110000      R     ACALL   _I2CSPI_get_SPICLK
00F4 110000      R     ACALL   L?0449
                                           ; SOURCE LINE # 1204
00F7         ?C0141:
                                           ; SOURCE LINE # 1205
00F7 90000000    R     MOV     DPTR,#dClock
00FB 110000      R     ACALL   L?0354
00FE 110000      R     ACALL   L?0490
0101 90000000    R     MOV     DPTR,#dClock
0105 110000      R     ACALL   L?0364
                                           ; SOURCE LINE # 1206
0108 110000      R     ACALL   L?0469
010B 110000      R     ACALL   L?0341
010E 110000      R     ACALL   L?0508
                                           ; SOURCE LINE # 1207
0111 7B00        R     MOV     R3,#MBYTE ?SC_770
0113 7A00        R     MOV     R2,#HIGH ?SC_770
0115 7900        R     MOV     R1,#LOW ?SC_770
0117 110000      R     ACALL   L?0463
                                           ; SOURCE LINE # 1210
011A         ?C0138:
                                           ; SOURCE LINE # 1212
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 88  

011A 110000      R     ACALL   L?0457
                                           ; SOURCE LINE # 1213
011D 7FEC              MOV     R7,#0ECH
011F 110000      R     ACALL   L?0376
                                           ; SOURCE LINE # 1214
0122 30E709            JNB     ACC.7,?C0143
                                           ; SOURCE LINE # 1215
0125 7B00        R     MOV     R3,#MBYTE ?SC_786
0127 7A00        R     MOV     R2,#HIGH ?SC_786
0129 7900        R     MOV     R1,#LOW ?SC_786
012B         ?C0305:
                                           ; SOURCE LINE # 1216
012B 010000      R     AJMP    ?C0308
                                           ; SOURCE LINE # 1217
012E         ?C0143:
                                           ; SOURCE LINE # 1218
                                           ; SOURCE LINE # 1219
012E 110000      R     ACALL   L?0348
                                           ; SOURCE LINE # 1220
0131 30E409            JNB     ACC.4,?C0144
                                           ; SOURCE LINE # 1221
0134 7B00        R     MOV     R3,#MBYTE ?SC_804
0136 7A00        R     MOV     R2,#HIGH ?SC_804
0138 7900        R     MOV     R1,#LOW ?SC_804
013A         ?C0306:
                                           ; SOURCE LINE # 1222
013A 010000      R     AJMP    ?C0308
                                           ; SOURCE LINE # 1223
013D         ?C0144:
                                           ; SOURCE LINE # 1225
013D 110000      R     ACALL   I2CSPI_get_PCLK
0140 110000      R     ACALL   L?0450
                                           ; SOURCE LINE # 1226
0143 90000000    R     MOV     DPTR,#dClock
0147 110000      R     ACALL   L?0354
014A 110000      R     ACALL   L?0490
014D FD                MOV     R5,A
014E E4                CLR     A
014F 3C                ADDC    A,R4
0150 FC                MOV     R4,A
0151 110000      R     ACALL   L?0449
                                           ; SOURCE LINE # 1227
0154 110000      R     ACALL   L?0469
0157 110000      R     ACALL   L?0341
015A 110000      R     ACALL   L?0508
                                           ; SOURCE LINE # 1228
015D 7B00        R     MOV     R3,#MBYTE ?SC_824
015F 7A00        R     MOV     R2,#HIGH ?SC_824
0161 7900        R     MOV     R1,#LOW ?SC_824
0163 110000      R     ACALL   L?0463
                                           ; SOURCE LINE # 1232
0166 110000      R     ACALL   L?0457
                                           ; SOURCE LINE # 1233
0169 7F4B              MOV     R7,#04BH
016B 110000      R     ACALL   L?0376
                                           ; SOURCE LINE # 1234
016E 7B00        R     MOV     R3,#MBYTE ?SC_838
0170 7A00        R     MOV     R2,#HIGH ?SC_838
0172 7900        R     MOV     R1,#LOW ?SC_838
0174 7F00              MOV     R7,#00H
0176 30E402            JNB     ACC.4,?C0145
0179 7F01              MOV     R7,#01H
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 89  

017B         ?C0145:
017B         ?C0146:
017B 110000      R     ACALL   L?0498
017E 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1237
0181 110000      R     ACALL   L?0483
                                           ; SOURCE LINE # 1238
0184 E4                CLR     A
0185 FF                MOV     R7,A
0186 110000      R     ACALL   L?0400
                                           ; SOURCE LINE # 1239
0189 30E21F            JNB     ACC.2,?C0147
                                           ; SOURCE LINE # 1240
018C 7B00        R     MOV     R3,#MBYTE ?SC_853
018E 7A00        R     MOV     R2,#HIGH ?SC_853
0190 7900        R     MOV     R1,#LOW ?SC_853
0192 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1241
0195 90000000    R     MOV     DPTR,#bTemp
0199 E0                MOVX    A,@DPTR
019A 54FB              ANL     A,#0FBH
019C FD                MOV     R5,A
019D E4                CLR     A
019E FF                MOV     R7,A
019F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1242
01A2 7B00        R     MOV     R3,#MBYTE ?SC_867
01A4 7A00        R     MOV     R2,#HIGH ?SC_867
01A6 7900        R     MOV     R1,#LOW ?SC_867
01A8 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1243
01AB         ?C0147:
                                           ; SOURCE LINE # 1250
01AB 110000      R     ACALL   L?0483
                                           ; SOURCE LINE # 1251
01AE 7FF4              MOV     R7,#0F4H
01B0 110000      R     ACALL   L?0400
                                           ; SOURCE LINE # 1252
01B3 30E008            JNB     ACC.0,?C0148
                                           ; SOURCE LINE # 1253
01B6 7B00        R     MOV     R3,#MBYTE ?SC_878
01B8 7A00        R     MOV     R2,#HIGH ?SC_878
01BA 7900        R     MOV     R1,#LOW ?SC_878
01BC         ?C0307:
                                           ; SOURCE LINE # 1254
01BC 800C              SJMP    ?C0308
                                           ; SOURCE LINE # 1255
01BE         ?C0148:
                                           ; SOURCE LINE # 1257
                                           ; SOURCE LINE # 1258
01BE 110000      R     ACALL   L?0355
                                           ; SOURCE LINE # 1259
01C1 30E00C            JNB     ACC.0,?C0149
                                           ; SOURCE LINE # 1260
01C4 7B00        R     MOV     R3,#MBYTE ?SC_898
01C6 7A00        R     MOV     R2,#HIGH ?SC_898
01C8 7900        R     MOV     R1,#LOW ?SC_898
01CA         ?C0308:
01CA 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1261
01CD 7F01              MOV     R7,#01H
01CF 22                RET     
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 90  

                                           ; SOURCE LINE # 1262
01D0         ?C0149:
                                           ; SOURCE LINE # 1264
01D0 7D04              MOV     R5,#04H
01D2 7FFF              MOV     R7,#0FFH
01D4 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1265
01D7 7FD8              MOV     R7,#0D8H
01D9 110000      R     ACALL   L?0452
                                           ; SOURCE LINE # 1266
01DC 6405              XRL     A,#05H
01DE 600C              JZ      ?C0150
                                           ; SOURCE LINE # 1267
01E0 7B00        R     MOV     R3,#MBYTE ?SC_915
01E2 7A00        R     MOV     R2,#HIGH ?SC_915
01E4 7900        R     MOV     R1,#LOW ?SC_915
01E6 110000      R     ACALL   L?0390
01E9 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1268
01EC         ?C0150:
                                           ; SOURCE LINE # 1269
01EC 7FD9              MOV     R7,#0D9H
01EE 110000      R     ACALL   L?0452
                                           ; SOURCE LINE # 1270
01F1 5407              ANL     A,#07H
01F3 FF                MOV     R7,A
01F4 6025              JZ      ?C0151
                                           ; SOURCE LINE # 1271
01F6 7B00        R     MOV     R3,#MBYTE ?SC_935
01F8 7A00        R     MOV     R2,#HIGH ?SC_935
01FA 7900        R     MOV     R1,#LOW ?SC_935
01FC 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0200 F0                MOVX    @DPTR,A
0201 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1272
0204 7B00        R     MOV     R3,#MBYTE ?SC_952
0206 7A00        R     MOV     R2,#HIGH ?SC_952
0208 7900        R     MOV     R1,#LOW ?SC_952
020A 90000000    R     MOV     DPTR,#bTemp
020E E0                MOVX    A,@DPTR
020F 7F00              MOV     R7,#00H
0211 30E302            JNB     ACC.3,?C0152
0214 7F01              MOV     R7,#01H
0216         ?C0152:
0216         ?C0153:
0216 110000      R     ACALL   L?0499
                                           ; SOURCE LINE # 1273
0219 800E              SJMP    ?C0309
021B         ?C0151:
                                           ; SOURCE LINE # 1274
                                           ; SOURCE LINE # 1275
021B 90000000    R     MOV     DPTR,#bTemp
021F E0                MOVX    A,@DPTR
0220 20E309            JB      ACC.3,?C0154
                                           ; SOURCE LINE # 1276
0223 7B00        R     MOV     R3,#MBYTE ?SC_964
0225 7A00        R     MOV     R2,#HIGH ?SC_964
0227 7900        R     MOV     R1,#LOW ?SC_964
0229         ?C0309:
0229 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1277
022C         ?C0154:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 91  

                                           ; SOURCE LINE # 1280
022C 90000000    R     MOV     DPTR,#ping
0230 E0                MOVX    A,@DPTR
0231 606A              JZ      ?C0156
                                           ; SOURCE LINE # 1281
0233 E4                CLR     A
0234 FD                MOV     R5,A
0235 7FFF              MOV     R7,#0FFH
0237 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1282
023A E4                CLR     A
023B FD                MOV     R5,A
023C 7F09              MOV     R7,#09H
023E 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1283
0241 7D60              MOV     R5,#060H
0243 7F0F              MOV     R7,#0FH
0245 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1284
0248 E4                CLR     A
0249 90000000    R     MOV     DPTR,#i
024D F0                MOVX    @DPTR,A
024E         ?C0157:
                                           ; SOURCE LINE # 1285
024E 7F09              MOV     R7,#09H
0250 110000      E     ACALL   _ReadI2C_8A
0253 90000000    R     MOV     DPTR,#bTemp
0257 EF                MOV     A,R7
0258 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1286
0259 54F0              ANL     A,#0F0H
025B 64A0              XRL     A,#0A0H
025D 6014              JZ      ?C0158
                                           ; SOURCE LINE # 1287
025F         ?C0160:
                                           ; SOURCE LINE # 1288
025F 7F05              MOV     R7,#05H
0261 7E00              MOV     R6,#00H
0263 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1289
0266 90000000    R     MOV     DPTR,#i
026A E0                MOVX    A,@DPTR
026B 04                INC     A
026C F0                MOVX    @DPTR,A
026D E0                MOVX    A,@DPTR
026E C3                CLR     C
026F 9414              SUBB    A,#014H
0271 40DB              JC      ?C0157
0273         ?C0158:
                                           ; SOURCE LINE # 1290
0273 90000000    R     MOV     DPTR,#i
0277 E0                MOVX    A,@DPTR
0278 B4140B            CJNE    A,#014H,?C0161
                                           ; SOURCE LINE # 1291
027B 7B00        R     MOV     R3,#MBYTE ?SC_981
027D 7A00        R     MOV     R2,#HIGH ?SC_981
027F 7900        R     MOV     R1,#LOW ?SC_981
0281 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1292
0284 8017              SJMP    ?C0156
0286         ?C0161:
                                           ; SOURCE LINE # 1293
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 92  

                                           ; SOURCE LINE # 1294
0286 7B00        R     MOV     R3,#MBYTE ?SC_994
0288 7A00        R     MOV     R2,#HIGH ?SC_994
028A 7900        R     MOV     R1,#LOW ?SC_994
028C 90000000    R     MOV     DPTR,#i
0290 110000      R     ACALL   L?0390
0293 90000000    R     MOV     DPTR,#bTemp
0297 110000      R     ACALL   L?0460
029A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1301
                                           ; SOURCE LINE # 1302
029D         ?C0156:
                                           ; SOURCE LINE # 1305
029D 7B00        R     MOV     R3,#MBYTE ?SC_1022
029F 7A00        R     MOV     R2,#HIGH ?SC_1022
02A1 7900        R     MOV     R1,#LOW ?SC_1022
02A3 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1306
02A6 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 1307
02A8         ?C0137:
02A8 22                RET     
02A9         L?0348:
02A9 E4                CLR     A
02AA FD                MOV     R5,A
02AB 7FFF              MOV     R7,#0FFH
02AD 110000      E     ACALL   _WriteI2C_8A
02B0 7F4B              MOV     R7,#04BH
02B2 110000      E     ACALL   _ReadI2C_8A
02B5 90000000    R     MOV     DPTR,#bTemp
02B9 EF                MOV     A,R7
02BA F0                MOVX    @DPTR,A
02BB 22                RET     
02BC         L?0355:
02BC 7D04              MOV     R5,#04H
02BE 7FFF              MOV     R7,#0FFH
02C0 110000      E     ACALL   _WriteI2C_8A
02C3 7FC4              MOV     R7,#0C4H
02C5 110000      E     ACALL   _ReadI2C_8A
02C8 90000000    R     MOV     DPTR,#bTemp
02CC EF                MOV     A,R7
02CD F0                MOVX    @DPTR,A
02CE 22                RET     
02CF         L?0357:
02CF 110000      E     ACALL   _ReadI2C_8A
02D2 90000000    R     MOV     DPTR,#bTemp
02D6 EF                MOV     A,R7
02D7 F0                MOVX    @DPTR,A
02D8 22                RET     
02D9         L?0365:
02D9 110000      E     ACALL   _ReadI2C_8A
02DC 90000000    R     MOV     DPTR,#bTemp
02E0 EF                MOV     A,R7
02E1 F0                MOVX    @DPTR,A
02E2 22                RET     
02E3         L?0376:
02E3 110000      E     ACALL   _ReadI2C_8A
02E6 90000000    R     MOV     DPTR,#bTemp
02EA EF                MOV     A,R7
02EB F0                MOVX    @DPTR,A
02EC 22                RET     
02ED         L?0400:
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 93  

02ED 110000      E     ACALL   _ReadI2C_8A
02F0 90000000    R     MOV     DPTR,#bTemp
02F4 EF                MOV     A,R7
02F5 F0                MOVX    @DPTR,A
02F6 22                RET     
02F7         L?0425:
02F7 7D04              MOV     R5,#04H
02F9 7FFF              MOV     R7,#0FFH
02FB 110000      E     ACALL   _WriteI2C_8A
02FE 22                RET     
02FF         L?0452:
02FF 110000      E     ACALL   _ReadI2C_8A
0302 90000000    R     MOV     DPTR,#bTemp
0306 EF                MOV     A,R7
0307 F0                MOVX    @DPTR,A
0308 22                RET     
0309         L?0457:
0309 E4                CLR     A
030A FD                MOV     R5,A
030B 7FFF              MOV     R7,#0FFH
030D 110000      E     ACALL   _WriteI2C_8A
0310 22                RET     
0311         L?0463:
0311 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0315 F0                MOVX    @DPTR,A
0316 110000      E     ACALL   _Printf
0319 22                RET     
031A         L?0482:
031A 110000      E     ACALL   _Puts
031D 90000000    R     MOV     DPTR,#clock
0321 22                RET     
0322         L?0483:
0322 7D04              MOV     R5,#04H
0324 7FFF              MOV     R7,#0FFH
0326 110000      E     ACALL   _WriteI2C_8A
0329 22                RET     
             ; FUNCTION I2CSPI_check_slave_TW8836B (END)

             ; FUNCTION I2CSPI_check_slave_SPIFLASH (BEGIN)
                                           ; SOURCE LINE # 1318
                                           ; SOURCE LINE # 1319
                                           ; SOURCE LINE # 1324
0000 110000      R     ACALL   L?0370
0003 7B03              MOV     R3,#03H
0005 7F9F              MOV     R7,#09FH
0007 110000      R     ACALL   L?0426
                                           ; SOURCE LINE # 1325
000A 6009              JZ      ?C0163
                                           ; SOURCE LINE # 1326
000C 7B00        R     MOV     R3,#MBYTE ?SC_1033
000E 7A00        R     MOV     R2,#HIGH ?SC_1033
0010 7900        R     MOV     R1,#LOW ?SC_1033
                                           ; SOURCE LINE # 1327
0012 010000      R     AJMP    ?C0317
                                           ; SOURCE LINE # 1328
0015         ?C0163:
                                           ; SOURCE LINE # 1329
                                           ; SOURCE LINE # 1330
0015 110000      R     ACALL   L?0464
0018 7D03              MOV     R5,#03H
001A 7FD0              MOV     R7,#0D0H
001C 110000      E     ACALL   _ReadI2CS_8A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 94  

                                           ; SOURCE LINE # 1331
001F 7B00        R     MOV     R3,#MBYTE ?SC_1047
0021 7A00        R     MOV     R2,#HIGH ?SC_1047
0023 7900        R     MOV     R1,#LOW ?SC_1047
0025 110000      R     ACALL   L?0389
0028 110000      R     ACALL   L?0459
002B 90000000    E     MOV     DPTR,#SPI_CmdBuffer+02H
002F E0                MOVX    A,@DPTR
0030 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
0034 F0                MOVX    @DPTR,A
0035 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1332
0038 90000000    E     MOV     DPTR,#SPI_CmdBuffer
003C E0                MOVX    A,@DPTR
003D B4200B            CJNE    A,#020H,?C0165
                                           ; SOURCE LINE # 1333
0040 7B00        R     MOV     R3,#MBYTE ?SC_1073
0042 7A00        R     MOV     R2,#HIGH ?SC_1073
0044 7900        R     MOV     R1,#LOW ?SC_1073
0046 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1334
0049 8009              SJMP    ?C0166
004B         ?C0165:
                                           ; SOURCE LINE # 1335
                                           ; SOURCE LINE # 1336
004B 7B00        R     MOV     R3,#MBYTE ?SC_1080
004D 7A00        R     MOV     R2,#HIGH ?SC_1080
004F 7900        R     MOV     R1,#LOW ?SC_1080
                                           ; SOURCE LINE # 1337
0051 010000      R     AJMP    ?C0311
                                           ; SOURCE LINE # 1338
0054         ?C0166:
                                           ; SOURCE LINE # 1341
0054 110000      R     ACALL   L?0370
0057 7F05              MOV     R7,#05H
0059 110000      R     ACALL   L?0361
                                           ; SOURCE LINE # 1342
005C 6009              JZ      ?C0167
                                           ; SOURCE LINE # 1343
005E 7B00        R     MOV     R3,#MBYTE ?SC_1088
0060 7A00        R     MOV     R2,#HIGH ?SC_1088
0062 7900        R     MOV     R1,#LOW ?SC_1088
0064         ?C0310:
                                           ; SOURCE LINE # 1344
0064 010000      R     AJMP    ?C0317
                                           ; SOURCE LINE # 1345
0067         ?C0167:
                                           ; SOURCE LINE # 1346
                                           ; SOURCE LINE # 1347
0067 110000      R     ACALL   L?0358
                                           ; SOURCE LINE # 1348
006A 7B00        R     MOV     R3,#MBYTE ?SC_1101
006C 7A00        R     MOV     R2,#HIGH ?SC_1101
006E 7900        R     MOV     R1,#LOW ?SC_1101
                                           ; SOURCE LINE # 1349
0070 110000      R     ACALL   L?0384
0073 30E003            JNB     ACC.0,?C0168
                                           ; SOURCE LINE # 1350
0076 7F01              MOV     R7,#01H
0078 22                RET     
0079         ?C0168:
                                           ; SOURCE LINE # 1353
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 95  

0079 110000      R     ACALL   L?0371
007C 7B02              MOV     R3,#02H
007E 7FB5              MOV     R7,#0B5H
0080 110000      R     ACALL   L?0426
                                           ; SOURCE LINE # 1354
0083 6009              JZ      ?C0169
                                           ; SOURCE LINE # 1355
0085 7B00        R     MOV     R3,#MBYTE ?SC_1111
0087 7A00        R     MOV     R2,#HIGH ?SC_1111
0089 7900        R     MOV     R1,#LOW ?SC_1111
008B         ?C0312:
                                           ; SOURCE LINE # 1356
008B 010000      R     AJMP    ?C0317
                                           ; SOURCE LINE # 1357
008E         ?C0169:
                                           ; SOURCE LINE # 1358
                                           ; SOURCE LINE # 1359
008E 110000      R     ACALL   L?0464
0091 7D02              MOV     R5,#02H
0093 7FD0              MOV     R7,#0D0H
0095 110000      E     ACALL   _ReadI2CS_8A
                                           ; SOURCE LINE # 1360
0098 7B00        R     MOV     R3,#MBYTE ?SC_1127
009A 7A00        R     MOV     R2,#HIGH ?SC_1127
009C 7900        R     MOV     R1,#LOW ?SC_1127
009E 110000      R     ACALL   L?0389
00A1 110000      R     ACALL   L?0459
00A4 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1363
00A7 110000      R     ACALL   L?0371
00AA 7F85              MOV     R7,#085H
00AC 110000      R     ACALL   L?0361
                                           ; SOURCE LINE # 1364
00AF 6009              JZ      ?C0170
                                           ; SOURCE LINE # 1365
00B1 7B00        R     MOV     R3,#MBYTE ?SC_1147
00B3 7A00        R     MOV     R2,#HIGH ?SC_1147
00B5 7900        R     MOV     R1,#LOW ?SC_1147
00B7         ?C0313:
                                           ; SOURCE LINE # 1366
00B7 010000      R     AJMP    ?C0317
                                           ; SOURCE LINE # 1367
00BA         ?C0170:
                                           ; SOURCE LINE # 1368
                                           ; SOURCE LINE # 1369
00BA 110000      R     ACALL   L?0358
                                           ; SOURCE LINE # 1370
00BD 7B00        R     MOV     R3,#MBYTE ?SC_1162
00BF 7A00        R     MOV     R2,#HIGH ?SC_1162
00C1 7900        R     MOV     R1,#LOW ?SC_1162
                                           ; SOURCE LINE # 1371
00C3 110000      R     ACALL   L?0384
00C6 20E305            JB      ACC.3,?C0171
                                           ; SOURCE LINE # 1372
00C9 110000      R     ACALL   L?0509
00CC         ?C0314:
                                           ; SOURCE LINE # 1373
00CC 8078              SJMP    ?C0317
                                           ; SOURCE LINE # 1374
00CE         ?C0171:
                                           ; SOURCE LINE # 1377
00CE 110000      R     ACALL   L?0371
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 96  

00D1 7F65              MOV     R7,#065H
00D3 110000      R     ACALL   L?0377
                                           ; SOURCE LINE # 1378
00D6 6008              JZ      ?C0172
                                           ; SOURCE LINE # 1379
00D8 7B00        R     MOV     R3,#MBYTE ?SC_1188
00DA 7A00        R     MOV     R2,#HIGH ?SC_1188
00DC 7900        R     MOV     R1,#LOW ?SC_1188
00DE         ?C0315:
                                           ; SOURCE LINE # 1380
00DE 8066              SJMP    ?C0317
                                           ; SOURCE LINE # 1381
00E0         ?C0172:
                                           ; SOURCE LINE # 1382
                                           ; SOURCE LINE # 1383
00E0 110000      R     ACALL   L?0385
                                           ; SOURCE LINE # 1384
00E3 7B00        R     MOV     R3,#MBYTE ?SC_1204
00E5 7A00        R     MOV     R2,#HIGH ?SC_1204
00E7 7900        R     MOV     R1,#LOW ?SC_1204
00E9 110000      R     ACALL   L?0465
                                           ; SOURCE LINE # 1385
00EC 90000000    R     MOV     DPTR,#bTemp
00F0 E0                MOVX    A,@DPTR
00F1 54C0              ANL     A,#0C0H
00F3 64C0              XRL     A,#0C0H
00F5 6006              JZ      ?C0173
                                           ; SOURCE LINE # 1386
00F7 110000      R     ACALL   L?0509
00FA 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1388
00FD         ?C0173:
                                           ; SOURCE LINE # 1391
00FD 110000      R     ACALL   L?0371
0100 7F70              MOV     R7,#070H
0102 110000      R     ACALL   L?0377
                                           ; SOURCE LINE # 1392
0105 6008              JZ      ?C0174
                                           ; SOURCE LINE # 1393
0107 7B00        R     MOV     R3,#MBYTE ?SC_1217
0109 7A00        R     MOV     R2,#HIGH ?SC_1217
010B 7900        R     MOV     R1,#LOW ?SC_1217
010D         ?C0316:
                                           ; SOURCE LINE # 1394
010D 8037              SJMP    ?C0317
                                           ; SOURCE LINE # 1395
010F         ?C0174:
                                           ; SOURCE LINE # 1396
                                           ; SOURCE LINE # 1397
010F 110000      R     ACALL   L?0385
                                           ; SOURCE LINE # 1398
0112 7B00        R     MOV     R3,#MBYTE ?SC_1232
0114 7A00        R     MOV     R2,#HIGH ?SC_1232
0116 7900        R     MOV     R1,#LOW ?SC_1232
0118 110000      R     ACALL   L?0465
                                           ; SOURCE LINE # 1399
011B 90000000    R     MOV     DPTR,#bTemp
011F E0                MOVX    A,@DPTR
0120 54F6              ANL     A,#0F6H
0122 6480              XRL     A,#080H
0124 6006              JZ      ?C0175
                                           ; SOURCE LINE # 1400
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 97  

0126 110000      R     ACALL   L?0510
0129 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1402
012C         ?C0175:
                                           ; SOURCE LINE # 1405
012C 110000      R     ACALL   L?0371
012F 7B01              MOV     R3,#01H
0131 E4                CLR     A
0132 FD                MOV     R5,A
0133 7FE8              MOV     R7,#0E8H
0135 110000      R     ACALL   _I2cSpiFlashChipRegCmd
0138 90000000    R     MOV     DPTR,#ret
013C EF                MOV     A,R7
013D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1406
013E 600C              JZ      ?C0176
                                           ; SOURCE LINE # 1407
0140 7B00        R     MOV     R3,#MBYTE ?SC_1244
0142 7A00        R     MOV     R2,#HIGH ?SC_1244
0144 7900        R     MOV     R1,#LOW ?SC_1244
0146         ?C0317:
0146 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1408
0149 7F01              MOV     R7,#01H
014B 22                RET     
                                           ; SOURCE LINE # 1409
014C         ?C0176:
                                           ; SOURCE LINE # 1410
014C 7D04              MOV     R5,#04H
014E 7FFF              MOV     R7,#0FFH
0150 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1411
0153 7FD0              MOV     R7,#0D0H
0155 110000      E     ACALL   _ReadI2C_8A
0158 90000000    R     MOV     DPTR,#bTemp
015C EF                MOV     A,R7
015D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1412
015E 7B00        R     MOV     R3,#MBYTE ?SC_1259
0160 7A00        R     MOV     R2,#HIGH ?SC_1259
0162 7900        R     MOV     R1,#LOW ?SC_1259
0164 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0168 F0                MOVX    @DPTR,A
0169 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1417
016C 7B00        R     MOV     R3,#MBYTE ?SC_1271
016E 7A00        R     MOV     R2,#HIGH ?SC_1271
0170 7900        R     MOV     R1,#LOW ?SC_1271
0172         ?C0311:
0172 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1418
0175 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 1419
0177         ?C0164:
0177 22                RET     
0178         L?0358:
0178 7D04              MOV     R5,#04H
017A 7FFF              MOV     R7,#0FFH
017C 110000      E     ACALL   _WriteI2C_8A
017F 7FD0              MOV     R7,#0D0H
0181 110000      E     ACALL   _ReadI2C_8A
0184 90000000    R     MOV     DPTR,#bTemp
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 98  

0188 EF                MOV     A,R7
0189 F0                MOVX    @DPTR,A
018A 22                RET     
018B         L?0361:
018B 7B01              MOV     R3,#01H
018D E4                CLR     A
018E FD                MOV     R5,A
018F 110000      R     ACALL   _I2cSpiFlashChipRegCmd
0192 90000000    R     MOV     DPTR,#ret
0196 EF                MOV     A,R7
0197 F0                MOVX    @DPTR,A
0198 22                RET     
0199         L?0377:
0199 7B01              MOV     R3,#01H
019B E4                CLR     A
019C FD                MOV     R5,A
019D 110000      R     ACALL   _I2cSpiFlashChipRegCmd
01A0 90000000    R     MOV     DPTR,#ret
01A4 EF                MOV     A,R7
01A5 F0                MOVX    @DPTR,A
01A6 22                RET     
01A7         L?0384:
01A7 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
01AB F0                MOVX    @DPTR,A
01AC 110000      E     ACALL   _Printf
01AF 90000000    R     MOV     DPTR,#bTemp
01B3 E0                MOVX    A,@DPTR
01B4 22                RET     
01B5         L?0385:
01B5 7D04              MOV     R5,#04H
01B7 7FFF              MOV     R7,#0FFH
01B9 110000      E     ACALL   _WriteI2C_8A
01BC 7FD0              MOV     R7,#0D0H
01BE 110000      E     ACALL   _ReadI2C_8A
01C1 90000000    R     MOV     DPTR,#bTemp
01C5 EF                MOV     A,R7
01C6 F0                MOVX    @DPTR,A
01C7 22                RET     
01C8         L?0426:
01C8 E4                CLR     A
01C9 FD                MOV     R5,A
01CA 110000      R     ACALL   _I2cSpiFlashChipRegCmd
01CD 90000000    R     MOV     DPTR,#ret
01D1 EF                MOV     A,R7
01D2 F0                MOVX    @DPTR,A
01D3 22                RET     
01D4         L?0464:
01D4 7D04              MOV     R5,#04H
01D6 7FFF              MOV     R7,#0FFH
01D8 110000      E     ACALL   _WriteI2C_8A
01DB 7B00        E     MOV     R3,#MBYTE SPI_CmdBuffer
01DD 7A00        E     MOV     R2,#HIGH SPI_CmdBuffer
01DF 7900        E     MOV     R1,#LOW SPI_CmdBuffer
01E1 22                RET     
01E2         L?0465:
01E2 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
01E6 F0                MOVX    @DPTR,A
01E7 110000      E     ACALL   _Printf
01EA 22                RET     
             ; FUNCTION I2CSPI_check_slave_SPIFLASH (END)

             ; FUNCTION I2CSPI_i2ccmd_ping (BEGIN)
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 99  

                                           ; SOURCE LINE # 1463
                                           ; SOURCE LINE # 1464
                                           ; SOURCE LINE # 1468
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 7FFF              MOV     R7,#0FFH
0004 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1469
0007 E4                CLR     A
0008 FD                MOV     R5,A
0009 7F09              MOV     R7,#09H
000B 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1470
000E 7D60              MOV     R5,#060H
0010 7F0F              MOV     R7,#0FH
0012 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1471
0015 E4                CLR     A
0016 90000000    R     MOV     DPTR,#i
001A F0                MOVX    @DPTR,A
001B         ?C0177:
                                           ; SOURCE LINE # 1472
001B 7F09              MOV     R7,#09H
001D 110000      E     ACALL   _ReadI2C_8A
;---- Variable 'bTemp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1473
0020 EF                MOV     A,R7
0021 54F0              ANL     A,#0F0H
0023 FF                MOV     R7,A
0024 BFA00C            CJNE    R7,#0A0H,?C0180
                                           ; SOURCE LINE # 1474
0027 7B00        R     MOV     R3,#MBYTE ?SC_1283
0029 7A00        R     MOV     R2,#HIGH ?SC_1283
002B 7900        R     MOV     R1,#LOW ?SC_1283
002D 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1475
0030 7F00              MOV     R7,#00H
0032 22                RET     
                                           ; SOURCE LINE # 1476
0033         ?C0180:
                                           ; SOURCE LINE # 1477
0033 7F0A              MOV     R7,#0AH
0035 7E00              MOV     R6,#00H
0037 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1478
003A 90000000    R     MOV     DPTR,#i
003E 110000      R     ACALL   L?0410
0041 40D8              JC      ?C0177
0043         ?C0178:
                                           ; SOURCE LINE # 1479
0043 7B00        R     MOV     R3,#MBYTE ?SC_1297
0045 7A00        R     MOV     R2,#HIGH ?SC_1297
0047 7900        R     MOV     R1,#LOW ?SC_1297
0049 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1480
004C 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 1481
004E         ?C0181:
004E 22                RET     
             ; FUNCTION I2CSPI_i2ccmd_ping (END)

             ; FUNCTION _I2CSPI_i2ccmd_read (BEGIN)
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 100 

                                           ; SOURCE LINE # 1483
0000 90000000    R     MOV     DPTR,#cmd
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1484
                                           ; SOURCE LINE # 1490
0006 C3                CLR     C
0007 9407              SUBB    A,#07H
0009 4006              JC      ?C0183
000B E0                MOVX    A,@DPTR
000C D3                SETB    C
000D 940A              SUBB    A,#0AH
000F 400C              JC      ?C0182
0011         ?C0183:
                                           ; SOURCE LINE # 1491
                                           ; SOURCE LINE # 1492
0011 7B00        R     MOV     R3,#MBYTE ?SC_1310
0013 7A00        R     MOV     R2,#HIGH ?SC_1310
0015 7900        R     MOV     R1,#LOW ?SC_1310
0017 90000000    R     MOV     DPTR,#cmd
                                           ; SOURCE LINE # 1493
001B 804E              SJMP    ?C0318
                                           ; SOURCE LINE # 1494
001D         ?C0182:
                                           ; SOURCE LINE # 1496
001D 110000      R     ACALL   L?0484
                                           ; SOURCE LINE # 1497
0020 E4                CLR     A
0021 FD                MOV     R5,A
0022 7FFA              MOV     R7,#0FAH
0024 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1498
0027 90000000    R     MOV     DPTR,#cmd
002B E0                MOVX    A,@DPTR
002C FD                MOV     R5,A
002D 7FFB              MOV     R7,#0FBH
002F 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1499
0032 E4                CLR     A
0033 FD                MOV     R5,A
0034 7FFF              MOV     R7,#0FFH
0036 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1500
0039 E4                CLR     A
003A FD                MOV     R5,A
003B 7F09              MOV     R7,#09H
003D 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1501
0040 7D50              MOV     R5,#050H
0042 7F0F              MOV     R7,#0FH
0044 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1502
0047 E4                CLR     A
0048 90000000    R     MOV     DPTR,#i
004C F0                MOVX    @DPTR,A
004D         ?C0185:
                                           ; SOURCE LINE # 1503
004D 7F09              MOV     R7,#09H
004F 110000      R     ACALL   L?0515
                                           ; SOURCE LINE # 1504
0052 54F0              ANL     A,#0F0H
0054 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 101 

;---- Variable 'result' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1505
0055 B4D002            CJNE    A,#0D0H,?C0188
                                           ; SOURCE LINE # 1507
0058 8026              SJMP    ?C0186
                                           ; SOURCE LINE # 1508
005A         ?C0188:
                                           ; SOURCE LINE # 1509
005A EF                MOV     A,R7
005B 6013              JZ      ?C0189
005D 64A0              XRL     A,#0A0H
005F 600F              JZ      ?C0189
                                           ; SOURCE LINE # 1510
                                           ; SOURCE LINE # 1512
0061 7B00        R     MOV     R3,#MBYTE ?SC_1329
0063 7A00        R     MOV     R2,#HIGH ?SC_1329
0065 7900        R     MOV     R1,#LOW ?SC_1329
0067 90000000    R     MOV     DPTR,#bTemp
006B         ?C0318:
006B 110000      R     ACALL   L?0390
                                           ; SOURCE LINE # 1513
006E 801E              SJMP    ?C0319
                                           ; SOURCE LINE # 1514
0070         ?C0189:
                                           ; SOURCE LINE # 1515
0070 7F0A              MOV     R7,#0AH
0072 7E00              MOV     R6,#00H
0074 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1516
0077 90000000    R     MOV     DPTR,#i
007B 110000      R     ACALL   L?0410
007E 40CD              JC      ?C0185
0080         ?C0186:
                                           ; SOURCE LINE # 1517
0080 90000000    R     MOV     DPTR,#i
0084 E0                MOVX    A,@DPTR
0085 B4640C            CJNE    A,#064H,?C0191
                                           ; SOURCE LINE # 1518
0088 7B00        R     MOV     R3,#MBYTE ?SC_1340
008A 7A00        R     MOV     R2,#HIGH ?SC_1340
008C 7900        R     MOV     R1,#LOW ?SC_1340
008E         ?C0319:
008E 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1519
0091 7F01              MOV     R7,#01H
0093 22                RET     
                                           ; SOURCE LINE # 1520
0094         ?C0191:
                                           ; SOURCE LINE # 1521
0094 7B00        R     MOV     R3,#MBYTE ?SC_1353
0096 7A00        R     MOV     R2,#HIGH ?SC_1353
0098 7900        R     MOV     R1,#LOW ?SC_1353
009A 90000000    R     MOV     DPTR,#bTemp
009E 110000      R     ACALL   L?0390
00A1 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1523
00A4 E4                CLR     A
00A5 90000000    R     MOV     DPTR,#crc_calc
00A9 F0                MOVX    @DPTR,A
00AA A3                INC     DPTR
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1524
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 102 

00AC 90000000    R     MOV     DPTR,#bTemp
00B0 E0                MOVX    A,@DPTR
00B1 FD                MOV     R5,A
00B2 FB                MOV     R3,A
00B3 90000000    R     MOV     DPTR,#crc_calc
00B7 E0                MOVX    A,@DPTR
00B8 FF                MOV     R7,A
00B9 EF                MOV     A,R7
00BA 6B                XRL     A,R3
00BB 110000      R     ACALL   L?0351
00BE 110000      R     ACALL   L?0473
00C1 90000000    R     MOV     DPTR,#crc_calc+01H
00C5 E0                MOVX    A,@DPTR
00C6 90000000    R     MOV     DPTR,#crc_calc
00CA 110000      R     ACALL   L?0411
                                           ; SOURCE LINE # 1526
00CD ED                MOV     A,R5
00CE 540F              ANL     A,#0FH
00D0 90000000    R     MOV     DPTR,#i
00D4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1527
00D5 110000      R     ACALL   L?0484
00D8         ?C0192:
                                           ; SOURCE LINE # 1528
00D8 90000000    R     MOV     DPTR,#i
00DC E0                MOVX    A,@DPTR
00DD 603F              JZ      ?C0193
                                           ; SOURCE LINE # 1529
00DF 14                DEC     A
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1530
00E1 E0                MOVX    A,@DPTR
00E2 FF                MOV     R7,A
00E3 C3                CLR     C
00E4 74FE              MOV     A,#0FEH
00E6 9F                SUBB    A,R7
00E7 FF                MOV     R7,A
00E8 110000      R     ACALL   L?0515
                                           ; SOURCE LINE # 1531
00EB 110000      R     ACALL   L?0497
00EE 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
00F2 F0                MOVX    @DPTR,A
00F3 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1532
00F6 90000000    R     MOV     DPTR,#bTemp
00FA E0                MOVX    A,@DPTR
00FB FD                MOV     R5,A
00FC 90000000    R     MOV     DPTR,#crc_calc
0100 E0                MOVX    A,@DPTR
0101 FA                MOV     R2,A
0102 A3                INC     DPTR
0103 E0                MOVX    A,@DPTR
0104 FB                MOV     R3,A
0105 EA                MOV     A,R2
0106 FF                MOV     R7,A
0107 110000      R     ACALL   L?0350
010A EB                MOV     A,R3
010B FE                MOV     R6,A
010C E4                CLR     A
010D 93                MOVC    A,@A+DPTR
010E 6E                XRL     A,R6
010F FF                MOV     R7,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 103 

0110 7401              MOV     A,#01H
0112 93                MOVC    A,@A+DPTR
0113 90000000    R     MOV     DPTR,#crc_calc
0117 CF                XCH     A,R7
0118 F0                MOVX    @DPTR,A
0119 A3                INC     DPTR
011A EF                MOV     A,R7
011B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1533
011C 80BA              SJMP    ?C0192
011E         ?C0193:
                                           ; SOURCE LINE # 1534
011E 90000000    R     MOV     DPTR,#cmd
0122 E0                MOVX    A,@DPTR
0123 24F8              ADD     A,#0F8H
0125 6030              JZ      ?C0196
0127 14                DEC     A
0128 604E              JZ      ?C0197
012A 14                DEC     A
012B 606E              JZ      ?C0198
012D 2403              ADD     A,#03H
012F 6003              JZ      $ + 5H
0131 010000      R     AJMP    ?C0194
                                           ; SOURCE LINE # 1535
0134         ?C0195:
                                           ; SOURCE LINE # 1536
0134 7FFC              MOV     R7,#0FCH
0136 110000      E     ACALL   _ReadI2C_8A
0139 C007              PUSH    AR7
013B 7FFD              MOV     R7,#0FDH
013D 110000      E     ACALL   _ReadI2C_8A
0140 C007              PUSH    AR7
0142 110000      R     ACALL   L?0401
0145 D0E0              POP     ACC
0147 F0                MOVX    @DPTR,A
0148 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
014C D0E0              POP     ACC
014E F0                MOVX    @DPTR,A
014F 7B00        R     MOV     R3,#MBYTE ?SC_1367
0151 7A00        R     MOV     R2,#HIGH ?SC_1367
0153 7900        R     MOV     R1,#LOW ?SC_1367
                                           ; SOURCE LINE # 1538
0155 8071              SJMP    ?C0322
                                           ; SOURCE LINE # 1539
0157         ?C0196:
                                           ; SOURCE LINE # 1540
0157 7FFD              MOV     R7,#0FDH
0159 110000      E     ACALL   _ReadI2C_8A
015C C007              PUSH    AR7
015E 7FFE              MOV     R7,#0FEH
0160 110000      E     ACALL   _ReadI2C_8A
0163 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0167 EF                MOV     A,R7
0168 F0                MOVX    @DPTR,A
0169 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
016D D0E0              POP     ACC
016F F0                MOVX    @DPTR,A
0170 7B00        R     MOV     R3,#MBYTE ?SC_1375
0172 7A00        R     MOV     R2,#HIGH ?SC_1375
0174 7900        R     MOV     R1,#LOW ?SC_1375
0176         ?C0320:
                                           ; SOURCE LINE # 1541
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 104 

0176 8050              SJMP    ?C0322
                                           ; SOURCE LINE # 1542
0178         ?C0197:
                                           ; SOURCE LINE # 1543
0178 7FFC              MOV     R7,#0FCH
017A 110000      E     ACALL   _ReadI2C_8A
017D C007              PUSH    AR7
017F 7FFD              MOV     R7,#0FDH
0181 110000      E     ACALL   _ReadI2C_8A
0184 C007              PUSH    AR7
0186 110000      R     ACALL   L?0401
0189 D0E0              POP     ACC
018B F0                MOVX    @DPTR,A
018C 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0190 D0E0              POP     ACC
0192 F0                MOVX    @DPTR,A
0193 7B00        R     MOV     R3,#MBYTE ?SC_1384
0195 7A00        R     MOV     R2,#HIGH ?SC_1384
0197 7900        R     MOV     R1,#LOW ?SC_1384
0199         ?C0321:
                                           ; SOURCE LINE # 1545
0199 802D              SJMP    ?C0322
                                           ; SOURCE LINE # 1546
019B         ?C0198:
                                           ; SOURCE LINE # 1547
019B 7FFC              MOV     R7,#0FCH
019D 110000      E     ACALL   _ReadI2C_8A
01A0 C007              PUSH    AR7
01A2 7FFD              MOV     R7,#0FDH
01A4 110000      E     ACALL   _ReadI2C_8A
01A7 C007              PUSH    AR7
01A9 7FFE              MOV     R7,#0FEH
01AB 110000      E     ACALL   _ReadI2C_8A
01AE 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
01B2 EF                MOV     A,R7
01B3 F0                MOVX    @DPTR,A
01B4 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
01B8 D0E0              POP     ACC
01BA F0                MOVX    @DPTR,A
01BB 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
01BF D0E0              POP     ACC
01C1 F0                MOVX    @DPTR,A
01C2 7B00        R     MOV     R3,#MBYTE ?SC_1401
01C4 7A00        R     MOV     R2,#HIGH ?SC_1401
01C6 7900        R     MOV     R1,#LOW ?SC_1401
01C8         ?C0322:
01C8 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1549
                                           ; SOURCE LINE # 1550
01CB         ?C0194:
                                           ; SOURCE LINE # 1553
01CB 7D04              MOV     R5,#04H
01CD 7FFF              MOV     R7,#0FFH
01CF 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1554
01D2 7FF8              MOV     R7,#0F8H
01D4 110000      E     ACALL   _ReadI2C_8A
01D7 90000000    R     MOV     DPTR,#read_crc
                                           ; SOURCE LINE # 1555
01DB 110000      R     ACALL   L?0487
01DE 90000000    R     MOV     DPTR,#read_crc
01E2 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 105 

                                           ; SOURCE LINE # 1556
01E3 7FF9              MOV     R7,#0F9H
01E5 110000      E     ACALL   _ReadI2C_8A
01E8 90000000    R     MOV     DPTR,#read_crc
01EC E0                MOVX    A,@DPTR
01ED FE                MOV     R6,A
01EE A3                INC     DPTR
01EF E0                MOVX    A,@DPTR
01F0 4F                ORL     A,R7
01F1 FF                MOV     R7,A
01F2 90000000    R     MOV     DPTR,#read_crc
01F6 EE                MOV     A,R6
01F7 F0                MOVX    @DPTR,A
01F8 FE                MOV     R6,A
01F9 A3                INC     DPTR
01FA EF                MOV     A,R7
01FB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1558
01FC A3                INC     DPTR
01FD E0                MOVX    A,@DPTR
01FE B5060D            CJNE    A,AR6,?C0199
0201 A3                INC     DPTR
0202 E0                MOVX    A,@DPTR
0203 B50708            CJNE    A,AR7,?C0199
                                           ; SOURCE LINE # 1559
0206 7B00        R     MOV     R3,#MBYTE ?SC_1420
0208 7A00        R     MOV     R2,#HIGH ?SC_1420
020A 7900        R     MOV     R1,#LOW ?SC_1420
020C 8015              SJMP    ?C0323
020E         ?C0199:
                                           ; SOURCE LINE # 1561
020E 7B00        R     MOV     R3,#MBYTE ?SC_1428
0210 7A00        R     MOV     R2,#HIGH ?SC_1428
0212 7900        R     MOV     R1,#LOW ?SC_1428
0214 90000000    R     MOV     DPTR,#read_crc
0218 110000      R     ACALL   L?0382
021B 90000000    R     MOV     DPTR,#crc_calc
021F 110000      R     ACALL   L?0468
0222 F0                MOVX    @DPTR,A
0223         ?C0323:
0223 110000      E     ACALL   _Printf
0226         ?C0200:
                                           ; SOURCE LINE # 1562
0226 E4                CLR     A
0227 FD                MOV     R5,A
0228 7FFF              MOV     R7,#0FFH
022A 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1563
022D 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 1564
022F         ?C0184:
022F 22                RET     
0230         L?0401:
0230 7FFE              MOV     R7,#0FEH
0232 110000      E     ACALL   _ReadI2C_8A
0235 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
0239 EF                MOV     A,R7
023A F0                MOVX    @DPTR,A
023B 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
023F 22                RET     
0240         L?0484:
0240 7D04              MOV     R5,#04H
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 106 

0242 7FFF              MOV     R7,#0FFH
0244 110000      E     ACALL   _WriteI2C_8A
0247 22                RET     
0248         L?0515:
0248 110000      E     ACALL   _ReadI2C_8A
024B 90000000    R     MOV     DPTR,#bTemp
024F EF                MOV     A,R7
0250 F0                MOVX    @DPTR,A
0251 22                RET     
             ; FUNCTION _I2CSPI_i2ccmd_read (END)

             ; FUNCTION _I2CSPI_upload (BEGIN)
                                           ; SOURCE LINE # 1602
0000 90000000    R     MOV     DPTR,#src_addr
                                           ; SOURCE LINE # 1603
                                           ; SOURCE LINE # 1616
0004 110000      R     ACALL   L?0511
0007 90000000    R     MOV     DPTR,#src_addr
000B 110000      R     ACALL   L?0341
000E 110000      R     ACALL   L?0373
0011 90000000    R     MOV     DPTR,#dest_addr
0015 110000      R     ACALL   L?0341
0018 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
001C 110000      R     ACALL   L?0396
001F 110000      R     ACALL   L?0341
0022 90000000    E     MOV     DPTR,#?_Printf?BYTE+0BH
0026 110000      E     ACALL   ?C?LSTXDATA
0029 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1631
002C E4                CLR     A
002D FD                MOV     R5,A
002E 7FFF              MOV     R7,#0FFH
0030 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1632
0033 E4                CLR     A
0034 FF                MOV     R7,A
0035 110000      R     ACALL   L?0453
                                           ; SOURCE LINE # 1633
0038 6436              XRL     A,#036H
003A 600E              JZ      ?C0201
                                           ; SOURCE LINE # 1634
003C 7B00        R     MOV     R3,#MBYTE ?SC_1503
003E 7A00        R     MOV     R2,#HIGH ?SC_1503
0040 7900        R     MOV     R1,#LOW ?SC_1503
0042 E0                MOVX    A,@DPTR
0043 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
                                           ; SOURCE LINE # 1635
0047 010000      R     AJMP    ?C0326
                                           ; SOURCE LINE # 1636
004A         ?C0201:
                                           ; SOURCE LINE # 1639
004A 110000      R     ACALL   I2CSPI_check_slave_TW8836B
004D 110000      R     ACALL   L?0416
                                           ; SOURCE LINE # 1643
0050 7D04              MOV     R5,#04H
0052 7FFF              MOV     R7,#0FFH
0054 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1644
0057 7FC2              MOV     R7,#0C2H
0059 110000      R     ACALL   L?0453
                                           ; SOURCE LINE # 1645
005C 30E010            JNB     ACC.0,?C0203
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 107 

                                           ; SOURCE LINE # 1646
005F E4                CLR     A
0060 FD                MOV     R5,A
0061 7FC2              MOV     R7,#0C2H
0063 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1647
0066 7B00        R     MOV     R3,#MBYTE ?SC_1521
0068 7A00        R     MOV     R2,#HIGH ?SC_1521
006A 7900        R     MOV     R1,#LOW ?SC_1521
006C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1648
006F         ?C0203:
                                           ; SOURCE LINE # 1651
006F 110000      R     ACALL   I2CSPI_check_slave_SPIFLASH
0072 110000      R     ACALL   L?0416
                                           ; SOURCE LINE # 1659
0075 7F01              MOV     R7,#01H
0077 110000      R     ACALL   _I2CSPI_mcu_halt_rerun
                                           ; SOURCE LINE # 1662
007A 7D04              MOV     R5,#04H
007C 7FFF              MOV     R7,#0FFH
007E 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1663
0081 7FC4              MOV     R7,#0C4H
0083 110000      E     ACALL   _ReadI2C_8A
0086 90000000    R     MOV     DPTR,#bTemp
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1664
008C 30E70F            JNB     ACC.7,?C0204
                                           ; SOURCE LINE # 1665
008F 110000      R     ACALL   L?0504
0092 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1666
0095 110000      R     ACALL   L?0506
0098 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1667
009B 7F01              MOV     R7,#01H
009D 22                RET     
                                           ; SOURCE LINE # 1668
009E         ?C0204:
                                           ; SOURCE LINE # 1671
009E 90000000    R     MOV     DPTR,#dest_addr
00A2 A3                INC     DPTR
00A3 110000      R     ACALL   L?0342
00A6 110000      R     ACALL   L?0512
00A9 6009              JZ      ?C0205
                                           ; SOURCE LINE # 1672
00AB 7B00        R     MOV     R3,#MBYTE ?SC_1542
00AD 7A00        R     MOV     R2,#HIGH ?SC_1542
00AF 7900        R     MOV     R1,#LOW ?SC_1542
                                           ; SOURCE LINE # 1673
00B1 010000      R     AJMP    ?C0327
                                           ; SOURCE LINE # 1674
00B4         ?C0205:
                                           ; SOURCE LINE # 1676
00B4 C2A9              CLR     SFRB_ET0
                                           ; SOURCE LINE # 1677
00B6 90000000    R     MOV     DPTR,#UsedTime
                                           ; SOURCE LINE # 1678
                                           ; SOURCE LINE # 1680
00BA 110000      R     ACALL   L?0427
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 108 

00BD 90000000    R     MOV     DPTR,#saved_I2C_delay_base
                                           ; SOURCE LINE # 1681
                                           ; SOURCE LINE # 1685
00C1 110000      R     ACALL   L?0456
00C4 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1686
00C7 90000000    R     MOV     DPTR,#dest_addr
00CB 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1687
00CE 110000      R     ACALL   L?0394
00D1 110000      R     ACALL   L?0341
00D4 8031              SJMP    ?C0328
00D6         ?C0206:
                                           ; SOURCE LINE # 1688
00D6 90000000    R     MOV     DPTR,#dest_spi_addr
00DA 110000      R     ACALL   L?0513
00DD 602D              JZ      ?C0211
                                           ; SOURCE LINE # 1690
00DF 90000000    R     MOV     DPTR,#dest_spi_addr
00E3 110000      R     ACALL   L?0341
00E6 110000      R     ACALL   L?0380
                                           ; SOURCE LINE # 1691
00E9 6003              JZ      ?C0208
                                           ; SOURCE LINE # 1692
                                           ; SOURCE LINE # 1693
                                           ; SOURCE LINE # 1694
00EB 010000      R     AJMP    ?C0329
                                           ; SOURCE LINE # 1695
00EE         ?C0208:
                                           ; SOURCE LINE # 1696
00EE 110000      R     ACALL   L?0516
                                           ; SOURCE LINE # 1697
                                           ; SOURCE LINE # 1698
00F1 110000      R     ACALL   L?0343
00F4 C3                CLR     C
00F5 110000      E     ACALL   ?C?ULCMP
00F8 4008              JC      ?C0209
                                           ; SOURCE LINE # 1699
00FA 110000      R     ACALL   L?0352
00FD 110000      R     ACALL   L?0367
0100 8004              SJMP    ?C0324
0102         ?C0209:
                                           ; SOURCE LINE # 1701
0102 E4                CLR     A
0103 FF                MOV     R7,A
0104 FE                MOV     R6,A
0105 FD                MOV     R5,A
0106         ?C0324:
0106 FC                MOV     R4,A
0107         ?C0328:
0107 110000      R     ACALL   L?0442
                                           ; SOURCE LINE # 1702
010A 80CA              SJMP    ?C0206
010C         ?C0211:
                                           ; SOURCE LINE # 1704
010C E4                CLR     A
010D FF                MOV     R7,A
010E FE                MOV     R6,A
010F 7D01              MOV     R5,#01H
0111 110000      R     ACALL   L?0345
0114 C3                CLR     C
0115 110000      E     ACALL   ?C?ULCMP
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 109 

0118 4041              JC      ?C0214
                                           ; SOURCE LINE # 1705
011A 90000000    R     MOV     DPTR,#dest_spi_addr
011E 110000      R     ACALL   L?0341
0121 110000      R     ACALL   _I2CSPI_block_erase
0124 110000      R     ACALL   L?0417
                                           ; SOURCE LINE # 1706
0127 6008              JZ      ?C0213
                                           ; SOURCE LINE # 1707
0129 7B00        R     MOV     R3,#MBYTE ?SC_1609
012B 7A00        R     MOV     R2,#HIGH ?SC_1609
012D 7900        R     MOV     R1,#LOW ?SC_1609
                                           ; SOURCE LINE # 1708
                                           ; SOURCE LINE # 1709
012F 8049              SJMP    ?C0330
                                           ; SOURCE LINE # 1710
0131         ?C0213:
                                           ; SOURCE LINE # 1711
0131 7B00        R     MOV     R3,#MBYTE ?SC_1637
0133 7A00        R     MOV     R2,#HIGH ?SC_1637
0135 7900        R     MOV     R1,#LOW ?SC_1637
0137 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1712
013A 90000000    R     MOV     DPTR,#dest_spi_addr
013E 110000      R     ACALL   L?0354
0141 110000      R     ACALL   L?0514
0144 FD                MOV     R5,A
0145 E4                CLR     A
0146 3C                ADDC    A,R4
0147 FC                MOV     R4,A
0148 90000000    R     MOV     DPTR,#dest_spi_addr
014C 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1713
014F 110000      R     ACALL   L?0352
0152 90000000    R     MOV     DPTR,#remain
0156 110000      R     ACALL   L?0378
                                           ; SOURCE LINE # 1714
0159 80B1              SJMP    ?C0211
015B         ?C0214:
                                           ; SOURCE LINE # 1716
015B 90000000    R     MOV     DPTR,#remain
015F 110000      R     ACALL   L?0341
0162 EC                MOV     A,R4
0163 4D                ORL     A,R5
0164 4E                ORL     A,R6
0165 4F                ORL     A,R7
0166 6049              JZ      ?C0215
                                           ; SOURCE LINE # 1717
0168 90000000    R     MOV     DPTR,#dest_spi_addr
016C 110000      R     ACALL   L?0341
016F 110000      R     ACALL   L?0380
                                           ; SOURCE LINE # 1718
0172 6020              JZ      ?C0216
                                           ; SOURCE LINE # 1719
0174         ?C0329:
0174 7B00        R     MOV     R3,#MBYTE ?SC_1579
0176 7A00        R     MOV     R2,#HIGH ?SC_1579
0178 7900        R     MOV     R1,#LOW ?SC_1579
017A         ?C0330:
017A 90000000    R     MOV     DPTR,#dest_spi_addr
017E 110000      R     ACALL   L?0341
0181 110000      R     ACALL   L?0373
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 110 

0184 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1720
0187 90000000    R     MOV     DPTR,#saved_I2C_delay_base
018B E0                MOVX    A,@DPTR
018C 90000000    E     MOV     DPTR,#I2C_delay_base
0190 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1721
0191 7F01              MOV     R7,#01H
0193 22                RET     
                                           ; SOURCE LINE # 1722
0194         ?C0216:
                                           ; SOURCE LINE # 1723
0194 110000      R     ACALL   L?0516
                                           ; SOURCE LINE # 1724
                                           ; SOURCE LINE # 1725
0197 110000      R     ACALL   L?0343
019A C3                CLR     C
019B 110000      E     ACALL   ?C?ULCMP
019E 4008              JC      ?C0217
                                           ; SOURCE LINE # 1726
01A0 110000      R     ACALL   L?0353
01A3 110000      R     ACALL   L?0367
01A6 8004              SJMP    ?C0325
01A8         ?C0217:
                                           ; SOURCE LINE # 1728
01A8 E4                CLR     A
01A9 FF                MOV     R7,A
01AA FE                MOV     R6,A
01AB FD                MOV     R5,A
01AC         ?C0325:
01AC 110000      R     ACALL   L?0441
                                           ; SOURCE LINE # 1729
01AF 80AA              SJMP    ?C0214
01B1         ?C0215:
                                           ; SOURCE LINE # 1737
01B1 7B00        R     MOV     R3,#MBYTE ?SC_1639
01B3 7A00        R     MOV     R2,#HIGH ?SC_1639
01B5 7900        R     MOV     R1,#LOW ?SC_1639
01B7 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1738
01BA 90000000    R     MOV     DPTR,#src_addr
01BE 110000      R     ACALL   L?0341
01C1 90000000    R     MOV     DPTR,#src_spi_addr
01C5 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1739
01C8 90000000    R     MOV     DPTR,#dest_addr
01CC 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1740
01CF 110000      R     ACALL   L?0394
01D2 110000      R     ACALL   L?0341
01D5 110000      R     ACALL   L?0442
                                           ; SOURCE LINE # 1741
01D8 E4                CLR     A
01D9 90000000    R     MOV     DPTR,#crc
01DD F0                MOVX    @DPTR,A
01DE A3                INC     DPTR
01DF F0                MOVX    @DPTR,A
01E0         ?C0219:
                                           ; SOURCE LINE # 1743
01E0 90000000    R     MOV     DPTR,#remain
01E4 110000      R     ACALL   L?0341
01E7 EC                MOV     A,R4
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 111 

01E8 4D                ORL     A,R5
01E9 4E                ORL     A,R6
01EA 4F                ORL     A,R7
01EB 7003              JNZ     $ + 5H
01ED 010000      R     AJMP    ?C0220
                                           ; SOURCE LINE # 1744
01F0 E4                CLR     A
01F1 7F80              MOV     R7,#080H
01F3 FE                MOV     R6,A
01F4 110000      R     ACALL   L?0344
01F7 C3                CLR     C
01F8 110000      E     ACALL   ?C?ULCMP
01FB 400C              JC      ?C0221
01FD 90000000    R     MOV     DPTR,#data_size
0201 E4                CLR     A
0202 F0                MOVX    @DPTR,A
0203 A3                INC     DPTR
0204 7480              MOV     A,#080H
0206 F0                MOVX    @DPTR,A
0207 8007              SJMP    ?C0222
0209         ?C0221:
                                           ; SOURCE LINE # 1745
0209 90000000    R     MOV     DPTR,#remain
020D 110000      R     ACALL   L?0470
0210         ?C0222:
                                           ; SOURCE LINE # 1746
0210 90000000    R     MOV     DPTR,#remain
0214 110000      R     ACALL   L?0341
0217 C006              PUSH    AR6
0219 C007              PUSH    AR7
021B A3                INC     DPTR
021C E0                MOVX    A,@DPTR
021D FE                MOV     R6,A
021E A3                INC     DPTR
021F E0                MOVX    A,@DPTR
0220 FB                MOV     R3,A
0221 AA06              MOV     R2,AR6
0223 D007              POP     AR7
0225 D006              POP     AR6
0227 C3                CLR     C
0228 EF                MOV     A,R7
0229 9B                SUBB    A,R3
022A FF                MOV     R7,A
022B EE                MOV     A,R6
022C 9A                SUBB    A,R2
022D 110000      R     ACALL   L?0369
0230 110000      R     ACALL   L?0441
                                           ; SOURCE LINE # 1748
0233 90000000    R     MOV     DPTR,#crc
0237 E0                MOVX    A,@DPTR
0238 FF                MOV     R7,A
0239 A3                INC     DPTR
023A E0                MOVX    A,@DPTR
023B 90000000    R     MOV     DPTR,#g_CRC
023F CF                XCH     A,R7
0240 F0                MOVX    @DPTR,A
0241 A3                INC     DPTR
0242 EF                MOV     A,R7
0243 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1749
0244 90000000    R     MOV     DPTR,#src_spi_addr
0248 110000      R     ACALL   L?0341
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 112 

024B 90000000    R     MOV     DPTR,#data_size
024F E0                MOVX    A,@DPTR
0250 FB                MOV     R3,A
0251 A3                INC     DPTR
0252 E0                MOVX    A,@DPTR
0253 90000000    R     MOV     DPTR,#?_I2CSPI_download_master_to_xmem?BYTE+04H
0257 CB                XCH     A,R3
0258 F0                MOVX    @DPTR,A
0259 A3                INC     DPTR
025A EB                MOV     A,R3
025B F0                MOVX    @DPTR,A
025C 110000      R     ACALL   _I2CSPI_download_master_to_xmem
025F 110000      R     ACALL   L?0417
                                           ; SOURCE LINE # 1750
0262 90000000    R     MOV     DPTR,#g_CRC
0266 E0                MOVX    A,@DPTR
0267 FD                MOV     R5,A
0268 A3                INC     DPTR
0269 E0                MOVX    A,@DPTR
026A 90000000    R     MOV     DPTR,#crc
026E CD                XCH     A,R5
026F F0                MOVX    @DPTR,A
0270 A3                INC     DPTR
0271 ED                MOV     A,R5
0272 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1752
0273 EF                MOV     A,R7
0274 601A              JZ      ?C0223
                                           ; SOURCE LINE # 1753
0276 7B00        R     MOV     R3,#MBYTE ?SC_1650
0278 7A00        R     MOV     R2,#HIGH ?SC_1650
027A 7900        R     MOV     R1,#LOW ?SC_1650
027C 90000000    R     MOV     DPTR,#src_spi_addr
0280 110000      R     ACALL   L?0341
0283 110000      R     ACALL   L?0373
0286 110000      R     ACALL   L?0406
0289         ?C0326:
0289 F0                MOVX    @DPTR,A
028A         ?C0327:
028A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1754
028D 7F01              MOV     R7,#01H
028F 22                RET     
                                           ; SOURCE LINE # 1755
0290         ?C0223:
                                           ; SOURCE LINE # 1756
0290 90000000    R     MOV     DPTR,#src_spi_addr
0294 110000      R     ACALL   L?0347
0297 90000000    R     MOV     DPTR,#data_size
029B E0                MOVX    A,@DPTR
029C FE                MOV     R6,A
029D A3                INC     DPTR
029E E0                MOVX    A,@DPTR
029F 90000000    R     MOV     DPTR,#src_spi_addr
02A3 110000      R     ACALL   L?0356
                                           ; SOURCE LINE # 1758
02A6 90000000    R     MOV     DPTR,#dest_spi_addr
02AA 110000      R     ACALL   L?0341
02AD 90000000    R     MOV     DPTR,#data_size
02B1 E0                MOVX    A,@DPTR
02B2 FB                MOV     R3,A
02B3 A3                INC     DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 113 

02B4 E0                MOVX    A,@DPTR
02B5 90000000    R     MOV     DPTR,#?_I2CSPI_upload_from_xmem?BYTE+04H
02B9 CB                XCH     A,R3
02BA F0                MOVX    @DPTR,A
02BB A3                INC     DPTR
02BC EB                MOV     A,R3
02BD F0                MOVX    @DPTR,A
02BE 110000      R     ACALL   _I2CSPI_upload_from_xmem
02C1 110000      R     ACALL   L?0417
                                           ; SOURCE LINE # 1759
02C4 6017              JZ      ?C0224
                                           ; SOURCE LINE # 1760
02C6 7B00        R     MOV     R3,#MBYTE ?SC_1678
02C8 7A00        R     MOV     R2,#HIGH ?SC_1678
02CA 7900        R     MOV     R1,#LOW ?SC_1678
02CC 90000000    R     MOV     DPTR,#dest_spi_addr
02D0 110000      R     ACALL   L?0341
02D3 110000      R     ACALL   L?0373
02D6 110000      R     ACALL   L?0406
02D9 F0                MOVX    @DPTR,A
02DA 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1761
02DD         ?C0224:
                                           ; SOURCE LINE # 1766
02DD 90000000    R     MOV     DPTR,#dest_spi_addr
02E1 110000      R     ACALL   L?0347
02E4 90000000    R     MOV     DPTR,#data_size
02E8 E0                MOVX    A,@DPTR
02E9 FE                MOV     R6,A
02EA A3                INC     DPTR
02EB E0                MOVX    A,@DPTR
02EC 90000000    R     MOV     DPTR,#dest_spi_addr
02F0 110000      R     ACALL   L?0379
                                           ; SOURCE LINE # 1768
02F3 7B00        R     MOV     R3,#MBYTE ?SC_1706
02F5 7A00        R     MOV     R2,#HIGH ?SC_1706
02F7 7900        R     MOV     R1,#LOW ?SC_1706
02F9 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1769
02FC 010000      R     AJMP    ?C0219
02FF         ?C0220:
                                           ; SOURCE LINE # 1772
02FF 90000000    R     MOV     DPTR,#crc
0303 110000      R     ACALL   L?0381
0306 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1773
0309 90000000    R     MOV     DPTR,#dest_addr
030D 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1774
0310 110000      R     ACALL   L?0395
0313 110000      R     ACALL   L?0341
0316 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+04H
031A 110000      R     ACALL   L?0396
031D 110000      R     ACALL   L?0341
0320 110000      R     ACALL   L?0476
0323 90000000    R     MOV     DPTR,#crc
0327 E0                MOVX    A,@DPTR
0328 FF                MOV     R7,A
0329 A3                INC     DPTR
032A E0                MOVX    A,@DPTR
032B 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+09H
032F CF                XCH     A,R7
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 114 

0330 F0                MOVX    @DPTR,A
0331 A3                INC     DPTR
0332 EF                MOV     A,R7
0333 F0                MOVX    @DPTR,A
0334 90000000    R     MOV     DPTR,#dest_spi_addr
0338 110000      R     ACALL   L?0341
033B 110000      R     ACALL   _I2CSPI_check_crc
033E 110000      R     ACALL   L?0417
                                           ; SOURCE LINE # 1775
0341 6009              JZ      ?C0225
                                           ; SOURCE LINE # 1776
0343 7B00        R     MOV     R3,#MBYTE ?SC_1724
0345 7A00        R     MOV     R2,#HIGH ?SC_1724
0347 7900        R     MOV     R1,#LOW ?SC_1724
0349 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1778
034C         ?C0225:
                                           ; SOURCE LINE # 1780
034C 7B00        R     MOV     R3,#MBYTE ?SC_1732
034E 7A00        R     MOV     R2,#HIGH ?SC_1732
0350 7900        R     MOV     R1,#LOW ?SC_1732
0352 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1786
0355 E4                CLR     A
0356 FF                MOV     R7,A
0357 110000      R     ACALL   _I2CSPI_mcu_halt_rerun
                                           ; SOURCE LINE # 1789
035A 7B00        R     MOV     R3,#MBYTE ?SC_1743
035C 7A00        R     MOV     R2,#HIGH ?SC_1743
035E 7900        R     MOV     R1,#LOW ?SC_1743
0360 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1791
0363 C2A9              CLR     SFRB_ET0
                                           ; SOURCE LINE # 1792
0365 90000000    R     MOV     DPTR,#UsedTime
0369 110000      R     ACALL   L?0347
036C 90000000    R     MOV     DPTR,#UsedTime
                                           ; SOURCE LINE # 1793
0370 110000      R     ACALL   L?0393
                                           ; SOURCE LINE # 1794
0373 90000000    R     MOV     DPTR,#saved_I2C_delay_base
                                           ; SOURCE LINE # 1795
0377 110000      R     ACALL   L?0428
037A 90000000    R     MOV     DPTR,#UsedTime
037E 110000      R     ACALL   L?0341
0381 110000      R     ACALL   L?0372
0384 110000      R     ACALL   L?0429
0387 90000000    R     MOV     DPTR,#UsedTime
038B 110000      R     ACALL   L?0341
038E 110000      R     ACALL   L?0408
0391 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1798
0394 7FE8              MOV     R7,#0E8H
0396 7E03              MOV     R6,#03H
0398 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1799
039B 7FE8              MOV     R7,#0E8H
039D 7E03              MOV     R6,#03H
039F 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1800
03A2 7B00        R     MOV     R3,#MBYTE ?SC_276
03A4 7A00        R     MOV     R2,#HIGH ?SC_276
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 115 

03A6 7900        R     MOV     R1,#LOW ?SC_276
03A8 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1801
03AB 110000      R     ACALL   I2CSPI_i2ccmd_ping
03AE 110000      R     ACALL   L?0417
                                           ; SOURCE LINE # 1802
03B1 7014              JNZ     ?C0226
                                           ; SOURCE LINE # 1804
03B3 7F07              MOV     R7,#07H
03B5 110000      R     ACALL   L?0366
                                           ; SOURCE LINE # 1806
03B8 7F08              MOV     R7,#08H
03BA 110000      R     ACALL   L?0366
                                           ; SOURCE LINE # 1808
03BD 7F09              MOV     R7,#09H
03BF 110000      R     ACALL   L?0391
                                           ; SOURCE LINE # 1810
03C2 7F0A              MOV     R7,#0AH
03C4 110000      R     ACALL   L?0391
                                           ; SOURCE LINE # 1811
03C7         ?C0226:
                                           ; SOURCE LINE # 1812
03C7 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 1813
03C9         ?C0202:
03C9 22                RET     
03CA         L?0366:
03CA 110000      R     ACALL   _I2CSPI_i2ccmd_read
03CD 90000000    R     MOV     DPTR,#ret
03D1 EF                MOV     A,R7
03D2 F0                MOVX    @DPTR,A
03D3 22                RET     
03D4         L?0380:
03D4 110000      R     ACALL   _I2CSPI_sector_erase
03D7 90000000    R     MOV     DPTR,#ret
03DB EF                MOV     A,R7
03DC F0                MOVX    @DPTR,A
03DD 22                RET     
03DE         L?0391:
03DE 110000      R     ACALL   _I2CSPI_i2ccmd_read
03E1 90000000    R     MOV     DPTR,#ret
03E5 EF                MOV     A,R7
03E6 F0                MOVX    @DPTR,A
03E7 22                RET     
03E8         L?0453:
03E8 110000      E     ACALL   _ReadI2C_8A
03EB 90000000    R     MOV     DPTR,#bTemp
03EF EF                MOV     A,R7
03F0 F0                MOVX    @DPTR,A
03F1 22                RET     
03F2         L?0516:
03F2 7B00        R     MOV     R3,#MBYTE ?SC_1607
03F4 7A00        R     MOV     R2,#HIGH ?SC_1607
03F6 7900        R     MOV     R1,#LOW ?SC_1607
03F8 110000      E     ACALL   _Puts
03FB 22                RET     
             ; FUNCTION _I2CSPI_upload (END)

             ; FUNCTION _I2CSPI_upload_faster (BEGIN)
                                           ; SOURCE LINE # 1816
0000 90000000    R     MOV     DPTR,#src_addr
                                           ; SOURCE LINE # 1817
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 116 

                                           ; SOURCE LINE # 1830
0004 110000      R     ACALL   L?0511
0007 90000000    R     MOV     DPTR,#src_addr
000B 110000      R     ACALL   L?0341
000E 110000      R     ACALL   L?0373
0011 90000000    R     MOV     DPTR,#dest_addr
0015 110000      R     ACALL   L?0341
0018 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
001C 110000      R     ACALL   L?0399
001F 110000      R     ACALL   L?0341
0022 90000000    E     MOV     DPTR,#?_Printf?BYTE+0BH
0026 110000      E     ACALL   ?C?LSTXDATA
0029 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1844
002C E4                CLR     A
002D FD                MOV     R5,A
                                           ; SOURCE LINE # 1845
002E 110000      R     ACALL   L?0454
0031 FF                MOV     R7,A
0032 110000      R     ACALL   L?0418
                                           ; SOURCE LINE # 1846
0035 6436              XRL     A,#036H
0037 600B              JZ      ?C0227
                                           ; SOURCE LINE # 1847
0039 7B00        R     MOV     R3,#MBYTE ?SC_1503
003B 7A00        R     MOV     R2,#HIGH ?SC_1503
003D 7900        R     MOV     R1,#LOW ?SC_1503
003F 110000      R     ACALL   L?0390
                                           ; SOURCE LINE # 1848
0042 8059              SJMP    ?C0333
                                           ; SOURCE LINE # 1849
0044         ?C0227:
                                           ; SOURCE LINE # 1852
0044 110000      R     ACALL   I2CSPI_check_slave_TW8836B
0047 110000      R     ACALL   L?0430
                                           ; SOURCE LINE # 1856
004A 110000      R     ACALL   L?0485
                                           ; SOURCE LINE # 1857
004D 7FC2              MOV     R7,#0C2H
004F 110000      R     ACALL   L?0418
                                           ; SOURCE LINE # 1858
0052 30E010            JNB     ACC.0,?C0229
                                           ; SOURCE LINE # 1859
0055 E4                CLR     A
0056 FD                MOV     R5,A
0057 7FC2              MOV     R7,#0C2H
0059 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1860
005C 7B00        R     MOV     R3,#MBYTE ?SC_1521
005E 7A00        R     MOV     R2,#HIGH ?SC_1521
0060 7900        R     MOV     R1,#LOW ?SC_1521
0062 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1861
0065         ?C0229:
                                           ; SOURCE LINE # 1864
0065 110000      R     ACALL   I2CSPI_check_slave_SPIFLASH
0068 110000      R     ACALL   L?0430
                                           ; SOURCE LINE # 1872
006B 7F01              MOV     R7,#01H
006D 110000      R     ACALL   _I2CSPI_mcu_halt_rerun
                                           ; SOURCE LINE # 1875
0070 110000      R     ACALL   L?0485
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 117 

                                           ; SOURCE LINE # 1876
0073 7FC4              MOV     R7,#0C4H
0075 110000      R     ACALL   L?0517
                                           ; SOURCE LINE # 1877
0078 30E70F            JNB     ACC.7,?C0230
                                           ; SOURCE LINE # 1878
007B 110000      R     ACALL   L?0505
007E 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1879
0081 110000      R     ACALL   L?0507
0084 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1880
0087 7F01              MOV     R7,#01H
0089 22                RET     
                                           ; SOURCE LINE # 1881
008A         ?C0230:
                                           ; SOURCE LINE # 1884
008A 90000000    R     MOV     DPTR,#dest_addr
008E A3                INC     DPTR
008F 110000      R     ACALL   L?0342
0092 110000      R     ACALL   L?0512
0095 600C              JZ      ?C0231
                                           ; SOURCE LINE # 1885
0097 7B00        R     MOV     R3,#MBYTE ?SC_1542
0099 7A00        R     MOV     R2,#HIGH ?SC_1542
009B 7900        R     MOV     R1,#LOW ?SC_1542
009D         ?C0333:
009D 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1886
00A0 7F01              MOV     R7,#01H
00A2 22                RET     
                                           ; SOURCE LINE # 1887
00A3         ?C0231:
                                           ; SOURCE LINE # 1889
00A3 C2A9              CLR     SFRB_ET0
                                           ; SOURCE LINE # 1890
00A5 90000000    R     MOV     DPTR,#UsedTime
                                           ; SOURCE LINE # 1891
                                           ; SOURCE LINE # 1893
00A9 110000      R     ACALL   L?0427
00AC 90000000    R     MOV     DPTR,#saved_I2C_delay_base
                                           ; SOURCE LINE # 1894
                                           ; SOURCE LINE # 1898
00B0 110000      R     ACALL   L?0456
00B3 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1899
00B6 90000000    R     MOV     DPTR,#dest_addr
00BA 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1900
00BD 110000      R     ACALL   L?0397
00C0 110000      R     ACALL   L?0341
00C3 803E              SJMP    ?C0334
00C5         ?C0232:
                                           ; SOURCE LINE # 1901
00C5 90000000    R     MOV     DPTR,#dest_spi_addr
00C9 110000      R     ACALL   L?0513
00CC 603A              JZ      ?C0237
                                           ; SOURCE LINE # 1903
00CE 90000000    R     MOV     DPTR,#dest_spi_addr
00D2 110000      R     ACALL   L?0341
00D5 110000      R     ACALL   L?0386
                                           ; SOURCE LINE # 1904
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 118 

00D8 6003              JZ      ?C0234
                                           ; SOURCE LINE # 1905
                                           ; SOURCE LINE # 1906
                                           ; SOURCE LINE # 1907
00DA 010000      R     AJMP    ?C0335
                                           ; SOURCE LINE # 1908
00DD         ?C0234:
                                           ; SOURCE LINE # 1909
                                           ; SOURCE LINE # 1910
00DD 110000      R     ACALL   L?0439
00E0 110000      R     ACALL   L?0354
00E3 110000      R     ACALL   L?0362
                                           ; SOURCE LINE # 1911
00E6 110000      R     ACALL   L?0432
00E9 110000      R     ACALL   L?0347
00EC C3                CLR     C
00ED 110000      E     ACALL   ?C?ULCMP
00F0 400C              JC      ?C0235
                                           ; SOURCE LINE # 1912
00F2 90000000    R     MOV     DPTR,#remain
00F6 110000      R     ACALL   L?0354
00F9 110000      R     ACALL   L?0368
00FC 8004              SJMP    ?C0331
00FE         ?C0235:
                                           ; SOURCE LINE # 1914
00FE E4                CLR     A
00FF FF                MOV     R7,A
0100 FE                MOV     R6,A
0101 FD                MOV     R5,A
0102         ?C0331:
0102 FC                MOV     R4,A
0103         ?C0334:
0103 110000      R     ACALL   L?0444
                                           ; SOURCE LINE # 1915
0106 80BD              SJMP    ?C0232
0108         ?C0237:
                                           ; SOURCE LINE # 1917
0108 7EF0              MOV     R6,#0F0H
010A 110000      R     ACALL   L?0433
010D 110000      R     ACALL   L?0347
0110 D3                SETB    C
0111 110000      E     ACALL   ?C?ULCMP
0114 403D              JC      ?C0240
                                           ; SOURCE LINE # 1918
0116 90000000    R     MOV     DPTR,#dest_spi_addr
011A 110000      R     ACALL   L?0341
011D 110000      R     ACALL   _I2CSPI_block_erase
0120 110000      R     ACALL   L?0431
                                           ; SOURCE LINE # 1919
0123 6008              JZ      ?C0239
                                           ; SOURCE LINE # 1920
0125 7B00        R     MOV     R3,#MBYTE ?SC_1609
0127 7A00        R     MOV     R2,#HIGH ?SC_1609
0129 7900        R     MOV     R1,#LOW ?SC_1609
                                           ; SOURCE LINE # 1921
                                           ; SOURCE LINE # 1922
012B 8045              SJMP    ?C0336
                                           ; SOURCE LINE # 1923
012D         ?C0239:
                                           ; SOURCE LINE # 1924
012D 7B00        R     MOV     R3,#MBYTE ?SC_1637
012F 7A00        R     MOV     R2,#HIGH ?SC_1637
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 119 

0131 7900        R     MOV     R1,#LOW ?SC_1637
0133 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1925
0136 90000000    R     MOV     DPTR,#dest_spi_addr
013A 110000      R     ACALL   L?0354
013D 110000      R     ACALL   L?0514
0140 110000      R     ACALL   L?0363
                                           ; SOURCE LINE # 1926
0143 90000000    R     MOV     DPTR,#remain
0147 110000      R     ACALL   L?0354
014A 90000000    R     MOV     DPTR,#remain
014E 110000      R     ACALL   L?0378
                                           ; SOURCE LINE # 1927
0151 80B5              SJMP    ?C0237
0153         ?C0240:
                                           ; SOURCE LINE # 1929
0153 90000000    R     MOV     DPTR,#remain
0157 110000      R     ACALL   L?0341
015A EC                MOV     A,R4
015B 4D                ORL     A,R5
015C 4E                ORL     A,R6
015D 4F                ORL     A,R7
015E 6056              JZ      ?C0241
                                           ; SOURCE LINE # 1930
0160 90000000    R     MOV     DPTR,#dest_spi_addr
0164 110000      R     ACALL   L?0341
0167 110000      R     ACALL   L?0386
                                           ; SOURCE LINE # 1931
016A 6020              JZ      ?C0242
                                           ; SOURCE LINE # 1932
016C         ?C0335:
016C 7B00        R     MOV     R3,#MBYTE ?SC_1579
016E 7A00        R     MOV     R2,#HIGH ?SC_1579
0170 7900        R     MOV     R1,#LOW ?SC_1579
0172         ?C0336:
0172 90000000    R     MOV     DPTR,#dest_spi_addr
0176 110000      R     ACALL   L?0341
0179 110000      R     ACALL   L?0373
017C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1933
017F 90000000    R     MOV     DPTR,#saved_I2C_delay_base
0183 E0                MOVX    A,@DPTR
0184 90000000    E     MOV     DPTR,#I2C_delay_base
0188 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1934
0189 7F01              MOV     R7,#01H
018B 22                RET     
                                           ; SOURCE LINE # 1935
018C         ?C0242:
                                           ; SOURCE LINE # 1936
                                           ; SOURCE LINE # 1937
018C 110000      R     ACALL   L?0439
018F 110000      R     ACALL   L?0354
0192 110000      R     ACALL   L?0362
                                           ; SOURCE LINE # 1938
0195 110000      R     ACALL   L?0432
0198 110000      R     ACALL   L?0347
019B C3                CLR     C
019C 110000      E     ACALL   ?C?ULCMP
019F 400C              JC      ?C0243
                                           ; SOURCE LINE # 1939
01A1 90000000    R     MOV     DPTR,#remain
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 120 

01A5 110000      R     ACALL   L?0354
01A8 110000      R     ACALL   L?0368
01AB 8004              SJMP    ?C0332
01AD         ?C0243:
                                           ; SOURCE LINE # 1941
01AD E4                CLR     A
01AE FF                MOV     R7,A
01AF FE                MOV     R6,A
01B0 FD                MOV     R5,A
01B1         ?C0332:
01B1 110000      R     ACALL   L?0443
                                           ; SOURCE LINE # 1942
01B4 809D              SJMP    ?C0240
01B6         ?C0241:
                                           ; SOURCE LINE # 1950
01B6 7B00        R     MOV     R3,#MBYTE ?SC_1639
01B8 7A00        R     MOV     R2,#HIGH ?SC_1639
01BA 7900        R     MOV     R1,#LOW ?SC_1639
01BC 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1951
01BF 90000000    R     MOV     DPTR,#src_addr
01C3 110000      R     ACALL   L?0341
01C6 90000000    R     MOV     DPTR,#src_spi_addr
01CA 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1952
01CD 90000000    R     MOV     DPTR,#dest_addr
01D1 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 1953
01D4 110000      R     ACALL   L?0397
01D7 110000      R     ACALL   L?0341
01DA 110000      R     ACALL   L?0444
                                           ; SOURCE LINE # 1954
01DD E4                CLR     A
01DE 90000000    R     MOV     DPTR,#crc
01E2 F0                MOVX    @DPTR,A
01E3 A3                INC     DPTR
01E4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1957
01E5 7D04              MOV     R5,#04H
                                           ; SOURCE LINE # 1958
01E7 110000      R     ACALL   L?0454
01EA FD                MOV     R5,A
01EB 7FF5              MOV     R7,#0F5H
01ED 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1959
01F0 7FF6              MOV     R7,#0F6H
                                           ; SOURCE LINE # 1960
01F2 110000      R     ACALL   L?0491
01F5 7FF7              MOV     R7,#0F7H
01F7 110000      E     ACALL   _WriteI2C_8A
01FA         ?C0245:
                                           ; SOURCE LINE # 1962
01FA 90000000    R     MOV     DPTR,#remain
01FE 110000      R     ACALL   L?0341
0201 EC                MOV     A,R4
0202 4D                ORL     A,R5
0203 4E                ORL     A,R6
0204 4F                ORL     A,R7
0205 7003              JNZ     $ + 5H
0207 010000      R     AJMP    ?C0246
                                           ; SOURCE LINE # 1963
020A E4                CLR     A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 121 

020B 7F80              MOV     R7,#080H
020D FE                MOV     R6,A
020E 110000      R     ACALL   L?0434
0211 110000      R     ACALL   L?0347
0214 C3                CLR     C
0215 110000      E     ACALL   ?C?ULCMP
0218 400C              JC      ?C0247
021A 90000000    R     MOV     DPTR,#data_size
021E E4                CLR     A
021F F0                MOVX    @DPTR,A
0220 A3                INC     DPTR
0221 7480              MOV     A,#080H
0223 F0                MOVX    @DPTR,A
0224 8007              SJMP    ?C0248
0226         ?C0247:
                                           ; SOURCE LINE # 1964
0226 90000000    R     MOV     DPTR,#remain
022A 110000      R     ACALL   L?0470
022D         ?C0248:
                                           ; SOURCE LINE # 1965
022D 90000000    R     MOV     DPTR,#remain
0231 110000      R     ACALL   L?0341
0234 C006              PUSH    AR6
0236 C007              PUSH    AR7
0238 A3                INC     DPTR
0239 E0                MOVX    A,@DPTR
023A FE                MOV     R6,A
023B A3                INC     DPTR
023C E0                MOVX    A,@DPTR
023D FB                MOV     R3,A
023E AA06              MOV     R2,AR6
0240 D007              POP     AR7
0242 D006              POP     AR6
0244 C3                CLR     C
0245 EF                MOV     A,R7
0246 9B                SUBB    A,R3
0247 FF                MOV     R7,A
0248 EE                MOV     A,R6
0249 9A                SUBB    A,R2
024A 110000      R     ACALL   L?0369
024D 110000      R     ACALL   L?0443
                                           ; SOURCE LINE # 1967
0250 90000000    R     MOV     DPTR,#src_spi_addr
0254 110000      R     ACALL   L?0341
0257 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+04H
025B 110000      R     ACALL   L?0424
025E 90000000    R     MOV     DPTR,#data_size
0262 110000      R     ACALL   L?0458
0265 110000      E     ACALL   _SpiFlash_Read_XMem
                                           ; SOURCE LINE # 1969
0268 E4                CLR     A
0269 90000000    R     MOV     DPTR,#local_crc
026D F0                MOVX    @DPTR,A
026E A3                INC     DPTR
026F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1976
0270 110000      R     ACALL   I2CSPI_enable_xmem_access
0273 110000      R     ACALL   L?0431
                                           ; SOURCE LINE # 1977
0276 6009              JZ      ?C0249
                                           ; SOURCE LINE # 1978
0278 7B00        R     MOV     R3,#MBYTE ?SC_1775
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 122 

027A 7A00        R     MOV     R2,#HIGH ?SC_1775
027C 7900        R     MOV     R1,#LOW ?SC_1775
027E 110000      E     ACALL   _Puts
0281         ?C0249:
                                           ; SOURCE LINE # 1981
0281 7FDB              MOV     R7,#0DBH
                                           ; SOURCE LINE # 1982
0283 110000      R     ACALL   L?0491
0286 7FDC              MOV     R7,#0DCH
0288 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1983
028B 90000000    R     MOV     DPTR,#p
028F 110000      R     ACALL   L?0423
                                           ; SOURCE LINE # 1984
0292 E4                CLR     A
0293 A3                INC     DPTR
0294 F0                MOVX    @DPTR,A
0295         ?C0250:
0295 90000000    R     MOV     DPTR,#i
0299 E0                MOVX    A,@DPTR
029A FF                MOV     R7,A
029B D3                SETB    C
029C 90000000    R     MOV     DPTR,#data_size+01H
02A0 E0                MOVX    A,@DPTR
02A1 9F                SUBB    A,R7
02A2 90000000    R     MOV     DPTR,#data_size
02A6 E0                MOVX    A,@DPTR
02A7 9400              SUBB    A,#00H
02A9 404A              JC      ?C0251
                                           ; SOURCE LINE # 1985
02AB 90000000    R     MOV     DPTR,#p
02AF 110000      R     ACALL   L?0440
02B2 90000000    R     MOV     DPTR,#bTemp
02B6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1986
02B7 E0                MOVX    A,@DPTR
02B8 FD                MOV     R5,A
02B9 7FDD              MOV     R7,#0DDH
02BB 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 1987
02BE 90000000    R     MOV     DPTR,#crc
02C2 E0                MOVX    A,@DPTR
02C3 90000000    R     MOV     DPTR,#bTemp
02C7 110000      R     ACALL   L?0349
02CA 110000      R     ACALL   L?0474
02CD 90000000    R     MOV     DPTR,#crc+01H
02D1 E0                MOVX    A,@DPTR
02D2 FE                MOV     R6,A
02D3 EA                MOV     A,R2
02D4 6E                XRL     A,R6
02D5 FF                MOV     R7,A
02D6 EB                MOV     A,R3
02D7 90000000    R     MOV     DPTR,#crc
02DB CF                XCH     A,R7
02DC F0                MOVX    @DPTR,A
02DD A3                INC     DPTR
02DE EF                MOV     A,R7
02DF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1988
02E0 90000000    R     MOV     DPTR,#local_crc
02E4 E0                MOVX    A,@DPTR
02E5 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 123 

02E6 110000      R     ACALL   L?0350
02E9 110000      R     ACALL   L?0403
                                           ; SOURCE LINE # 1989
02EC 90000000    R     MOV     DPTR,#i
02F0 E0                MOVX    A,@DPTR
02F1 04                INC     A
02F2 F0                MOVX    @DPTR,A
02F3 80A0              SJMP    ?C0250
02F5         ?C0251:
                                           ; SOURCE LINE # 1995
02F5 110000      R     ACALL   I2CSPI_disable_xmem_access
02F8 110000      R     ACALL   L?0431
                                           ; SOURCE LINE # 1996
02FB 6009              JZ      ?C0253
                                           ; SOURCE LINE # 1997
02FD 7B00        R     MOV     R3,#MBYTE ?SC_1800
02FF 7A00        R     MOV     R2,#HIGH ?SC_1800
0301 7900        R     MOV     R1,#LOW ?SC_1800
0303 110000      E     ACALL   _Puts
0306         ?C0253:
                                           ; SOURCE LINE # 2000
0306 90000000    R     MOV     DPTR,#src_spi_addr
030A 110000      R     ACALL   L?0347
030D 110000      R     ACALL   L?0461
0310 90000000    R     MOV     DPTR,#src_spi_addr
0314 110000      R     ACALL   L?0379
                                           ; SOURCE LINE # 2006
0317 E4                CLR     A
0318 90000000    R     MOV     DPTR,#I2CSPI_Buffer+05H
031C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2007
031D A3                INC     DPTR
031E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2008
031F A3                INC     DPTR
0320 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2009
0321 A3                INC     DPTR
0322 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2010
0323 A3                INC     DPTR
0324 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2011
0325 A3                INC     DPTR
0326 7406              MOV     A,#06H
0328 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2012
0329 7A00        R     MOV     R2,#HIGH I2CSPI_Buffer+05H
032B 7900        R     MOV     R1,#LOW I2CSPI_Buffer+05H
032D FD                MOV     R5,A
032E 7FF5              MOV     R7,#0F5H
                                           ; SOURCE LINE # 2013
0330 110000      R     ACALL   L?0518
0333 7441              MOV     A,#041H
0335 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2014
0336 7401              MOV     A,#01H
                                           ; SOURCE LINE # 2015
0338 110000      R     ACALL   L?0455
                                           ; SOURCE LINE # 2017
033B 90000000    R     MOV     DPTR,#data_size
033F E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 124 

0340 FC                MOV     R4,A
0341 A3                INC     DPTR
0342 E0                MOVX    A,@DPTR
0343 FD                MOV     R5,A
0344 EC                MOV     A,R4
0345 90000000    R     MOV     DPTR,#I2CSPI_Buffer+08H
0349 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2018
034A A3                INC     DPTR
034B ED                MOV     A,R5
034C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2019
034D 7402              MOV     A,#02H
                                           ; SOURCE LINE # 2020
034F 110000      R     ACALL   L?0405
0352 110000      R     ACALL   L?0341
0355 7810              MOV     R0,#010H
0357 110000      E     ACALL   ?C?ULSHR
035A 90000000    R     MOV     DPTR,#I2CSPI_Buffer+0BH
035E EF                MOV     A,R7
035F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2021
0360 90000000    R     MOV     DPTR,#dest_spi_addr
0364 110000      R     ACALL   L?0341
0367 7808              MOV     R0,#08H
0369 110000      E     ACALL   ?C?ULSHR
036C 90000000    R     MOV     DPTR,#I2CSPI_Buffer+0CH
0370 EF                MOV     A,R7
0371 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2022
0372 90000000    R     MOV     DPTR,#dest_spi_addr
0376 A3                INC     DPTR
0377 A3                INC     DPTR
0378 A3                INC     DPTR
0379 E0                MOVX    A,@DPTR
037A 90000000    R     MOV     DPTR,#I2CSPI_Buffer+0DH
037E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2023
037F 7A00        R     MOV     R2,#HIGH I2CSPI_Buffer+08H
0381 7900        R     MOV     R1,#LOW I2CSPI_Buffer+08H
0383 7D06              MOV     R5,#06H
0385 7FF8              MOV     R7,#0F8H
                                           ; SOURCE LINE # 2024
0387 110000      R     ACALL   L?0518
038A 74C4              MOV     A,#0C4H
038C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2025
038D 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2026
038F 110000      R     ACALL   L?0455
                                           ; SOURCE LINE # 2043
0392 E4                CLR     A
0393 90000000    R     MOV     DPTR,#i
0397 F0                MOVX    @DPTR,A
0398         ?C0254:
                                           ; SOURCE LINE # 2044
0398 7FF4              MOV     R7,#0F4H
039A 110000      E     ACALL   _ReadI2C_8A
039D 90000000    R     MOV     DPTR,#vdata
03A1 EF                MOV     A,R7
03A2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2045
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 125 

03A3 E0                MOVX    A,@DPTR
03A4 5417              ANL     A,#017H
03A6 6402              XRL     A,#02H
03A8 6009              JZ      ?C0255
                                           ; SOURCE LINE # 2046
03AA         ?C0257:
                                           ; SOURCE LINE # 2047
03AA         ?C0256:
03AA 90000000    R     MOV     DPTR,#i
03AE 110000      R     ACALL   L?0410
03B1 40E5              JC      ?C0254
03B3         ?C0255:
                                           ; SOURCE LINE # 2048
03B3 90000000    R     MOV     DPTR,#i
03B7 E0                MOVX    A,@DPTR
03B8 B4641B            CJNE    A,#064H,?C0258
                                           ; SOURCE LINE # 2049
03BB 7B00        R     MOV     R3,#MBYTE ?SC_1678
03BD 7A00        R     MOV     R2,#HIGH ?SC_1678
03BF 7900        R     MOV     R1,#LOW ?SC_1678
03C1 90000000    R     MOV     DPTR,#dest_spi_addr
03C5 110000      R     ACALL   L?0341
03C8 110000      R     ACALL   L?0373
03CB 90000000    R     MOV     DPTR,#data_size
03CF 110000      R     ACALL   L?0407
03D2 F0                MOVX    @DPTR,A
03D3 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 2050
03D6         ?C0258:
                                           ; SOURCE LINE # 2051
03D6 110000      R     ACALL   I2CSPI_check_status_reg
03D9 110000      R     ACALL   L?0431
                                           ; SOURCE LINE # 2052
03DC 601A              JZ      ?C0259
                                           ; SOURCE LINE # 2054
03DE 7D04              MOV     R5,#04H
03E0 7FFF              MOV     R7,#0FFH
03E2 110000      E     ACALL   _WriteI2C_8A
                                           ; SOURCE LINE # 2055
03E5 7FD0              MOV     R7,#0D0H
03E7 110000      R     ACALL   L?0517
                                           ; SOURCE LINE # 2056
03EA 7B00        R     MOV     R3,#MBYTE ?SC_1826
03EC 7A00        R     MOV     R2,#HIGH ?SC_1826
03EE 7900        R     MOV     R1,#LOW ?SC_1826
03F0 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
03F4 F0                MOVX    @DPTR,A
03F5 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 2057
03F8         ?C0259:
                                           ; SOURCE LINE # 2059
03F8 110000      R     ACALL   L?0461
03FB FF                MOV     R7,A
03FC E4                CLR     A
03FD FC                MOV     R4,A
03FE FD                MOV     R5,A
03FF 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+04H
0403 110000      E     ACALL   ?C?LSTXDATA
0406 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+08H
040A 7464              MOV     A,#064H
040C F0                MOVX    @DPTR,A
040D 90000000    R     MOV     DPTR,#local_crc
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 126 

0411 110000      R     ACALL   L?0404
0414 110000      R     ACALL   L?0341
0417 110000      R     ACALL   L?0402
                                           ; SOURCE LINE # 2060
041A 6009              JZ      ?C0260
                                           ; SOURCE LINE # 2061
041C 7B00        R     MOV     R3,#MBYTE ?SC_1850
041E 7A00        R     MOV     R2,#HIGH ?SC_1850
0420 7900        R     MOV     R1,#LOW ?SC_1850
0422 110000      E     ACALL   _Printf
0425         ?C0260:
                                           ; SOURCE LINE # 2063
0425 90000000    R     MOV     DPTR,#dest_spi_addr
0429 110000      R     ACALL   L?0347
042C 110000      R     ACALL   L?0462
042F 90000000    R     MOV     DPTR,#dest_spi_addr
0433 110000      R     ACALL   L?0356
                                           ; SOURCE LINE # 2065
0436 7B00        R     MOV     R3,#MBYTE ?SC_1706
0438 7A00        R     MOV     R2,#HIGH ?SC_1706
043A 7900        R     MOV     R1,#LOW ?SC_1706
043C 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 2066
043F 010000      R     AJMP    ?C0245
0442         ?C0246:
                                           ; SOURCE LINE # 2069
0442 90000000    R     MOV     DPTR,#crc
0446 110000      R     ACALL   L?0381
0449 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 2070
044C 90000000    R     MOV     DPTR,#dest_addr
0450 110000      R     ACALL   L?0341
                                           ; SOURCE LINE # 2071
0453 110000      R     ACALL   L?0398
0456 110000      R     ACALL   L?0341
0459 90000000    R     MOV     DPTR,#?_I2CSPI_check_crc?BYTE+04H
045D 110000      R     ACALL   L?0399
0460 110000      R     ACALL   L?0341
0463 110000      R     ACALL   L?0476
0466 90000000    R     MOV     DPTR,#crc
046A 110000      R     ACALL   L?0404
046D 110000      R     ACALL   L?0341
0470 110000      R     ACALL   L?0402
                                           ; SOURCE LINE # 2072
0473 6009              JZ      ?C0261
                                           ; SOURCE LINE # 2073
0475 7B00        R     MOV     R3,#MBYTE ?SC_1724
0477 7A00        R     MOV     R2,#HIGH ?SC_1724
0479 7900        R     MOV     R1,#LOW ?SC_1724
047B 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 2075
047E         ?C0261:
                                           ; SOURCE LINE # 2077
047E 7B00        R     MOV     R3,#MBYTE ?SC_1732
0480 7A00        R     MOV     R2,#HIGH ?SC_1732
0482 7900        R     MOV     R1,#LOW ?SC_1732
0484 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 2083
0487 E4                CLR     A
0488 FF                MOV     R7,A
0489 110000      R     ACALL   _I2CSPI_mcu_halt_rerun
                                           ; SOURCE LINE # 2086
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 127 

048C 7B00        R     MOV     R3,#MBYTE ?SC_1743
048E 7A00        R     MOV     R2,#HIGH ?SC_1743
0490 7900        R     MOV     R1,#LOW ?SC_1743
0492 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 2088
0495 C2A9              CLR     SFRB_ET0
                                           ; SOURCE LINE # 2089
0497 90000000    R     MOV     DPTR,#UsedTime
049B 110000      R     ACALL   L?0347
049E 90000000    R     MOV     DPTR,#UsedTime
                                           ; SOURCE LINE # 2090
04A2 110000      R     ACALL   L?0393
                                           ; SOURCE LINE # 2091
04A5 90000000    R     MOV     DPTR,#saved_I2C_delay_base
                                           ; SOURCE LINE # 2092
04A9 110000      R     ACALL   L?0428
04AC 90000000    R     MOV     DPTR,#UsedTime
04B0 110000      R     ACALL   L?0341
04B3 110000      R     ACALL   L?0372
04B6 110000      R     ACALL   L?0429
04B9 90000000    R     MOV     DPTR,#UsedTime
04BD 110000      R     ACALL   L?0341
04C0 110000      R     ACALL   L?0408
04C3 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 2094
04C6 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 2095
04C8         ?C0228:
04C8 22                RET     
04C9         L?0386:
04C9 110000      R     ACALL   _I2CSPI_sector_erase
04CC 90000000    R     MOV     DPTR,#ret
04D0 EF                MOV     A,R7
04D1 F0                MOVX    @DPTR,A
04D2 22                RET     
04D3         L?0402:
04D3 110000      R     ACALL   _I2CSPI_check_crc
04D6 90000000    R     MOV     DPTR,#ret
04DA EF                MOV     A,R7
04DB F0                MOVX    @DPTR,A
04DC 22                RET     
04DD         L?0418:
04DD 110000      E     ACALL   _ReadI2C_8A
04E0 90000000    R     MOV     DPTR,#bTemp
04E4 EF                MOV     A,R7
04E5 F0                MOVX    @DPTR,A
04E6 22                RET     
04E7         L?0439:
04E7 7B00        R     MOV     R3,#MBYTE ?SC_1607
04E9 7A00        R     MOV     R2,#HIGH ?SC_1607
04EB 7900        R     MOV     R1,#LOW ?SC_1607
04ED 110000      E     ACALL   _Puts
04F0 90000000    R     MOV     DPTR,#dest_spi_addr
04F4 22                RET     
04F5         L?0454:
04F5 7FFF              MOV     R7,#0FFH
04F7 110000      E     ACALL   _WriteI2C_8A
04FA E4                CLR     A
04FB 22                RET     
04FC         L?0455:
04FC A3                INC     DPTR
04FD F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   I2CSPI                                                            07/18/2018 10:44:39 PAGE 128 

04FE 7B00        R     MOV     R3,#MBYTE I2CSPI_Buffer
0500 7A00        R     MOV     R2,#HIGH I2CSPI_Buffer+03H
0502 7900        R     MOV     R1,#LOW I2CSPI_Buffer+03H
0504 7D02              MOV     R5,#02H
0506 7FF3              MOV     R7,#0F3H
0508 110000      E     ACALL   _WriteI2CS_8A
050B 22                RET     
050C         L?0485:
050C 7D04              MOV     R5,#04H
050E 7FFF              MOV     R7,#0FFH
0510 110000      E     ACALL   _WriteI2C_8A
0513 22                RET     
0514         L?0491:
0514 E4                CLR     A
0515 FD                MOV     R5,A
0516 110000      E     ACALL   _WriteI2C_8A
0519 E4                CLR     A
051A FD                MOV     R5,A
051B 22                RET     
051C         L?0517:
051C 110000      E     ACALL   _ReadI2C_8A
051F 90000000    R     MOV     DPTR,#bTemp
0523 EF                MOV     A,R7
0524 F0                MOVX    @DPTR,A
0525 22                RET     
0526         L?0518:
0526 7B00        R     MOV     R3,#MBYTE I2CSPI_Buffer
0528 110000      E     ACALL   _WriteI2CS_8A
052B 90000000    R     MOV     DPTR,#I2CSPI_Buffer+03H
052F 22                RET     
             ; FUNCTION _I2CSPI_upload_faster (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   8886    ----
   CONSTANT SIZE    =   2378    ----
   XDATA SIZE       =     20     203
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
