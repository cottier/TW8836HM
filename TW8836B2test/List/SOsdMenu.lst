C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE SOSDMENU
OBJECT MODULE PLACED IN .\Output\SOsdMenu.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source36\SOsdMenu.c LARGE OMF2 ROM(D512K) OPTIMIZE(9,SPEED) REGFILE(.\Ou
                    -tput\TW8836B_EVB11.ORC) BROWSE INCDIR(SiI-SW;SiI-SW\HAL;SiI-SW\DEBUG;SiI-SW\CEC;.\Source36\LIB) DEFINE(EVB_11,nullFn=//)
                    - DEBUG CODE PRINT(.\List\SOsdMenu.lst) TABS(2) OBJECT(.\Output\SOsdMenu.obj)

line level    source

   1          /**
   2           * @file
   3           * SOsdMenu.c 
   4           * @author Brian Kang
   5           * @version 1.1
   6           * @section LICENSE
   7           *  Copyright (C) 2011~2012 Intersil Corporation
   8           * @section DESCRIPTION
   9           *  SpiOsd Menu routines
  10           * TW8835 have 2KB XDATA, we have to move the static table datas to CODE segment.
  11           *  code segment size: 0x10000 64KB.
  12           *  xdata segment size: 0x0800 2KB.
  13          */
  14          /*
  15          Disclaimer: THIS INFORMATION IS PROVIDED 'AS-IS' FOR EVALUATION PURPOSES ONLY.  
  16          INTERSIL CORPORATION AND ITS SUBSIDIARIES ('INTERSIL') DISCLAIM ALL WARRANTIES, 
  17          INCLUDING WITHOUT LIMITATION FITNESS FOR A PARTICULAR PURPOSE AND MERCHANTABILITY.  
  18          Intersil provides evaluation platforms to help our customers to develop products. 
  19          However, factors beyond Intersil's control could significantly affect Intersil 
  20          product performance. 
  21          It remains the customers' responsibility to verify the actual system performance.
  22          */
  23          /*
  24          1.1 160210 Add curr_menu_watchdog_focus & curr_menu_watchdog_select.
  25          
  26          */
  27          
  28          //*****************************************************************************
  29          //
  30          //                  TW8835 MENU-E.c
  31          //
  32          //*****************************************************************************
  33          //     
  34          //
  35          
  36          #include "config.h"
  37          #include "reg.h"
  38          #include "typedefs.h"
  39          #include "TW8836.h"
  40          
  41          #include "Global.h"
  42          #include "CPU.h"
  43          #include "printf.h"
  44          #include "util.h"
  45          
  46          #include "I2C.h"
  47          #include "spi.h"
  48          
  49          #include "main.h"
  50          #include "SOsd.h"
  51          #include "FOsd.h"
  52          #include "InputCtrl.h"
  53          
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 2   

  54          #include "SpiFlashMap.h"
  55          #include "SOsdMenu.h"
  56          #include "eeprom.h"
  57          #include "ImageCtrl.h"
  58          #include "Settings.h"
  59          #include "Demo.h"
  60          
  61          #include "Remo.h"
  62          #include "TouchKey.h"
  63          
  64          #include "measure.h"
  65          #include "decoder.h"
  66          #include "aRGB.h"
  67          #include "dtv.h"
  68          #include "PC_modes.h"
  69          #include "scaler.h"
  70          #include "debug.h"
  71          
  72          
  73          
  74          
  75          #ifdef SUPPORT_SPIOSD
  76          //=============================
  77          // define
  78          //=============================
  79          
  80          #ifdef DEBUG_MENU
                #define MenuPrintf  Printf
                #define MenuPuts  Puts  
                #define eMenuPrintf ePrintf
                #define eMenuPuts ePuts 
                #define wMenuPrintf wPrintf
                #define wMenuPuts wPuts 
                #define dMenuPrintf dPrintf
                #define dMenuPuts dPuts 
              #else
  90            #define MenuPrintf  nullFn
  91            #define MenuPuts  nullFn  
  92            #define eMenuPrintf nullFn
  93            #define eMenuPuts nullFn  
  94            #define wMenuPrintf nullFn
  95            #define wMenuPuts nullFn  
  96            #define dMenuPrintf nullFn
  97            #define dMenuPuts nullFn  
  98          #endif
  99          
 100          
 101          //if we are using MREL, The first 0x10 bytes are a image info.
 102          //we need to skip 0x10 size to access the LUT & image.
 103          #define MRLE_INFO_SIZE    0x10
 104          
 105          //=============================
 106          // external
 107          //=============================
 108          
 109          //=============================
 110          //global vaiable
 111          //=============================
 112          //------------------------------------------
 113          // 
 114          //------------------------------------------
 115          BYTE menu_on;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 3   

 116          BYTE UseSOsdHwBuff;
 117          BYTE osd_lang;
 118          
 119          //------------------------------------------
 120          // 
 121          //------------------------------------------
 122          menu_page_info_t *curr_menu;
 123          BYTE curr_menu_watchdog_focus;
 124          BYTE curr_menu_watchdog_select;
 125          BYTE menu_level;
 126          menu_page_info_t *menu_level_stack[4];    //max menu depth
 127          BYTE menu_lock_scroll = 0;
 128          BYTE touch_curr_menu_focus;
 129          BYTE cancel_recover_value;
 130          
 131          //------------------------------------------
 132          // string buffer
 133          //------------------------------------------
 134          BYTE menu_str_buff[5];
 135          
 136          //------------------------------------------
 137          // touch
 138          //------------------------------------------
 139          int last_touch_x; //for slide bar & position pox dialog.
 140          int last_touch_y;
 141          
 142          //------------------------------------------
 143          // slider
 144          //------------------------------------------
 145          image_item_info_t *slide_title_img;
 146          BYTE curr_slide_value;
 147          BYTE last_slide3_value[3];
 148          BYTE curr_slide3_value[3];
 149          void (*SaveSlideValue)(BYTE val);
 150          WORD (*GetSlideValue)(void);
 151          WORD (*VarySlideValue)(BYTE val);
 152          WORD (*SetSlideValue)(BYTE val);
 153          
 154          void (*SaveSlide3Value)(BYTE index,BYTE val);
 155          WORD (*GetSlide3Value)(BYTE index);
 156          WORD (*VarySlide3Value)(BYTE index, BYTE val);
 157          WORD (*SetSlide3Value)(BYTE index, BYTE val);
 158          
 159          //------------------------------------------
 160          //image header
 161          //
 162          // menu uses header_table.
 163          // FW reads MREL header area to rle_header and convert it to header_table.
 164          // or, FW converts image->info to header_table.
 165          //------------------------------------------
 166          menu_image_header_t header_table;
 167          struct RLE2_HEADER rle_header;
 168          
 169          //------------------------------------------
 170          // For BANK
 171          //------------------------------------------
 172          BYTE MenuInputMain; 
 173          BYTE MenuNoSignal;
 174          
 175          //--------------------------
 176          //local prototypes
 177          //--------------------------
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 4   

 178          void MenuDrawSlideNeedleImageXY(BYTE index, BYTE value, BYTE item_red);
 179          void MenuDrawSlideCurrValue(BYTE index, short value);
 180          void MenuUpdateSlideNeedleByPosition(int x /*, int y*/);
 181          
 182          void proc_slider_left(void);
 183          void proc_slider_right(void);
 184          void proc_slider3_left(void);
 185          void proc_slider3_right(void);
 186          void proc_slider_digit(void);
 187          
 188          
 189          //-------------------------------------
 190          // MENU Draw Images
 191          //-------------------------------------
 192          #ifdef DEBUG_MENU
              void PrintCurrMenu(void)
              {
                dMenuPrintf("\n\rMENU ");
                if     (curr_menu == &menu_main_page)       { dMenuPrintf("main_page");         }
                else if(curr_menu == &menu_demo_page)       { dMenuPrintf("demo_page");         }
                else if(curr_menu == &menu_input_page)      { dMenuPrintf("input_page");        }
                else if(curr_menu == &menu_system_page)     { dMenuPrintf("system_page");       }
                else if(curr_menu == &menu_touch_page)      { dMenuPrintf("touch_page");        }
                else if(curr_menu == &menu_yuv_list_page)   { dMenuPrintf("yuv_list_page");       }
                else if(curr_menu == &menu_rgb_list_page)   { dMenuPrintf("rgb_list_page");       }
                else if(curr_menu == &menu_apc_list_page)   { dMenuPrintf("apc_list_page");       }
                else if(curr_menu == &menu_hdmi_list_page)    { dMenuPrintf("hdmi_list_page");      }
                else if(curr_menu == &menu_display_page)    { dMenuPrintf("display_page");        }
                else if(curr_menu == &menu_osd_page)      { dMenuPrintf("osd_page");          }
              //  else if(curr_menu == &menu_dvi_mode_page)   { dMenuPrintf("dvi_mode_page");       }
                else if(curr_menu == &menu_hdmi_mode_page)    { dMenuPrintf("hdmi_mode_page");      }
                else if(curr_menu == &menu_autoadj_page)    { dMenuPrintf("autoadj_page");        }
                else if(curr_menu == &menu_autocolor_page)    { dMenuPrintf("autocolor_page");      }
                else if(curr_menu == &menu_slider_page)     { dMenuPrintf("slider_page");       }
                else if(curr_menu == &menu_slider3_page)    { dMenuPrintf("slider3_page");        }
                else if(curr_menu == &menu_aspect_page)     { dMenuPrintf("aspect_page");       }
                else if(curr_menu == &menu_position_page)   { dMenuPrintf("position_page");       }
                else if(curr_menu == &menu_mirror_page)     { dMenuPrintf("mirror_page");       }
                else if(curr_menu == &menu_restore_page)    { dMenuPrintf("restore_page");        }
                else if(curr_menu == &menu_sys_info_page)     { dMenuPrintf("sys_info_page");       }
                else                      { dMenuPrintf("unknown page");        }
              }
              #endif
 221          
 222          
 223          /**
 224          * desc:convert info to header. 
 225          *   header_table is a global.
 226          */
 227          void info_to_header(image_info_t *info)
 228          {
 229   1        menu_image_header_t *header;
 230   1        header = &header_table;
 231   1      
 232   1        //data from spiflash 
 233   1        header->lut_type = info->lut_type;
 234   1        header->bpp = info->rle >> 4;
 235   1        header->rle = info->rle & 0x0F;
 236   1        header->dx = info->dx;
 237   1        header->dy = info->dy;
 238   1        header->lut_size = 0x004 << header->bpp;
 239   1      }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 5   

 240          /**
 241          * desc: convert rle2 to header
 242          *   header_table is a global  
 243          */
 244          void rle2_to_header(struct RLE2_HEADER *rle_header)
 245          {
 246   1        menu_image_header_t *header;
 247   1        WORD colors;
 248   1        BYTE bpp;
 249   1      
 250   1        header = &header_table;
 251   1      
 252   1        header->lut_type = rle_header->LUT_format & 0x01;
 253   1        colors = (WORD)rle_header->LUT_colors+1; //word
 254   1        for(bpp=0; bpp < 9 ;) {
 255   2          if(colors & 0x01)
 256   2            break;
 257   2          colors >>= 1;
 258   2          bpp++;
 259   2        }
 260   1        header->bpp = bpp;
 261   1        header->rle = rle_header->rledata_cnt & 0x0F;
 262   1        header->dx = rle_header->w;
 263   1        header->dy = rle_header->h;
 264   1        header->lut_size = 0x004 << bpp;
 265   1      }
 266          
 267          #ifdef DEBUG_MENU
              /**
              * desc: print current item infomation
              */
              void PrintCurrItem(BYTE item,menu_image_header_t *header)
              {
                menu_sitem_info_t *menu_item;
                struct image_item_info_s *image;
              
                menu_item = &curr_menu->items[item];
                image = menu_item->image;
              
                dMenuPrintf("\n\r");
                dMenuPrintf(" item:%bd focus:%bd ",item, curr_menu->focus);
                dMenuPrintf(" %dx%d",menu_item->x, menu_item->y);
                dMenuPrintf(" align:%02bx",menu_item->align);
                dMenuPrintf(" win:%02bx",menu_item->win);
                dMenuPrintf(" lut:%x",menu_item->lut);
                
                dMenuPrintf("\n\r");
                dMenuPrintf(" image");
                dMenuPrintf(" type:%bx",image->type);
                dMenuPrintf(" loc:%06lx",image->loc);
              
                dMenuPrintf(" bpp%bd", header->bpp);
                dMenuPrintf(" rle%bd", header->rle);
                dMenuPrintf(" %dx%d", header->dx, header->dy);
                dMenuPrintf(" alpha:%2bx",image->alpha);
                dMenuPrintf(" lut%s size:%d*4",header->lut_type? "s": " ", header->lut_size >> 2);
              }
              #endif
 298          
 299          //=========================
 300          // stack
 301          //=========================
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 6   

 302          //-------------------------------------
 303          // MENU LEVEL (Parent & Child)
 304          //-------------------------------------
 305          //----------------------------
 306          /**
 307          *desc: push/pop menu. 
 308          * use menu_level_stack[] to move the parent and child menu.
 309          */
 310          void push_menu_stack_level(void)
 311          {
 312   1        menu_level_stack[menu_level] = curr_menu; 
 313   1        menu_level++;
 314   1        menu_lock_scroll = 0; //clear. If menu was a scroll, I want to scroll the menu.
 315   1      }
 316          void pop_menu_stack_level(void)
 317          {
 318   1        menu_level--;
 319   1          curr_menu = menu_level_stack[menu_level];
 320   1        menu_lock_scroll = 0; //clear
 321   1      }
 322          /**
 323          * desc: get menu level.
 324          * To solve the Bank issue.
 325          */
 326          BYTE MenuGetLevel(void)
 327          {
 328   1        return menu_level+menu_on;
 329   1      }
 330          
 331          //=========================
 332          // Header
 333          //=========================
 334          
 335          //-----------------------------------------------------------------------------
 336          /**
 337          * Function
 338          *
 339          * Description
 340          * @param
 341          * @return
 342          */
 343          BYTE MenuReadRleHeader(DWORD spi_loc,struct RLE2_HEADER *header)
 344          {
 345   1        WORD wTemp;
 346   1        DWORD dTemp;
 347   1        BYTE i, *ptr; 
 348   1      
 349   1        dMenuPrintf("\n\rMenuReadRleHeader:%06lx:",spi_loc);
 350   1        WaitVBlank(1);
 351   1      
 352   1        SpiFlash_Read_XMem(spi_loc, (WORD)header, sizeof(struct RLE2_HEADER));
 353   1        //SpiFlashDmaRead2XMem((BYTE *)header, spi_loc, sizeof(struct RLE2_HEADER), SPIFLASH_WAIT_READ);
 354   1        
 355   1        ptr = (BYTE *)header;
 356   1        for(i=0; i < sizeof(struct RLE2_HEADER); i++) {
 357   2          dMenuPrintf("%02bx ",*ptr++);
 358   2        }
 359   1        if(header->id[0]!='I' || header->id[1]!='T') {
 360   2          //wMenuPuts(" MenuReadRleHeader fail");
 361   2          Printf("\n\rMenuReadRleHeader fail @%lx", spi_loc);
 362   2          return 1; //fail
 363   2        }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 7   

 364   1        //swap
 365   1        wTemp = header->w;
 366   1        header->w = (wTemp >> 8 | wTemp << 8);
 367   1        wTemp = header->h;
 368   1        header->h = (wTemp >> 8 | wTemp << 8);
 369   1      
 370   1        dTemp=header->size;
 371   1        header->size = dTemp & 0x000000FF;
 372   1        header->size <<= 8; dTemp >>= 8;
 373   1        header->size |= dTemp & 0x000000FF;
 374   1        header->size <<= 8; dTemp >>= 8;
 375   1        header->size |= dTemp & 0x000000FF;
 376   1        header->size <<= 8; dTemp >>= 8;
 377   1        header->size |= dTemp & 0x000000FF;
 378   1      
 379   1      //  dMenuPrintf("\n\rloc:%06lx", spi_loc);
 380   1      //  dMenuPrintf(" op:%02bx",header->op_bmpbits); 
 381   1      //  dMenuPrintf(" rle:%02bx",header->rledata_cnt);
 382   1      //  dMenuPrintf(" wh:%dx%d",header->w, header->h);
 383   1      //  dMenuPrintf(" size:%lx", header->size);
 384   1      //  dMenuPrintf(" LUT format:%bx color:%bx", header->LUT_format,header->LUT_colors);
 385   1      //  dMenuPrintf(" dummy %bx %bx",header->dummy0, header->dummy1);
 386   1      
 387   1        return 0;
 388   1      }
 389          
 390          
 391          //-----------------------------------------------------------------------------
 392          /**
 393          * desc: update header_table
 394          * @param
 395          * @return
 396          */
 397          BYTE MenuPrepareImageHeader(struct image_item_info_s *image)
 398          {
 399   1        BYTE ret;
 400   1        menu_image_header_t *header = &header_table;
 401   1      
 402   1        ret = 0;
 403   1        if(image->type==IMAGE_ITEM_TYPE_1) {
 404   2          //if we are using MREL, we need to skip 0x10 size.  
 405   2          ret=MenuReadRleHeader(image->loc,&rle_header);
 406   2          rle2_to_header(&rle_header);
 407   2          header->lut_loc = image->loc + MRLE_INFO_SIZE;
 408   2          header->image_loc = image->loc + header->lut_size + MRLE_INFO_SIZE;
 409   2        }
 410   1        else if(image->type==IMAGE_ITEM_TYPE_2){
 411   2          //if we are using MREL, we need to skip 0x10 size.  
 412   2          info_to_header(image->info);
 413   2          header->lut_loc = image->loc;
 414   2          header->image_loc = image->loc + header->lut_size;
 415   2          header->lut_loc += MRLE_INFO_SIZE;
 416   2          header->image_loc += MRLE_INFO_SIZE;
 417   2        }
 418   1        else {
 419   2          //old stype
 420   2          info_to_header(image->info);
 421   2          header->lut_loc = image->loc;
 422   2          header->image_loc = image->loc + header->lut_size;
 423   2        }
 424   1        return ret;
 425   1      }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 8   

 426          
 427          //=========================
 428          // Init & TEST
 429          //=========================
 430          #define WIN_LOGO 1
 431          BYTE NoSignalLogoShow;
 432          //-----------------------------------------------------------------------------
 433          /**
 434          * desc: draw logo image
 435          * @param
 436          * @return
 437          */
 438          void InitLogo1(void)
 439          {
 440   1        //--------------------------
 441   1        struct image_item_info_s *image;
 442   1        menu_image_header_t *header = &header_table;
 443   1        WORD lut_loc;
 444   1        BYTE customer_logo;
 445   1      
 446   1        WORD sx = SOSD_X_START;
 447   1        WORD sy = SOSD_Y_START;
 448   1      
 449   1        eMenuPrintf("\n\rInitLog1");
 450   1      
 451   1        customer_logo = 1;
 452   1        WaitVBlank(1);
 453   1        SpiFlash_Read_XMem(img_customer.loc, (WORD)&rle_header, sizeof(struct RLE2_HEADER));
 454   1        //SpiFlashDmaRead2XMem((BYTE *)&rle_header, img_customer.loc, sizeof(struct RLE2_HEADER), SPIFLASH_WAIT_R
             -EAD);
 455   1        if(rle_header.id[0]!='I' || rle_header.id[1]!='T') {
 456   2          Printf("\n\rCustomer Logo failed...Use IntersilLogo");
 457   2          customer_logo = 0;
 458   2        }
 459   1        
 460   1      
 461   1        if(customer_logo==0) { 
 462   2          //BK130417. Add check routine.
 463   2          //If fail, it can hangup system.
 464   2          WaitVBlank(1);
 465   2          SpiFlash_Read_XMem(img_logo.loc, (WORD)&rle_header, sizeof(struct RLE2_HEADER));
 466   2          //SpiFlashDmaRead2XMem((BYTE *)&rle_header, img_logo.loc, sizeof(struct RLE2_HEADER), SPIFLASH_WAIT_READ
             -);
 467   2          if(rle_header.id[0]!='I' || rle_header.id[1]!='T') {
 468   3            Printf("\n\rInitLogo failed...Do not use SpiOSD!!!!");
 469   3            Printf(" %bx %bx",rle_header.id[0],rle_header.id[1]);
 470   3            return;
 471   3          }
 472   2        }
 473   1        NoSignalLogoShow = 1;
 474   1      
 475   1        //init DE
 476   1        SpiOsdSetDeValue();
 477   1      
 478   1        SOsd_CleanReg();
 479   1        SOsd_CleanLut();
 480   1        SOsd_CleanRlc();
 481   1        SOsd_UpdateReg(0,8);
 482   1        SOsd_UpdateRlc();
 483   1      
 484   1        SpiOsdEnable(ON);
 485   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 9   

 486   1        if(customer_logo) 
 487   1          image = &img_customer;
 488   1        else
 489   1          image = &img_logo;
 490   1        lut_loc = 0x000;
 491   1        //lut_size = 0x004 << (image->rle >> 4);
 492   1      
 493   1        //prepare header. update header_table
 494   1        MenuPrepareImageHeader(image);
 495   1      
 496   1      
 497   1        SOsd_SetSpiStartOffset(WIN_LOGO, header->image_loc); 
 498   1        SOsd_SetImageWidthHeight( WIN_LOGO, header->dx, header->dy );
 499   1        SOsd_SetScreen( WIN_LOGO, sx, sy, header->dx, header->dy );
 500   1        if(WIN_LOGO==0) {
 501   2          SOsd_SetWin0ImageOffsetXY( 0, 0 );
 502   2          SOsd_SetWin0Animation( 1, 0, 0, 0);
 503   2        }
 504   1        SOsd_SetPixelAlpha( WIN_LOGO, ON );
 505   1        SOsd_SetGlobalAlpha( WIN_LOGO, 0);
 506   1        SOsd_SetPixelWidth(WIN_LOGO, header->bpp);
 507   1        SOsd_SetLutOffset(WIN_LOGO, 0 /* menu_item->osd_s.lut */);
 508   1      
 509   1        SOsd_Enable( WIN_LOGO, ON );
 510   1      
 511   1        //write to HW
 512   1        if(header->rle)
 513   1          SOsd_SetRlc(WIN_LOGO, header->bpp,header->rle);
 514   1      
 515   1        //update HW ---same as SOsd_show()
 516   1        WaitVBlank(1);
 517   1        SOsd_UpdateReg(WIN_LOGO, WIN_LOGO);
 518   1        SOsd_UpdateRlc();
 519   1      
 520   1        //Load Palette
 521   1      #if 0
                //SpiOsdLoadLUT(WIN_LOGO, header->lut_type, lut_loc, header->lut_size, header->lut_loc, image->alpha);
                SOsd_SetLut(WIN_LOGO, header->lut_type, lut_loc, header->lut_size, header->lut_loc, image->alpha);
                SOsd_UpdateLut(WIN_LOGO, 1);  
              #else
 526   1        SOsd_SetLut(WIN_LOGO, header->lut_type, lut_loc, header->lut_size, header->lut_loc, image->alpha);
 527   1        SOsd_UpdateLut(WIN_LOGO,0);
 528   1      #endif
 529   1        // finish draw
 530   1      }
 531          
 532          //-----------------------------------------------------------------------------
 533          /**
 534          * Function
 535          *
 536          * Description
 537          * @param
 538          * @return
 539          */
 540          void RemoveLogoWithWait(BYTE fPowerUpBoot)
 541          {
 542   1        BYTE i;
 543   1        volatile BYTE human_input;
 544   1      
 545   1        eMenuPrintf("\n\rRemoveLogo2(%bx)",fPowerUpBoot);
 546   1        NoSignalLogoShow = 0;
 547   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 10  

 548   1        //wait & dimmer
 549   1        if(fPowerUpBoot) {
 550   2          for ( i=0; i<128; i++ ) {
 551   3            human_input = CheckHumanInputs(1);
 552   3            if (human_input && human_input!= HINPUT_TSC  ) break;
 553   3            delay1ms(10);
 554   3          }
 555   2          if ( i != 128 ) {
 556   3            wMenuPuts("\n\rLogo Stop by interrupt");
 557   3            goto END_END;
 558   3          }
 559   2        
 560   2          for ( i=0; i < 128; i++ ) {
 561   3            SOsd_SetGlobalAlpha(WIN_LOGO, i);
 562   3            WaitVBlank(1);  //it needs
 563   3            SOsd_UpdateReg(WIN_LOGO, WIN_LOGO);
 564   3              delay1ms(10);
 565   3            human_input = CheckHumanInputs(1);
 566   3            if (human_input && human_input!= HINPUT_TSC  ) 
 567   3              break;
 568   3          }
 569   2          if ( i != 128 ) {
 570   3            wMenuPuts("\n\rLogo Stop by interrupt");
 571   3          }
 572   2        }
 573   1      END_END:  
 574   1        WaitVBlank(1);
 575   1        SOsd_Enable( WIN_LOGO, OFF ); //disable window.
 576   1        SpiOsdEnable(OFF);
 577   1      }
 578          void RemoveLogo(void)
 579          {
 580   1        eMenuPrintf("\n\rRemoveLogo()");
 581   1        NoSignalLogoShow = 0;
 582   1      
 583   1        WaitVBlank(1);
 584   1        SOsd_Enable( WIN_LOGO, OFF ); //disable window.
 585   1        SpiOsdEnable(OFF);
 586   1      }
 587          
 588          //-----------------------------------------------------------------------------
 589          /**
 590          * Function
 591          *
 592          * Description
 593          * @param
 594          * @return
 595          */
 596          BYTE getNoSignalLogoStatus(void)
 597          {
 598   1        return NoSignalLogoShow;
 599   1      }
 600          
 601          
 602          //-----------------------------------------------------------------------------
 603          /**
 604          * Function
 605          *
 606          * Description
 607          * @param
 608          * @return
 609          */
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 11  

 610          /**
 611          * description
 612          * init FontOSD Window.
 613          * I will use 3BPP for digit.
 614          */
 615          void MenuFontOsdItemInit(BYTE item, BYTE f1BPP_ALPHA)
 616          {
 617   1        BYTE winno;
 618   1        BYTE palette;
 619   1        menu_sitem_info_t *menu_item;
 620   1      
 621   1        menu_fitem_info_t *text_info;
 622   1      
 623   1        menu_item = &curr_menu->items[0];
 624   1        text_info = curr_menu->texts;
 625   1      
 626   1        text_info += item;
 627   1      
 628   1        winno = text_info->winno;
 629   1        palette = text_info->BPP3_palette;
 630   1      
 631   1      
 632   1        dMenuPrintf("\n\r");
 633   1        dMenuPrintf(" winno:%02bx",winno);
 634   1        dMenuPrintf(" palette:%02bx",palette);
 635   1        dMenuPrintf(" osdram:%d",text_info->osdram);
 636   1      
 637   1        //FOsdWinInit(winno);
 638   1      
 639   1        FOsdWinEnable(winno,OFF); // WINn disable
 640   1      
 641   1      #if 1
 642   1        //assuem page3
 643   1        //pre fix
 644   1        WriteTW88(REG304, ReadTW88(REG304) & 0xDF);   //default: lower 256 char.    
 645   1        WriteTW88(REG304, ReadTW88(REG304) & 0xFE);   //OsdRam access mode
 646   1        
 647   1        FOsdWinMulticolor(winno,1);
 648   1      #endif
 649   1      
 650   1        
 651   1        FOsdWinScreenXY(winno,menu_item->x + text_info->x, menu_item->y + text_info->y);    
 652   1        FOsdWinScreenWH(winno, text_info->w, text_info->h);
 653   1        FOsdWinZoom(winno, text_info->zoom_h, text_info->zoom_v);
 654   1        //3BPP
 655   1        FOsdWinSetBpp3Alpha(winno,palette); //use BPP3_alpha_lut_offset[].
 656   1        FOsdSetPaletteColor(palette, text_info->BPP3_color, 8, 0);
 657   1        FOsdWinSetOsdRamStartAddr(winno, text_info->osdram);
 658   1      
 659   1      #if 0
                //assume page3
                //post fix
                WriteTW88(REG304, ReadTW88(REG304) & 0xDF);   //default: lower 256 char.    
                WriteTW88(REG304, ReadTW88(REG304) & 0xFE);   //OsdRam access mode
                
                FOsdWinMulticolor(winno,1);
              #endif
 667   1      
 668   1        if(f1BPP_ALPHA) {
 669   2          FOsdWinAlphaPixel(winno, text_info->BPP1Color >> 4, 15);
 670   2        }
 671   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 12  

 672   1        FOsdWinEnable(winno,ON);  //WINn enable
 673   1      
 674   1        //WriteTW88(REG310, ReadTW88(REG310) | 0x40 ); // temp - enable MultiBPP on Win1
 675   1      }
 676          
 677          #if 1
 678          //-----------------------------------------------------------------------------
 679          /**
 680          * Function
 681          *
 682          * Description
 683          * @param
 684          * @return
 685          */
 686          void MenuFontOsdItemInitNew(BYTE item_start, BYTE item_end)
 687          {
 688   1        BYTE winno;
 689   1        BYTE palette;
 690   1        menu_sitem_info_t *menu_item;
 691   1        menu_fitem_info_t *text_info;
 692   1        BYTE item;
 693   1        BYTE value;
 694   1        //BYTE high_byte,low_byte;
 695   1      
 696   1        menu_item = &curr_menu->items[0];
 697   1      
 698   1        for(item=item_start; item <= item_end; item++) {
 699   2          text_info = curr_menu->texts;
 700   2          text_info += item;     //??working on Keil->Good
 701   2      
 702   2          winno = text_info->winno;
 703   2          palette = text_info->BPP3_palette;
 704   2      
 705   2        
 706   2          dMenuPrintf("\n\r");
 707   2          dMenuPrintf(" winno:%02bx",winno);
 708   2          dMenuPrintf(" palette:%02bx",palette);
 709   2          dMenuPrintf(" osdram:%d",text_info->osdram);
 710   2      
 711   2          FOsdWinEnable(winno,OFF); // WINn disable
 712   2      
 713   2          value = ReadTW88(REG304);
 714   2          WriteTW88(REG304, value & 0xDE);  //lower 256 char, OsdRam access mode.
 715   2      
 716   2          FOsdWinMulticolor(winno,1);
 717   2      
 718   2          FOsdWinScreenXY(winno, menu_item->x + text_info->x, menu_item->y + text_info->y);
 719   2          FOsdWinScreenWH(winno,  text_info->w, text_info->h);
 720   2          FOsdWinZoom(winno, text_info->zoom_h, text_info->zoom_v);
 721   2      
 722   2          //3BPP
 723   2          FOsdWinSetBpp3Alpha(winno,palette); //use BPP3_alpha_lut_offset[].
 724   2      
 725   2          //high_byte = (BYTE)(text_info->BPP3_color >> 8);
 726   2          //low_byte = (BYTE)text_info->BPP3_color;
 727   2          //for(i=0; i < 8; i++) {
 728   2          //  //FOsdSetPaletteColor(palette+i, text_info->BPP3_color, 0); //test color. Lime    
 729   2          //  WriteTW88(REG30C, (ReadTW88(REG30C) & 0xC0) | (palette+i)); 
 730   2          //  WriteTW88(REG30D, high_byte);
 731   2          //  WriteTW88(REG30E, low_byte);
 732   2          //}
 733   2          FOsdSetPaletteColor(palette, text_info->BPP3_color, 8, 0);
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 13  

 734   2          FOsdWinSetOsdRamStartAddr(winno, text_info->osdram);
 735   2      
 736   2          FOsdWinEnable(winno,ON);  //WINn enable
 737   2        }
 738   1      }
 739          #endif
 740          
 741          
 742          //-----------------------------------------------------------------------------
 743          /**
 744          * Function
 745          *
 746          * Description
 747          * @param
 748          * @return
 749          */
 750          //please move to test_xxx.c
 751          //-------------------------
 752          // test routines
 753          #if 0
              void TestMainMenuImage(BYTE type)
              {
                //see MenuDrawCurrImage
                WORD sx,sy;
                //menu_sitem_info_t *menu_item;
                struct image_item_info_s *image;
                menu_image_header_t *header = &header_table;
                BYTE sosd_win;
                //WORD lut_size;
              
                switch(type) {
                case 2:   image = &img_main_test2;  break;
                case 3:   image = &img_main_test3;  break;
                default:  image = &img_main_test1;  break;
                }
              
                sx = 0;
                sy = 0;
                sosd_win = 1;
              //  lut_size = 0x004 << (image->rle >> 4);
                //prepare header
                MenuPrepareImageHeader(image);
              
                SOsd_SetSpiStartOffset( sosd_win, header->image_loc);
                SOsd_SetImageWidthHeight( sosd_win, header->dx, header->dy );
                if(sosd_win==0)
                  SOsd_SetWin0ImageOffsetXY( 0, 0 );
                SOsd_SetScreen( sosd_win, sx, sy, header->dx, header->dy );
                if(sosd_win==0)
                  SOsd_SetWin0Animation( 1, 0, 0, 0);
                SOsd_SetPixelAlpha( sosd_win, ON );
                SOsd_SetPixelWidth(sosd_win, header->bpp);
                SOsd_SetLutOffset(sosd_win, 0 /*menu_item->osd_s.lut*/);
              
              
                SOsd_Enable( sosd_win, ON );
              
                //write to HW
                WaitVBlank(1);
                if(header->rle) { //need RLE ?
                  SOsd_SetRlc( sosd_win, header->bpp, header->rle);
                  SOsd_UpdateRlc();
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 14  

                }
                SOsd_UpdateReg(1,1 /*menu_item->osd_s.win, menu_item->osd_s.win*/);
                //SpiOsdLoadLUT(sosd_win, header->lut_type, 0 /*menu_item->osd_s.lut*/, header->lut_size, header->lut_loc
             -,image->alpha);
                SOsd_SetLut(sosd_win, header->lut_type, 0 /*menu_item->osd_s.lut*/, header->lut_size, header->lut_loc,ima
             -ge->alpha);
                SOsd_UpdateLut(sosd_win, 1);  
              }
              #endif
 803          
 804          
 805          //=========================
 806          // DRAW
 807          //=========================
 808          #ifdef UNCALLED_SEGMENT_CODE
              //-----------------------------------------------------------------------------
              /**
              * Function
              *
              * Description
              * @param
              * @return
              */
              void MenuDrawCurrValue(BYTE itemno, WORD value)
              {
                BYTE temp_byte = itemno;
                BYTE temp_word = value;
              }
              void MenuDrawCurrString(BYTE itemno, BYTE *str)
              {
                BYTE temp_byte = itemno;
                BYTE *temp_pbyte = str;
              }
              #endif
 828          
 829          /**
 830          * desc: draw the selected item. It can be background image, focused image,...
 831          * use curr_menu.menu_info[item]
 832          * tip: we need a osdlang.
 833          * @param use1
 834          *   0:Normal 1:focused Image.
 835          * @param item
 836          *   item number.
 837          *
 838          */
 839          //-----------------------------------------------------------------------------
 840          /**
 841          * Function
 842          *
 843          * Description
 844          * @param use1
 845          * 1:select second image, normally to indicate the pressed icon.
 846          * @param item
 847          * item number on current menu page.
 848          * @return
 849          */
 850          void MenuDrawCurrImage(BYTE use1, BYTE item)
 851          {
 852   1        WORD sx,sy;
 853   1        menu_sitem_info_t *menu_item;
 854   1        struct image_item_info_s *image;
 855   1        BYTE sosd_win;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 15  

 856   1        menu_image_header_t *header = &header_table;
 857   1      
 858   1        menu_item = &curr_menu->items[item];
 859   1        if(use1)  image = menu_item->image1;
 860   1        else    image = menu_item->image;
 861   1        if(image==NULL) {
 862   2          eMenuPrintf("\n\rimage%bd NULL @ item:%bd",use1,item); 
 863   2          return;
 864   2        }
 865   1      
 866   1        if(curr_menu == &menu_slider_page || curr_menu == &menu_slider3_page) {
 867   2          if(item == 1) {
 868   3            //slide title
 869   3            image = slide_title_img;
 870   3          }
 871   2        }
 872   1        //prepare header
 873   1        MenuPrepareImageHeader(image);
 874   1      
 875   1        //debug info
 876   1      #ifdef DEBUG_MENU
                PrintCurrMenu();
                PrintCurrItem(item, header);
              #endif
 880   1      
 881   1        sx = menu_item->x;
 882   1        sy = menu_item->y;
 883   1        sosd_win = menu_item->win;   
 884   1      
 885   1        //adjust sx,sy
 886   1        if(menu_item->align != ALIGN_TOPLEFT) {
 887   2          //please adjust new sx,sy
 888   2        }
 889   1      
 890   1        //fill out sosd_buff
 891   1        SOsd_SetSpiStartOffset( sosd_win, header->image_loc); 
 892   1        SOsd_SetImageWidthHeight( sosd_win, header->dx, header->dy );
 893   1        SOsd_SetScreen( sosd_win, sx, sy, header->dx, header->dy );
 894   1        if(sosd_win==0) {
 895   2          SOsd_SetWin0ImageOffsetXY( 0, 0 );
 896   2          SOsd_SetWin0Animation( 1, 0, 0, 0);
 897   2        }
 898   1        if(image->alpha != 0xFF) {
 899   2          SOsd_SetPixelAlpha( sosd_win, ON );
 900   2          SOsd_SetPixelAlphaIndex(sosd_win,image->alpha); //BK130325
 901   2        }
 902   1        else {
 903   2          SOsd_SetGlobalAlpha( sosd_win, 0 /*EE_Read(EEP_OSD_TRANSPARENCY)*/);
 904   2        }
 905   1        SOsd_SetPixelWidth(sosd_win, header->bpp);
 906   1        SOsd_SetLutOffset(sosd_win,menu_item->lut);
 907   1      
 908   1        SOsd_Enable( sosd_win, ON );
 909   1      
 910   1        if(UseSOsdHwBuff) {
 911   2          //
 912   2          //write to buffer
 913   2          //
 914   2          if(header->rle)
 915   2            SOsd_SetRlc(sosd_win,header->bpp,header->rle);
 916   2          SOsd_SetLut(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc, image->alpha)
             -;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 16  

 917   2        
 918   2          //pixel alpha blending. after load Palette
 919   2          //if(image->alpha != 0xFF)
 920   2          //  //SOsdHwBuffSetAlpha(sosd_win, menu_item->lut+image->alpha);
 921   2          //  SOsd_SetPixelAlphaIndex(sosd_win,image->alpha);
 922   2        }
 923   1        else {
 924   2          //
 925   2          //write to HW
 926   2          //
 927   2      
 928   2          //WaitVBlank(1);
 929   2          if(header->rle) { //need RLE ?
 930   3            SOsd_SetRlc( sosd_win, header->bpp,header->rle);
 931   3            SOsd_UpdateRlc();
 932   3          } 
 933   2          else {
 934   3            //We using RLE only on the background.
 935   3            if(item == 0) {
 936   4              SOsd_CleanRlc();
 937   4              SOsd_UpdateRlc();
 938   4            }
 939   3          }
 940   2          WaitVBlank(1);
 941   2        
 942   2          //Load Palette.
 943   2          //SpiOsdLoadLUT(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alp
             -ha);
 944   2          SOsd_SetLut(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alpha);
 945   2          SOsd_UpdateLut(sosd_win, 1);  
 946   2        
 947   2          //WaitVBlank(1);
 948   2          //update HW
 949   2          SOsd_UpdateReg(menu_item->win, menu_item->win);
 950   2        }
 951   1      }
 952          
 953          //-----------------------------------------------------------------------------
 954          /**
 955          * Function
 956          *
 957          * Description
 958          * @param
 959          * @return
 960          */
 961          #define SCROLL_SPEED_Y    2
 962          //BK130103 Found BUG......
 963          //#define SCROLL_SPEED_X    4
 964          #define SCROLL_SPEED_X    15  //(16-1)
 965          //FYI:I will call MenuDrawCurrImage(0,0) first. So We don't need to worry about RLE window.
 966          void MenuDrawScrollImage(BYTE item, BYTE direction)
 967          {
 968   1        WORD  i;
 969   1        DWORD   start_byte;
 970   1        BYTE  start_bit;
 971   1        menu_sitem_info_t *menu_item;
 972   1        struct image_item_info_s *image;
 973   1        BYTE sosd_win;
 974   1      
 975   1        WORD sx = SOSD_X_START;
 976   1        WORD sy = SOSD_Y_START;
 977   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 17  

 978   1        menu_image_header_t *header = &header_table;
 979   1      
 980   1      
 981   1        menu_item = &curr_menu->items[item];
 982   1        image = menu_item->image;
 983   1      
 984   1        //prepare header
 985   1        MenuPrepareImageHeader(image);
 986   1      
 987   1        //if it is a RLE, maybe this will not working....
 988   1        //I will draw it with Fixed image.
 989   1        if(header->rle) { 
 990   2          wMenuPuts("\n\rWarning:Scroll with RLE.\n"); 
 991   2          MenuDrawCurrImage(0,item);
 992   2          return; 
 993   2        }
 994   1      
 995   1        sosd_win = menu_item->win;
 996   1      
 997   1        //load LUT first
 998   1        WaitVBlank(1);
 999   1        //SpiOsdLoadLUT(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alph
             -a);  
1000   1        SOsd_SetLut(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alpha);
1001   1        SOsd_UpdateLut(sosd_win, 1);  
1002   1      
1003   1        SOsd_Enable( sosd_win, ON );
1004   1        SOsd_SetPixelAlpha( sosd_win, ON );
1005   1        SOsd_SetPixelWidth(sosd_win, header->bpp);
1006   1        SOsd_SetLutOffset(sosd_win,menu_item->lut);
1007   1        if(sosd_win==0) {
1008   2          SOsd_SetWin0ImageOffsetXY( 0, 0 );
1009   2          SOsd_SetWin0Animation( 1, 0, 0, 0);
1010   2        }
1011   1      
1012   1        if(direction==NAVI_KEY_DOWN) {    
1013   2          for(i=1; i <= header->dy; i++) {
1014   3            start_byte = (header->dy - i) * header->dx;
1015   3            start_bit = 0;
1016   3            if(start_byte) {
1017   4              if(header->bpp == 6) {
1018   5                start_byte = start_byte * 6;
1019   5                start_bit = start_byte % 8;
1020   5                start_bit >>= 1;
1021   5                start_byte = start_byte / 8;  
1022   5              }
1023   4              else if(header->bpp == 4) {
1024   5                start_byte = start_byte * 4;
1025   5                start_bit = start_byte % 8;
1026   5                start_bit >>= 1;
1027   5                start_byte = start_byte / 8;  
1028   5              }
1029   4            }
1030   3      
1031   3            SOsd_SetSpiStartOffset(sosd_win, header->image_loc + start_byte);
1032   3            SOsd_SetSpiStartBit(sosd_win, start_bit);
1033   3            SOsd_SetScreen(sosd_win, sx,sy, header->dx, i);
1034   3            SOsd_SetImageWidthHeight(sosd_win, header->dx, i);     //if not SOSD_WIN0, you can move up.
1035   3            //?delay
1036   3            WaitVBlank(1);
1037   3            SOsd_UpdateReg(menu_item->win, menu_item->win);
1038   3            //speed up
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 18  

1039   3            if( (i+SCROLL_SPEED_Y) >= header->dy) {
1040   4              //stop it
1041   4              if(i !=  header->dy ) {
1042   5                i = header->dy - 1;
1043   5              }
1044   4              // next will be increased with 1.
1045   4            }
1046   3            else {
1047   4              i += SCROLL_SPEED_Y;  
1048   4              // next will be increased with 1.
1049   4            }
1050   3          }
1051   2        }
1052   1        else if(direction==NAVI_KEY_RIGHT)
1053   1        {
1054   2          //BK130114. clean RLC. onlu for test
1055   2          //SpiOsdRlcReg(0,0,0);
1056   2          //WriteTW88(REG420,0);  //disable 0
1057   2          //WriteTW88(REG450,0);  //disable 2
1058   2          //WriteTW88(REG460,0);  //disable 3
1059   2          //WriteTW88(REG470,0);  //disable 4
1060   2          //WriteTW88(REG480,0);  //disable 5
1061   2          //WriteTW88(REG490,0);  //disable 6
1062   2          //WriteTW88(REG4A0,0);  //disable 7
1063   2          //WriteTW88(REG4B0,0);  //disable 8
1064   2      
1065   2      
1066   2          SOsd_SetImageWidthHeight(sosd_win, header->dx, header->dy);
1067   2      
1068   2          for(i=0; i <= header->dx; i++) {
1069   3            start_byte = header->dx - i;
1070   3            start_bit = 0;
1071   3            if(start_byte) {
1072   4              if(header->bpp==6) {
1073   5                start_byte = start_byte * 6;
1074   5                start_bit = start_byte % 8;
1075   5                start_bit >>= 1;
1076   5                start_byte = start_byte / 8;
1077   5              }
1078   4              else if(header->bpp==4) {
1079   5                start_byte = start_byte * 4;
1080   5                start_bit = start_byte % 8;
1081   5                start_bit >>= 1;
1082   5                start_byte = start_byte / 8;  
1083   5              }
1084   4            }
1085   3            SOsd_SetSpiStartOffset(sosd_win, header->image_loc + start_byte);
1086   3            SOsd_SetSpiStartBit(sosd_win, start_bit);
1087   3            SOsd_SetScreen(sosd_win, sx,sy, i, header->dy);
1088   3            //delay
1089   3            WaitVBlank(1);
1090   3            SOsd_UpdateReg(menu_item->win, menu_item->win);
1091   3      
1092   3            //speed up
1093   3            if( (i+SCROLL_SPEED_X) >= header->dx) {
1094   4              //stop it
1095   4              if(i !=  header->dx ) {
1096   5                i = header->dx - 1;
1097   5              }
1098   4              // next will be increased with 1.
1099   4            }
1100   3            else {
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 19  

1101   4              i += SCROLL_SPEED_X;  
1102   4              // next will be increased with 1.
1103   4            }
1104   3          }
1105   2        }
1106   1        else {
1107   2          //right to left and bottom to top is not implemented.
1108   2          //It is more easy then left2right, top2bottom.
1109   2          MenuDrawCurrImage(0,item);
1110   2        }
1111   1      }
1112          //-----------------------------------------------------------------------------
1113          /**
1114          * Function
1115          *
1116          * Description
1117          * @param
1118          * @return
1119          */
1120          //desc: turn of curr_menu->focus
1121          void MenuTurnOffCurrImage(BYTE item)
1122          {
1123   1        menu_sitem_info_t *menu_item;
1124   1        BYTE sosd_win;
1125   1      
1126   1        menu_item = &curr_menu->items[item];
1127   1        sosd_win = menu_item->win;
1128   1        WaitVBlank(1);
1129   1        SOsd_Enable( sosd_win, OFF );
1130   1        SOsd_UpdateReg(sosd_win, sosd_win);
1131   1      }
1132          
1133          //-----------------------------------------------------------------------------
1134          /**
1135          * Function
1136          *
1137          * Description
1138          * @param
1139          * @return
1140          */
1141          void MenuDrawDeactivatedItemImage(BYTE sosd_win, BYTE item)
1142          {
1143   1      BYTE temp =  sosd_win;
1144   1      BYTE test = item;
1145   1        //fill out with half transparent window or use deactivated image.
1146   1      }
1147          
1148          #ifdef UNCALLED_SEGMENT_CODE
              void FontOsdWinPuts2(struct menu_sitem_info_s *item_info, BYTE *str)
              {...}
              #endif
1152          
1153          
1154          
1155          //-----------------------------------------------------------------------------
1156          /**
1157          * Function
1158          *
1159          * Description
1160          * @param
1161          * @return
1162          */
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 20  

1163          void MenuFontOsdItemString(BYTE index, BYTE *str)
1164          {
1165   1        BYTE n_char;
1166   1        BYTE palette;
1167   1      
1168   1        menu_fitem_info_t *text_info = curr_menu->texts;
1169   1        text_info += index;
1170   1      
1171   1        //string use BPP1
1172   1        palette = text_info->BPP1Color;
1173   1        FOsdRamSetAddrAttr(text_info->osdram,text_info->BPP1Color);
1174   1        //assume page3
1175   1        n_char=0;
1176   1        while(*str) {
1177   2          WriteTW88(REG307, *str++);
1178   2          n_char++;
1179   2        }
1180   1      
1181   1        //adjust FontOSD width.
1182   1        FOsdWinScreenWH(text_info->winno, n_char,1);
1183   1      }
1184          
1185          
1186          //merged background
1187          //-----------------------------------------------------------------------------
1188          /**
1189          * Function
1190          *
1191          * Description
1192          * @param
1193          * @return
1194          */
1195          void proc_menu_bg(void)
1196          {
1197   1        BYTE curr_menu_type;
1198   1        curr_menu_type = curr_menu->type & 0x0F;
1199   1      
1200   1        CpuTouchSkipCount = 1*500*2;  //0.5 sec
1201   1      
1202   1        UseSOsdHwBuff = 1;
1203   1        SOsd_CleanLut();  
1204   1        SOsd_CleanRlc();
1205   1        SOsd_CleanReg();
1206   1      //  SOsd_CleanLutOffset();
1207   1      
1208   1        MenuDrawCurrImage(0,0);                 //draw background
1209   1      
1210   1        if(curr_menu_type==MENU_TYPE_LIST 
1211   1        || curr_menu_type==MENU_TYPE_SCRLDN) {
1212   2          //update HW and clear UseSOsdHwBuff mode.
1213   2          SOsd_show(1);
1214   2          UseSOsdHwBuff = 0;
1215   2      
1216   2          if(menu_lock_scroll==0) {
1217   3            if(curr_menu_type == MENU_TYPE_LIST)
1218   3              MenuDrawScrollImage(1, NAVI_KEY_RIGHT);   //left side
1219   3            else if(curr_menu_type == MENU_TYPE_SCRLDN) {
1220   4              MenuDrawScrollImage(1, NAVI_KEY_DOWN);    //top topdown moving
1221   4            }
1222   3            else {
1223   4              dMenuPrintf("\n\rinvalid curr_menu->type:%bx",curr_menu->type);
1224   4              MenuDrawCurrImage(0,1);
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 21  

1225   4            }
1226   3            menu_lock_scroll=1;
1227   3          }
1228   2          else
1229   2            MenuDrawCurrImage(0,1);
1230   2        }
1231   1      
1232   1        MenuDrawCurrImage(0,curr_menu->focus);      //draw focused item
1233   1        if(curr_menu->type & MENU_TYPE_NOTE )       //draw selected note symbol(bar or point)
1234   1          MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total); //select
1235   1      
1236   1        //if(UseSOsdHwBuff) 
1237   1        {
1238   2          SOsd_show(UseSOsdHwBuff);
1239   2          UseSOsdHwBuff = 0;
1240   2        }
1241   1      }
1242          
1243          
1244          //=========================
1245          // KEY & TOUCH
1246          //=========================
1247          //-----------------------------------------------------------------------------
1248          /**
1249          * Function
1250          *
1251          * Description
1252          * @param
1253          * @return
1254          */
1255          BYTE MenuKeyInput_slider_page(BYTE key)
1256          {
1257   1        switch(key) {
1258   2        case NAVI_KEY_ENTER:
1259   2          break;
1260   2        case NAVI_KEY_UP:
1261   2          curr_menu->focus = curr_menu->items[curr_menu->focus].up;
1262   2              curr_menu_watchdog_focus = curr_menu->focus;
1263   2          curr_menu->items[0].p(); //redraw all proc_slider_bg()
1264   2          key = NAVI_KEY_NONE; //eat key
1265   2          break;
1266   2        case NAVI_KEY_DOWN:
1267   2          curr_menu->focus = curr_menu->items[curr_menu->focus].down;
1268   2              curr_menu_watchdog_focus = curr_menu->focus;
1269   2          curr_menu->items[0].p();  //redraw all  proc_slider_bg()
1270   2          key = NAVI_KEY_NONE; //eat key
1271   2          break;
1272   2        case NAVI_KEY_LEFT:
1273   2          if(curr_menu->focus == MENU_SLIDER_BAR_INPUT_RED) {
1274   3            proc_slider_left();
1275   3            key = NAVI_KEY_NONE; //eat key
1276   3          }
1277   2          break;
1278   2        case NAVI_KEY_RIGHT:
1279   2          if(curr_menu->focus == MENU_SLIDER_BAR_INPUT_RED) {
1280   3            proc_slider_right();
1281   3            key = NAVI_KEY_NONE; //eat key
1282   3          }
1283   2          break;
1284   2        default:
1285   2          // do nothing.
1286   2          break;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 22  

1287   2        }
1288   1        return key;
1289   1      }
1290          
1291          //-----------------------------------------------------------------------------
1292          /**
1293          * Function
1294          *
1295          * Description
1296          * @param
1297          * @return
1298          */
1299          BYTE MenuKeyInput_slider3_page(BYTE key)
1300          {
1301   1        switch(key) {
1302   2        case NAVI_KEY_ENTER:
1303   2          break;
1304   2        case NAVI_KEY_UP:
1305   2          curr_menu->focus = curr_menu->items[curr_menu->focus].up;
1306   2              curr_menu_watchdog_focus = curr_menu->focus;
1307   2          if(curr_menu->focus >= curr_menu->item_start) {
1308   3            curr_menu->select = curr_menu->focus;
1309   3                  curr_menu_watchdog_select = curr_menu->select;
1310   3              }
1311   2          curr_menu->items[0].p(); //redraw all proc_slider3_bg()
1312   2          key = NAVI_KEY_NONE; //eat key
1313   2          break;
1314   2        case NAVI_KEY_DOWN:
1315   2          curr_menu->focus = curr_menu->items[curr_menu->focus].down;
1316   2              curr_menu_watchdog_focus = curr_menu->focus;
1317   2          if(curr_menu->focus >= curr_menu->item_start) {
1318   3            curr_menu->select = curr_menu->focus;
1319   3                  curr_menu_watchdog_select = curr_menu->select;
1320   3              }
1321   2          curr_menu->items[0].p();  //redraw all  proc_slider3_bg()
1322   2          key = NAVI_KEY_NONE; //eat key
1323   2          break;
1324   2        case NAVI_KEY_LEFT:
1325   2          if(curr_menu->focus == SLIDE3_1 || curr_menu->focus == SLIDE3_2 || curr_menu->focus == SLIDE3_3) {
1326   3            proc_slider3_left();
1327   3            key = NAVI_KEY_NONE; //eat key
1328   3          }
1329   2          break;
1330   2        case NAVI_KEY_RIGHT:
1331   2          if(curr_menu->focus == SLIDE3_1 || curr_menu->focus == SLIDE3_2 || curr_menu->focus == SLIDE3_3) {
1332   3            proc_slider3_right();
1333   3            key = NAVI_KEY_NONE; //eat key
1334   3          }
1335   2          break;
1336   2        default:
1337   2          // do nothing.
1338   2          break;
1339   2        }
1340   1        return key;
1341   1      }
1342          
1343          //-----------------------------------------------------------------------------
1344          /**
1345          * Function
1346          *
1347          * Description
1348          * @param
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 23  

1349          * @return
1350          */
1351          BYTE MenuKeyInput_main_page(BYTE key)
1352          {
1353   1        BYTE new;
1354   1      
1355   1        switch(key) {
1356   2        case NAVI_KEY_ENTER:
1357   2          break;
1358   2        case NAVI_KEY_UP:
1359   2          if(curr_menu->focus < curr_menu->item_start) {
1360   3            //NAVI to item
1361   3            MenuTurnOffCurrImage(curr_menu->focus);
1362   3            curr_menu->focus = curr_menu->select;
1363   3                  curr_menu_watchdog_focus = curr_menu->focus;
1364   3            MenuDrawCurrImage(0,curr_menu->focus);
1365   3            key = NAVI_KEY_NONE; //eat key      
1366   3          }
1367   2          else {
1368   3            //item to NAVI or item to item
1369   3            new = curr_menu->items[curr_menu->focus].up;
1370   3            if(new >=  curr_menu->item_start) {
1371   4              curr_menu->select = new;  
1372   4                      curr_menu_watchdog_select = curr_menu->select;
1373   4                  }
1374   3          }
1375   2          break;
1376   2      
1377   2        case NAVI_KEY_DOWN:
1378   2          if(curr_menu->focus < curr_menu->item_start) {
1379   3            //NAVI to item
1380   3            MenuTurnOffCurrImage(curr_menu->focus);
1381   3            curr_menu->focus = curr_menu->select;
1382   3                  curr_menu_watchdog_focus = curr_menu->focus;
1383   3            MenuDrawCurrImage(0,curr_menu->focus);
1384   3            key = NAVI_KEY_NONE; //eat key      
1385   3          }
1386   2          else {
1387   3            //item to NAVI
1388   3            new = curr_menu->items[curr_menu->focus].down;
1389   3            if(new >=  curr_menu->item_start) {
1390   4              curr_menu->select = new;
1391   4                      curr_menu_watchdog_select = curr_menu->select;
1392   4                  } 
1393   3          }
1394   2          break;
1395   2      
1396   2        case NAVI_KEY_LEFT:
1397   2          if(curr_menu->focus >= curr_menu->item_start) {
1398   3            curr_menu->select = curr_menu->items[curr_menu->focus].left;
1399   3                  curr_menu_watchdog_select = curr_menu->select;
1400   3          }
1401   2          break;
1402   2        case NAVI_KEY_RIGHT:
1403   2          if(curr_menu->focus >= curr_menu->item_start) {
1404   3            curr_menu->select = curr_menu->items[curr_menu->focus].right;
1405   3                  curr_menu_watchdog_select = curr_menu->select;
1406   3          }
1407   2          break;
1408   2        default:
1409   2          // do nothing.
1410   2          break;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 24  

1411   2        }
1412   1        return key;
1413   1      }
1414          
1415          
1416          //-----------------------------------------------------------------------------
1417          /**
1418          * Function
1419          *
1420          * Description
1421          * @param
1422          * @return
1423          */
1424          BYTE MenuKeyInput_input_page(BYTE key)
1425          {
1426   1        switch(key) {
1427   2        case NAVI_KEY_ENTER:
1428   2          break;
1429   2        case NAVI_KEY_UP:
1430   2          MenuTurnOffCurrImage(curr_menu->focus);
1431   2          if(curr_menu->focus < curr_menu->item_start) {
1432   3            //NAVI to item
1433   3            curr_menu->focus = curr_menu->select;
1434   3                  curr_menu_watchdog_focus = curr_menu->focus;      
1435   3          }
1436   2          else {
1437   3            //item to NAVI
1438   3            curr_menu->focus = curr_menu->items[curr_menu->focus].up;
1439   3                  curr_menu_watchdog_focus = curr_menu->focus;
1440   3            if(curr_menu->type & MENU_TYPE_NOTE )
1441   3              MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
1442   3          }
1443   2          MenuDrawCurrImage(0,curr_menu->focus);
1444   2          key = NAVI_KEY_NONE; //eat key
1445   2          break;
1446   2      
1447   2        case NAVI_KEY_DOWN:
1448   2          MenuTurnOffCurrImage(curr_menu->focus);
1449   2          if(curr_menu->focus < curr_menu->item_start) {
1450   3            //NAVI to item
1451   3            curr_menu->focus = curr_menu->select;
1452   3                  curr_menu_watchdog_focus = curr_menu->focus;      
1453   3          }
1454   2          else {
1455   3            //item to NAVI
1456   3            curr_menu->focus = curr_menu->items[curr_menu->focus].down;
1457   3                  curr_menu_watchdog_focus = curr_menu->focus;
1458   3            if(curr_menu->type & MENU_TYPE_NOTE )
1459   3              MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total); //select
1460   3          }
1461   2          MenuDrawCurrImage(0,curr_menu->focus);
1462   2          key = NAVI_KEY_NONE; //eat key
1463   2          break;
1464   2      
1465   2        case NAVI_KEY_LEFT:
1466   2          break;
1467   2        case NAVI_KEY_RIGHT:
1468   2          break;
1469   2        default:
1470   2          // do nothing.
1471   2          break;
1472   2        }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 25  

1473   1        return key;
1474   1      }
1475          
1476          //-----------------------------------------------------------------------------
1477          /**
1478          * Function
1479          *
1480          * Description
1481          * @param
1482          * @return
1483          */
1484          BYTE MenuKeyInput_position_page(BYTE key)
1485          {
1486   1      #ifdef SUPPORT_PC
1487   1        BYTE digit;
1488   1      #endif
1489   1      
1490   1        switch(key) {
1491   2        case NAVI_KEY_ENTER:
1492   2          break;
1493   2        case NAVI_KEY_UP:
1494   2      #ifdef SUPPORT_PC
1495   2          if(curr_menu->focus == MENU_POSITION_INPUT_RED) {
1496   3            //adjust active area box
1497   3            digit = GetRGBPosV();
1498   3            if(digit<100)
1499   3              SetRGBPosV(++digit);
1500   3            proc_position_V_digit();
1501   3            key = NAVI_KEY_NONE; //eat key
1502   3          }
1503   2      #endif
1504   2          break;
1505   2        case NAVI_KEY_DOWN:
1506   2      #ifdef SUPPORT_PC
1507   2          if(curr_menu->focus == MENU_POSITION_INPUT_RED) {
1508   3            //adjust active area box
1509   3            digit = GetRGBPosV();
1510   3            if(digit)
1511   3              SetRGBPosV( --digit);
1512   3            proc_position_V_digit();
1513   3            key = NAVI_KEY_NONE; //eat key
1514   3          }
1515   2      #endif
1516   2          break;
1517   2        case NAVI_KEY_LEFT:
1518   2      #ifdef SUPPORT_PC
1519   2          if(curr_menu->focus == MENU_POSITION_INPUT_RED) {
1520   3            //adjust active area box
1521   3            digit = GetRGBPosH();
1522   3            if(digit)
1523   3              SetRGBPosH(--digit);
1524   3            proc_position_H_digit();
1525   3            key = NAVI_KEY_NONE; //eat key
1526   3          }
1527   2      #endif
1528   2          break;
1529   2        case NAVI_KEY_RIGHT:
1530   2      #ifdef SUPPORT_PC
1531   2          if(curr_menu->focus == MENU_POSITION_INPUT_RED) {
1532   3            //adjust active area box
1533   3            digit = GetRGBPosH();
1534   3            if(digit<100)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 26  

1535   3              SetRGBPosH(++digit);
1536   3            proc_position_H_digit();
1537   3            key = NAVI_KEY_NONE; //eat key
1538   3          }
1539   2      #endif
1540   2          break;
1541   2        default:
1542   2          // do nothing.
1543   2          break;
1544   2        }
1545   1        return key;
1546   1      }
1547          
1548          
1549          //-----------------------------------------------------------------------------
1550          /**
1551          * Function
1552          *
1553          * Description
1554          * @param
1555          * @return
1556          */
1557          void MenuKeyInput(BYTE key)
1558          {
1559   1      #ifdef DEBUG_MENU
                switch(key) {
                case NAVI_KEY_ENTER:  dMenuPrintf("\n\rNAVI_KEY_ENTER");  break;
                case NAVI_KEY_UP:     dMenuPrintf("\n\rNAVI_KEY_UP");   break;
                case NAVI_KEY_DOWN:   dMenuPrintf("\n\rNAVI_KEY_DOWN");   break;
                case NAVI_KEY_LEFT:   dMenuPrintf("\n\rNAVI_KEY_LEFT");   break;
                case NAVI_KEY_RIGHT:  dMenuPrintf("\n\rNAVI_KEY_RIGHT");  break;
                default:        dMenuPrintf("\n\rNAVI_KEY_knonwn:%02bx",key); break;
                }
                  dPrintCurrMenu();
                  dPrintf(" curr_menu type:%bd focus:%bd select:%bd item_start:%bd item_total:%bd", 
                      curr_menu->type,
                      curr_menu->focus, 
                      curr_menu->select,
                      curr_menu->item_start,
                      curr_menu->item_total);
              #endif
1576   1      
1577   1        //
1578   1        //special
1579   1        // eat the key or return the same key.
1580   1        if(curr_menu==&menu_slider_page)
1581   1          key = MenuKeyInput_slider_page(key);
1582   1        else if(curr_menu==&menu_slider3_page)
1583   1          key =MenuKeyInput_slider3_page(key);
1584   1        else if(curr_menu==&menu_position_page)
1585   1          key = MenuKeyInput_position_page(key);
1586   1        else if(curr_menu==&menu_input_page || curr_menu==&menu_system_page)
1587   1          key = MenuKeyInput_input_page(key);
1588   1        else if(curr_menu==&menu_main_page) {
1589   2          key = MenuKeyInput_main_page(key);
1590   2        }
1591   1      
1592   1      
1593   1        switch(key) {
1594   2        case NAVI_KEY_ENTER:
1595   2          curr_menu->items[curr_menu->focus].p();
1596   2          //NOTE:DO NOT USE curr_menu, it will be updated.
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 27  

1597   2          break;
1598   2        case NAVI_KEY_UP:
1599   2          MenuTurnOffCurrImage(curr_menu->focus);
1600   2          curr_menu->focus = curr_menu->items[curr_menu->focus].up;
1601   2              curr_menu_watchdog_focus = curr_menu->focus;
1602   2          MenuDrawCurrImage(0,curr_menu->focus);
1603   2          break;
1604   2        case NAVI_KEY_DOWN:
1605   2          MenuTurnOffCurrImage(curr_menu->focus);
1606   2          curr_menu->focus = curr_menu->items[curr_menu->focus].down;
1607   2              curr_menu_watchdog_focus = curr_menu->focus;
1608   2          MenuDrawCurrImage(0,curr_menu->focus);
1609   2          break;
1610   2        case NAVI_KEY_LEFT:
1611   2          MenuTurnOffCurrImage(curr_menu->focus);
1612   2          curr_menu->focus = curr_menu->items[curr_menu->focus].left;
1613   2              curr_menu_watchdog_focus = curr_menu->focus;
1614   2          MenuDrawCurrImage(0,curr_menu->focus);
1615   2          break;
1616   2        case NAVI_KEY_RIGHT:
1617   2          //dMenuPrintf("\n\rfocus:%d->",(WORD)curr_menu->focus);
1618   2          MenuTurnOffCurrImage(curr_menu->focus);
1619   2          curr_menu->focus = curr_menu->items[curr_menu->focus].right;
1620   2              curr_menu_watchdog_focus = curr_menu->focus;
1621   2          //dMenuPrintf("%d",(WORD)curr_menu->focus);
1622   2          MenuDrawCurrImage(0,curr_menu->focus);
1623   2          break;
1624   2        default:
1625   2          // do nothing.
1626   2          break;
1627   2        }
1628   1      
1629   1        //if deactivated item, passthru.
1630   1        //BKTODO: Do you have Only one deactivated item ?
1631   1        //NOTE: curr_menu.item can not be 0 on key input mode.
1632   1        //if(redraw) {
1633   1        //  //curr_menu->items[0].p();
1634   1        //  MenuDrawCurrImage(0,curr_menu->focus);
1635   1        //}
1636   1      }
1637          /**
1638          * description
1639          * check input and return the selected item number
1640          * return:
1641          * 0: failed
1642          * other: selected item number
1643          */
1644          //-----------------------------------------------------------------------------
1645          /**
1646          * Function
1647          *
1648          * Description
1649          * @param
1650          * @return
1651          */
1652          #ifdef SUPPORT_TOUCH
1653          BYTE MenuCheckItemPosition(int x, int y)
1654          {
1655   1        struct image_item_info_s *image;
1656   1        menu_image_header_t *header = &header_table;
1657   1        BYTE i;
1658   1        BYTE max;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 28  

1659   1      
1660   1        dMenuPrintf("\n\rMenuCheckItemPosition(%d,%d)",x,y);
1661   1      
1662   1        max = curr_menu->item_start + curr_menu->item_total;
1663   1        if(curr_menu->type & MENU_TYPE_NOTE)
1664   1          max += curr_menu->item_total;
1665   1      
1666   1        //dMenuPrintf("\n\r??item_start:%bd item_total:%bd",curr_menu->item_start,curr_menu->item_total  );
1667   1        for(i=0; i < max; i++) {
1668   2          if(curr_menu->items[i].osd_type == TYPE_FOSD) continue;   //skip for FOSD
1669   2          if(curr_menu->items[i].osd_type == TYPE_BG) continue;   //skip for Background
1670   2          if(curr_menu->items[i].osd_type == TYPE_MBG) continue;    //skip for Moving SOSD Background
1671   2          if(curr_menu->items[i].osd_type == TYPE_SLIDE) {
1672   3            if( x >= (curr_menu->items[0].x + curr_menu->items[i].x) 
1673   3            &&  x <= (curr_menu->items[0].x + curr_menu->items[i+1].x)
1674   3            &&  y >= (curr_menu->items[0].y + curr_menu->items[i].y) 
1675   3            &&  y <= (curr_menu->items[0].y + curr_menu->items[i+1].y)) {
1676   4              return i+1;
1677   4            }
1678   3            i++;
1679   3            continue;   //need special
1680   3          }
1681   2          //
1682   2          //normal item
1683   2          //
1684   2          //dMenuPrintf("\n\r**%bx %dx%d", i,curr_menu->items[i].x,curr_menu->items[i].y );
1685   2          if(curr_menu->items[i].x <= x && curr_menu->items[i].y <= y) {
1686   3            image = curr_menu->items[i].image;
1687   3            if(image==NULL)
1688   3              image = curr_menu->items[i].image1;
1689   3            if(image==NULL) {
1690   4              eMenuPrintf("\n\rNULL image @%bd",i);
1691   4              continue;
1692   4            }
1693   3      
1694   3            //MenuPrintf("\n\r%bd:",i);
1695   3            MenuPrepareImageHeader(image);
1696   3      
1697   3            //dMenuPrintf(" %dx%d", header->dx, header->dy );
1698   3            if( (curr_menu->items[i].x+header->dx) > x && (curr_menu->items[i].y + header->dy) > y) {
1699   4              //found selected item.
1700   4              //dMenuPrintf("\n\r%bd ",i,curr_menu->items[i].x,curr_menu->items[i].y, 
1701   4              return i;
1702   4            }
1703   3          }
1704   2        } 
1705   1        return 0xFF;  //no. failed.
1706   1      }
1707          #endif
1708          
1709          
1710          #ifdef SUPPORT_TOUCH
1711          /**
1712          * description
1713          * call MenuCheckItemPosition and executed the selected item.
1714          */
1715          //-----------------------------------------------------------------------------
1716          /**
1717          * Function
1718          *
1719          * Description
1720          * @param
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 29  

1721          * @return
1722          */
1723          void MenuCheckTouchInput(BYTE TscStatus, int x,int y)
1724          {
1725   1        BYTE ret;
1726   1        BYTE index;
1727   1      
1728   1        ret =  MenuCheckItemPosition(x,y);
1729   1      
1730   1        if(ret == 0xFF) {
1731   2          //if we lost a focus.....do something.
1732   2          //TscStatus == TOUCHCLICK || TscStatus == TOUCHDOUBLECLICK
1733   2      
1734   2          //curr_menu->focus = touch_curr_menu_focus;
1735   2              //curr_menu_watchdog_focus = curr_menu->focus;
1736   2          if(MenuIsSlideMode()) {
1737   3            if(curr_menu==&menu_slider_page) {
1738   4              if(curr_menu->focus==MENU_SLIDER_LEFT 
1739   4              || curr_menu->focus==MENU_SLIDER_RIGHT
1740   4              || curr_menu->focus==MENU_SLIDER_BAR_OK
1741   4              || curr_menu->focus==MENU_SLIDER_BAR_CANCEL
1742   4              ) {
1743   5                MenuTurnOffCurrImage(curr_menu->focus);
1744   5                curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
1745   5                          curr_menu_watchdog_focus = curr_menu->focus;
1746   5                MenuDrawSlideNeedleImageXY(0, curr_slide_value, 1/*MENU_SLIDER_BAR_INPUT_RED*/);
1747   5              }
1748   4              return;
1749   4            }
1750   3            else if(curr_menu==&menu_slider3_page) {
1751   4              if(curr_menu->focus==SLIDE3_LEFT 
1752   4              || curr_menu->focus==SLIDE3_RIGHT
1753   4              || curr_menu->focus==SLIDE3_OK
1754   4              || curr_menu->focus==SLIDE3_CANCEL
1755   4              ) {
1756   5                MenuTurnOffCurrImage(curr_menu->focus);
1757   5                curr_menu->focus = curr_menu->select;
1758   5                          curr_menu_watchdog_focus = curr_menu->focus;
1759   5      
1760   5                if(curr_menu->focus == SLIDE3_1)    index = 0;
1761   5                else if(curr_menu->focus == SLIDE3_2) index = 1;
1762   5                else if(curr_menu->focus == SLIDE3_3) index = 2;
1763   5                else                  index = 0;
1764   5      
1765   5                MenuDrawSlideNeedleImageXY(index, curr_slide3_value[index], 1/*MENU_SLIDER_BAR_INPUT_RED*/);
1766   5              }
1767   4              return;
1768   4            }
1769   3          }
1770   2          MenuDrawCurrImage(0, curr_menu->focus);
1771   2      
1772   2          return;
1773   2        }
1774   1        //dMenuPrintf("\n\r****MenuCheckItemPosition ret %bx", ret);
1775   1      
1776   1        if(TscStatus==TOUCHPRESS || TscStatus >= TOUCHMOVE) {
1777   2          //just draw the focused item, do not make an action.
1778   2          //if it is a left/right on slide, I need a long press
1779   2          touch_curr_menu_focus = curr_menu->focus;
1780   2      
1781   2          curr_menu->focus = ret; //only focus, not select
1782   2              curr_menu_watchdog_focus = curr_menu->focus;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 30  

1783   2      
1784   2          if(MenuIsSlideMode()) {
1785   3            if(curr_menu==&menu_slider_page) {
1786   4              //only for slide bar
1787   4              if(ret == MENU_SLIDER_BAR_INPUT_GRAY || ret == MENU_SLIDER_BAR_INPUT_RED) {
1788   5                curr_menu->select = curr_menu->focus = ret;
1789   5                          curr_menu_watchdog_focus = curr_menu->focus;
1790   5                          curr_menu_watchdog_select = curr_menu->select;   
1791   5                MenuUpdateSlideNeedleByPosition(x/*,y*/);
1792   5                MenuDrawSlideNeedleImageXY(0,curr_slide_value, 1/*MENU_SLIDER_BAR_INPUT_RED*/);
1793   5                MenuDrawSlideCurrValue(0, (short)curr_slide_value);
1794   5                //dMenuPrintf("\n\r MenuCheckTouchInput end4");
1795   5                return;
1796   5              }
1797   4              else {
1798   5                MenuDrawCurrImage(1, curr_menu->focus);
1799   5                //dMenuPrintf("\n\r MenuCheckTouchInput end5");
1800   5                return; 
1801   5              }
1802   4            }
1803   3            else if(curr_menu==&menu_slider3_page) {
1804   4              if(ret >= curr_menu->item_start && ret < (curr_menu->item_start+3*2)) {
1805   5                curr_menu->select = curr_menu->focus = ret;
1806   5                          curr_menu_watchdog_focus = curr_menu->focus;
1807   5                          curr_menu_watchdog_select = curr_menu->select;   
1808   5                MenuUpdateSlideNeedleByPosition(x/*,y*/);
1809   5                curr_menu->items[0].p();
1810   5                //dMenuPrintf("\n\r MenuCheckTouchInput end4");
1811   5                return;
1812   5              }
1813   4              else {
1814   5                MenuDrawCurrImage(1, curr_menu->focus);
1815   5              }
1816   4            }
1817   3            return;
1818   3          }
1819   2      
1820   2          MenuDrawCurrImage(1, curr_menu->focus);
1821   2          //dMenuPrintf("\n\r MenuCheckTouchInput end1");
1822   2          return;
1823   2        }
1824   1        if(TscStatus==TOUCHCLICK || TscStatus==TOUCHDOUBLECLICK || TscStatus==TOUCHLONGCLICK) {
1825   2          //make an action.
1826   2      
1827   2          if(MenuIsSlideMode()) {
1828   3            if(curr_menu==&menu_slider_page) {
1829   4              if(ret == MENU_SLIDER_BAR_INPUT_GRAY || ret == MENU_SLIDER_BAR_INPUT_RED) {
1830   5                curr_menu->select = curr_menu->focus = ret;
1831   5                          curr_menu_watchdog_focus = curr_menu->focus;
1832   5                          curr_menu_watchdog_select = curr_menu->select;   
1833   5                MenuUpdateSlideNeedleByPosition(x/*,y*/);
1834   5                MenuDrawSlideNeedleImageXY(0,curr_slide_value, 1/*MENU_SLIDER_BAR_INPUT_RED*/);
1835   5                MenuDrawSlideCurrValue(0, (short)curr_slide_value);
1836   5                //dMenuPrintf("\n\r MenuCheckTouchInput end3");
1837   5                return;
1838   5              }
1839   4            }
1840   3            else if(curr_menu==&menu_slider3_page) {
1841   4              if(ret >= curr_menu->item_start && ret < (curr_menu->item_start+3*2)) {
1842   5                curr_menu->select = curr_menu->focus = ret; 
1843   5                          curr_menu_watchdog_focus = curr_menu->focus;
1844   5                          curr_menu_watchdog_select = curr_menu->select; 
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 31  

1845   5                MenuUpdateSlideNeedleByPosition(x/*,y*/);
1846   5                curr_menu->items[0].p();
1847   5                //dMenuPrintf("\n\r MenuCheckTouchInput end3");
1848   5                return;
1849   5              }
1850   4            }
1851   3          }
1852   2      
1853   2          //touch_curr_menu_focus = curr_menu->focus;
1854   2          curr_menu->focus = ret;  //only focus, not select. action will decide select.
1855   2          curr_menu_watchdog_focus = curr_menu->focus;
1856   2              //MenuDrawCurrImage(1, curr_menu->focus);
1857   2          curr_menu->items[ret].p();
1858   2          //SetTouchStatus(0);  //BK110601
1859   2          dMenuPrintf("\n\r MenuCheckTouchInput end2");
1860   2      
1861   2          return;
1862   2        }
1863   1        eMenuPrintf("\n\rMenuCheckTouchInput TscStatus:%bx fail",TscStatus);
1864   1        //if(ret) 
1865   1        {
1866   2          last_touch_x = x; //save last position for ProgressBar & Radio Tuner
1867   2          last_touch_y = y;
1868   2          //execute
1869   2          touch_curr_menu_focus = curr_menu->focus;
1870   2          curr_menu->focus = ret;
1871   2              curr_menu_watchdog_focus = curr_menu->focus;
1872   2          curr_menu->items[ret].p();
1873   2      
1874   2          //SetTouchStatus(0);  //BK110601
1875   2          //dMenuPrintf("\n\r MenuCheckTouchInput end3");
1876   2        }
1877   1      }
1878          #endif
1879          
1880          
1881          //=========================
1882          // NAVI ICON
1883          //=========================
1884          //------------------------
1885          // common icons
1886          
1887          
1888          //-----------------------------------------------------------------------------
1889          /**
1890          * Function
1891          *
1892          * Description
1893          * @param
1894          * @return
1895          */
1896          //move main_page->demo_page
1897          void proc_demo_icon(void)
1898          {
1899   1        push_menu_stack_level();
1900   1        curr_menu = &menu_demo_page;
1901   1        curr_menu->focus = curr_menu->item_start;
1902   1          curr_menu_watchdog_focus = curr_menu->focus;
1903   1        curr_menu->items[0].p();
1904   1      }
1905          void proc_exit_icon(void)
1906          {
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 32  

1907   1        //disable all enabled windows
1908   1        //call MenuEnd routine
1909   1        MenuEnd();
1910   1      }
1911          void proc_return_icon(void)
1912          {
1913   1      
1914   1        FOsdWinOffAll();
1915   1      
1916   1        pop_menu_stack_level();
1917   1        curr_menu->items[0].p();  //redraw parent
1918   1      }
1919          
1920          void proc_home_icon(void)
1921          {
1922   1        //call main menu
1923   1        menu_level=1;
1924   1        proc_return_icon();
1925   1      }
1926          
1927          //=========================
1928          // SLIDE DIALOG
1929          //=========================
1930          //-------------------------------------
1931          // slide popup MENU
1932          //-------------------------------------
1933          
1934          //-----------------------------------------------------------------------------
1935          /**
1936          * Function
1937          *
1938          * Description
1939          * @param
1940          * @return
1941          */
1942          void InitSlideCtrl(image_item_info_t *title_img, void *pGet, void *pVary, void *pSet, void *pSave)
1943          {
1944   1        UseSOsdHwBuff = 0;
1945   1        SOsd_CleanReg();
1946   1        //SOsdHw_Clean();
1947   1        SOsd_UpdateReg(0,8);
1948   1        SOsd_UpdateRlc();  //??BK130319 Do you need SOsd_CleanRlc()??
1949   1      
1950   1        slide_title_img = title_img;
1951   1        GetSlideValue = pGet;
1952   1        VarySlideValue = pVary;
1953   1        SetSlideValue = pSet;
1954   1        SaveSlideValue = pSave;
1955   1      
1956   1        last_slide3_value[0] = curr_slide_value = GetSlideValue();
1957   1      }
1958          void InitSlide3Ctrl(image_item_info_t *title_img, void *pGet, void *pVary, void *pSet, void *pSave)
1959          {
1960   1        UseSOsdHwBuff = 0;
1961   1        SOsd_CleanReg();
1962   1        //SOsdHw_Clean();
1963   1        SOsd_UpdateReg(0,8);
1964   1        SOsd_UpdateRlc();  //??BK130319 Do you need SOsd_CleanRlc()??
1965   1      
1966   1      
1967   1        slide_title_img = title_img;
1968   1        GetSlide3Value = pGet;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 33  

1969   1        VarySlide3Value = pVary;
1970   1        SetSlide3Value = pSet;
1971   1        SaveSlide3Value = pSave;
1972   1      
1973   1        last_slide3_value[0] = curr_slide3_value[0] = GetSlide3Value(0);
1974   1        last_slide3_value[1] = curr_slide3_value[1] = GetSlide3Value(1);
1975   1        last_slide3_value[2] = curr_slide3_value[2] = GetSlide3Value(2);
1976   1      }
1977          
1978          //-----------------------------------------------------------------------------
1979          /**
1980          * Function
1981          *
1982          * Description
1983          * @param
1984          * @return
1985          */
1986          //I need other menu info. I will just update X,Y
1987          //@param:
1988          //  value: 0 ~ 100
1989          //  item:  0:gray 1:focused   //2:gray, 3:red 
1990          //item 0: background image
1991          //item 1: title
1992          //item 2: gray
1993          //item 3: red(focused)
1994          //..
1995          void MenuDrawSlideNeedleImageXY(BYTE index, BYTE value, BYTE item)  
1996          {
1997   1        WORD sx,sy;
1998   1        menu_sitem_info_t *menu_item;
1999   1        struct image_item_info_s *image;
2000   1        menu_image_header_t *header = &header_table;
2001   1        BYTE sosd_win;
2002   1      //  WORD lut_size;
2003   1        BYTE rate = 100;
2004   1        WORD position;
2005   1        WORD barsize;
2006   1      
2007   1        dMenuPrintf("\n\rMenuDrawSlideNeedleImageXY(index:%d value:%d, %s)",(WORD)index, (WORD)value, item ? "RED
             -":"GRAY");
2008   1      
2009   1        //get window start
2010   1        menu_item = &curr_menu->items[0];
2011   1        //image = menu_item->osd_s.image;
2012   1        sx = menu_item->x;
2013   1        sy = menu_item->y;
2014   1      
2015   1        //get bar end position
2016   1        menu_item = &curr_menu->items[curr_menu->item_start+1+index*2];
2017   1        //image = menu_item->osd_s.image;
2018   1        barsize = menu_item->x;
2019   1        
2020   1        //get niddle start
2021   1        menu_item = &curr_menu->items[curr_menu->item_start+index*2];
2022   1        //image = menu_item->osd_s.image;
2023   1        sx += menu_item->x;
2024   1        sy += menu_item->y;
2025   1      
2026   1        //calculate barsize
2027   1        barsize -= menu_item->x;
2028   1      
2029   1        //get bar position
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 34  

2030   1        position = (WORD)(((DWORD)value * 100 / rate)*  barsize / 100);
2031   1        //update sx
2032   1        sx += position;
2033   1        
2034   1        //which one, gray of red(focused)
2035   1        menu_item = &curr_menu->items[curr_menu->item_start+index*2+item];
2036   1        image = menu_item->image;
2037   1      
2038   1      
2039   1        sosd_win = menu_item->win;
2040   1        //4bpp:0x040, 6bpp:0x100, 8bpp:0x400
2041   1      //  lut_size = 0x004 << (image->rle >> 4);
2042   1      
2043   1        //adjust sx,sy
2044   1        if(menu_item->align == ALIGN_TOPMIDDLE) {
2045   2          sx -= SLIDER_NIDDLE_HALF_WIDTH;
2046   2        }
2047   1      
2048   1        //prepare header
2049   1        MenuPrepareImageHeader(image);
2050   1      
2051   1        //fill out sosd_buff
2052   1        //if we are using MREL, we need to skip 0x10 size.
2053   1        SOsd_SetSpiStartOffset( sosd_win, header->image_loc); 
2054   1        SOsd_SetImageWidthHeight( sosd_win, header->dx, header->dy );
2055   1        SOsd_SetScreen( sosd_win, sx, sy, header->dx, header->dy );
2056   1        if(sosd_win==0) {
2057   2          SOsd_SetWin0ImageOffsetXY( 0, 0 );
2058   2          SOsd_SetWin0Animation( 1, 0, 0, 0);
2059   2        }
2060   1      //  SOsd_SetPixelAlpha( sosd_win, ON );
2061   1        if(image->alpha != 0xFF)
2062   1          SOsd_SetPixelAlpha( sosd_win, ON );
2063   1        else {
2064   2          if(slide_title_img == &img_slide_trans) {
2065   3            SOsd_SetGlobalAlpha( sosd_win, OsdGetTrans());
2066   3            //only for test....
2067   3            SOsd_SetGlobalAlpha( 1, OsdGetTrans()); //bg
2068   3            SOsd_SetGlobalAlpha( 2, OsdGetTrans()); //title
2069   3            WaitVBlank(1);  //BK130104 add
2070   3            SOsd_UpdateReg(1,2);
2071   3          }
2072   2          else
2073   2            SOsd_SetGlobalAlpha( sosd_win, 0 /*EE_Read(EEP_OSD_TRANSPARENCY)*/);
2074   2        }
2075   1        SOsd_SetPixelWidth(sosd_win, header->bpp);
2076   1        SOsd_SetLutOffset(sosd_win,menu_item->lut);
2077   1      
2078   1        SOsd_Enable( sosd_win, ON );
2079   1      
2080   1        //write to HW
2081   1        WaitVBlank(1);
2082   1      
2083   1        if(header->rle) { //need RLE ?
2084   2          SOsd_SetRlc( sosd_win, header->bpp, header->rle);
2085   2          SOsd_UpdateRlc();
2086   2        } 
2087   1        else {
2088   2          //BK110203
2089   2          //We using RLE only on the background.
2090   2      //remove 130227
2091   2      //    if(item == 0)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 35  

2092   2      //      SpiOsdDisableRlcReg(0);
2093   2        }
2094   1        //update HW
2095   1        SOsd_UpdateReg(menu_item->win, menu_item->win);
2096   1        //Load Palette
2097   1        //SpiOsdLoadLUT(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alph
             -a);
2098   1        SOsd_SetLut(sosd_win, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alpha);
2099   1        SOsd_UpdateLut(sosd_win, 1);  
2100   1      }
2101          
2102          #ifdef SUPPORT_TOUCH
2103          //-----------------------------------------------------------------------------
2104          /**
2105          * Function
2106          *
2107          * Description
2108          * @param
2109          * @return
2110          */
2111          void MenuUpdateSlideNeedleByPosition(int x /*, int y*/)
2112          {
2113   1        WORD sx,sy;
2114   1        menu_sitem_info_t *menu_item;
2115   1        struct image_item_info_s *image;
2116   1        menu_image_header_t *header = &header_table;
2117   1        //BYTE sosd_win;
2118   1      
2119   1        WORD position;
2120   1        WORD barsize;
2121   1        BYTE value;
2122   1        BYTE index;
2123   1        BYTE rate = 100;
2124   1      
2125   1        //index
2126   1        if(curr_menu==&menu_slider_page)
2127   1          index = 0;
2128   1        else /*if(curr_menu==&menu_slider3_page) */{
2129   2          if(curr_menu->focus == SLIDE3_1)    index = 0;
2130   2          else if(curr_menu->focus == SLIDE3_2) index = 1;
2131   2          else if(curr_menu->focus == SLIDE3_3) index = 2;
2132   2          else                  index = 0; //BUG
2133   2        }
2134   1      
2135   1        //get window start
2136   1        menu_item = &curr_menu->items[0];
2137   1        //image = menu_item->osd_s.image;
2138   1        sx = menu_item->x;
2139   1        sy = menu_item->y;
2140   1        position = x - sx;
2141   1      
2142   1        //get bar end position
2143   1        menu_item = &curr_menu->items[curr_menu->item_start+1+index*2];
2144   1        //image = menu_item->osd_s.image;
2145   1        barsize = menu_item->x;
2146   1        
2147   1        //get niddle start
2148   1        menu_item = &curr_menu->items[curr_menu->item_start+index*2];
2149   1        image = menu_item->image;
2150   1        sx += menu_item->x;
2151   1        sy += menu_item->y;
2152   1        position -= menu_item->x;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 36  

2153   1      
2154   1        //calculate barsize
2155   1        barsize -= menu_item->x;
2156   1      
2157   1        //position = x - curr_menu->items[0].x - curr_menu->items[curr_menu->focus].x;    
2158   1      
2159   1        dMenuPrintf("\n\rx:%d->position:%d barsize:%d", x, position, barsize);
2160   1      
2161   1      
2162   1        value = ((DWORD)position * 100 / barsize) /* *(rate / 100) */;
2163   1        dMenuPrintf("\n\rMenuUpdateSlideNeedleByPosition value:%bd",value);
2164   1      
2165   1        if(curr_menu==&menu_slider_page) {
2166   2          curr_slide_value = value;
2167   2          curr_slide_value=SetSlideValue(curr_slide_value);
2168   2      
2169   2      
2170   2      //img_slide_sharp
2171   2      //  InitSlideCtrl(&img_slide_sharp, &ImgAdjGetSharpness,&ImgAdjSetSharpness,&ImgAdjChangeSharpness);
2172   2      
2173   2      
2174   2          dMenuPrintf("->%bd", curr_slide_value);
2175   2        }
2176   1        else /*if(curr_menu==&menu_slider3_page) */{
2177   2          curr_slide3_value[index] = value;
2178   2          curr_slide3_value[index]=SetSlide3Value(index, curr_slide3_value[index]);
2179   2          dMenuPrintf("->%bd", curr_slide3_value[index]);
2180   2        }
2181   1      }
2182          #endif
2183          
2184          //code struct menu_fitem_info_s menu_slider_text_items[] = {
2185          //  { 0,0,  270,62, 3,1, 0,0    },
2186          //};
2187          //  { 0,0,    265,52,   3,1, 0,0, 0xF0,  0x10,  0xF800  },  //R, or F81F:Magenta
2188          //  { 1,3*3,  265,102,  3,1, 0,0, 0xF0,  0x18,  0x07E0  },  //G
2189          //  { 2,6*3,  265,152,  3,1, 0,0, 0xF0,  0x20,  0x001F  },  //B, or 07FF:Cyan 
2190          
2191          //-----------------------------------------------------------------------------
2192          /**
2193          * Function
2194          *
2195          * Description
2196          * @param
2197          * @return
2198          */
2199          void MenuDrawSlideCurrValue(BYTE index, short value)
2200          {
2201   1        //struct menu_fitem_info_s *text_info; // =  &menu_slider_text_items[0];
2202   1        BYTE n_char;
2203   1        BYTE palette;
2204   1        BYTE *str;
2205   1        BYTE font;
2206   1        BYTE start=0;
2207   1      
2208   1        //code struct menu_fitem_info_s
2209   1      
2210   1        menu_fitem_info_t *text_info = curr_menu->texts;
2211   1        text_info += index;
2212   1      
2213   1        //we need a window & start of OSDRAM
2214   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 37  

2215   1        n_char = TWitoa(value, menu_str_buff);
2216   1        str = menu_str_buff;
2217   1                    
2218   1        //FontOsdWinPuts2();
2219   1        if(IsDigit(*str)==0) {
2220   2          //first one can be minus
2221   2          palette = text_info->BPP1Color;
2222   2          FOsdRamSetAddrAttr(text_info->osdram,text_info->BPP1Color);
2223   2          //assume page3
2224   2          WriteTW88(REG307, *str);
2225   2          str++;
2226   2          start++;
2227   2        }
2228   1      
2229   1        palette = text_info->BPP3_palette;
2230   1        dMenuPrintf("\n\rwin:%bx osdram:%d,palette:x%02bx n_char:%02bx",text_info->winno, text_info->osdram, pale
             -tte, n_char);
2231   1        dMenuPrintf("  str:%s",str);
2232   1        FOsdRamSetAddrAttr(text_info->osdram+start,palette >> 2);
2233   1        while(*str) {
2234   2          font = *str++;
2235   2          font -= 0x30;
2236   2          WriteTW88(REG307, font * 3 + BPP3DIGIT_START);
2237   2        }
2238   1        //adjust FontOSD width.
2239   1        FOsdWinScreenWH(text_info->winno, n_char,1);
2240   1      }
2241          
2242          
2243          //-----------------------------------------------------------------------------
2244          /**
2245          * Function
2246          *
2247          * Description
2248          * @param
2249          * @return
2250          */
2251          
2252          void proc_slider_bg(void)
2253          {
2254   1        menu_sitem_info_t *menu_item;
2255   1        BYTE sosd_win;
2256   1      
2257   1      //  curr_menu->focus = MENU_SLIDER_BAR_INPUT; //start from slide input
2258   1      //  curr_menu->focus = MENU_SLIDER_BAR_OK; //test
2259   1      //  curr_menu_watchdog_focus = curr_menu->focus;
2260   1        //draw current value
2261   1        //draw background image.
2262   1        MenuDrawCurrImage(0,0); //background
2263   1        MenuDrawCurrImage(0,1);   //slide title. Note:MenuDrawCurrImage will takecare the exception case.
2264   1      
2265   1        if(curr_menu->focus == MENU_SLIDER_BAR_INPUT_RED) {
2266   2          MenuDrawSlideNeedleImageXY(0,curr_slide_value, 1/*MENU_SLIDER_BAR_INPUT_RED*/);
2267   2          //MenuTurnOffCurrImage(curr_menu->focus-1); //disable GRAY window. BK110516
2268   2          menu_item = &curr_menu->items[curr_menu->focus-1];  //gray niddle
2269   2          sosd_win = menu_item->win;
2270   2          SOsd_Enable( sosd_win, OFF );
2271   2          SOsd_UpdateReg(sosd_win, sosd_win);
2272   2        }
2273   1        else {
2274   2          MenuDrawSlideNeedleImageXY(0,curr_slide_value, 0/*MENU_SLIDER_BAR_INPUT_GRAY*/);
2275   2          MenuDrawCurrImage(0,curr_menu->focus);
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 38  

2276   2        }
2277   1      
2278   1        //MenuDrawCurrValue(0, GetSlideValue()); //item#, value
2279   1      
2280   1        //read current value & update bar position.
2281   1      
2282   1        MenuFontOsdItemInit(0, OFF);
2283   1        MenuDrawSlideCurrValue(0, (short)curr_slide_value);
2284   1      }
2285          
2286          void proc_slider3_bg(void)
2287          {
2288   1        BYTE index;
2289   1        BYTE i;
2290   1        menu_sitem_info_t *menu_item;
2291   1        BYTE sosd_win;
2292   1      
2293   1        if(curr_menu->focus == SLIDE3_1)    index = 0;
2294   1        else if(curr_menu->focus == SLIDE3_2) index = 1;
2295   1        else if(curr_menu->focus == SLIDE3_3) index = 2;
2296   1        else                  index = 3; //NOTE:No Focused. It can be OK or Cancel
2297   1      
2298   1        UseSOsdHwBuff = 1;
2299   1        //SOsdHwBuffClean();
2300   1        SOsd_CleanLut();  
2301   1        SOsd_CleanRlc();
2302   1        SOsd_CleanReg();
2303   1      
2304   1        MenuDrawCurrImage(0,0);   //background
2305   1        MenuDrawCurrImage(0,1);     //slide title. Note:MenuDrawCurrImage will takecare the exception case.
2306   1      
2307   1        for(i=0; i < 3; i++) {
2308   2          if( index == i) {
2309   3            MenuDrawSlideNeedleImageXY(i,curr_slide3_value[i], 1/*MENU_SLIDER_BAR_INPUT_RED*/);
2310   3      
2311   3            //if gray niddle is active, deactivate it.
2312   3            menu_item = &curr_menu->items[curr_menu->item_start+index*2];  //gray niddle
2313   3            sosd_win = menu_item->win;
2314   3            SOsd_Enable( sosd_win, OFF );
2315   3            SOsd_UpdateReg(sosd_win, sosd_win);
2316   3          }
2317   2          else {
2318   3            MenuDrawSlideNeedleImageXY(i,curr_slide3_value[i], 0);
2319   3          }
2320   2      
2321   2      //    MenuFontOsdItemInit(i, OFF);
2322   2      //    MenuDrawSlideCurrValue(i, (short)curr_slide3_value[i]);
2323   2        }
2324   1        if(index==3) {
2325   2          MenuDrawCurrImage(0,curr_menu->focus);
2326   2        }
2327   1      
2328   1        if(UseSOsdHwBuff) {
2329   2          SOsd_show(1);
2330   2          UseSOsdHwBuff = 0;
2331   2        }
2332   1        //Update FOsd
2333   1        MenuFontOsdItemInitNew(0,2);
2334   1        for(i=0; i < 3; i++) {
2335   2          MenuDrawSlideCurrValue(i, (short)curr_slide3_value[i]);
2336   2          //MenuFontOsdItemInit(i, OFF);
2337   2        }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 39  

2338   1      #if 0
                //debug
                FOsdWinEnable(3 /*winno*/,ON);  //WINn enable
                FOsdRamSetAddrAttr(0x10,text_info->BPP1Color);
                for(i=0; i < 64; i++) {
                  WriteTW88(REG307, *str);  
                }
              #endif
2346   1      }
2347          
2348          //-----------------------------------------------------------------------------
2349          /**
2350          * Function
2351          *
2352          * Description
2353          * @param
2354          * @return
2355          */
2356          void proc_slider_ctrl(void)
2357          {
2358   1        BYTE index;
2359   1        if(curr_menu==&menu_slider_page) {
2360   2          if(curr_menu->focus == MENU_SLIDER_BAR_INPUT_RED)
2361   2            MenuDrawSlideNeedleImageXY(0,curr_slide_value, 0/*MENU_SLIDER_BAR_INPUT_GRAY*/);
2362   2        }
2363   1        else {
2364   2          if(curr_menu->focus == SLIDE3_1)    index = 0;
2365   2          else if(curr_menu->focus == SLIDE3_2) index = 1;
2366   2          else if(curr_menu->focus == SLIDE3_3) index = 2;
2367   2          else index = 3;
2368   2          
2369   2          if(index != 3)
2370   2            MenuDrawSlideNeedleImageXY(index,curr_slide3_value[index], 0);
2371   2        }
2372   1      
2373   1        //move to OK
2374   1        if(curr_menu==&menu_slider3_page)   curr_menu->focus = SLIDE3_OK;
2375   1        else                curr_menu->focus = MENU_SLIDER_BAR_OK;
2376   1          curr_menu_watchdog_focus = curr_menu->focus;
2377   1        MenuDrawCurrImage(0,curr_menu->focus);
2378   1      }
2379          //-----------------------------------------------------------------------------
2380          /**
2381          * Function
2382          *
2383          * Description
2384          * @param
2385          * @return
2386          */
2387          void proc_slider_ok(void)
2388          {
2389   1        WaitVBlank(1);      //??
2390   1        SpiOsdEnable(OFF);    //??
2391   1      
2392   1        if(slide_title_img==&img_slide_clock) {
2393   2          //aRGB_LLPLLSetDivider(,1);
2394   2          WriteTW88(REG003, 0xF8);  //enable ISR.
2395   2          aRGB_SetFilterBandwidth(7, 0);
2396   2        }
2397   1        else if(slide_title_img==&img_slide_phase) {
2398   2          aRGB_SetFilterBandwidth(7, 0);
2399   2        }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 40  

2400   1      
2401   1      
2402   1        //update current value to EE
2403   1        if(curr_menu==&menu_slider3_page) {
2404   2          SaveSlide3Value(0,curr_slide3_value[0]);
2405   2          SaveSlide3Value(1,curr_slide3_value[1]);
2406   2          SaveSlide3Value(2,curr_slide3_value[2]);   //BK110222. Bugfix
2407   2        }
2408   1        else
2409   1          SaveSlideValue(curr_slide_value);
2410   1        
2411   1        SpiOsdEnable(ON);   //??BY110818 Why it need ?
2412   1      
2413   1        //turn off FontOSD
2414   1        FOsdWinOffAll();
2415   1        if(curr_menu==&menu_slider3_page)
2416   1          //recover 8~15 palette color
2417   1          FOsdSetDefPaletteColor(0);
2418   1      
2419   1        pop_menu_stack_level();
2420   1      
2421   1        //redraw parent bg 
2422   1        curr_menu->items[0].p();    
2423   1      }
2424          void proc_slider_undo(void)
2425          {
2426   1        //recover last saved value
2427   1        if(curr_menu==&menu_slider3_page) {
2428   2          SetSlide3Value(0,last_slide3_value[0]);
2429   2          SetSlide3Value(1,last_slide3_value[1]);
2430   2          SetSlide3Value(2,last_slide3_value[2]);
2431   2        }
2432   1        else {
2433   2          dMenuPrintf("\n\rproc_slider_undo restore to %bd",last_slide3_value[0]);
2434   2          SetSlideValue(last_slide3_value[0]);
2435   2        }
2436   1      
2437   1        if(slide_title_img==&img_slide_clock) {
2438   2          WriteTW88(REG003, 0xF8);  //enable ISR.
2439   2          aRGB_SetFilterBandwidth(7, 0);
2440   2          //aRGB_LLPLLSetDivider(,1);
2441   2        }
2442   1        else if(slide_title_img==&img_slide_phase) {
2443   2          aRGB_SetFilterBandwidth(7, 0);
2444   2        }
2445   1      
2446   1        //turn off FontOSD
2447   1        FOsdWinOffAll();
2448   1        if(curr_menu==&menu_slider3_page)
2449   1          //recover 8~15 palette color
2450   1          FOsdSetDefPaletteColor(0);
2451   1      
2452   1        pop_menu_stack_level(); 
2453   1        //redraw parent bg 
2454   1        curr_menu->items[0].p();    
2455   1      }
2456          //-----------------------------------------------------------------------------
2457          /**
2458          * Function
2459          *
2460          * Description
2461          * @param
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 41  

2462          * @return
2463          */
2464          void proc_slider_left(void)
2465          {
2466   1        dMenuPrintf("\n\rproc_slider_left curr_slide_value:%bd", curr_slide_value);
2467   1      
2468   1        //
2469   1        //special
2470   1        //
2471   1      #if 0
                if( GetSlideValue == GetaRGB_Clock) {
                  //decrease one
                  //use real value 0..0xFFF(0..4095)
              
                  //curr_slide_value--;
                  //curr_slide_value=SetSlideValue(curr_slide_value);
                  //dMenuPrintf("->%d", curr_slide_value);
                  //redraw
                  //MenuDrawCurrImage(0,0); //curr_menu->items[0].p();  //draw current value
                  //MenuDrawCurrValue(0, GetSlideValue()); //item#, value
                  //do not change needle...
                  //WORD size===>MenuDrawSlideCurrValue(0, curr_slide_value);
                  return;
                }
              #endif
2487   1        if(curr_slide_value){
2488   2          curr_slide_value--;
2489   2          curr_slide_value=VarySlideValue(curr_slide_value);
2490   2          dMenuPrintf("->%bd", curr_slide_value);
2491   2          //redraw
2492   2          //MenuDrawCurrImage(0,0); //curr_menu->items[0].p();  //draw current value
2493   2          //MenuDrawCurrValue(0, GetSlideValue()); //item#, value
2494   2          MenuDrawSlideNeedleImageXY(0, curr_slide_value, 1/*MENU_SLIDER_BAR_INPUT_RED*/);
2495   2          MenuDrawSlideCurrValue(0, (short)curr_slide_value);
2496   2        }
2497   1      }
2498          
2499          void proc_slider3_left(void)
2500          {
2501   1        BYTE index;
2502   1      
2503   1        if(curr_menu->focus == SLIDE3_1)    index = 0;
2504   1        else if(curr_menu->focus == SLIDE3_2) index = 1;
2505   1        else if(curr_menu->focus == SLIDE3_3) index = 2;
2506   1        else                  index = 0;
2507   1      
2508   1        dMenuPrintf("\n\rproc_slider_left curr_slide_value:%bd", curr_slide3_value[index]);
2509   1        if(curr_slide3_value[index]){
2510   2          curr_slide3_value[index]-=1;
2511   2          curr_slide3_value[index]=VarySlide3Value(index, curr_slide3_value[index]);
2512   2          dMenuPrintf("->%bd", curr_slide3_value[index]);
2513   2          //redraw
2514   2          MenuDrawSlideNeedleImageXY(index, curr_slide3_value[index], 1); //index,value,red(or focused)
2515   2          MenuDrawSlideCurrValue(index, (short)curr_slide3_value[index]);     //index,value
2516   2        }
2517   1      }
2518          void proc_slider_left_tsc(void)
2519          {
2520   1        if(curr_menu==&menu_slider3_page) {
2521   2          //remove pressed icon
2522   2          MenuTurnOffCurrImage(curr_menu->focus);
2523   2      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 42  

2524   2          curr_menu->focus = curr_menu->select;
2525   2              curr_menu_watchdog_focus = curr_menu->focus;
2526   2      
2527   2          proc_slider3_left();
2528   2        }
2529   1        else {
2530   2          //remove pressed icon
2531   2          MenuTurnOffCurrImage(curr_menu->focus);
2532   2      
2533   2          curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
2534   2              curr_menu_watchdog_focus = curr_menu->focus;
2535   2      
2536   2          proc_slider_left();
2537   2        }
2538   1      } 
2539          
2540          
2541          //-----------------------------------------------------------------------------
2542          /**
2543          * Function
2544          *
2545          * Description
2546          * @param
2547          * @return
2548          */
2549          void proc_slider_right(void)
2550          {
2551   1        dMenuPrintf("\n\rproc_slider_right curr_slide_value:%bd", curr_slide_value);
2552   1      
2553   1        //
2554   1        //special
2555   1        //
2556   1      #if 0
                if( GetSlideValue == GetaRGB_Clock) {
                  //increase one
                  //use real value 0..0xFFF(0..4095)
                  return;
                }
              #endif
2563   1      
2564   1        if(curr_slide_value < 100){
2565   2          curr_slide_value++;
2566   2          curr_slide_value=VarySlideValue(curr_slide_value);
2567   2          dMenuPrintf("->%bd", curr_slide_value);
2568   2          //redraw
2569   2          MenuDrawSlideNeedleImageXY(0, curr_slide_value, 1/*MENU_SLIDER_BAR_INPUT_RED*/);
2570   2          MenuDrawSlideCurrValue(0, (short)curr_slide_value);
2571   2        }
2572   1      }
2573          void proc_slider3_right(void)
2574          {
2575   1        BYTE index;
2576   1      
2577   1        if(curr_menu->focus == SLIDE3_1)    index = 0;
2578   1        else if(curr_menu->focus == SLIDE3_2) index = 1;
2579   1        else if(curr_menu->focus == SLIDE3_3) index = 2;
2580   1        else                  return; //index = 0;
2581   1      
2582   1        if(curr_slide3_value[index] < 100){
2583   2          curr_slide3_value[index]+=1;
2584   2          curr_slide3_value[index]=VarySlide3Value(index, curr_slide3_value[index]);
2585   2          dMenuPrintf("->%bd", curr_slide3_value[index]);
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 43  

2586   2          //redraw
2587   2          MenuDrawSlideNeedleImageXY(index, curr_slide3_value[index], 1/*MENU_SLIDER_BAR_INPUT_RED*/);
2588   2          MenuDrawSlideCurrValue(index, (short)curr_slide3_value[index]);
2589   2        }
2590   1      }
2591          void proc_slider_right_tsc(void)
2592          {
2593   1        if(curr_menu==&menu_slider3_page) {
2594   2          //remove pressed icon
2595   2          MenuTurnOffCurrImage(curr_menu->focus);
2596   2      
2597   2          curr_menu->focus = curr_menu->select;
2598   2              curr_menu_watchdog_focus = curr_menu->focus;
2599   2      
2600   2          proc_slider3_right();
2601   2        }
2602   1        else {
2603   2          //remove pressed icon
2604   2          MenuTurnOffCurrImage(curr_menu->focus);
2605   2      
2606   2          curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
2607   2              curr_menu_watchdog_focus = curr_menu->focus;
2608   2      
2609   2          proc_slider_right();
2610   2        }
2611   1      }
2612          
2613          #ifdef UNCALLED_SEGMENT_CODE
              void proc_slider_digit(void)
              {
              //  proc_draw_digit(curr_slide_value);
                struct menu_sitem_info_s *item_info;
                BYTE n_char;
              
                n_char = TWitoa((BYTE)curr_slide_value, menu_str_buff);
              
                item_info = &curr_menu->items[MENU_SLIDER_BAR_DIGIT];
              
                FontOsdWinPuts2(item_info, menu_str_buff);  
              }
              #endif
2627          
2628          //need a continus touch input
2629          //return
2630          //  0:No
2631          //  1:Slide
2632          //  3: Slider3
2633          #ifdef SUPPORT_TOUCH
2634          BYTE MenuIsSlideMode(void)
2635          {
2636   1        if(curr_menu==&menu_slider3_page) {
2637   2          return 3;
2638   2        }
2639   1        if(curr_menu==&menu_slider_page) {
2640   2          return 1;
2641   2        }
2642   1      
2643   1        return 0;
2644   1      }
2645          #endif
2646          
2647          //=========================
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 44  

2648          // POSITION DIALOG
2649          //=========================
2650          //----------------------
2651          //manu->input->setting with RGB/HDMI->display->position
2652          //----------------------
2653          //-------------------------------------
2654          // position popup MENU
2655          //-------------------------------------
2656          
2657          //-----------------------------------------------------------------------------
2658          /**
2659          * Function
2660          *
2661          * Description
2662          * @param
2663          * @return
2664          */
2665          void proc_position_bg(void)
2666          {
2667   1      #if 1 //BK110512
2668   1        proc_menu_bg();
2669   1      #else
                //draw current value
                //draw background image.
                MenuDrawCurrImage(0,0);         //draw background image.
                if(curr_menu->focus != MENU_POSITION_INPUT_RED)   //2
                  MenuDrawCurrImage(0,MENU_POSITION_INPUT_GRAY);   //1
                MenuDrawCurrImage(0,curr_menu->focus);  //draw focused item
              #endif
2677   1        //read current value & update bar position.
2678   1        MenuFontOsdItemInit(0, OFF);
2679   1        MenuFontOsdItemInit(1, OFF);
2680   1        proc_position_H_digit();
2681   1        proc_position_V_digit();
2682   1      }
2683          void proc_position_box(void)
2684          {
2685   1        //move focus to OK
2686   1        curr_menu->select = curr_menu->focus = MENU_POSITION_OK;
2687   1          curr_menu_watchdog_focus = curr_menu->focus;
2688   1          curr_menu_watchdog_select = curr_menu->select;
2689   1        //redraw OK with focused. 
2690   1        MenuDrawCurrImage(0,0);
2691   1        MenuDrawCurrImage(0,MENU_POSITION_INPUT_GRAY);   //1
2692   1        MenuDrawCurrImage(0,curr_menu->focus);  
2693   1      }
2694          void proc_position_ok(void) 
2695          {
2696   1        //read base & update eeprom to 50.
2697   1        //save to EEPROM
2698   1      #if defined(SUPPORT_PC)
2699   1        ChangeRGBPosH();
2700   1        ChangeRGBPosV();
2701   1      #endif
2702   1        //GetRGBPosBase();
2703   1        //PcEepromUseHwValue(OFF,OFF,ON);
2704   1      
2705   1        //turn off FontOSD
2706   1        FOsdWinOffAll();
2707   1      
2708   1        pop_menu_stack_level();
2709   1        //redraw parent bg 
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 45  

2710   1        curr_menu->items[0].p();    
2711   1      }
2712          void proc_position_undo(void) 
2713          {
2714   1      //  BYTE value;
2715   1        //restore previous value
2716   1        //readback value freom EEPROM and do not update base.
2717   1      //  PcEepromSetEffect(OFF,OFF,ON);
2718   1      #ifdef SUPPORT_PC
2719   1        PCRestoreH();
2720   1        PCRestoreV();
2721   1      #endif
2722   1        //turn off FontOSD
2723   1        FOsdWinOffAll();
2724   1      
2725   1        pop_menu_stack_level();
2726   1        //redraw parent bg 
2727   1        curr_menu->items[0].p();    
2728   1      }
2729          
2730          //-----------------------------------------------------------------------------
2731          /**
2732          * Function
2733          *
2734          * Description
2735          * @param
2736          * @return
2737          */
2738          //BKFYI: If user type ENTER(or select BOX), curr_menu->select will be MENU_POSITION_OK.
2739          // If user press the left/right on the OK/CANCE, 
2740          // still curr_menu->select is not a MENU_POSITION_INPUT_RED. So it should be work.
2741          // Currently, we do not support to move back from OK/CANCEL to the position box.
2742          void proc_position_tsc(BYTE key)
2743          {
2744   1        MenuTurnOffCurrImage(curr_menu->focus);
2745   1        curr_menu->focus = MENU_POSITION_INPUT_RED;
2746   1        curr_menu_watchdog_focus = curr_menu->focus;
2747   1          if(curr_menu->select != MENU_POSITION_INPUT_RED) {
2748   2          MenuTurnOffCurrImage(MENU_POSITION_INPUT_GRAY);
2749   2          curr_menu->select = MENU_POSITION_INPUT_RED;
2750   2              curr_menu_watchdog_select = curr_menu->select;      
2751   2          MenuDrawCurrImage(0,curr_menu->focus);
2752   2        }
2753   1        MenuKeyInput_position_page(key);
2754   1      }
2755          
2756          void proc_position_left_tsc(void)
2757          {
2758   1        proc_position_tsc(NAVI_KEY_LEFT);
2759   1      }
2760          void proc_position_right_tsc(void)
2761          {
2762   1        proc_position_tsc(NAVI_KEY_RIGHT);
2763   1      }
2764          void proc_position_up_tsc(void)
2765          {
2766   1        proc_position_tsc(NAVI_KEY_UP);
2767   1      }
2768          void proc_position_down_tsc(void)
2769          {
2770   1        proc_position_tsc(NAVI_KEY_DOWN);
2771   1      }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 46  

2772          
2773          void proc_position_H_digit(void) 
2774          {
2775   1        BYTE value;
2776   1      #ifdef SUPPORT_PC
2777   1        value = GetRGBPosH();
2778   1      #endif
2779   1        dMenuPrintf("\n\rproc_position_H_digit %bd",value);
2780   1        MenuDrawSlideCurrValue(0, (short)value);  
2781   1      //test
2782   1      //  short value;
2783   1      //  value=-99;
2784   1      //  dMenuPrintf("\n\rproc_position_H_digit %d",value);
2785   1      //  MenuDrawSlideCurrValue(0, value); 
2786   1      }
2787          void proc_position_V_digit(void) 
2788          {
2789   1      #ifdef SUPPORT_PC
2790   1        BYTE value;
2791   1        value = GetRGBPosV();
2792   1        dMenuPrintf("\n\rproc_position_V_digit %bd",value);
2793   1        MenuDrawSlideCurrValue(1, (short)value);
2794   1      #endif
2795   1      //  short value;
2796   1      //  value = -2;
2797   1      //  dMenuPrintf("\n\rproc_position_V_digit %d",value);
2798   1      //  MenuDrawSlideCurrValue(1, value);
2799   1      }
2800          
2801          
2802          //=========================
2803          // DIALOG 
2804          //=========================
2805          
2806          //----------------------
2807          // main->input->adc->display->autoadj MENU
2808          //----------------------
2809          //-------------------------------------
2810          // autoadj popup MENU
2811          //-------------------------------------
2812          //-----------------------------------------------------------------------------
2813          /**
2814          * Function
2815          *
2816          * Description
2817          * @param
2818          * @return
2819          */
2820          void proc_autoadj_bg(void) 
2821          {
2822   1      #if 1 //BK110512
2823   1        proc_menu_bg();
2824   1      #else
                MenuDrawCurrImage(0,0);         //draw background image.
                MenuDrawCurrImage(0,curr_menu->focus);  //draw focused item
              #endif
2828   1      }
2829          void proc_autoadj_ok(void) 
2830          {
2831   1      #ifdef SUPPORT_PC
2832   1        //reset eeprom for curr mode
2833   1        PCResetCurrEEPROMMode();  //I need a mode
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 47  

2834   1      #endif
2835   1        //draw wait icon
2836   1        curr_menu->focus = MENU_AUTOADJ_WAIT;
2837   1        curr_menu_watchdog_focus = curr_menu->focus;
2838   1          curr_menu->items[MENU_AUTOADJ_WAIT].p();
2839   1      
2840   1      #ifdef SUPPORT_PC
2841   1        //autoadjust
2842   1        CheckAndSetPC();
2843   1      #endif
2844   1      
2845   1        //remove wait icon
2846   1        WaitVBlank(1);
2847   1        SOsd_Enable(SOSD_WIN0,OFF);
2848   1        SOsd_UpdateReg(SOSD_WIN0, SOSD_WIN0);
2849   1      
2850   1        //return to parent
2851   1        pop_menu_stack_level();
2852   1        //redraw parent bg 
2853   1        curr_menu->items[0].p();    
2854   1      }
2855          void proc_autoadj_cancel(void) 
2856          {
2857   1        pop_menu_stack_level();
2858   1        //redraw parent bg 
2859   1        curr_menu->items[0].p();    
2860   1      }
2861          
2862          void proc_autocolor_bg(void) 
2863          {
2864   1        proc_menu_bg();
2865   1      }
2866          void proc_autocolor_ok(void) 
2867          {
2868   1        //draw wait icon
2869   1        curr_menu->focus = MENU_AUTOADJ_WAIT;
2870   1        curr_menu_watchdog_focus = curr_menu->focus;
2871   1          curr_menu->items[MENU_AUTOADJ_WAIT].p();
2872   1      
2873   1      #if defined(SUPPORT_PC)
2874   1        //aoutocolor
2875   1        AutoTuneColor();
2876   1      #endif
2877   1      
2878   1        //remove wait icon
2879   1        WaitVBlank(1);
2880   1        SOsd_Enable(SOSD_WIN0,OFF);
2881   1        SOsd_UpdateReg(SOSD_WIN0, SOSD_WIN0);
2882   1      
2883   1      
2884   1        //return to parent
2885   1        pop_menu_stack_level();
2886   1        //redraw parent bg 
2887   1        curr_menu->items[0].p();    
2888   1      }
2889          void proc_autocolor_cancel(void) 
2890          {
2891   1        pop_menu_stack_level();
2892   1        //redraw parent bg 
2893   1        curr_menu->items[0].p();    
2894   1      }
2895          
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 48  

2896          //----------------------
2897          // main->system->restore MENU
2898          //----------------------
2899          //-------------------------------------
2900          // restore popup MENU
2901          //-------------------------------------
2902          //-----------------------------------------------------------------------------
2903          /**
2904          * Function
2905          *
2906          * Description
2907          * @param
2908          * @return
2909          */
2910          void proc_restore_bg(void) 
2911          {
2912   1        proc_menu_bg();
2913   1      }
2914          //restore all default value
2915          void proc_restore_ok(void) 
2916          {
2917   1        BYTE value;
2918   1      
2919   1        //read InputMain
2920   1        MenuInputMain = GetInputMain();
2921   1      
2922   1        //MenuPrintf("\n\rEE initialize........");
2923   1        ClearBasicEE();
2924   1        //SaveDebugLevelEE(0);
2925   1        //SaveFWRevEE( FWVER );
2926   1        //EE_PrintCurrInfo();
2927   1      
2928   1        //keep video source.
2929   1        SaveInputMainEE( MenuInputMain );
2930   1      
2931   1        //change HW.
2932   1        //------------------------
2933   1        // setup eeprom effect
2934   1        //------------------------
2935   1        SetImage(MenuInputMain);
2936   1      
2937   1        SetAspectHW(GetAspectModeEE());
2938   1        value = EE_Read(EEP_FLIP);
2939   1        if(value) {
2940   2            WriteTW88(REG201, ReadTW88(REG201) | 0x80);
2941   2        }
2942   1        OsdSetTime(EE_Read(EEP_OSD_TIMEOUT));
2943   1        OsdSetTransparent(EE_Read(EEP_OSD_TRANSPARENCY));
2944   1        BackLightSetRate(EE_Read(EEP_BACKLIGHT));
2945   1      #ifdef SUPPORT_TOUCH
2946   1        ReadCalibDataFromEE();
2947   1      #endif
2948   1      
2949   1        pop_menu_stack_level();
2950   1        //redraw parent bg 
2951   1        curr_menu->items[0].p();    
2952   1      }
2953          void proc_restore_undo(void) 
2954          {
2955   1        pop_menu_stack_level();
2956   1        //redraw parent bg 
2957   1        curr_menu->items[0].p();    
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 49  

2958   1      }
2959          
2960          //----------------------
2961          // main->system->sys_info MENU
2962          //----------------------
2963          //-------------------------------------
2964          // info popup MENU
2965          //-------------------------------------
2966          //-----------------------------------------------------------------------------
2967          /**
2968          * Function
2969          *
2970          * Description
2971          * @param
2972          * @return
2973          */
2974          
2975          void proc_info_bg(void) 
2976          {
2977   1      #if 1 //BK110512
2978   1        proc_menu_bg();
2979   1      #else
                MenuDrawCurrImage(0,0);         //draw background image.
                MenuDrawCurrImage(0,curr_menu->focus);  //draw focused item
                //display current info
              #endif
2984   1      
2985   1        //GetDviModeEE();
2986   1      
2987   1      }
2988          void proc_info_ok(void) 
2989          {
2990   1        //remove FOsd
2991   1        FOsdWinOffAll();
2992   1      
2993   1        pop_menu_stack_level();
2994   1        //redraw parent bg with focus 
2995   1        curr_menu->items[0].p();    
2996   1      }
2997          
2998          //----------------------
2999          // main->system->more->flip MENU
3000          //----------------------
3001          //-------------------------------------
3002          // flip popup MENU
3003          //-------------------------------------
3004          //-----------------------------------------------------------------------------
3005          /**
3006          * Function
3007          *
3008          * Description
3009          * @param
3010          * @return
3011          */
3012          
3013          void proc_flip_bg(void) 
3014          {
3015   1        proc_menu_bg();
3016   1      }
3017          void proc_flip_ok(void) 
3018          {
3019   1        BYTE value;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 50  

3020   1        //flip
3021   1        value=ReadTW88(REG201);
3022   1        if(value & 0x80) {
3023   2          WriteTW88(REG201, value & 0x7F);
3024   2          EE_Write(EEP_FLIP, 0);
3025   2        }
3026   1        else {
3027   2            WriteTW88(REG201, value | 0x80);
3028   2          EE_Write(EEP_FLIP, 1);
3029   2        }
3030   1        pop_menu_stack_level();
3031   1        //redraw parent bg 
3032   1        curr_menu->items[0].p();    
3033   1      }
3034          void proc_flip_undo(void) 
3035          {
3036   1        pop_menu_stack_level();
3037   1        //redraw parent bg 
3038   1        curr_menu->items[0].p();    
3039   1      }
3040          
3041          
3042          void proc_disp_resolution_bg(void)
3043          {
3044   1        proc_menu_bg();
3045   1      }
3046          void proc_disp_resolution_ok(void)
3047          {
3048   1        //remove FOsd
3049   1        FOsdWinOffAll();
3050   1      
3051   1        pop_menu_stack_level();
3052   1        //redraw parent bg with focus 
3053   1        curr_menu->items[0].p();    
3054   1      }
3055          
3056          
3057          //=========================
3058          // NOTE DIALOG
3059          //=========================
3060          //-----------------------------------------------------------------------------
3061          /**
3062          * Function
3063          *
3064          * Description
3065          * @param
3066          * @return
3067          */
3068          
3069          void proc_dvi_mode_bg(void)  
3070          {
3071   1        proc_menu_bg();
3072   1      }
3073          void proc_dvi_mode_24bit(void)   
3074          {
3075   1        curr_menu->select = MENU_DVI_MODE_24BIT;
3076   1          curr_menu_watchdog_select = curr_menu->select;
3077   1        curr_menu->focus = MENU_DVI_MODE_OK;  
3078   1        curr_menu_watchdog_focus = curr_menu->focus;
3079   1          curr_menu->items[0].p();
3080   1      }
3081          void proc_dvi_mode_16bit(void)   
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 51  

3082          {
3083   1        curr_menu->select = MENU_DVI_MODE_16BIT;
3084   1          curr_menu_watchdog_select = curr_menu->select;
3085   1        curr_menu->focus = MENU_DVI_MODE_OK;  
3086   1        curr_menu_watchdog_focus = curr_menu->focus;
3087   1          curr_menu->items[0].p();
3088   1      }
3089          void proc_dvi_mode_ok(void)  
3090          {
3091   1        SaveDviModeEE(curr_menu->select==MENU_DVI_MODE_24BIT ? 0 : 1);
3092   1        proc_return_icon();
3093   1      }
3094          void proc_dvi_mode_cancel(void)  
3095          {
3096   1        proc_return_icon();
3097   1      }
3098          
3099          void proc_hdmi_mode_bg(void)   
3100          {
3101   1        proc_menu_bg();
3102   1      }
3103          void proc_hdmi_mode_pc(void)   
3104          { 
3105   1        curr_menu->select = MENU_HDMI_MODE_PC;
3106   1          curr_menu_watchdog_select = curr_menu->select;
3107   1        curr_menu->focus = MENU_DVI_MODE_OK;  
3108   1        curr_menu_watchdog_focus = curr_menu->focus;
3109   1          SetImage(INPUT_HDMIPC);
3110   1        curr_menu->items[0].p();
3111   1      }
3112          void proc_hdmi_mode_tv(void)   
3113          {
3114   1        curr_menu->select = MENU_HDMI_MODE_TV;
3115   1          curr_menu_watchdog_select = curr_menu->select;
3116   1        curr_menu->focus = MENU_DVI_MODE_OK;  
3117   1        curr_menu_watchdog_focus = curr_menu->focus;
3118   1          SetImage(INPUT_HDMITV);
3119   1        curr_menu->items[0].p();
3120   1      }
3121          void proc_hdmi_mode_ok(void)   
3122          {
3123   1        BYTE hdmi_mode;
3124   1        
3125   1        hdmi_mode = curr_menu->select==MENU_HDMI_MODE_PC ? 0 : 1;
3126   1        if(GetHdmiModeEE() != hdmi_mode)
3127   1          SaveHdmiModeEE(hdmi_mode);
3128   1        if(cancel_recover_value != curr_menu->select) {
3129   2          if(curr_menu->select == MENU_HDMI_MODE_PC) 
3130   2            MenuInputMain = INPUT_HDMIPC;
3131   2          else
3132   2            MenuInputMain = INPUT_HDMITV;
3133   2          SetInputMain(MenuInputMain);
3134   2          SaveInputMainEE(MenuInputMain);
3135   2        }
3136   1        proc_return_icon();
3137   1      }
3138          void proc_hdmi_mode_cancel(void)   
3139          {
3140   1        //recover
3141   1        curr_menu->items[cancel_recover_value].p();
3142   1      
3143   1        proc_return_icon();
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 52  

3144   1      }
3145          
3146          //----------------------
3147          // main->system->more->aspect MENU
3148          //----------------------
3149          //-------------------------------------
3150          // aspect popup MENU
3151          //-------------------------------------
3152          //-----------------------------------------------------------------------------
3153          /**
3154          * Function
3155          *
3156          * Description
3157          * @param
3158          * @return
3159          */
3160          
3161          void proc_aspect_bg(void) 
3162          {
3163   1        proc_menu_bg();
3164   1      }
3165          void proc_aspect_normal(void) 
3166          {
3167   1        curr_menu->focus = MENU_ASPECT_OK;
3168   1        curr_menu_watchdog_focus = curr_menu->focus;
3169   1          curr_menu->select = MENU_ASPECT_NORMAL;
3170   1          curr_menu_watchdog_select = curr_menu->select;
3171   1        //MenuDrawCurrImage(0,0);
3172   1        //proc_menu_bg();
3173   1        MenuDrawCurrImage(0,curr_menu->focus);
3174   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total); //select
3175   1      
3176   1        SetAspectHW(curr_menu->select - curr_menu->item_start);
3177   1      }
3178          void proc_aspect_zoom(void) 
3179          {
3180   1        curr_menu->focus = MENU_ASPECT_OK;
3181   1        curr_menu_watchdog_focus = curr_menu->focus;
3182   1          curr_menu->select = MENU_ASPECT_ZOOM;
3183   1          curr_menu_watchdog_select = curr_menu->select;
3184   1        //MenuDrawCurrImage(0,0);
3185   1        //proc_menu_bg();
3186   1        MenuDrawCurrImage(0,curr_menu->focus);
3187   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total); //select
3188   1      
3189   1        SetAspectHW(curr_menu->select - curr_menu->item_start);
3190   1      }
3191          void proc_aspect_full(void) 
3192          {
3193   1        curr_menu->focus = MENU_ASPECT_OK;
3194   1        curr_menu_watchdog_focus = curr_menu->focus;
3195   1          curr_menu->select = MENU_ASPECT_FULL;
3196   1          curr_menu_watchdog_select = curr_menu->select;
3197   1        //MenuDrawCurrImage(0,0);
3198   1        //proc_menu_bg();
3199   1        MenuDrawCurrImage(0,curr_menu->focus);
3200   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total); //select
3201   1        //BKTODO110516. Change HW
3202   1        SetAspectHW(curr_menu->select - curr_menu->item_start);
3203   1      }
3204          void proc_aspect_pano(void) 
3205          {
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 53  

3206   1        curr_menu->focus = MENU_ASPECT_OK;
3207   1        curr_menu_watchdog_focus = curr_menu->focus;
3208   1          curr_menu->select = MENU_ASPECT_PANO;
3209   1          curr_menu_watchdog_select = curr_menu->select;
3210   1        //MenuDrawCurrImage(0,0);
3211   1        //proc_menu_bg();
3212   1        MenuDrawCurrImage(0,curr_menu->focus);
3213   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total); //select
3214   1        //BKTODO110516. Change HW
3215   1        SetAspectHW(curr_menu->select - curr_menu->item_start);
3216   1      }
3217          void proc_aspect_ok(void) 
3218          {
3219   1        if(cancel_recover_value != curr_menu->select) {
3220   2          //save to EE.
3221   2          SaveAspectModeEE(curr_menu->select-curr_menu->item_start);
3222   2      
3223   2          MenuInputMain = GetInputMain();
3224   2      
3225   2          //change input
3226   2          SetInputMain(0xff); //InputMain = 0xff;     // start with saved input
3227   2          SpiOsdEnable(OFF);
3228   2      
3229   2          switch(MenuInputMain) {
3230   3          case INPUT_CVBS:  ChangeCVBS();   break;
3231   3          case INPUT_SVIDEO:  ChangeSVIDEO();   break;
3232   3      #ifdef SUPPORT_COMPONENT
3233   3          case INPUT_COMP:  ChangeComponent();  break;
3234   3      #endif
3235   3      #ifdef SUPPORT_PC
3236   3          case INPUT_PC:    ChangePC();     break;
3237   3      #endif
3238   3      #ifdef SUPPORT_LVDSRX
3239   3          case INPUT_LVDS:  ChangeLVDSRx();   break;
3240   3      #endif
3241   3          case INPUT_HDMIPC:  
3242   3          case INPUT_HDMITV:  ChangeHDMI();   break;
3243   3      #ifdef SUPPORT_BT656_LOOP
3244   3          case INPUT_BT656: ChangeBT656Loop();    break;
3245   3      #endif
3246   3          }   
3247   2          //??SpiOsdSetDeValue();
3248   2          //??FOsdSetDeValue();
3249   2        
3250   2          SpiOsdEnable(ON);
3251   2        }
3252   1        pop_menu_stack_level();
3253   1        //redraw parent bg 
3254   1        curr_menu->items[0].p();    
3255   1      }
3256          void proc_aspect_cancel(void) 
3257          {
3258   1        //recover
3259   1        curr_menu->items[cancel_recover_value].p();
3260   1      
3261   1        pop_menu_stack_level();
3262   1        //redraw parent bg 
3263   1        curr_menu->items[0].p();    
3264   1      }
3265          
3266          //=========================
3267          // LIST MENU
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 54  

3268          //=========================
3269          //-----------------------------------------------------------------------------
3270          /**
3271          * Function
3272          *
3273          * Description
3274          * @param
3275          * @return
3276          */
3277          void proc_menu_list_return(void)
3278          {
3279   1        if(curr_menu==&menu_slider_page || curr_menu==&menu_slider3_page) {
3280   2          proc_slider_undo();
3281   2        }
3282   1        else if(curr_menu==&menu_position_page) {
3283   2          proc_position_undo();
3284   2        }
3285   1        else if(curr_menu==&menu_autoadj_page) {
3286   2          proc_autoadj_cancel();
3287   2        }
3288   1        else if(curr_menu==&menu_autocolor_page) {
3289   2          proc_autocolor_cancel();
3290   2        }
3291   1        else if(curr_menu==&menu_sys_info_page) {
3292   2          proc_info_ok();
3293   2        }
3294   1        else if(curr_menu==&menu_disp_resolution_page) {
3295   2          proc_disp_resolution_ok();
3296   2        }
3297   1        else {
3298   2          proc_return_icon();
3299   2        }
3300   1      }
3301          
3302          
3303          //=====================================
3304          // YUV List PAGE
3305          //
3306          // path:main->input->set
3307          //=====================================
3308          
3309          //----------------------
3310          // internal decoder image Select MENU
3311          //----------------------
3312          //-----------------------------------------------------------------------------
3313          /**
3314          * Function
3315          *
3316          * Description
3317          * @param
3318          * @return
3319          */
3320          
3321          void proc_yuv_list_bg(void)
3322          { 
3323   1        proc_menu_bg();
3324   1      }
3325          
3326          void proc_yuv_list_bright(void)
3327          {
3328   1        push_menu_stack_level();
3329   1        
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 55  

3330   1        curr_menu = &menu_slider_page;
3331   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3332   1        curr_menu_watchdog_focus = curr_menu->focus;
3333   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
3334   1          curr_menu_watchdog_select = curr_menu->select;
3335   1        InitSlideCtrl(&img_slide_bright, 
3336   1          &ImgAdjGetBrightnessY,
3337   1          &ImgAdjSetBrightnessY,
3338   1          &ImgAdjSetBrightnessY,
3339   1          &ImgAdjChangeBrightnessY);
3340   1      
3341   1        curr_menu->items[0].p();
3342   1      }
3343          void proc_yuv_list_contrast(void)
3344          {
3345   1        push_menu_stack_level();
3346   1          
3347   1        curr_menu = &menu_slider_page;
3348   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3349   1        curr_menu_watchdog_focus = curr_menu->focus;
3350   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
3351   1          curr_menu_watchdog_select = curr_menu->select;
3352   1        InitSlideCtrl(&img_slide_contrast, 
3353   1          &ImgAdjGetContrastY,
3354   1          &ImgAdjSetContrastY,
3355   1          &ImgAdjSetContrastY,
3356   1          &ImgAdjChangeContrastY);
3357   1      
3358   1        curr_menu->items[0].p();
3359   1      } 
3360          void proc_yuv_list_hue(void)    
3361          {
3362   1        push_menu_stack_level();
3363   1        
3364   1        curr_menu = &menu_slider_page;
3365   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3366   1        curr_menu_watchdog_focus = curr_menu->focus;
3367   1          InitSlideCtrl(&img_slide_hue, 
3368   1          &ImgAdjGetHUE,
3369   1          &ImgAdjVaryHUE,
3370   1          &ImgAdjSetHUE,
3371   1          &ImgAdjChangeHUE);
3372   1        curr_menu->items[0].p();
3373   1      }
3374          
3375          void proc_yuv_list_saturate(void) 
3376          {
3377   1        push_menu_stack_level();
3378   1        
3379   1        curr_menu = &menu_slider_page;
3380   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3381   1        curr_menu_watchdog_focus = curr_menu->focus;
3382   1          InitSlideCtrl(&img_slide_saturate, 
3383   1          &ImgAdjGetSaturation,
3384   1          &ImgAdjSetSaturation,
3385   1          &ImgAdjSetSaturation,
3386   1          &ImgAdjChangeSaturation);
3387   1      
3388   1        curr_menu->items[0].p();
3389   1      }
3390          void proc_yuv_list_sharp(void)
3391          {
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 56  

3392   1        push_menu_stack_level();
3393   1        
3394   1        curr_menu = &menu_slider_page;
3395   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3396   1        curr_menu_watchdog_focus = curr_menu->focus;
3397   1          InitSlideCtrl(&img_slide_sharp, 
3398   1          &ImgAdjGetSharpness,
3399   1          &ImgAdjSetSharpness,
3400   1          &ImgAdjSetSharpness,
3401   1          &ImgAdjChangeSharpness);
3402   1      
3403   1        curr_menu->items[0].p();
3404   1      }
3405          
3406          //=====================================
3407          // RGB List PAGE
3408          //
3409          // path:main->input->set
3410          //=====================================
3411          //-----------------------------------------------------------------------------
3412          /**
3413          * Function
3414          *
3415          * Description
3416          * @param
3417          * @return
3418          */
3419          
3420          void proc_rgb_list_bg(void) 
3421          {
3422   1        proc_menu_bg();
3423   1      }
3424          
3425          void proc_rgb_list_bright(void) 
3426          {
3427   1        push_menu_stack_level();
3428   1      
3429   1        curr_menu = &menu_slider_page;
3430   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3431   1        curr_menu_watchdog_focus = curr_menu->focus;
3432   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
3433   1          curr_menu_watchdog_select = curr_menu->select;
3434   1        InitSlideCtrl(&img_slide_bright,
3435   1          &ImgAdjGetBrightnessY,
3436   1          &ImgAdjSetBrightnessY,
3437   1          &ImgAdjSetBrightnessY,
3438   1          &ImgAdjChangeBrightnessY);
3439   1        curr_menu->items[0].p();
3440   1      }
3441          void proc_rgb_list_contrast(void) 
3442          {
3443   1        push_menu_stack_level();
3444   1        
3445   1        curr_menu = &menu_slider_page;
3446   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3447   1        curr_menu_watchdog_focus = curr_menu->focus;
3448   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
3449   1          curr_menu_watchdog_select = curr_menu->select;
3450   1        InitSlideCtrl(&img_slide_contrast, 
3451   1          &ImgAdjGetContrastY,
3452   1          &ImgAdjSetContrastY,
3453   1          &ImgAdjSetContrastY,
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 57  

3454   1          &ImgAdjChangeContrastY);
3455   1        curr_menu->items[0].p();
3456   1      }
3457          void proc_rgb_list_color(void)
3458          {
3459   1        push_menu_stack_level();
3460   1      
3461   1        curr_menu = &menu_slider3_page;
3462   1        curr_menu->select = curr_menu->focus = SLIDE3_1;
3463   1          curr_menu_watchdog_focus = curr_menu->focus;
3464   1          curr_menu_watchdog_select = curr_menu->select;
3465   1        InitSlide3Ctrl(&img_slide_rgb, 
3466   1          &ImgAdjGetContrastRGB,
3467   1          &ImgAdjSetContrastRGB,
3468   1          &ImgAdjSetContrastRGB,
3469   1          &ImgAdjChangeContrastRGB);
3470   1        curr_menu->items[0].p();
3471   1      }
3472          
3473          //=====================================
3474          // AnalogPC List PAGE
3475          //
3476          // path:main->input->set
3477          //=====================================
3478          //----------------------
3479          // main->input->image(ADC) MENU
3480          //----------------------
3481          
3482          //----------------------
3483          // ADC image Select MENU
3484          //----------------------
3485          //-----------------------------------------------------------------------------
3486          /**
3487          * Function
3488          *
3489          * Description
3490          * @param
3491          * @return
3492          */
3493          
3494          void proc_apc_list_bg(void) 
3495          {
3496   1        proc_menu_bg();
3497   1      }
3498          
3499          void proc_apc_list_bright(void) 
3500          {
3501   1        push_menu_stack_level();
3502   1          
3503   1        curr_menu = &menu_slider_page;
3504   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3505   1        curr_menu_watchdog_focus = curr_menu->focus;
3506   1          InitSlideCtrl(&img_slide_bright, 
3507   1          &ImgAdjGetBrightnessY,
3508   1          &ImgAdjSetBrightnessY,
3509   1          &ImgAdjSetBrightnessY,
3510   1          &ImgAdjChangeBrightnessY);
3511   1      
3512   1        curr_menu->items[0].p();
3513   1      }
3514          void proc_apc_list_contrast(void) 
3515          {
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 58  

3516   1        push_menu_stack_level();
3517   1        
3518   1        curr_menu = &menu_slider_page;
3519   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3520   1        curr_menu_watchdog_focus = curr_menu->focus;
3521   1          InitSlideCtrl(&img_slide_contrast, 
3522   1          &ImgAdjGetContrastY,
3523   1          &ImgAdjSetContrastY,
3524   1          &ImgAdjSetContrastY,
3525   1          &ImgAdjChangeContrastY);
3526   1      
3527   1        curr_menu->items[0].p();
3528   1      }
3529          
3530          void proc_apc_list_color(void) 
3531          {
3532   1        push_menu_stack_level();
3533   1      
3534   1        curr_menu = &menu_slider3_page;
3535   1        curr_menu->select = curr_menu->focus = SLIDE3_1;
3536   1          curr_menu_watchdog_focus = curr_menu->focus;
3537   1          curr_menu_watchdog_select = curr_menu->select;
3538   1        InitSlide3Ctrl(&img_slide_rgb, 
3539   1          &ImgAdjGetContrastRGB,
3540   1          &ImgAdjSetContrastRGB,
3541   1          &ImgAdjSetContrastRGB,
3542   1          &ImgAdjChangeContrastRGB);
3543   1      
3544   1        curr_menu->items[0].p();
3545   1      }
3546          
3547          void proc_apc_list_position(void) 
3548          {
3549   1        push_menu_stack_level();
3550   1        
3551   1        curr_menu = &menu_position_page;
3552   1        curr_menu->select = curr_menu->focus = MENU_POSITION_INPUT_RED;
3553   1          curr_menu_watchdog_focus = curr_menu->focus;
3554   1          curr_menu_watchdog_select = curr_menu->select;
3555   1      
3556   1        curr_menu->items[0].p();
3557   1      }   
3558          void proc_apc_list_phase(void) 
3559          {
3560   1        push_menu_stack_level();
3561   1        aRGB_SetFilterBandwidth(0, 0);
3562   1        
3563   1        curr_menu = &menu_slider_page;
3564   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3565   1          curr_menu_watchdog_focus = curr_menu->focus;
3566   1      #if defined(SUPPORT_PC)
3567   1        InitSlideCtrl(&img_slide_phase,
3568   1          &GetaRGB_Phase,
3569   1          &VaryaRGB_Phase,
3570   1          &SetaRGB_Phase,
3571   1          &ChangeaRGB_Phase);
3572   1      #endif
3573   1        curr_menu->items[0].p();
3574   1      }
3575              
3576          void proc_apc_list_clock(void) 
3577          {
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 59  

3578   1        push_menu_stack_level();
3579   1        
3580   1        WriteTW88(REG003, 0xFE);  //disable ISR.
3581   1        aRGB_SetFilterBandwidth(0, 0);
3582   1      
3583   1      
3584   1        curr_menu = &menu_slider_page;
3585   1        curr_menu->select = curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3586   1          curr_menu_watchdog_focus = curr_menu->focus;
3587   1          curr_menu_watchdog_select = curr_menu->select;
3588   1      #if defined(SUPPORT_PC) 
3589   1        InitSlideCtrl(&img_slide_clock, 
3590   1          &GetaRGB_Clock,
3591   1          &SetaRGB_Clock,
3592   1          &SetaRGB_Clock,
3593   1          &ChangeaRGB_Clock);
3594   1      #endif
3595   1        curr_menu->items[0].p();
3596   1      }   
3597          
3598          //update PixelClock,Phase,Position
3599          void proc_apc_list_autoadj(void) 
3600          {
3601   1        push_menu_stack_level();
3602   1      
3603   1        curr_menu = &menu_autoadj_page;
3604   1        curr_menu->focus = MENU_AUTOADJ_OK;     //move to OK
3605   1        curr_menu_watchdog_focus = curr_menu->focus;
3606   1          curr_menu->items[0].p();
3607   1      }
3608                
3609          void proc_apc_list_autocolor(void) 
3610          {
3611   1        push_menu_stack_level();
3612   1      
3613   1        curr_menu = &menu_autocolor_page;
3614   1        curr_menu->focus = MENU_AUTOCOLOR_OK;   //move to OK
3615   1        curr_menu_watchdog_focus = curr_menu->focus;
3616   1          curr_menu->items[0].p();
3617   1      }     
3618          
3619          
3620          //=====================================
3621          // HDMI List PAGE
3622          //
3623          // path:main->input->set
3624          //=====================================
3625          //-----------------------------------------------------------------------------
3626          /**
3627          * Function
3628          *
3629          * Description
3630          * @param
3631          * @return
3632          */
3633          void proc_hdmi_list_bg(void) 
3634          {
3635   1        proc_menu_bg();
3636   1      }
3637          void proc_hdmi_list_mode(void)
3638          {
3639   1        push_menu_stack_level();
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 60  

3640   1      
3641   1        curr_menu = &menu_hdmi_mode_page; //BK160209
3642   1        curr_menu->focus = curr_menu->item_start+(MenuInputMain-INPUT_HDMIPC); //GetHdmiModeEE();
3643   1        curr_menu_watchdog_focus = curr_menu->focus;
3644   1          curr_menu->select = curr_menu->focus;
3645   1          curr_menu_watchdog_select = curr_menu->select;
3646   1        cancel_recover_value = curr_menu->select;
3647   1        curr_menu->items[0].p();
3648   1      }
3649          void proc_hdmi_list_setting(void)
3650          {
3651   1        push_menu_stack_level();
3652   1      
3653   1        //if(GetHdmiModeEE()==0)  curr_menu = &menu_rgb_list_page;
3654   1        //else          curr_menu = &menu_yuv_list_page;
3655   1        if(MenuInputMain==INPUT_HDMIPC) curr_menu = &menu_rgb_list_page;  //BK160209
3656   1        else              curr_menu = &menu_yuv_list_page;  //BK160209
3657   1      
3658   1        curr_menu->focus = curr_menu->item_start;         //start from ...
3659   1        curr_menu_watchdog_focus = curr_menu->focus;
3660   1      
3661   1        curr_menu->items[0].p();        // call new background draw routine
3662   1      }
3663          
3664          
3665          #if 0
              void proc_hdmipc_list_bg(void) 
              {
                proc_menu_bg();
              }
              void proc_hdmipc_list_bright(void)
              {
                push_menu_stack_level();
              
                curr_menu = &menu_slider3_page;  //BK160209
                curr_menu->select = curr_menu->focus = SLIDE3_1;
                  curr_menu_watchdog_focus = curr_menu->focus;
                  curr_menu_watchdog_select = curr_menu->select;
                InitSlide3Ctrl(&img_slide_bright, 
                  &ImgAdjGetBrightnessRGB,
                  &ImgAdjSetBrightnessRGB,
                  &ImgAdjChangeBrightnessRGB);
                curr_menu->items[0].p();
              }
              void proc_hdmipc_list_contrast(void)
              {
                push_menu_stack_level();
              
                curr_menu = &menu_slider3_page;  //BK160209
                curr_menu->select = curr_menu->focus = SLIDE3_1;
                  curr_menu_watchdog_focus = curr_menu->focus;
                  curr_menu_watchdog_select = curr_menu->select;
                InitSlide3Ctrl(&img_slide_contrast, 
                  &ImgAdjGetContrastRGB,
                  &ImgAdjSetContrastRGB,
                  &ImgAdjChangeContrastRGB);
                curr_menu->items[0].p();
              }
              
              void proc_hdmipc_list_phase(void)
              {
                push_menu_stack_level();
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 61  

                
                curr_menu = &menu_slider_page;  //BK160209
                curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
                curr_menu_watchdog_focus = curr_menu->focus;
                  curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
                  curr_menu_watchdog_select = curr_menu->select;
              
                InitSlideCtrl(&img_slide_phase,
                  &GetHdmiPhase,
                  &SetHdmiPhase,
                  &ChangeHdmiPhase);
              
                curr_menu->items[0].p();
              }
              #endif
3717          
3718          //----------------------
3719          // main->system->more->OSD MENU
3720          //----------------------
3721          //-------------------------------------
3722          // osd MENU
3723          //-------------------------------------
3724          //-----------------------------------------------------------------------------
3725          /**
3726          * Function
3727          *
3728          * Description
3729          * @param
3730          * @return
3731          */
3732          
3733          void proc_osd_bg(void) 
3734          {
3735   1        proc_menu_bg();
3736   1      }
3737          //void proc_osd_lang(void) {}
3738          
3739          void proc_osd_time(void) 
3740          {
3741   1        push_menu_stack_level();
3742   1      
3743   1        curr_menu = &menu_slider_page;  //BK160209
3744   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3745   1        curr_menu_watchdog_focus = curr_menu->focus;
3746   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
3747   1          curr_menu_watchdog_select = curr_menu->select;
3748   1        //ref:menu_value_timeout = EE_Read(EEP_OSD_TIMEOUT);
3749   1        //BKTODO: Need callback functions
3750   1        InitSlideCtrl(&img_slide_timer, &OsdGetTime,&OsdVaryTime,&OsdSetTime,&OsdChangeTime); //BKTODO
3751   1      
3752   1        curr_menu->items[0].p();    
3753   1      }
3754          void proc_osd_trans(void) 
3755          {
3756   1        push_menu_stack_level();
3757   1      
3758   1        curr_menu = &menu_slider_page;  //BK160209
3759   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
3760   1        curr_menu_watchdog_focus = curr_menu->focus;
3761   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
3762   1          curr_menu_watchdog_select = curr_menu->select;
3763   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 62  

3764   1        //ref:menu_value_transparency = EE_Read(EEP_OSD_TRANSPARENCY);
3765   1        //BKTODO: Need callback functions
3766   1      
3767   1      
3768   1        OsdSetTransparent(EE_Read(EEP_OSD_TRANSPARENCY));
3769   1        InitSlideCtrl(&img_slide_trans, &OsdGetTransparent,&OsdSetTransparent,&OsdSetTransparent,&OsdChangeTransp
             -arent);    //BKTODO: init slide control
3770   1      
3771   1        curr_menu->items[0].p();    
3772   1      }
3773          
3774          
3775          
3776          
3777           
3778          //=========================
3779          // PAGE MENU
3780          //=========================
3781          //=====================================
3782          // MAIN PAGE
3783          //=====================================
3784          //-------------------------------------
3785          // main MENU
3786          //-------------------------------------
3787          //desc: called from MenuStart()
3788          //  draw background image, focus 1 intem if not use USE_TOUCH
3789          //  use curr_menu.item
3790          //-----------------------------------------------------------------------------
3791          /**
3792          * Function
3793          *
3794          * Description
3795          * @param
3796          * @return
3797          */
3798          void proc_main_bg(void)
3799          { 
3800   1        proc_menu_bg();
3801   1      }
3802          
3803          //move main_page->input page
3804          void proc_main_input(void)
3805          {
3806   1        push_menu_stack_level();    //save current menu page
3807   1        curr_menu = &menu_input_page; //move to main->input
3808   1      
3809   1        MenuInputMain = GetInputMain();
3810   1        switch(MenuInputMain) {
3811   2        case INPUT_CVBS:    curr_menu->focus = MENU_SRC_CVBS;   break;
3812   2        case INPUT_SVIDEO:    curr_menu->focus = MENU_SRC_SVIDEO;   break;
3813   2        case INPUT_COMP:    curr_menu->focus = MENU_SRC_YPBPR;    break;
3814   2        case INPUT_PC:      curr_menu->focus = MENU_SRC_PC;     break;
3815   2        case INPUT_LVDS:    curr_menu->focus = MENU_SRC_LVDS;   break;
3816   2        case INPUT_HDMIPC:    
3817   2        case INPUT_HDMITV:    curr_menu->focus = MENU_SRC_HDMI;   break;
3818   2        case INPUT_BT656:   curr_menu->focus = MENU_SRC_BT656;    break;
3819   2        default:        curr_menu->focus = MENU_SRC_CVBS;   break;
3820   2        }
3821   1          curr_menu_watchdog_focus = curr_menu->focus;
3822   1        curr_menu->select = curr_menu->focus;
3823   1          curr_menu_watchdog_select = curr_menu->select;
3824   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 63  

3825   1        curr_menu->items[0].p();    //draw background, select focus and draw the focused item.
3826   1      }
3827          //move main_page->audio_page
3828          void proc_main_audio(void)
3829          {
3830   1        push_menu_stack_level();
3831   1        curr_menu = &menu_audio_page; //BK160209
3832   1        curr_menu->focus = MENU_AUDIO_RETURN;
3833   1          curr_menu_watchdog_focus = curr_menu->focus;
3834   1        curr_menu->items[0].p();
3835   1      }
3836          //move main_page->system_page
3837          void proc_main_system(void)
3838          {
3839   1        push_menu_stack_level();    //save current menu page
3840   1        curr_menu = &menu_system_page;  //move to main->system   //BK160209
3841   1      
3842   1        curr_menu->focus = MENU_SYSTEM_DISPLAY; //start at display first
3843   1          curr_menu_watchdog_focus = curr_menu->focus;
3844   1        curr_menu->select = curr_menu->focus;
3845   1          curr_menu_watchdog_select = curr_menu->select;
3846   1        curr_menu->items[0].p();    //draw background and focused item
3847   1      }
3848          //move main_page->gps_page
3849          void proc_main_gps(void)
3850          {
3851   1        push_menu_stack_level();
3852   1        curr_menu = &menu_gps_page;  //BK160209
3853   1        curr_menu->focus = MENU_GPS_RETURN;
3854   1          curr_menu_watchdog_focus = curr_menu->focus;
3855   1        curr_menu->items[0].p();
3856   1      }
3857          //move main_page->phone_page
3858          void proc_main_phone(void)
3859          {
3860   1        push_menu_stack_level();
3861   1        curr_menu = &menu_phone_page;  //BK160209
3862   1        curr_menu->focus = MENU_PHONE_RETURN;
3863   1          curr_menu_watchdog_focus = curr_menu->focus;
3864   1        curr_menu->items[0].p();
3865   1      }
3866          //move main_page->carinfo_page
3867          void proc_main_info(void)
3868          {
3869   1        push_menu_stack_level();
3870   1        curr_menu = &menu_carinfo_page;    //BK160209
3871   1        curr_menu->focus = MENU_CARINFO_RETURN;
3872   1          curr_menu_watchdog_focus = curr_menu->focus;
3873   1        curr_menu->items[0].p();
3874   1      }
3875          
3876          
3877          //=====================================
3878          // Video INPUT PAGE
3879          //
3880          // path:main->input
3881          //=====================================
3882          
3883          //----------------------
3884          // video input background 
3885          //----------------------
3886          //-----------------------------------------------------------------------------
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 64  

3887          /**
3888          * Function
3889          *
3890          * Description
3891          * @param
3892          * @return
3893          */
3894          void proc_input_bg(void)
3895          {
3896   1      #if 0
                BYTE hdmi_not_detected; //BKTODO
                hdmi_not_detected = 1;
              //  curr_menu->deactivated = 0;
              #endif
3901   1      
3902   1        proc_menu_bg();
3903   1      
3904   1      #if 0
                //if I have a deactived item
                if(hdmi_not_detected) {
                  //let curr_menu know it.
                  //BKTODO: You have to clear when you update curr_menu.
                  curr_menu->deactivated = MENU_SRC_HDMI;
                  //draw deactivated screen
                  MenuDrawDeactivatedItemImage(SOSD_WIN7, MENU_SRC_HDMI);
                }
              #endif
3914   1      }
3915          //select cvbs
3916          void proc_input_cvbs(void)
3917          {
3918   1        MenuInputMain = GetInputMain();
3919   1        if(MenuInputMain != INPUT_CVBS) {
3920   2      
3921   2          //change input
3922   2          SpiOsdEnable(OFF);  //-->27M
3923   2        
3924   2          //change input & update EE & Set Image.
3925   2          MenuNoSignal=ChangeCVBS();  //-->27M
3926   2        
3927   2          //??SpiOsdSetDeValue();
3928   2          //??FOsdSetDeValue();
3929   2        
3930   2          SpiOsdEnable(ON); //-->108M
3931   2        }
3932   1        //draw the select Note.
3933   1        curr_menu->select = curr_menu->focus;
3934   1          curr_menu_watchdog_select = curr_menu->select;
3935   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
3936   1      
3937   1        //move to return.
3938   1        //curr_menu->focus = MENU_SRC_RETURN;
3939   1          //curr_menu_watchdog_focus = curr_menu->focus;
3940   1        MenuDrawCurrImage(0,curr_menu->focus);
3941   1      }
3942          //select svideo
3943          void proc_input_svideo(void)
3944          {
3945   1        MenuInputMain = GetInputMain();
3946   1        if(MenuInputMain != INPUT_SVIDEO) {
3947   2      
3948   2          //change input
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 65  

3949   2          SpiOsdEnable(OFF);
3950   2        
3951   2          //change input & update EE & Set Image.
3952   2          MenuNoSignal=ChangeSVIDEO();
3953   2        
3954   2          //??SpiOsdSetDeValue();
3955   2          //??FOsdSetDeValue();
3956   2        
3957   2          SpiOsdEnable(ON);
3958   2        }
3959   1        //draw the select Note.
3960   1        curr_menu->select = curr_menu->focus;
3961   1          curr_menu_watchdog_select = curr_menu->select;
3962   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
3963   1      
3964   1        //curr_menu->focus = MENU_SRC_RETURN;
3965   1          //curr_menu_watchdog_focus = curr_menu->focus;
3966   1        MenuDrawCurrImage(0,curr_menu->focus);
3967   1      }
3968          //select component
3969          void proc_input_ypbpr(void)
3970          {
3971   1        MenuInputMain = GetInputMain();
3972   1        if(MenuInputMain != INPUT_COMP) {
3973   2      
3974   2          //change input
3975   2          SpiOsdEnable(OFF);
3976   2        
3977   2      #ifdef SUPPORT_COMPONENT
3978   2          //change input & update EE & Set Image.
3979   2          MenuNoSignal=ChangeComponent();
3980   2      #else
                  MenuNoSignal=2;
              #endif
3983   2        
3984   2          //??SpiOsdSetDeValue();
3985   2          //??FOsdSetDeValue();
3986   2        
3987   2          SpiOsdEnable(ON);
3988   2        }
3989   1        //draw the select Note
3990   1        curr_menu->select = curr_menu->focus;
3991   1          curr_menu_watchdog_select = curr_menu->select;
3992   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
3993   1      
3994   1        //curr_menu->focus = MENU_SRC_RETURN;
3995   1          //curr_menu_watchdog_focus = curr_menu->focus;
3996   1        MenuDrawCurrImage(0,curr_menu->focus);
3997   1      }
3998          //select pc
3999          void proc_input_pc(void)
4000          {
4001   1        MenuInputMain = GetInputMain();
4002   1        if(MenuInputMain != INPUT_PC) {
4003   2      
4004   2          //change input
4005   2          SpiOsdEnable(OFF);
4006   2        
4007   2      #ifdef SUPPORT_PC
4008   2          //change input & update EE & Set Image.
4009   2          MenuNoSignal=ChangePC();
4010   2      #else
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 66  

                  MenuNoSignal= 2;    
              #endif  
4013   2          //??SpiOsdSetDeValue();
4014   2          //??FOsdSetDeValue();
4015   2        
4016   2          SpiOsdEnable(ON);
4017   2        }
4018   1        //draw the select Note
4019   1        curr_menu->select = curr_menu->focus;
4020   1          curr_menu_watchdog_select = curr_menu->select;
4021   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
4022   1      
4023   1        //curr_menu->focus = MENU_SRC_RETURN;
4024   1          //curr_menu_watchdog_focus = curr_menu->focus;
4025   1        MenuDrawCurrImage(0,curr_menu->focus);
4026   1      }
4027          //select dvi
4028          //#ifdef SUPPORT_DVI
4029          //void proc_input_dvi(void)
4030          //{
4031          //  MenuInputMain = GetInputMain();
4032          //  if(MenuInputMain != INPUT_DVI) {
4033          //
4034          //    //change input
4035          //    SpiOsdEnable(OFF);
4036          //  
4037          //    //change input & update EE & Set Image.
4038          //    MenuNoSignal=ChangeDVI();
4039          //  
4040          //    //??SpiOsdSetDeValue();
4041          //    //??FOsdSetDeValue();
4042          //  
4043          //    SpiOsdEnable(ON);
4044          //  }
4045          //  //draw the select Note
4046          //  curr_menu->select = curr_menu->focus;
4047          //  curr_menu_watchdog_select = curr_menu->select;
4048          //  MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
4049          //
4050          //  //curr_menu->focus = MENU_SRC_RETURN;
4051          //  //curr_menu_watchdog_focus = curr_menu->focus;
4052          //  MenuDrawCurrImage(0,curr_menu->focus);
4053          //}
4054          //#endif
4055          
4056          void proc_input_lvds(void)
4057          {
4058   1        MenuInputMain = GetInputMain();
4059   1        if(MenuInputMain != INPUT_LVDS) {
4060   2      
4061   2          //change input
4062   2          SpiOsdEnable(OFF);
4063   2        
4064   2      #ifdef SUPPORT_LVDSRX
4065   2          //change input & update EE & Set Image.
4066   2          MenuNoSignal=ChangeLVDSRx();
4067   2      #endif  
4068   2          //??SpiOsdSetDeValue();
4069   2          //??FOsdSetDeValue();
4070   2        
4071   2          SpiOsdEnable(ON);
4072   2        }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 67  

4073   1        //draw the select Note
4074   1        curr_menu->select = curr_menu->focus;
4075   1          curr_menu_watchdog_select = curr_menu->select;
4076   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
4077   1      
4078   1        //curr_menu->focus = MENU_SRC_RETURN;
4079   1        //curr_menu_watchdog_focus = curr_menu->focus;
4080   1          MenuDrawCurrImage(0,curr_menu->focus);
4081   1      }
4082          
4083          
4084          //select hdmi
4085          void proc_input_hdmi(void)
4086          {
4087   1        MenuInputMain = GetInputMain();
4088   1        if(MenuInputMain != INPUT_HDMIPC && MenuInputMain != INPUT_HDMITV) {
4089   2      
4090   2          //change input
4091   2      
4092   2          SpiOsdEnable(OFF);
4093   2        
4094   2          //change input & update EE & Set Image.
4095   2          MenuNoSignal=ChangeHDMI();
4096   2        
4097   2          //??SpiOsdSetDeValue();
4098   2          //??FOsdSetDeValue();
4099   2        
4100   2          SpiOsdEnable(ON);
4101   2        }
4102   1        //draw the select Note
4103   1        curr_menu->select = curr_menu->focus;
4104   1          curr_menu_watchdog_select = curr_menu->select;
4105   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
4106   1      
4107   1        //curr_menu->focus = MENU_SRC_RETURN;
4108   1          //curr_menu_watchdog_focus = curr_menu->focus;
4109   1        MenuDrawCurrImage(0,curr_menu->focus);
4110   1      }
4111          //select BT656(ExternalCVBS)
4112          void proc_input_bt656(void)
4113          {
4114   1      #ifdef SUPPORT_BT656_LOOP
4115   1        MenuInputMain = GetInputMain();
4116   1        if(MenuInputMain != INPUT_BT656) {
4117   2          //change input
4118   2          SpiOsdEnable(OFF);
4119   2        
4120   2          //BKTODO110511
4121   2          //DVI 8BIT mode
4122   2          MenuNoSignal=ChangeBT656Loop();
4123   2        
4124   2          //??SpiOsdSetDeValue();
4125   2          //??FOsdSetDeValue();
4126   2        
4127   2          SpiOsdEnable(ON);
4128   2        }
4129   1        //draw the select Note
4130   1        curr_menu->select = curr_menu->focus;
4131   1          curr_menu_watchdog_select = curr_menu->select;
4132   1        MenuDrawCurrImage(0,curr_menu->select+curr_menu->item_total);
4133   1      
4134   1        //curr_menu->focus = MENU_SRC_RETURN;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 68  

4135   1          //curr_menu_watchdog_focus = curr_menu->focus;
4136   1        MenuDrawCurrImage(0,curr_menu->focus);
4137   1      #endif
4138   1      }
4139          
4140          //move to YUV(decoder)/aPC(pc)/RGB(dvi) image setting
4141          void proc_input_setting(void)
4142          {
4143   1        push_menu_stack_level();
4144   1      
4145   1        MenuInputMain = GetInputMain();
4146   1        if(MenuInputMain==INPUT_PC)
4147   1          curr_menu = &menu_apc_list_page;  //PC ( Analog RGB )  //BK160209
4148   1        else if(MenuInputMain==INPUT_DVI)
4149   1          curr_menu = &menu_rgb_list_page;  //DVI  //BK160209
4150   1        else if(MenuInputMain==INPUT_HDMIPC || MenuInputMain==INPUT_HDMITV) 
4151   1          curr_menu = &menu_hdmi_list_page;   //HDMI   //BK160209
4152   1        else 
4153   1          curr_menu = &menu_yuv_list_page;  //CVBS & SVideo & YPBPR & BT656     //BK160209
4154   1      
4155   1        curr_menu->focus = curr_menu->item_start;         //start from ...
4156   1        curr_menu_watchdog_focus = curr_menu->focus;
4157   1      
4158   1        curr_menu->items[0].p();        // call new background draw routine
4159   1      }
4160          
4161          //=====================================
4162          // AUDIO PAGE
4163          //
4164          // path:main->audio
4165          //=====================================
4166          //----------------------
4167          // audio page background
4168          //----------------------
4169          //-----------------------------------------------------------------------------
4170          /**
4171          * Function
4172          *
4173          * Description
4174          * @param
4175          * @return
4176          */
4177          void proc_audio_bg(void) 
4178          {
4179   1        proc_menu_bg();
4180   1      }
4181          
4182          //=====================================
4183          // SYSTEM PAGE
4184          //
4185          // path:main->system
4186          //=====================================
4187          //----------------------
4188          // system page background
4189          //----------------------
4190          void proc_system_bg(void)
4191          {
4192   1        BYTE touch_not_detected;  //BKTODO
4193   1        touch_not_detected = 1;
4194   1      
4195   1        proc_menu_bg();
4196   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 69  

4197   1      //  curr_menu->deactivated = 0;
4198   1        if(touch_not_detected) {
4199   2          //let curr_menu know it.
4200   2          //BKTODO: You have to clear when you update curr_menu.
4201   2      //    curr_menu->deactivated = MENU_SETTING_TOUCH;
4202   2          //draw deactivated screen
4203   2          MenuDrawDeactivatedItemImage(SOSD_WIN7, MENU_SYSTEM_TOUCH);
4204   2        }
4205   1      }
4206            
4207          void proc_system_touch(void)
4208          {
4209   1      //ET1 = 0;
4210   1        curr_menu->select = MENU_SYSTEM_TOUCH;
4211   1          curr_menu_watchdog_select = curr_menu->select;
4212   1        push_menu_stack_level();
4213   1      
4214   1        //curr_menu.info = menu_touch_calibrate_page;
4215   1        curr_menu = &menu_touch_page;  //BK160209
4216   1        curr_menu->focus = curr_menu->item_start;
4217   1        curr_menu_watchdog_focus = curr_menu->focus;
4218   1          curr_menu->items[0].p();
4219   1      //ET1 = 1;
4220   1      }
4221          
4222          void proc_system_display(void)
4223          {
4224   1        curr_menu->select = MENU_SYSTEM_DISPLAY;
4225   1          curr_menu_watchdog_select = curr_menu->select;
4226   1        push_menu_stack_level();
4227   1      
4228   1        curr_menu = &menu_display_page; //BK160209
4229   1        curr_menu->focus = curr_menu->item_start;
4230   1        curr_menu_watchdog_focus = curr_menu->focus;
4231   1          curr_menu->items[0].p();
4232   1      } 
4233          void proc_system_btooth(void)
4234          {
4235   1        curr_menu->select = MENU_SYSTEM_BTOOTH;
4236   1          curr_menu_watchdog_select = curr_menu->select;
4237   1        push_menu_stack_level();
4238   1      
4239   1        //we don't have btooth page, let's use phone page
4240   1        curr_menu = &menu_phone_page;   //BK160209
4241   1        curr_menu->focus = MENU_PHONE_RETURN;
4242   1        curr_menu_watchdog_focus = curr_menu->focus;
4243   1          curr_menu->items[0].p();
4244   1      } 
4245          void proc_system_restore(void)
4246          {
4247   1        curr_menu->select = MENU_SYSTEM_RESTORE;
4248   1          curr_menu_watchdog_select = curr_menu->select;
4249   1        push_menu_stack_level();
4250   1      
4251   1        curr_menu = &menu_restore_page;   //BK160209
4252   1        curr_menu->focus = MENU_RESTORE_OK;
4253   1        curr_menu_watchdog_focus = curr_menu->focus;
4254   1          curr_menu->items[0].p();
4255   1      }
4256          void proc_system_info(void)
4257          {
4258   1        BYTE str_buff[10];
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 70  

4259   1      
4260   1        curr_menu->select = MENU_SYSTEM_SYSINFO;
4261   1          curr_menu_watchdog_select = curr_menu->select;
4262   1        push_menu_stack_level();
4263   1      
4264   1        curr_menu = &menu_sys_info_page;   //BK160209
4265   1        curr_menu->focus = MENU_SYS_INFO_OK;
4266   1        curr_menu_watchdog_focus = curr_menu->focus;
4267   1          curr_menu->items[0].p();
4268   1      
4269   1        MenuFontOsdItemInit(0, ON);   //1BPP ALPHA ON
4270   1        MenuFontOsdItemInit(1, ON);   //1BPP ALPHA ON
4271   1      #ifdef EVB_10
                MenuFontOsdItemString(0,"1.0");
              #else
4274   1        MenuFontOsdItemString(0,"0.0");
4275   1      #endif
4276   1        TWhtos((BYTE)(FWVER>>8),str_buff);
4277   1        TWstrcat(str_buff,".");
4278   1        TWhtos((BYTE)FWVER,menu_str_buff);
4279   1        TWstrcat(str_buff,menu_str_buff);
4280   1        MenuFontOsdItemString(1,str_buff);
4281   1      }
4282          
4283          #ifdef SUPPORT_TOUCH
4284          BYTE MenuIsSystemPage(void)
4285          {
4286   1        if(curr_menu == &menu_system_page)  return 1;  //BK160209
4287   1        return 0;
4288   1      }
4289          #endif
4290          
4291          //=====================================
4292          // GPS PAGE
4293          //
4294          // path:main->gps
4295          //=====================================
4296          //----------------------
4297          // GPS page background
4298          //----------------------
4299          void proc_gps_bg(void) 
4300          {
4301   1        proc_menu_bg();
4302   1      }
4303          
4304          //=====================================
4305          // PHONE PAGE
4306          //
4307          // path:main->PHONE
4308          //=====================================
4309          //----------------------
4310          // PHONE page background
4311          //----------------------
4312          BYTE phone_start;
4313          void proc_phone_digit(BYTE ch, BYTE fCursor);
4314          void proc_phone_cursor(BYTE start);
4315          void proc_phone_string(BYTE *str);
4316          void proc_phone_bg(void) 
4317          {
4318   1        BYTE i,j;
4319   1        menu_fitem_info_t *text_info = curr_menu->texts;
4320   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 71  

4321   1        proc_menu_bg();
4322   1        MenuFontOsdItemInit(0, OFF);  //for FOSD WIN0
4323   1        MenuFontOsdItemInit(1, OFF);  //for FOSD WIN1
4324   1      
4325   1        proc_phone_string(" ");
4326   1        phone_start = 0;
4327   1        for(i=0; i < text_info->h; i++)
4328   1          for(j=0; j < text_info->w; j++)
4329   1            proc_phone_digit(0x20,0);
4330   1        phone_start = 0;
4331   1        proc_phone_cursor(phone_start);
4332   1      }
4333          void proc_phone_return(void)
4334          {
4335   1        //turn off FontOSD
4336   1        FOsdWinOffAll();
4337   1        proc_return_icon();
4338   1      }
4339          
4340          void proc_phone_cursor(BYTE start)
4341          {
4342   1        BYTE ch;
4343   1        menu_fitem_info_t *text_info = curr_menu->texts;
4344   1      
4345   1        ch = 0x5F;  //"_"
4346   1        FOsdBlinkOnOff(ON);
4347   1        FOsdRamSetAddrAttr(text_info->osdram+start,text_info->BPP1Color);
4348   1        WriteTW88(REG307, ch);
4349   1        FOsdBlinkOnOff(OFF);
4350   1      }
4351          
4352          void proc_phone_digit(BYTE ch, BYTE fCursor)
4353          {
4354   1        BYTE palette;
4355   1        menu_fitem_info_t *text_info = curr_menu->texts;
4356   1        //text_info += index;
4357   1      
4358   1      
4359   1        if(IsDigit(ch)) {
4360   2          palette = text_info->BPP3_palette;
4361   2          FOsdRamSetAddrAttr(text_info->osdram+phone_start,palette >> 2);
4362   2          WriteTW88(REG307, (ch-0x30) * 3 + BPP3DIGIT_START);
4363   2          phone_start++;  
4364   2        }
4365   1        else {
4366   2          palette = text_info->BPP1Color;
4367   2          if(ch==0x0B) {  //backspace
4368   3            ch = 0x20;  //space
4369   3            FOsdRamSetAddrAttr(text_info->osdram+phone_start,text_info->BPP1Color); //remove cursor
4370   3            WriteTW88(REG307, ch);
4371   3            if(phone_start)
4372   3              phone_start--;
4373   3            FOsdRamSetAddrAttr(text_info->osdram+phone_start,text_info->BPP1Color); //remove char
4374   3            WriteTW88(REG307, ch);
4375   3          }
4376   2          else {
4377   3            FOsdRamSetAddrAttr(text_info->osdram+phone_start,text_info->BPP1Color);
4378   3            WriteTW88(REG307, ch);
4379   3            phone_start++;  
4380   3          }
4381   2        }
4382   1        if(fCursor)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 72  

4383   1          proc_phone_cursor(phone_start);
4384   1      
4385   1      
4386   1        if(phone_start >= 30)
4387   1          phone_start = 30;
4388   1      
4389   1      }
4390          void proc_phone_string(BYTE *str)
4391          {
4392   1        BYTE palette;
4393   1        BYTE i,index;
4394   1      
4395   1        menu_fitem_info_t *text_info = curr_menu->texts;
4396   1        text_info++;  //FOSD WIN1
4397   1        
4398   1        palette = text_info->BPP1Color;
4399   1        FOsdRamSetAddrAttr(text_info->osdram,text_info->BPP1Color);
4400   1        index=0;
4401   1        while(*str) {
4402   2          WriteTW88(REG307, *str);
4403   2          str++;
4404   2          index++;
4405   2        }
4406   1        for(i=index; i < text_info->w; i++)
4407   1          WriteTW88(REG307, 0); //space
4408   1      }
4409          
4410          
4411          void proc_phone_1(void) 
4412          {
4413   1        proc_phone_digit('1',1);
4414   1        MenuDrawCurrImage(0, curr_menu->focus); 
4415   1      }
4416          void proc_phone_2(void) 
4417          {
4418   1        proc_phone_digit('2',1);
4419   1        MenuDrawCurrImage(0, curr_menu->focus); 
4420   1      }
4421          void proc_phone_3(void) 
4422          {
4423   1        proc_phone_digit('3',1);
4424   1        MenuDrawCurrImage(0, curr_menu->focus); 
4425   1      }
4426          void proc_phone_4(void) 
4427          {
4428   1        proc_phone_digit('4',1);
4429   1        MenuDrawCurrImage(0, curr_menu->focus); 
4430   1      }
4431          void proc_phone_5(void) 
4432          {
4433   1        proc_phone_digit('5',1);
4434   1        MenuDrawCurrImage(0, curr_menu->focus); 
4435   1      }
4436          void proc_phone_6(void) 
4437          {
4438   1        proc_phone_digit('6',1);
4439   1        MenuDrawCurrImage(0, curr_menu->focus); 
4440   1      }
4441          void proc_phone_7(void) 
4442          {
4443   1        proc_phone_digit('7',1);
4444   1        MenuDrawCurrImage(0, curr_menu->focus); 
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 73  

4445   1      }
4446          void proc_phone_8(void) 
4447          {
4448   1        proc_phone_digit('8',1);
4449   1        MenuDrawCurrImage(0, curr_menu->focus); 
4450   1      }
4451          void proc_phone_9(void) 
4452          {
4453   1        proc_phone_digit('9',1);
4454   1        MenuDrawCurrImage(0, curr_menu->focus); 
4455   1      }
4456          void proc_phone_star(void) 
4457          {
4458   1        proc_phone_digit('*',1);
4459   1        MenuDrawCurrImage(0, curr_menu->focus); 
4460   1      }
4461          void proc_phone_0(void) 
4462          {
4463   1        proc_phone_digit('0',1);
4464   1        MenuDrawCurrImage(0, curr_menu->focus); 
4465   1      }
4466          void proc_phone_sharp(void) 
4467          {
4468   1        proc_phone_digit('#',1);
4469   1        MenuDrawCurrImage(0, curr_menu->focus); 
4470   1      }
4471          void proc_phone_dial(void) 
4472          {
4473   1        proc_phone_string("Dialing");
4474   1        MenuDrawCurrImage(0, curr_menu->focus); 
4475   1      }
4476          void proc_phone_up(void) 
4477          {
4478   1        proc_phone_string("up");
4479   1        MenuDrawCurrImage(0, curr_menu->focus); 
4480   1      }
4481          void proc_phone_down(void) 
4482          {
4483   1        proc_phone_string("down");
4484   1        MenuDrawCurrImage(0, curr_menu->focus); 
4485   1      }
4486          void proc_phone_check(void) 
4487          {
4488   1        proc_phone_digit(0x0B,1); //backspace
4489   1        MenuDrawCurrImage(0, curr_menu->focus); 
4490   1      }
4491          void proc_phone_left(void) 
4492          {
4493   1        proc_phone_string("left");
4494   1        MenuDrawCurrImage(0, curr_menu->focus); 
4495   1      }
4496          void proc_phone_right(void) 
4497          {
4498   1        proc_phone_string("right");
4499   1        MenuDrawCurrImage(0, curr_menu->focus); 
4500   1      }
4501          void proc_phone_help(void) 
4502          {
4503   1        proc_phone_string("help");
4504   1        MenuDrawCurrImage(0, curr_menu->focus); 
4505   1      }
4506          void proc_phone_dir(void) 
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 74  

4507          {
4508   1        proc_phone_string("Directory");
4509   1        MenuDrawCurrImage(0, curr_menu->focus); 
4510   1      }
4511          void proc_phone_set(void) 
4512          {
4513   1        proc_phone_string("Settings");
4514   1        MenuDrawCurrImage(0, curr_menu->focus); 
4515   1      }
4516          void proc_phone_msg(void) 
4517          {
4518   1        proc_phone_string("Messages");
4519   1        MenuDrawCurrImage(0, curr_menu->focus); 
4520   1      }
4521          void proc_phone_menu(void) 
4522          {
4523   1        proc_phone_string("Menu");
4524   1        MenuDrawCurrImage(0, curr_menu->focus); 
4525   1      }
4526          
4527          
4528          //=====================================
4529          // CARINFO PAGE
4530          //
4531          // path:main->carinfo
4532          //=====================================
4533          //----------------------
4534          // carinfo page background
4535          //----------------------
4536          void proc_carinfo_bg(void) 
4537          {
4538   1        proc_menu_bg();
4539   1      }
4540          
4541          //=====================================
4542          // DEMO PAGE
4543          //
4544          // path:main->demo
4545          //=====================================
4546          
4547          //DEMO page background
4548          void proc_demo_bg(void) 
4549          {
4550   1        proc_menu_bg();
4551   1      }
4552          
4553          void proc_grid_demo_start(void) 
4554          {
4555   1        WaitVBlank(1);
4556   1        SOsd_Enable(SOSD_WIN_ICON,OFF);
4557   1        SOsd_UpdateReg(SOSD_WIN_ICON, SOSD_WIN_ICON);
4558   1      
4559   1        //redraw setting again. I don't have a Animation menu.
4560   1        MenuEnd();  
4561   1      
4562   1        MovingGridInit();
4563   1      
4564   1        MovingGridTask_init();
4565   1      
4566   1        //block touch 
4567   1        CpuTouchSkipCount = 1*500*2;  //0.5 sec
4568   1      }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 75  

4569          
4570          #if 0
              void proc_pigeon_demo_start(void)
              {
                WaitVBlank(1);
                MenuEnd();
                PigeonDemo();   
              }
              #endif
4578          
4579          void proc_rose_demo_start(void)
4580          {
4581   1        WaitVBlank(1);
4582   1        MenuEnd();  
4583   1      
4584   1        SpiOsdWinHWOffAll(1);
4585   1      
4586   1        RoseDemo();
4587   1      
4588   1        //block touch 
4589   1        CpuTouchSkipCount = 1*500*2;  //0.5 sec
4590   1      }
4591          extern void DumpFontOsdPalette(void);
4592          void proc_FPalette_demo_start(void)
4593          {
4594   1        WaitVBlank(1);
4595   1        MenuEnd();  
4596   1      
4597   1        DumpFontOsdPalette();
4598   1      }
4599          extern void SOsdDemo1(void);
4600          void proc_SOsd_demo1_start(void)
4601          {
4602   1        WaitVBlank(1);
4603   1        MenuEnd();  
4604   1      
4605   1        SOsdDemo1();
4606   1      }
4607          extern void SOsdDemo2(void);
4608          void proc_SOsd_demo2_start(void)
4609          {
4610   1        WaitVBlank(1);
4611   1        MenuEnd();  
4612   1      
4613   1        SOsdDemo2();
4614   1      }
4615          
4616          
4617          
4618          //=========================
4619          // WAIT
4620          //=========================
4621          
4622          //WaitIcon(ON/OFF)
4623          void proc_wait_menu_start(void)
4624          {
4625   1        menu_sitem_info_t *menu_item;
4626   1        struct image_item_info_s *image;
4627   1        menu_image_header_t *header = &header_table;
4628   1        BYTE item;
4629   1        WORD dy;  //we are using 10 animations.
4630   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 76  

4631   1        item = curr_menu->focus;
4632   1        menu_item = &curr_menu->items[item];
4633   1        image = &img_wait;  //menu_item->image;
4634   1      
4635   1        SpiOsdEnable(ON);
4636   1      
4637   1        SOsd_CleanReg();    //ClearSpiOsdWinBuffer();
4638   1      
4639   1        //prepare header
4640   1        MenuPrepareImageHeader(image);
4641   1        dy = header->dy / 10;  //we are using 10 animations.
4642   1        SOsd_SetSpiStartOffset( SOSD_WIN0, header->image_loc );
4643   1        SOsd_SetImageWidthHeight( SOSD_WIN0, header->dx, dy );
4644   1        //SOsd_SetScreen( SOSD_WIN0, 400 - (header->dx / 2), 240 - (dy /2), header->dx, dy );
4645   1        SOsd_SetScreen( SOSD_WIN0, (PANEL_H  - header->dx) / 2,  (PANEL_V - dy) /2, header->dx, dy );
4646   1      
4647   1      
4648   1      
4649   1        SOsd_SetWin0ImageOffsetXY( 0,0 );
4650   1        SOsd_SetWin0Animation( 2/*3*/, 0, 9, 3);
4651   1      //  SOsd_SetWin0Priority(ON);
4652   1      
4653   1        //SOsd_SetGlobalAlpha( 0, 0 );
4654   1        SOsd_SetPixelAlpha( SOSD_WIN0, ON );
4655   1        SOsd_SetPixelWidth(SOSD_WIN0, header->bpp);
4656   1        SOsd_SetLutOffset(SOSD_WIN0,menu_item->lut);
4657   1      
4658   1        SOsd_Enable( SOSD_WIN0, ON );
4659   1        dMenuPuts("\n\rFinished wait icon window init");
4660   1      
4661   1        WaitVBlank(1);
4662   1        //SpiOsdLoadLUT(SOSD_WIN0, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alp
             -ha);
4663   1        SOsd_SetLut(SOSD_WIN0, header->lut_type, menu_item->lut, header->lut_size, header->lut_loc,image->alpha);
4664   1        SOsd_UpdateLut(SOSD_WIN0, 1); 
4665   1      
4666   1        SOsd_UpdateReg(SOSD_WIN0, SOSD_WIN0);
4667   1        dMenuPuts("\n\rFinished Wait");
4668   1      }
4669          
4670          void proc_wait_demo_start(void)
4671          {
4672   1        WaitVBlank(1); //BUG110725
4673   1        MenuEnd();
4674   1        proc_wait_menu_start();
4675   1      }
4676          
4677          //=====================================
4678          // Touch PAGE
4679          //
4680          // path:main->system->touch
4681          //=====================================
4682          
4683          //----------------------
4684          // main->system->touch MENU
4685          //----------------------
4686          //void UpdateTouchCalibXY(BYTE index,WORD x, WORD y);
4687          
4688          void proc_touch_bg(void)
4689          {
4690   1        proc_menu_bg();
4691   1      }
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 77  

4692          void proc_touch_bg_end(void)
4693          {
4694   1        pop_menu_stack_level(); 
4695   1        curr_menu->items[0].p();  //redraw parent
4696   1      }
4697          //void proc_touch_bg_end(void)
4698          //{
4699          //  proc_menu_bg();
4700          //}
4701          void proc_touch_button1(void) 
4702          {
4703   1      //  ET1 = 0;
4704   1      //  UpdateTouchCalibXY(0,x,y);
4705   1      
4706   1        curr_menu->focus++;
4707   1        curr_menu_watchdog_focus = curr_menu->focus;
4708   1          proc_menu_bg();
4709   1      //  ET1 = 1;
4710   1      }
4711          void proc_touch_button2(void) 
4712          {
4713   1      //  ET1 = 0;
4714   1        curr_menu->focus++;
4715   1        curr_menu_watchdog_focus = curr_menu->focus;
4716   1          proc_menu_bg();
4717   1      //  ET1 = 1;
4718   1      }
4719          void proc_touch_button3(void)
4720          {
4721   1      //  ET1 = 0;
4722   1        curr_menu->focus++;
4723   1        curr_menu_watchdog_focus = curr_menu->focus;
4724   1          proc_menu_bg();
4725   1      //  ET1 = 1;
4726   1      }
4727          
4728          void proc_touch_button4(void)
4729          {
4730   1      //  ET1 = 0;
4731   1        curr_menu->focus++;
4732   1        curr_menu_watchdog_focus = curr_menu->focus;
4733   1          proc_menu_bg();
4734   1      //  ET1 = 1;
4735   1      }
4736          void proc_touch_button5(void) 
4737          {
4738   1        UseSOsdHwBuff = 1;
4739   1        //SOsdHwBuffClean();
4740   1        SOsd_CleanLut();  
4741   1        SOsd_CleanRlc();
4742   1        SOsd_CleanReg();
4743   1      //  ET1 = 0;
4744   1      //  pop_menu_stack_level(); 
4745   1      //  curr_menu->items[0].p();  //redraw parent
4746   1      //  ET1 = 1;
4747   1        //draw item1
4748   1        MenuDrawCurrImage(0,1); //normal, background_end
4749   1        //focus to OK
4750   1        curr_menu->focus = MENU_TOUCH_OK;
4751   1        curr_menu_watchdog_focus = curr_menu->focus;
4752   1          MenuDrawCurrImage(0,curr_menu->focus);      //draw focused item
4753   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 78  

4754   1        if(UseSOsdHwBuff) {
4755   2          SOsd_show(1);
4756   2          UseSOsdHwBuff = 0;
4757   2        }
4758   1      
4759   1      }
4760          #ifdef SUPPORT_TOUCH
4761          void proc_touch_calib_end(void)
4762          {
4763   1        //if(menu_level==0) {
4764   1        //  MenuEnd();
4765   1        //  return;
4766   1        //}
4767   1        
4768   1        pop_menu_stack_level(); 
4769   1        curr_menu->items[0].p();  //redraw parent
4770   1      }
4771          #endif
4772          
4773          void proc_touch_ok(void)
4774          {
4775   1      #ifdef SUPPORT_TOUCH
4776   1      //  ET1 = 0;
4777   1      
4778   1        //save value to EEPROM
4779   1        //for(i=0; i < 5; i++) {
4780   1        //  w = TouchGetCalibedX(i);
4781   1        //  WriteEEPROM();
4782   1        //  w = TouchGetCalibedY(i);
4783   1        //  WriteEEPROM();
4784   1        //
4785   1        //}
4786   1        SaveCalibDataToEE(1);
4787   1      
4788   1      //  UpdateTouchCalibXY(0,x,y);
4789   1      //  UpdateTouchCalibXY(1,x,y);
4790   1      //  UpdateTouchCalibXY(2,1,1 /*x,y*/);
4791   1      //  UpdateTouchCalibXY(3,x,y);
4792   1      //  UpdateTouchCalibXY(4,x,y);
4793   1        proc_touch_calib_end();
4794   1      //  ET1 = 1;
4795   1      #endif
4796   1      }
4797          void proc_touch_cancel(void)
4798          {
4799   1      #ifdef SUPPORT_TOUCH
4800   1      //  BYTE i;
4801   1      //  ET1 = 0;
4802   1        //readback calib value from EEPROM
4803   1        //for(i=0; i < 5; i++) {
4804   1        //  x = ReadEEPROM();
4805   1        //  y = ReadEEPROM();
4806   1        //  TouchSetCalibedXY(i, x,y);
4807   1        //}
4808   1        //ReadCalibDataFromEE();
4809   1      
4810   1        proc_touch_calib_end();
4811   1      //  ET1 = 1;
4812   1      #endif
4813   1      }
4814          
4815          #ifdef SUPPORT_TOUCH
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 79  

4816          BYTE MenuIsTouchCalibMode(void)
4817          {
4818   1        if(curr_menu == &menu_touch_page) {  //BK160209
4819   2          if(curr_menu->focus >= curr_menu->item_start && curr_menu->focus < (curr_menu->item_start+5))
4820   2            return (curr_menu->focus - curr_menu->item_start +1);
4821   2      
4822   2        }
4823   1        return 0;
4824   1      }
4825          #endif
4826          
4827          #ifdef SUPPORT_TOUCH
4828          void MenuTouchCalibStart(void)
4829          {
4830   1        //MenuStart();
4831   1        
4832   1        SaveCalibDataToEE(0); //use default
4833   1      
4834   1      
4835   1        push_menu_stack_level();
4836   1        curr_menu = &menu_touch_page; //BK160209
4837   1        curr_menu->focus = curr_menu->item_start;
4838   1        curr_menu_watchdog_focus = curr_menu->focus;
4839   1          curr_menu->select = curr_menu->focus;
4840   1          curr_menu_watchdog_select = curr_menu->select;
4841   1      
4842   1        //call bg proc
4843   1        curr_menu->items[0].p();
4844   1      }
4845          #endif
4846          
4847          //=====================================
4848          // Display PAGE
4849          //
4850          // path:main->system->display
4851          //=====================================
4852          //----------------------
4853          // main->system->more MENU
4854          //----------------------
4855          
4856          void proc_display_bg(void) 
4857          {
4858   1        proc_menu_bg();
4859   1      }
4860          void proc_display_aspect(void) 
4861          {
4862   1        push_menu_stack_level();
4863   1      
4864   1        curr_menu = &menu_aspect_page;  //BK160209
4865   1        curr_menu->focus = MENU_ASPECT_NORMAL+GetAspectModeEE();
4866   1        curr_menu_watchdog_focus = curr_menu->focus;
4867   1          curr_menu->select = curr_menu->focus;
4868   1          curr_menu_watchdog_select = curr_menu->select;
4869   1        cancel_recover_value = curr_menu->select;
4870   1        curr_menu->items[0].p();
4871   1      }
4872          
4873          void proc_display_osd(void) 
4874          {
4875   1        push_menu_stack_level();
4876   1      
4877   1        curr_menu = &menu_osd_page; //BK160209
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 80  

4878   1        curr_menu->focus = curr_menu->item_start;
4879   1        curr_menu_watchdog_focus = curr_menu->focus;
4880   1          curr_menu->items[0].p();
4881   1      }
4882          void proc_display_flip(void) 
4883          {
4884   1        push_menu_stack_level();
4885   1      
4886   1        curr_menu = &menu_mirror_page; //BK160209
4887   1        curr_menu->focus = MENU_FLIP_OK;
4888   1        curr_menu_watchdog_focus = curr_menu->focus;
4889   1          curr_menu->items[0].p();
4890   1      }
4891          void proc_display_backlight(void) 
4892          {
4893   1        push_menu_stack_level();
4894   1      
4895   1        curr_menu = &menu_slider_page; //BK160209
4896   1        curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
4897   1        curr_menu_watchdog_focus = curr_menu->focus;
4898   1          curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
4899   1          curr_menu_watchdog_select = curr_menu->select;
4900   1        InitSlideCtrl(&img_slide_backlight, 
4901   1          &BackLightGetRate,
4902   1          &BackLightSetRate,
4903   1          &BackLightSetRate,
4904   1          &BackLightChangeRate);
4905   1      
4906   1        curr_menu->items[0].p();    
4907   1      }
4908          
4909          void proc_display_resolution(void) 
4910          {
4911   1      //  WORD wValue;
4912   1        BYTE str_buff[10];
4913   1      
4914   1        push_menu_stack_level();
4915   1      
4916   1        //BK110811
4917   1        //+---------------------------------------+
4918   1        //|               Resolution        |
4919   1        //|                     |
4920   1        //|                INPUT     OUTPUT     |
4921   1        //| Horizontal :   720       800          |
4922   1        //|   Vertical :   480     480      |
4923   1        //|  Frequency :   60           |
4924   1        //|                     |
4925   1        //|                OK           |
4926   1        //+---------------------------------------+
4927   1        //or
4928   1        //+---------------------------+
4929   1        //|         Resolution      |
4930   1        //|               |
4931   1        //| input :  720x480      |
4932   1        //| panel :  800x480          |
4933   1        //|               |
4934   1        //|         OK          |
4935   1        //+---------------------------+
4936   1      
4937   1      #if 0 //BK110811
                curr_menu = &menu_slider_page;  //BK160209
                curr_menu->focus = MENU_SLIDER_BAR_INPUT_RED;
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 81  

                curr_menu_watchdog_focus = curr_menu->focus;
                  curr_menu->select = MENU_SLIDER_BAR_INPUT_RED;
                  curr_menu_watchdog_select = curr_menu->select;
                InitSlideCtrl(&img_slide_backlight, 
                  &BackLightGetRate,
                  &BackLightSetRate,
                  &BackLightSetRate,
                  &BackLightChangeRate);
              #endif
4949   1        curr_menu = &menu_disp_resolution_page;   //BK160209
4950   1        curr_menu->focus = MENU_DISP_RESOLUTION_OK;
4951   1          curr_menu_watchdog_focus = curr_menu->focus;
4952   1      
4953   1        curr_menu->items[0].p();
4954   1        
4955   1        MenuFontOsdItemInit(0, ON); //1BPP ALPHA ON
4956   1        MenuFontOsdItemInit(1, ON); //1BPP ALPHA ON
4957   1      
4958   1        //add alpha here
4959   1        //FOsdWinAlphaPixel(0,1,15);
4960   1        //FOsdWinAlphaPixel(1,1,15);
4961   1      
4962   1        if(ReadTW88(REG21C) & 0x04) {
4963   2          //freerun manual, means no signal
4964   2          MenuFontOsdItemString(0,"N/A");
4965   2        }
4966   1        else {
4967   2      #if 0
                  wValue=InputGetHLen();
                  TWitoa(wValue,str_buff);
                  TWstrcat(str_buff,"x");
                  wValue=InputGetVLen();
                  TWitoa(wValue,menu_str_buff);
                  TWstrcat(str_buff,menu_str_buff);
                  MenuFontOsdItemString(0,str_buff);
              #else
4976   2          MenuFontOsdItemString(0,FOsdMsgBuff);
4977   2          //FOsdCopyMsgBuff2Osdram(ON);
4978   2      #endif
4979   2        }
4980   1        TWitoa(PANEL_H,str_buff);
4981   1        TWstrcat(str_buff,"x");
4982   1        TWitoa(PANEL_V,menu_str_buff);
4983   1        TWstrcat(str_buff,menu_str_buff);
4984   1        MenuFontOsdItemString(1,str_buff);
4985   1          
4986   1      }
4987          
4988          
4989          
4990          //----------------------
4991          // main->system->more->OSD->language MENU
4992          //----------------------
4993          //-------------------------------------
4994          // language popup MENU
4995          //-------------------------------------
4996          
4997          //void proc_lang_bg(void) {}
4998          //void proc_lang_eng(void) {}
4999          //void proc_lang_kor(void) {}
5000          //void proc_lang_jpn(void) {}
5001          //void proc_lang_chn(void) {}
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 82  

5002          //void proc_lang_ok(void) {}
5003          
5004          
5005          
5006          
5007          //audio--------------
5008          /*
5009          one popup ok   - win 8
5010          one popup bg   - win 7
5011          one focus    - win 6
5012          one source     - win 5
5013          one tunner     - win 4
5014          one progress   - win 3
5015          one volume     - win 2
5016          one bg       - win 1
5017          one animation  - win 0
5018          
5019          fosd0   - title,artist...
5020          fosd1   - progress
5021          fosd2   - tunner
5022          
5023          //gps-------------------
5024          one bg
5025          one map with full transparent
5026          one campus
5027          one focus
5028          
5029          
5030          //phone-------------------
5031          one bg
5032          one focus
5033          one volume
5034          */
5035          
5036          
5037          
5038          //=============================================================================
5039          // START / END
5040          //=============================================================================
5041          
5042          //-----------------------------------------------------------------------------
5043          /**
5044          * Function
5045          *
5046          * Description
5047          * Start Setup Menu
5048          * @param  void
5049          * @return void
5050          */
5051          void MenuStart(void)
5052          {
5053   1        dMenuPrintf("\n\rMenuStart");
5054   1      
5055   1        menu_on = 1;
5056   1        menu_lock_scroll = 0;
5057   1        UseSOsdHwBuff = 0;
5058   1      
5059   1        //turn off NoSignal Task if it was ON
5060   1        if(TaskNoSignal_getCmd() != TASK_CMD_DONE) {
5061   2          TaskNoSignal_setCmd(TASK_CMD_DONE); 
5062   2        }
5063   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 83  

5064   1        //turn off Logo if it was ON
5065   1        if(NoSignalLogoShow)
5066   1          RemoveLogo(); 
5067   1      
5068   1        //Init SPOOSD
5069   1        SOsd_init();
5070   1      
5071   1        //clean SOsdWinBuff[].
5072   1        SOsd_CleanReg();
5073   1        SOsd_CleanRlc();
5074   1      
5075   1        //init SpiOSD/FontOSD DE.
5076   1        SpiOsdSetDeValue();
5077   1        FOsdSetDeValue();
5078   1      
5079   1        //disable all FontOsd/SpiOsd HW Windows
5080   1        SpiOsdWinHWOffAll(0);   //without wait
5081   1      
5082   1        //download font set & init Multi-BPP location
5083   1        FontOsdInit();
5084   1      
5085   1        //init Global variables
5086   1        menu_level = 0;
5087   1      
5088   1        //init SOSD_WIN0 here
5089   1      
5090   1        //Read EE values
5091   1        //example:
5092   1        //  MenuInputMain = GetInputMainEE(); //do not use, InputMain = GetInputEE(); in menu.c
5093   1        //  menu_value_osd_language = EE_Read(EEP_OSDLANG);
5094   1        //  menu_value_timeout = EE_Read(EEP_OSD_TIMEOUT);
5095   1        //  menu_value_transparency = EE_Read(EEP_OSD_TRANSPARENCY);
5096   1      
5097   1        osd_lang = 0; //read OSDLANG.
5098   1      
5099   1        //init SOSD
5100   1        SpiOsdEnable(ON);
5101   1        SOsd_UpdateRlc();
5102   1        SOsd_SetSpiStartBit(1,0);
5103   1        SOsd_SetLutOffset( 1, 0 /*SOSD_WIN_BG,  WINBG_LUTLOC*/ );  //old: SpiOsdLoadLUT_ptr
5104   1      //  SpiOsdWinFillColor( 1, 0 );
5105   1      
5106   1      
5107   1        //link menu_main_info.
5108   1        curr_menu = &menu_main_page;  //BK160209
5109   1        curr_menu->focus = MENU_MAIN_VIDEO;
5110   1          curr_menu_watchdog_focus = curr_menu->focus;
5111   1        curr_menu->select = curr_menu->focus;
5112   1          curr_menu_watchdog_select = curr_menu->select;
5113   1      
5114   1        //call bg proc.
5115   1        curr_menu->items[0].p();
5116   1      }
5117          
5118          //-----------------------------------------------------------------------------
5119          /**
5120          * Description
5121          * End Setup Menu.
5122          * @param  void
5123          * @return void
5124          */
5125          void MenuEnd(void)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 84  

5126          {
5127   1        BYTE value;
5128   1        //
5129   1        //byebye
5130   1        //
5131   1        MenuPrintf("\n\rMenuEnd()");
5132   1      
5133   1        SpiOsdWinHWOffAll(1); //with VB 
5134   1        SpiOsdEnable(OFF);
5135   1        FOsdWinOffAll();  
5136   1      
5137   1      #ifdef USE_SFLASH_EEPROM
5138   1        //update all changed EEPROM value
5139   1        //clean EEPROM.
5140   1        E3P_Clean();
5141   1      #endif
5142   1      
5143   1        menu_on = 0;
5144   1        menu_level = 0;
5145   1      
5146   1        MenuInputMain = GetInputMain();
5147   1      
5148   1      
5149   1        FontOsdInit(); //need it for Task message.
5150   1        FOsdSetDeValue();
5151   1      
5152   1        //prepare video info
5153   1      
5154   1      
5155   1        //turn On NoSignal Task if it is NoSignal
5156   1        //Pls, link with Task_Enable
5157   1        value = ReadTW88(REG004);
5158   1        if(value & 0x01) {
5159   2          FOsdIndexMsgPrint(FOSD_STR2_NOSIGNAL);
5160   2          TaskNoSignal_setCmd(TASK_CMD_WAIT_VIDEO);
5161   2        }
5162   1        else {
5163   2          if(MenuInputMain==INPUT_PC) {
5164   3            //if()  it is a out of range
5165   3            //  FOsdIndexMsgPrint(FOSD_STR3_OUTRANGE);
5166   3          }
5167   2        }
5168   1      
5169   1        //recover output active position.
5170   1        WriteTW88(REG201, ReadTW88(REG201) & 0xFD);
5171   1      
5172   1      #if 1 //BK110707
5173   1        //do not change it here.
5174   1      #else
                //turn ON ISR.
                switch(MenuInputMain) {
                case INPUT_CVBS:
                case INPUT_SVIDEO:
                case INPUT_COMP:
                  WriteTW88(REG003, 0xFC ); // enable VDLOSS, SW
                  break;
                case INPUT_PC:
                case INPUT_DVI:
                case INPUT_HDMIPC:
                case INPUT_HDMITV:
                case INPUT_BT656:
                  WriteTW88(REG003, 0xF8 ); // enable HSyncVSync, VDLOSS, SW
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 85  

                  break;
                default:
                  WriteTW88(REG003, 0xFC ); // enable VDLOSS, SW
                  break;
                } 
              #endif
5194   1      }
5195          
5196          
5197          //reset menu_level & menu_on.
5198          //caller has to clear SOSD
5199          #ifdef SUPPORT_RCD
              void MenuQuitMenu(void)
              {
                menu_level=0;
                menu_on=0;
              }
              #endif
5206          
5207          //====================================
5208          // Slider Show Demo                    
5209          //====================================
5210          
5211          #define DEMO1024x600IMG_START 18
5212          //#define DEMO1024x600IMG_NUM   16
5213          #define DEMO1024x600IMG_NUM   15
5214          
5215          menu_image_header_t back_header_table;
5216          menu_image_header_t front_header_table;
5217          
5218          /**
5219          * description
5220          * set SpiOSD info for SliderShow
5221          */
5222          
5223          void SliderShow_Set(BYTE win, struct image_item_info_s *image, WORD lut_loc)
5224          {
5225   1        menu_image_header_t *header = &header_table;
5226   1        menu_image_header_t *SliderHeader;
5227   1        WORD sx,sy;
5228   1      
5229   1        sx = 0;
5230   1        sy = 0;
5231   1        lut_loc = 0;  //menu_item->lut. 0 or 256
5232   1      
5233   1        if(win==1)  SliderHeader = &back_header_table;
5234   1        else    SliderHeader = &front_header_table;
5235   1      
5236   1        //prepare header
5237   1        MenuPrepareImageHeader(image);
5238   1        SliderHeader->image_loc = header->image_loc;
5239   1      
5240   1        SOsd_SetSpiStartOffset( win, header->image_loc); 
5241   1        SOsd_SetImageWidthHeight( win, header->dx, header->dy );
5242   1        SOsd_SetScreen( win, sx, sy, header->dx, header->dy );
5243   1        if(win==0) {
5244   2          SOsd_SetWin0ImageOffsetXY( 0, 0 );
5245   2          SOsd_SetWin0Animation( 1, 0, 0, 0);
5246   2        }
5247   1        if(image->alpha != 0xFF)
5248   1          SOsd_SetPixelAlpha( win, ON );
5249   1        else
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 86  

5250   1          SOsd_SetGlobalAlpha( win, 0);
5251   1      
5252   1        SOsd_SetPixelWidth(win, header->bpp);
5253   1        SOsd_SetLutOffset(win, lut_loc);
5254   1      
5255   1        SOsd_Enable( win, ON );
5256   1      
5257   1        //always use HwBuff.
5258   1        if(header->rle)
5259   1          SOsd_SetRlc(win,header->bpp,header->rle);
5260   1        SOsd_SetLut(win, header->lut_type, lut_loc,  header->lut_size, header->lut_loc, image->alpha);
5261   1      
5262   1        //pixel alpha blending. after load Palette
5263   1        //if(image->alpha != 0xFF)
5264   1        //  //SOsdHwBuffSetAlpha(win, lut_loc+image->alpha);
5265   1        //  SOsd_SetPixelAlphaIndex(win,image->alpha);
5266   1      }
5267          /**
5268          * description
5269          *   show the slider show
5270          */
5271          void SliderShow_Show(BYTE effect, BYTE direction)
5272          {
5273   1        menu_image_header_t *header_back = &back_header_table;
5274   1        menu_image_header_t *header_front = &front_header_table;
5275   1      
5276   1        WORD i;
5277   1        BYTE win_back = 1;
5278   1        BYTE win_front = 3;
5279   1        WORD sx,sy;
5280   1        WORD dx,dy;
5281   1        DWORD dTemp;
5282   1        BYTE bTemp;
5283   1      
5284   1        bTemp =  effect;
5285   1      
5286   1        sx=sy=0;
5287   1        dx = 1024;
5288   1        dy = 600;
5289   1      
5290   1        if(effect==1) {
5291   2          //-----------------
5292   2          //overwrite
5293   2          if(direction == NAVI_KEY_RIGHT) {
5294   3            for(i=0; i <= 1024; i+=16) {
5295   4          
5296   4              //dTemp = back_image_loc;
5297   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc + i);
5298   4              SOsd_SetScreen(win_back, sx+i,sy, dx-i, dy);
5299   4            
5300   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc);
5301   4              SOsd_SetScreen(win_front, sx,sy, i, dy);
5302   4          
5303   4              WaitVBlank(1);
5304   4              SOsd_UpdateReg(win_back, win_front);
5305   4              
5306   4              delay1ms(10);
5307   4            }
5308   3          }
5309   2          else if(direction == NAVI_KEY_LEFT) {
5310   3            for(i=0; i <= 1024; i+=16) {
5311   4              
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 87  

5312   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc);
5313   4              SOsd_SetScreen(win_back, sx,sy, dx-i, dy);
5314   4            
5315   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc + (1024-i));
5316   4              SOsd_SetScreen(win_front, sx + (1024 - i),sy, i, dy);
5317   4          
5318   4              WaitVBlank(1);
5319   4              SOsd_UpdateReg(win_back, win_front);
5320   4          
5321   4          
5322   4              delay1ms(10);
5323   4            }
5324   3          }
5325   2          else if(direction == NAVI_KEY_DOWN) {
5326   3            for(i=0; i <= 600; i+=10) { 
5327   4              dTemp = 1024;
5328   4              dTemp *= i; 
5329   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc + dTemp);
5330   4              SOsd_SetScreen(win_back, sx, sy+i, dx, dy-i);
5331   4            
5332   4              dTemp = 1024;
5333   4              dTemp *= (600-i);
5334   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc);
5335   4              SOsd_SetScreen(win_front, sx, sy, dx, i);
5336   4          
5337   4              WaitVBlank(1);
5338   4              SOsd_UpdateReg(win_back, win_front);
5339   4          
5340   4          
5341   4              delay1ms(10);
5342   4            }
5343   3          }
5344   2          else if(direction == NAVI_KEY_UP) {
5345   3            for(i=0; i <= 600; i+=10) {
5346   4          
5347   4              //dTemp = back_image_loc;
5348   4          
5349   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc);
5350   4              SOsd_SetScreen(win_back, sx, sy, dx, dy-i);
5351   4              dTemp = 1024;
5352   4              dTemp *= (600-i);
5353   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc + dTemp);
5354   4              SOsd_SetScreen(win_front, sx, 600 - i , dx, i);
5355   4          
5356   4              WaitVBlank(1);
5357   4              SOsd_UpdateReg(win_back, win_front);
5358   4          
5359   4          
5360   4              delay1ms(10);
5361   4            }
5362   3          }
5363   2        }
5364   1        else {
5365   2          //-----------------
5366   2          //shift
5367   2          if(direction == NAVI_KEY_RIGHT) {
5368   3            for(i=0; i <= 1024; i+=16) {
5369   4              SOsd_SetScreen(win_back, sx+i,sy, dx-i, dy);
5370   4            
5371   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc + (1024-i));
5372   4              SOsd_SetScreen(win_front, sx,sy, i, dy);
5373   4          
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 88  

5374   4              WaitVBlank(1);
5375   4              SOsd_UpdateReg(win_back, win_front);
5376   4          
5377   4          
5378   4              delay1ms(10);
5379   4            }
5380   3          }
5381   2          else if(direction == NAVI_KEY_LEFT) {
5382   3            for(i=0; i <= 1024; i+=16) {    
5383   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc + i);
5384   4              SOsd_SetScreen(win_back, sx,sy, dx-i, dy);
5385   4            
5386   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc);
5387   4              SOsd_SetScreen(win_front, sx + (1024 - i),sy, i, dy);
5388   4          
5389   4              WaitVBlank(1);
5390   4              SOsd_UpdateReg(win_back, win_front);
5391   4          
5392   4          
5393   4              delay1ms(10);
5394   4            }
5395   3          }
5396   2          else if(direction == NAVI_KEY_DOWN) {
5397   3            for(i=0; i <= 600; i+=10) {   
5398   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc);
5399   4              SOsd_SetScreen(win_back, sx, sy+i, dx, dy-i);
5400   4      
5401   4              dTemp = 1024;
5402   4              dTemp *= (600-i);
5403   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc + dTemp);
5404   4              SOsd_SetScreen(win_front, sx, sy, dx, i);
5405   4      
5406   4              WaitVBlank(1);
5407   4              SOsd_UpdateReg(win_back, win_front);
5408   4      
5409   4      
5410   4              delay1ms(10);
5411   4            }
5412   3          }
5413   2          else if(direction == NAVI_KEY_UP) {
5414   3            for(i=0; i <= 600; i+=10) {
5415   4              dTemp = 1024;
5416   4              dTemp *= i;
5417   4              SOsd_SetSpiStartOffset(win_back, back_header_table.image_loc + dTemp);
5418   4              SOsd_SetScreen(win_back, sx, sy, dx, dy-i);
5419   4      
5420   4              SOsd_SetSpiStartOffset(win_front, front_header_table.image_loc);
5421   4              SOsd_SetScreen(win_front, sx, 600 - i , dx, i);
5422   4          
5423   4              WaitVBlank(1);
5424   4              SOsd_UpdateReg(win_back, win_front);
5425   4          
5426   4          
5427   4              delay1ms(10);
5428   4            }
5429   3          }
5430   2        }
5431   1      }
5432          
5433          /**
5434          * description
5435          *   SpiOSD 1024x600 slider show demo 1.
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 89  

5436          * draw the selected items
5437          */
5438          void SOsdDemo1(void)
5439          {
5440   1        BYTE winno = 1;
5441   1        BYTE lut = 0;
5442   1        BYTE i;
5443   1        BYTE win_back=1;
5444   1        struct image_item_info_s *image0;
5445   1      
5446   1      //flush input
5447   1      CpuTouchPressed = 0;
5448   1      CpuTouchChanged = 0;
5449   1      
5450   1      
5451   1        SOsd_CleanReg();
5452   1        SpiOsdSetDeValue();
5453   1        FOsdSetDeValue();
5454   1        SpiOsdWinHWOffAll(0);
5455   1      
5456   1        //init SOSD
5457   1        SpiOsdEnable(ON);
5458   1      
5459   1        SOsd_CleanRlc();
5460   1        SOsd_UpdateRlc();
5461   1        SOsd_SetSpiStartBit(1,0);
5462   1        SOsd_SetLutOffset( 1, 0 );
5463   1        SOsd_CleanReg();
5464   1        SOsd_UpdateReg(0,8);
5465   1      
5466   1        for(i=0; ; i++) {
5467   2          i %= DEMO1024x600IMG_NUM;
5468   2          UseSOsdHwBuff = 1;
5469   2      
5470   2          SOsd_CleanLut();
5471   2          SOsd_CleanRlc();
5472   2          SOsd_CleanReg();
5473   2          //if(i==0) {
5474   2          //  SOsd_UpdateReg(0,8);
5475   2          //  SOsd_UpdateRlc();
5476   2          //}
5477   2          image0 = MonSOsdImg_Get_ImgeItem(DEMO1024x600IMG_START+i);
5478   2          SliderShow_Set(win_back, image0, 0);
5479   2      
5480   2          SOsd_show(1);
5481   2          UseSOsdHwBuff = 0;
5482   2      
5483   2          if(CheckHumanInputs(0)) //if (RS_ready())
5484   2            break;
5485   2          delay1ms(500);
5486   2          delay1ms(500);
5487   2          delay1ms(500);
5488   2          delay1ms(500);
5489   2          if(CheckHumanInputs(0)) //if (RS_ready())
5490   2            break;
5491   2        }
5492   1      }
5493          
5494          struct SOSD_DEMO2_TABLE_s {
5495            BYTE back_img;
5496            BYTE front_img;
5497            BYTE effect;    //0:move, 1:overwrite
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 90  

5498            BYTE direction;
5499          };
5500          code struct SOSD_DEMO2_TABLE_s sosd_demo2_table[] = {
5501            { 32,31, 0, NAVI_KEY_RIGHT},
5502            { 31,32, 0, NAVI_KEY_LEFT},
5503            { 32,31, 0, NAVI_KEY_DOWN},
5504            { 31,32, 0, NAVI_KEY_UP},
5505            { 32,31, 1, NAVI_KEY_RIGHT},
5506            { 31,32, 1, NAVI_KEY_LEFT},
5507            { 32,31, 1, NAVI_KEY_DOWN},
5508            { 31,32, 1, NAVI_KEY_UP}
5509          };
5510          
5511          
5512          /**
5513          * description
5514          * SpiOSD 1024x600 slider show demo 2
5515          */
5516          void SOsdDemo2(void)
5517          {
5518   1        BYTE lut = 0;
5519   1      
5520   1        struct image_item_info_s *image0;
5521   1        struct image_item_info_s *image1;
5522   1        BYTE win_back=1;
5523   1        BYTE win_front=3;
5524   1        struct SOSD_DEMO2_TABLE_s *pDemoTable;
5525   1        BYTE i;
5526   1      
5527   1      //flush input
5528   1      
5529   1        SOsd_CleanReg();
5530   1        SpiOsdSetDeValue();
5531   1        FOsdSetDeValue();
5532   1        SpiOsdWinHWOffAll(0);
5533   1      
5534   1        //init SOSD
5535   1        SpiOsdEnable(ON);
5536   1        SOsd_CleanRlc();
5537   1        SOsd_UpdateRlc();
5538   1        SOsd_SetSpiStartBit(1,0);
5539   1        SOsd_SetLutOffset( 1, 0 );
5540   1        SOsd_CleanReg();
5541   1        SOsd_UpdateReg(0,8);
5542   1      
5543   1        for(i=0; ; i++) {
5544   2          i &= 0x07;  //I have 8 methods
5545   2          pDemoTable = &sosd_demo2_table[i];  
5546   2      
5547   2          UseSOsdHwBuff = 1;
5548   2      
5549   2          SOsd_CleanLut();
5550   2          SOsd_CleanRlc();
5551   2          SOsd_CleanReg();
5552   2          //if(i==0) {
5553   2          //  SOsd_UpdateReg(0,8);
5554   2          //  SOsd_UpdateRlc();
5555   2          //}
5556   2      
5557   2      
5558   2          image0 = MonSOsdImg_Get_ImgeItem(pDemoTable->back_img);
5559   2          image1 = MonSOsdImg_Get_ImgeItem(pDemoTable->front_img);
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 91  

5560   2      
5561   2          SliderShow_Set(win_back, image0, 0);
5562   2          SliderShow_Set(win_front,image1, 0);
5563   2      
5564   2          SOsd_SetScreen( win_front, 0, 0, 0, 600); //clear width.
5565   2      
5566   2          //draw first stage.
5567   2          SOsd_show(1);
5568   2          UseSOsdHwBuff = 0;
5569   2      
5570   2          //scroll
5571   2          SliderShow_Show(pDemoTable->effect, pDemoTable->direction);
5572   2      
5573   2          if(CheckHumanInputs(0)) //if (RS_ready())
5574   2            break;
5575   2          delay1ms(500);
5576   2          delay1ms(500);
5577   2          delay1ms(500);
5578   2          delay1ms(500);
5579   2          if(CheckHumanInputs(0)) //if (RS_ready())
5580   2            break;
5581   2        }
5582   1      }
5583          
5584          
5585          /**
5586          * description
5587          *   SpiOSD 1280x800 from 0x100_0000 slider show demo 3.
5588          * draw the selected items
5589          */
5590          #define DEMO1280x800IMG_NUM 5
5591          #define DEMO1280x800IMG_START 34
5592          void SOsdDemo3(void)
5593          {
5594   1        BYTE winno = 1;
5595   1        BYTE lut = 0;
5596   1        BYTE i;
5597   1        BYTE win_back=1;
5598   1        struct image_item_info_s *image0;
5599   1        BYTE bTemp;
5600   1      
5601   1        SOsd_CleanReg();
5602   1        SpiOsdSetDeValue();
5603   1        FOsdSetDeValue();
5604   1        SpiOsdWinHWOffAll(0);
5605   1      
5606   1        //init SOSD
5607   1        SpiOsdEnable(ON);
5608   1      
5609   1        SOsd_CleanRlc();
5610   1        SOsd_UpdateRlc();
5611   1        SOsd_SetSpiStartBit(1,0);
5612   1        SOsd_SetLutOffset( 1, 0 );
5613   1      
5614   1        SOsd_CleanReg();
5615   1        SOsd_UpdateReg(0,8);
5616   1      
5617   1        //cheating...
5618   1        bTemp=ReadTW88(REG21C);
5619   1        WriteTW88(REG21C, bTemp | 0x07);
5620   1        ScalerWriteFreerunTotal(1758, 858);
5621   1      
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 92  

5622   1        for(i=0; ; i++) {
5623   2          i %= DEMO1280x800IMG_NUM;
5624   2          UseSOsdHwBuff = 1;
5625   2      
5626   2          SOsd_CleanLut();
5627   2          SOsd_CleanRlc();
5628   2          SOsd_CleanReg();
5629   2          //if(i==0) {
5630   2          //  SOsd_UpdateReg(0,8);
5631   2          //  SOsd_UpdateRlc();
5632   2          //}
5633   2          image0 = MonSOsdImg_Get_ImgeItem(DEMO1280x800IMG_START+i);
5634   2          SliderShow_Set(win_back, image0, 0);
5635   2      
5636   2          SOsd_show(1);
5637   2          UseSOsdHwBuff = 0;
5638   2      
5639   2          if(CheckHumanInputs(0)) //if (RS_ready())
5640   2            break;
5641   2          delay1ms(500);
5642   2          delay1ms(500);
5643   2          delay1ms(500);
5644   2          delay1ms(500);
5645   2          if(CheckHumanInputs(0)) //if (RS_ready())
5646   2            break;
5647   2        }
5648   1        SOsd_Enable(win_back,0);
5649   1        SOsd_UpdateReg(win_back,win_back);
5650   1        WriteTW88(REG21C, bTemp);
5651   1      }
5652          
5653          
5654          #endif //..SUPPORT_SPIOSD
5655          
5656          
*** WARNING C294 IN LINE 501 OF source36\SOsdMenu.c: unreachable code
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 93  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0300 (BEGIN)
0000         L?0769:
0000 110000      R     ACALL   push_menu_stack_level
0003 90000000    R     MOV     DPTR,#curr_menu
0007 7400        E     MOV     A,#MBYTE menu_phone_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#HIGH menu_phone_page
000D F0                MOVX    @DPTR,A
000E 7400        E     MOV     A,#LOW menu_phone_page
0010         L?0770:
0010 A3                INC     DPTR
0011         L?0771:
0011 F0                MOVX    @DPTR,A
0012         L?0772:
0012 90000000    R     MOV     DPTR,#curr_menu
0016 E0                MOVX    A,@DPTR
0017 FB                MOV     R3,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A FA                MOV     R2,A
001B A3                INC     DPTR
001C E0                MOVX    A,@DPTR
001D 2401              ADD     A,#01H
001F F9                MOV     R1,A
0020 E4                CLR     A
0021 3A                ADDC    A,R2
0022 FA                MOV     R2,A
0023 7401              MOV     A,#01H
0025         L?0773:
0025 110000      E     ACALL   ?C?CSTPTR
0028         L?0774:
0028 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
002C         L?0775:
002C F0                MOVX    @DPTR,A
002D         L?0776:
002D 90000000    R     MOV     DPTR,#curr_menu
0031         L?0777:
0031 E0                MOVX    A,@DPTR
0032 FB                MOV     R3,A
0033 A3                INC     DPTR
0034 E0                MOVX    A,@DPTR
0035 FA                MOV     R2,A
0036 A3                INC     DPTR
0037 E0                MOVX    A,@DPTR
0038 22                RET     
0039         L?0778:
0039         L?0779:
0039 2405              ADD     A,#05H
003B F9                MOV     R1,A
003C E4                CLR     A
003D 3A                ADDC    A,R2
003E FA                MOV     R2,A
003F 110000      E     ACALL   ?C?PLDPTR
0042         L?0780:
0042 E9                MOV     A,R1
0043 2401              ADD     A,#01H
0045         L?0781:
0045 F9                MOV     R1,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 94  

0046 E4                CLR     A
0047 3A                ADDC    A,R2
0048 FA                MOV     R2,A
0049 010000      E     AJMP    ?C?PLDPTR
004C         L?0782:
004C         L?0783:
004C 2403              ADD     A,#03H
004E F9                MOV     R1,A
004F E4                CLR     A
0050 3A                ADDC    A,R2
0051 FA                MOV     R2,A
0052 110000      E     ACALL   ?C?CLDPTR
0055 FF                MOV     R7,A
0056         L?0784:
0056 90000000    R     MOV     DPTR,#curr_menu
005A A3                INC     DPTR
005B E0                MOVX    A,@DPTR
005C FA                MOV     R2,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F         L?0785:
005F 2401              ADD     A,#01H
0061         L?0786:
0061 F9                MOV     R1,A
0062 E4                CLR     A
0063 3A                ADDC    A,R2
0064 FA                MOV     R2,A
0065 010000      E     AJMP    ?C?CLDPTR
0068         L?0787:
0068 EE                MOV     A,R6
0069         L?0788:
0069 75F017            MOV     B,#017H
006C A4                MUL     AB
006D FF                MOV     R7,A
006E AEF0              MOV     R6,B
0070         L?0789:
0070 90000000    R     MOV     DPTR,#curr_menu
0074 A3                INC     DPTR
0075 E0                MOVX    A,@DPTR
0076 FA                MOV     R2,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 22                RET     
007A         L?0790:
007A 90000000    R     MOV     DPTR,#menu_item
007E         L?0791:
007E E9                MOV     A,R1
007F 2F                ADD     A,R7
0080 F9                MOV     R1,A
0081 EA                MOV     A,R2
0082 3E                ADDC    A,R6
0083 FA                MOV     R2,A
0084         L?0792:
0084 EB                MOV     A,R3
0085 F0                MOVX    @DPTR,A
0086 A3                INC     DPTR
0087 EA                MOV     A,R2
0088 F0                MOVX    @DPTR,A
0089 A3                INC     DPTR
008A E9                MOV     A,R1
008B F0                MOVX    @DPTR,A
008C         L?0793:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 95  

008C 2404              ADD     A,#04H
008E         L?0794:
008E F9                MOV     R1,A
008F E4                CLR     A
0090 3A                ADDC    A,R2
0091 FA                MOV     R2,A
0092 010000      E     AJMP    ?C?ILDPTR
0095         L?0798:
0095 110000      R     ACALL   push_menu_stack_level
0098 7B00        E     MOV     R3,#MBYTE menu_slider3_page
009A 7A00        E     MOV     R2,#HIGH menu_slider3_page
009C 7900        E     MOV     R1,#LOW menu_slider3_page
009E         L?0799:
009E 90000000    R     MOV     DPTR,#curr_menu
00A2 EB                MOV     A,R3
00A3 F0                MOVX    @DPTR,A
00A4 A3                INC     DPTR
00A5 EA                MOV     A,R2
00A6 F0                MOVX    @DPTR,A
00A7 A3                INC     DPTR
00A8 E9                MOV     A,R1
00A9 F0                MOVX    @DPTR,A
00AA         L?0800:
00AA 2401              ADD     A,#01H
00AC F9                MOV     R1,A
00AD E4                CLR     A
00AE 3A                ADDC    A,R2
00AF FA                MOV     R2,A
00B0 22                RET     
00B1         L?0801:
00B1 E4                CLR     A
00B2 FF                MOV     R7,A
00B3 7E04              MOV     R6,#04H
00B5 FD                MOV     R5,A
00B6 FC                MOV     R4,A
00B7 90000000    R     MOV     DPTR,#dTemp
00BB 110000      E     ACALL   ?C?LSTXDATA
00BE 90000000    R     MOV     DPTR,#dTemp
00C2 E0                MOVX    A,@DPTR
00C3 F8                MOV     R0,A
00C4 A3                INC     DPTR
00C5 E0                MOVX    A,@DPTR
00C6 F9                MOV     R1,A
00C7 A3                INC     DPTR
00C8 E0                MOVX    A,@DPTR
00C9 FA                MOV     R2,A
00CA A3                INC     DPTR
00CB E0                MOVX    A,@DPTR
00CC FB                MOV     R3,A
00CD 90000000    R     MOV     DPTR,#i
00D1 E0                MOVX    A,@DPTR
00D2 FE                MOV     R6,A
00D3 A3                INC     DPTR
00D4 E0                MOVX    A,@DPTR
00D5 FF                MOV     R7,A
00D6         L?0802:
00D6 E4                CLR     A
00D7 FC                MOV     R4,A
00D8 FD                MOV     R5,A
00D9 110000      E     ACALL   ?C?LMUL
00DC 90000000    R     MOV     DPTR,#dTemp
00E0 110000      E     ACALL   ?C?LSTXDATA
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 96  

00E3 90000000    R     MOV     DPTR,#dTemp
00E7         L?0803:
00E7 E0                MOVX    A,@DPTR
00E8 FC                MOV     R4,A
00E9 A3                INC     DPTR
00EA E0                MOVX    A,@DPTR
00EB A3                INC     DPTR
00EC         L?0804:
00EC FD                MOV     R5,A
00ED E0                MOVX    A,@DPTR
00EE FE                MOV     R6,A
00EF A3                INC     DPTR
00F0 E0                MOVX    A,@DPTR
00F1 FF                MOV     R7,A
00F2 22                RET     
00F3         L?0805:
00F3 75F017            MOV     B,#017H
00F6 A4                MUL     AB
00F7 29                ADD     A,R1
00F8 F9                MOV     R1,A
00F9 EA                MOV     A,R2
00FA 35F0              ADDC    A,B
00FC FA                MOV     R2,A
00FD         L?0806:
00FD EB                MOV     A,R3
00FE         L?0807:
00FE F0                MOVX    @DPTR,A
00FF A3                INC     DPTR
0100 EA                MOV     A,R2
0101 F0                MOVX    @DPTR,A
0102 A3                INC     DPTR
0103 E9                MOV     A,R1
0104 F0                MOVX    @DPTR,A
0105 22                RET     
0106         L?0810:
0106         L?0811:
0106 90000000    R     MOV     DPTR,#index
010A         L?0812:
010A E0                MOVX    A,@DPTR
010B FF                MOV     R7,A
010C         L?0813:
010C 2400        R     ADD     A,#LOW curr_slide3_value
010E         L?0814:
010E F582              MOV     DPL,A
0110 E4                CLR     A
0111 3400        R     ADDC    A,#HIGH curr_slide3_value
0113 F583              MOV     DPH,A
0115 759300      E     MOV     DPX,#?C?XDATASEG
0118 22                RET     
0119         L?0815:
0119         L?0816:
0119 2402              ADD     A,#02H
011B F9                MOV     R1,A
011C E4                CLR     A
011D 3A                ADDC    A,R2
011E FA                MOV     R2,A
011F 7405              MOV     A,#05H
0121         L?0817:
0121 110000      E     ACALL   ?C?CSTPTR
0124 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
0128 22                RET     
0129         L?0818:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 97  

0129         L?0819:
0129 110000      R     ACALL   push_menu_stack_level
012C         L?0820:
012C 90000000    R     MOV     DPTR,#curr_menu
0130 7400        E     MOV     A,#MBYTE menu_slider_page
0132 F0                MOVX    @DPTR,A
0133 A3                INC     DPTR
0134 7400        E     MOV     A,#HIGH menu_slider_page
0136 F0                MOVX    @DPTR,A
0137 A3                INC     DPTR
0138 7400        E     MOV     A,#LOW menu_slider_page
013A 22                RET     
013B         L?0821:
013B 90000000    R     MOV     DPTR,#ch
013F         L?0822:
013F E0                MOVX    A,@DPTR
0140         L?0823:
0140 FF                MOV     R7,A
0141         L?0824:
0141 759300      E     MOV     DPX,#?C?XDATASEG
0144 E500        E     MOV     A,regTW88+01H
0146 2407              ADD     A,#07H
0148         L?0825:
0148 F582              MOV     DPL,A
014A E500        E     MOV     A,regTW88
014C 3403              ADDC    A,#03H
014E F583              MOV     DPH,A
0150 759300      E     MOV     DPX,#?C?XDATASEG
0153 22                RET     
0154         L?0826:
0154 90000000    R     MOV     DPTR,#i
0158 E0                MOVX    A,@DPTR
0159 FE                MOV     R6,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D C3                CLR     C
015E E4                CLR     A
015F 9F                SUBB    A,R7
0160 FF                MOV     R7,A
0161 7404              MOV     A,#04H
0163 9E                SUBB    A,R6
0164 FE                MOV     R6,A
0165 E4                CLR     A
0166 FC                MOV     R4,A
0167 FD                MOV     R5,A
0168         L?0827:
0168 90000000    R     MOV     DPTR,#front_header_table+04H
016C         L?0828:
016C E0                MOVX    A,@DPTR
016D F8                MOV     R0,A
016E A3                INC     DPTR
016F         L?0829:
016F E0                MOVX    A,@DPTR
0170 F9                MOV     R1,A
0171 A3                INC     DPTR
0172 E0                MOVX    A,@DPTR
0173 FA                MOV     R2,A
0174 A3                INC     DPTR
0175 E0                MOVX    A,@DPTR
0176 22                RET     
0177         L?0831:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 98  

0177         L?0832:
0177 90000000    R     MOV     DPTR,#i
017B         L?0833:
017B E0                MOVX    A,@DPTR
017C         L?0834:
017C 75F017            MOV     B,#017H
017F         L?0835:
017F A4                MUL     AB
0180 29                ADD     A,R1
0181 F9                MOV     R1,A
0182 EA                MOV     A,R2
0183 35F0              ADDC    A,B
0185 FA                MOV     R2,A
0186 22                RET     
0187         L?0836:
0187         L?0837:
0187 F9                MOV     R1,A
0188 EB                MOV     A,R3
0189 8A83              MOV     DPH,R2
018B 8982              MOV     DPL,R1
018D 22                RET     
018E         L?0838:
018E         L?0839:
018E 7405              MOV     A,#05H
0190         L?0840:
0190 110000      E     ACALL   ?C?CSTPTR
0193 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0197 F0                MOVX    @DPTR,A
0198 22                RET     
0199         L?0842:
0199         L?0843:
0199 2402              ADD     A,#02H
019B F9                MOV     R1,A
019C E4                CLR     A
019D 3A                ADDC    A,R2
019E FA                MOV     R2,A
019F 22                RET     
01A0         L?0844:
01A0 FF                MOV     R7,A
01A1 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+04H
01A5 E5F0              MOV     A,B
01A7 F0                MOVX    @DPTR,A
01A8 A3                INC     DPTR
01A9 EF                MOV     A,R7
01AA F0                MOVX    @DPTR,A
01AB 90000000    R     MOV     DPTR,#header
01AF         L?0845:
01AF A3                INC     DPTR
01B0 E0                MOVX    A,@DPTR
01B1 FA                MOV     R2,A
01B2 A3                INC     DPTR
01B3 E0                MOVX    A,@DPTR
01B4 F9                MOV     R1,A
01B5 110000      E     ACALL   ?C?LLDPTR
01B8 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+06H
01BC 010000      E     AJMP    ?C?LSTXDATA
01BF         L?0846:
01BF FF                MOV     R7,A
01C0         L?0847:
01C0 759300      E     MOV     DPX,#?C?XDATASEG
01C3 E500        E     MOV     A,regTW88+01H
01C5 2401              ADD     A,#01H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 99  

01C7         L?0848:
01C7 F582              MOV     DPL,A
01C9 E500        E     MOV     A,regTW88
01CB 3402              ADDC    A,#02H
01CD F583              MOV     DPH,A
01CF 759300      E     MOV     DPX,#?C?XDATASEG
01D2 22                RET     
01D3         L?0849:
01D3 E0                MOVX    A,@DPTR
01D4 FE                MOV     R6,A
01D5 A3                INC     DPTR
01D6 E0                MOVX    A,@DPTR
01D7 FF                MOV     R7,A
01D8 90000000    R     MOV     DPTR,#sx+01H
01DC E0                MOVX    A,@DPTR
01DD 2F                ADD     A,R7
01DE FD                MOV     R5,A
01DF 90000000    R     MOV     DPTR,#sx
01E3 E0                MOVX    A,@DPTR
01E4 3E                ADDC    A,R6
01E5 FC                MOV     R4,A
01E6 90000000    R     MOV     DPTR,#sy
01EA E0                MOVX    A,@DPTR
01EB FA                MOV     R2,A
01EC A3                INC     DPTR
01ED E0                MOVX    A,@DPTR
01EE FB                MOV     R3,A
01EF 90000000    R     MOV     DPTR,#dx
01F3 E0                MOVX    A,@DPTR
01F4 F8                MOV     R0,A
01F5 A3                INC     DPTR
01F6 E0                MOVX    A,@DPTR
01F7 C3                CLR     C
01F8 9F                SUBB    A,R7
01F9 FF                MOV     R7,A
01FA E8                MOV     A,R0
01FB 9E                SUBB    A,R6
01FC 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
0200 F0                MOVX    @DPTR,A
0201 A3                INC     DPTR
0202 EF                MOV     A,R7
0203 F0                MOVX    @DPTR,A
0204 90000000    R     MOV     DPTR,#dy
0208 E0                MOVX    A,@DPTR
0209 FF                MOV     R7,A
020A A3                INC     DPTR
020B E0                MOVX    A,@DPTR
020C CF                XCH     A,R7
020D         L?0850:
020D 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
0211 F0                MOVX    @DPTR,A
0212 A3                INC     DPTR
0213 22                RET     
0214         L?0852:
0214         L?0853:
0214 A3                INC     DPTR
0215         L?0854:
0215 7400        R     MOV     A,#MBYTE header_table
0217 F0                MOVX    @DPTR,A
0218 A3                INC     DPTR
0219 7400        R     MOV     A,#HIGH header_table
021B F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 100 

021C A3                INC     DPTR
021D 7400        R     MOV     A,#LOW header_table
021F 22                RET     
0220         L?0855:
0220 FA                MOV     R2,A
0221 F9                MOV     R1,A
0222 F8                MOV     R0,A
0223 110000      E     ACALL   ?C?LMUL
0226 90000000    R     MOV     DPTR,#start_byte
022A 110000      E     ACALL   ?C?LSTXDATA
022D 90000000    R     MOV     DPTR,#start_byte
0231 E0                MOVX    A,@DPTR
0232 FC                MOV     R4,A
0233 A3                INC     DPTR
0234 E0                MOVX    A,@DPTR
0235 FD                MOV     R5,A
0236 A3                INC     DPTR
0237 E0                MOVX    A,@DPTR
0238 FE                MOV     R6,A
0239 A3                INC     DPTR
023A E0                MOVX    A,@DPTR
023B 5407              ANL     A,#07H
023D FF                MOV     R7,A
023E A3                INC     DPTR
023F EF                MOV     A,R7
0240 F0                MOVX    @DPTR,A
0241 E0                MOVX    A,@DPTR
0242 C3                CLR     C
0243 13                RRC     A
0244 F0                MOVX    @DPTR,A
0245 90000000    R     MOV     DPTR,#start_byte
0249 A3                INC     DPTR
024A A3                INC     DPTR
024B A3                INC     DPTR
024C E0                MOVX    A,@DPTR
024D FF                MOV     R7,A
024E E4                CLR     A
024F 7B08              MOV     R3,#08H
0251 FA                MOV     R2,A
0252 F9                MOV     R1,A
0253 F8                MOV     R0,A
0254 110000      E     ACALL   ?C?ULDIV
0257         L?0856:
0257 90000000    R     MOV     DPTR,#start_byte
025B 010000      E     AJMP    ?C?LSTXDATA
025E         L?0857:
025E         L?0858:
025E F0                MOVX    @DPTR,A
025F         L?0859:
025F 110000      R     ACALL   push_menu_stack_level
0262 90000000    R     MOV     DPTR,#curr_menu
0266 22                RET     
0267         L?0860:
0267         L?0861:
0267 E9                MOV     A,R1
0268 2F                ADD     A,R7
0269 F9                MOV     R1,A
026A EA                MOV     A,R2
026B 3E                ADDC    A,R6
026C FA                MOV     R2,A
026D E9                MOV     A,R1
026E 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 101 

026F         L?0862:
026F         L?0863:
026F 2404              ADD     A,#04H
0271         L?0864:
0271 F9                MOV     R1,A
0272 E4                CLR     A
0273 3A                ADDC    A,R2
0274 FA                MOV     R2,A
0275 010000      E     AJMP    ?C?LLDPTR
0278         L?0865:
0278         L?0866:
0278 FF                MOV     R7,A
0279 90000000    R     MOV     DPTR,#phone_start
027D E0                MOVX    A,@DPTR
027E 90000000    R     MOV     DPTR,#text_info
0282         L?0867:
0282 2F                ADD     A,R7
0283 FF                MOV     R7,A
0284 E4                CLR     A
0285 35F0              ADDC    A,B
0287 FE                MOV     R6,A
0288 A3                INC     DPTR
0289 E0                MOVX    A,@DPTR
028A FA                MOV     R2,A
028B A3                INC     DPTR
028C E0                MOVX    A,@DPTR
028D 22                RET     
028E         L?0868:
028E         L?0869:
028E EF                MOV     A,R7
028F 110000      E     ACALL   ?C?CSTPTR
0292 110000      E     ACALL   ?C?CLDPTR
0295 FF                MOV     R7,A
0296 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
029A 22                RET     
029B         L?0870:
029B         L?0871:
029B 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+04H
029F         L?0872:
029F FF                MOV     R7,A
02A0 E5F0              MOV     A,B
02A2 F0                MOVX    @DPTR,A
02A3 A3                INC     DPTR
02A4 EF                MOV     A,R7
02A5 22                RET     
02A6         L?0873:
02A6         L?0874:
02A6 F582              MOV     DPL,A
02A8 8A83              MOV     DPH,R2
02AA 8B93              MOV     DPX,R3
02AC 22                RET     
02AD         L?0875:
02AD         L?0876:
02AD FB                MOV     R3,A
02AE E5F0              MOV     A,B
02B0         L?0877:
02B0 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
02B4 F0                MOVX    @DPTR,A
02B5 A3                INC     DPTR
02B6 EB                MOV     A,R3
02B7 F0                MOVX    @DPTR,A
02B8 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 102 

02B9         L?0878:
02B9 F0                MOVX    @DPTR,A
02BA         L?0879:
02BA 7400        E     MOV     A,#MBYTE ImgAdjGetBrightnessY
02BC         L?0880:
02BC 90000000    R     MOV     DPTR,#?_InitSlideCtrl?BYTE+03H
02C0 F0                MOVX    @DPTR,A
02C1 A3                INC     DPTR
02C2 22                RET     
02C3         L?0881:
02C3         L?0882:
02C3 90000000    R     MOV     DPTR,#header
02C7 A3                INC     DPTR
02C8 E0                MOVX    A,@DPTR
02C9 FA                MOV     R2,A
02CA A3                INC     DPTR
02CB E0                MOVX    A,@DPTR
02CC 22                RET     
02CD         L?0883:
02CD 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
02D1 F0                MOVX    @DPTR,A
02D2         L?0884:
02D2 90000000    R     MOV     DPTR,#sosd_win
02D6 E0                MOVX    A,@DPTR
02D7 FF                MOV     R7,A
02D8 22                RET     
02D9         L?0885:
02D9         L?0886:
02D9 110000      E     ACALL   ?C?LLDPTR0
02DC 90000000    R     MOV     DPTR,#dTemp
02E0 A3                INC     DPTR
02E1 A3                INC     DPTR
02E2 A3                INC     DPTR
02E3 E0                MOVX    A,@DPTR
02E4 FF                MOV     R7,A
02E5 EB                MOV     A,R3
02E6 4F                ORL     A,R7
02E7 FF                MOV     R7,A
02E8 EA                MOV     A,R2
02E9 FE                MOV     R6,A
02EA E9                MOV     A,R1
02EB FD                MOV     R5,A
02EC E8                MOV     A,R0
02ED FC                MOV     R4,A
02EE 22                RET     
02EF         L?0887:
02EF A3                INC     DPTR
02F0 F0                MOVX    @DPTR,A
02F1 A3                INC     DPTR
02F2 E9                MOV     A,R1
02F3 F0                MOVX    @DPTR,A
02F4 A3                INC     DPTR
02F5 22                RET     
02F6         L?0888:
02F6         L?0889:
02F6 2410              ADD     A,#010H
02F8         L?0890:
02F8 F0                MOVX    @DPTR,A
02F9 90000000    R     MOV     DPTR,#i
02FD E0                MOVX    A,@DPTR
02FE 3400              ADDC    A,#00H
0300 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 103 

0301 22                RET     
0302         L?0891:
0302         L?0892:
0302 D3                SETB    C
0303 90000000    R     MOV     DPTR,#i+01H
0307 E0                MOVX    A,@DPTR
0308 9458              SUBB    A,#058H
030A 90000000    R     MOV     DPTR,#i
030E E0                MOVX    A,@DPTR
030F 9402              SUBB    A,#02H
0311 22                RET     
0312         L?0893:
0312         L?0894:
0312 110000      E     ACALL   ?C?LLDPTR0
0315 EF                MOV     A,R7
0316 2B                ADD     A,R3
0317 FF                MOV     R7,A
0318 EE                MOV     A,R6
0319 3A                ADDC    A,R2
031A         L?0895:
031A FE                MOV     R6,A
031B ED                MOV     A,R5
031C 39                ADDC    A,R1
031D FD                MOV     R5,A
031E EC                MOV     A,R4
031F 38                ADDC    A,R0
0320 22                RET     
0321         L?0896:
0321 2401              ADD     A,#01H
0323 FD                MOV     R5,A
0324 E4                CLR     A
0325 33                RLC     A
0326 FC                MOV     R4,A
0327         L?0897:
0327 E0                MOVX    A,@DPTR
0328 75F002            MOV     B,#02H
032B A4                MUL     AB
032C 2D                ADD     A,R5
032D FF                MOV     R7,A
032E 22                RET     
032F         L?0898:
032F         L?0899:
032F 90000000    R     MOV     DPTR,#sosd_win
0333 E0                MOVX    A,@DPTR
0334 FF                MOV     R7,A
0335 22                RET     
0336         L?0900:
0336         L?0901:
0336 90000000    R     MOV     DPTR,#MenuInputMain
033A EF                MOV     A,R7
033B F0                MOVX    @DPTR,A
033C 22                RET     
033D         L?0902:
033D         L?0903:
033D 7C00              MOV     R4,#00H
033F         L?0904:
033F 90000000    R     MOV     DPTR,#curr_slide_value
0343 E0                MOVX    A,@DPTR
0344 FD                MOV     R5,A
0345 E4                CLR     A
0346 FF                MOV     R7,A
0347 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 104 

0348         L?0905:
0348         L?0906:
0348 7808              MOV     R0,#08H
034A 110000      E     ACALL   ?C?ULSHR
034D 90000000    R     MOV     DPTR,#dTemp
0351         L?0907:
0351 110000      E     ACALL   ?C?LSTXDATA
0354 90000000    R     MOV     DPTR,#header
0358 22                RET     
0359         L?0908:
0359 110000      E     ACALL   ?C?LLDPTR
035C         L?0909:
035C EF                MOV     A,R7
035D 2410              ADD     A,#010H
035F FF                MOV     R7,A
0360 E4                CLR     A
0361 3E                ADDC    A,R6
0362 FE                MOV     R6,A
0363 E4                CLR     A
0364 3D                ADDC    A,R5
0365 FD                MOV     R5,A
0366 E4                CLR     A
0367 3C                ADDC    A,R4
0368 22                RET     
0369         L?0910:
0369 A3                INC     DPTR
036A F0                MOVX    @DPTR,A
036B A3                INC     DPTR
036C E9                MOV     A,R1
036D F0                MOVX    @DPTR,A
036E A3                INC     DPTR
036F 22                RET     
0370         L?0911:
0370         L?0912:
0370 90000000    R     MOV     DPTR,#MenuNoSignal
0374 EF                MOV     A,R7
0375 F0                MOVX    @DPTR,A
0376 7F01              MOV     R7,#01H
0378 22                RET     
0379         L?0913:
0379         L?0914:
0379 7401              MOV     A,#01H
037B 110000      E     ACALL   ?C?CILDPTR
037E 110000      E     ACALL   ?C?CLDPTR
0381 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0385 F0                MOVX    @DPTR,A
0386 22                RET     
0387         L?0915:
0387 EF                MOV     A,R7
0388 75F00F            MOV     B,#0FH
038B A4                MUL     AB
038C FF                MOV     R7,A
038D         L?0916:
038D E5F0              MOV     A,B
038F 8FF0              MOV     B,R7
0391 010000      E     AJMP    ?C?IILDX
0394         L?0917:
0394         L?0918:
0394 FB                MOV     R3,A
0395 E5F0              MOV     A,B
0397         L?0919:
0397 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 105 

039B F0                MOVX    @DPTR,A
039C A3                INC     DPTR
039D EB                MOV     A,R3
039E F0                MOVX    @DPTR,A
039F 22                RET     
03A0         L?0920:
03A0 90000000    R     MOV     DPTR,#palette
03A4 F0                MOVX    @DPTR,A
03A5 90000000    R     MOV     DPTR,#text_info
03A9         L?0921:
03A9 A3                INC     DPTR
03AA E0                MOVX    A,@DPTR
03AB FA                MOV     R2,A
03AC A3                INC     DPTR
03AD E0                MOVX    A,@DPTR
03AE 2401              ADD     A,#01H
03B0 22                RET     
03B1         L?0922:
03B1 7400        E     MOV     A,#MBYTE ImgAdjGetContrastY
03B3         L?0923:
03B3 90000000    R     MOV     DPTR,#?_InitSlideCtrl?BYTE+03H
03B7 F0                MOVX    @DPTR,A
03B8 A3                INC     DPTR
03B9 22                RET     
03BA         L?0924:
03BA C3                CLR     C
03BB         L?0925:
03BB FE                MOV     R6,A
03BC         L?0926:
03BC 90000000    R     MOV     DPTR,#x+01H
03C0 E0                MOVX    A,@DPTR
03C1 9F                SUBB    A,R7
03C2 90000000    R     MOV     DPTR,#x
03C6 E0                MOVX    A,@DPTR
03C7 22                RET     
03C8         L?0927:
03C8 C3                CLR     C
03C9         L?0928:
03C9 FE                MOV     R6,A
03CA         L?0929:
03CA 90000000    R     MOV     DPTR,#y+01H
03CE E0                MOVX    A,@DPTR
03CF 9F                SUBB    A,R7
03D0 90000000    R     MOV     DPTR,#y
03D4 E0                MOVX    A,@DPTR
03D5 22                RET     
03D6         L?0930:
03D6         L?0931:
03D6 90000000    R     MOV     DPTR,#i
03DA F0                MOVX    @DPTR,A
03DB A3                INC     DPTR
03DC F0                MOVX    @DPTR,A
03DD 22                RET     
03DE         L?0932:
03DE         L?0933:
03DE 90000000    R     MOV     DPTR,#header
03E2 A3                INC     DPTR
03E3 E0                MOVX    A,@DPTR
03E4 FA                MOV     R2,A
03E5 A3                INC     DPTR
03E6 E0                MOVX    A,@DPTR
03E7 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 106 

03E8         L?0934:
03E8 240B              ADD     A,#0BH
03EA         L?0935:
03EA F9                MOV     R1,A
03EB E4                CLR     A
03EC 3A                ADDC    A,R2
03ED FA                MOV     R2,A
03EE E5F0              MOV     A,B
03F0 8FF0              MOV     B,R7
03F2 010000      E     AJMP    ?C?ISTPTR
03F5         L?0936:
03F5 E0                MOVX    A,@DPTR
03F6 84                DIV     AB
03F7 E5F0              MOV     A,B
03F9         L?0937:
03F9 F0                MOVX    @DPTR,A
03FA         L?0938:
03FA 90000000    R     MOV     DPTR,#UseSOsdHwBuff
03FE 7401              MOV     A,#01H
0400 F0                MOVX    @DPTR,A
0401 22                RET     
0402         L?0940:
0402 EF                MOV     A,R7
0403 2406              ADD     A,#06H
0405         L?0941:
0405 FD                MOV     R5,A
0406 E4                CLR     A
0407 33                RLC     A
0408 FC                MOV     R4,A
0409 EE                MOV     A,R6
040A C3                CLR     C
040B 9D                SUBB    A,R5
040C EC                MOV     A,R4
040D 6480              XRL     A,#080H
040F F8                MOV     R0,A
0410 7480              MOV     A,#080H
0412 98                SUBB    A,R0
0413 22                RET     
0414         L?0942:
0414         L?0943:
0414 E4                CLR     A
0415 90000000    R     MOV     DPTR,#UseSOsdHwBuff
0419 F0                MOVX    @DPTR,A
041A 22                RET     
041B         L?0944:
041B A3                INC     DPTR
041C F0                MOVX    @DPTR,A
041D A3                INC     DPTR
041E E9                MOV     A,R1
041F F0                MOVX    @DPTR,A
0420 A3                INC     DPTR
0421 22                RET     
0422         L?0945:
0422         L?0946:
0422 2F                ADD     A,R7
0423 FF                MOV     R7,A
0424 EA                MOV     A,R2
0425 3E                ADDC    A,R6
0426 FE                MOV     R6,A
0427 E9                MOV     A,R1
0428 3D                ADDC    A,R5
0429 FD                MOV     R5,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 107 

042A E8                MOV     A,R0
042B 3C                ADDC    A,R4
042C FC                MOV     R4,A
042D 22                RET     
042E         L?0947:
042E 2F                ADD     A,R7
042F FB                MOV     R3,A
0430 E5F0              MOV     A,B
0432 3E                ADDC    A,R6
0433 FA                MOV     R2,A
0434 E0                MOVX    A,@DPTR
0435 FF                MOV     R7,A
0436 22                RET     
0437         L?0948:
0437 2408              ADD     A,#08H
0439         L?0949:
0439 F9                MOV     R1,A
043A E4                CLR     A
043B 3A                ADDC    A,R2
043C FA                MOV     R2,A
043D EF                MOV     A,R7
043E 010000      E     AJMP    ?C?CSTPTR
0441         L?0950:
0441         L?0951:
0441 E4                CLR     A
0442 90000000    E     MOV     DPTR,#?_SOsd_SetWin0Animation?BYTE+03H
0446 F0                MOVX    @DPTR,A
0447 FB                MOV     R3,A
0448 FD                MOV     R5,A
0449 7F01              MOV     R7,#01H
044B 22                RET     
044C         L?0952:
044C         L?0953:
044C 90000000    R     MOV     DPTR,#sosd_win
0450 E0                MOVX    A,@DPTR
0451 FF                MOV     R7,A
0452 22                RET     
0453         L?0954:
0453         L?0955:
0453 90000000    R     MOV     DPTR,#win
0457 E0                MOVX    A,@DPTR
0458 FF                MOV     R7,A
0459 22                RET     
045A         L?0956:
045A         L?0957:
045A 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
045E 010000      E     AJMP    ?C?LSTXDATA
0461         L?0958:
0461         L?0959:
0461 90000000    R     MOV     DPTR,#winno
0465         L?0960:
0465 E0                MOVX    A,@DPTR
0466 FF                MOV     R7,A
0467 90000000    R     MOV     DPTR,#text_info
046B 22                RET     
046C         L?0961:
046C FF                MOV     R7,A
046D D3                SETB    C
046E 90000000    R     MOV     DPTR,#i+01H
0472 E0                MOVX    A,@DPTR
0473 9F                SUBB    A,R7
0474         L?0962:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 108 

0474 AEF0              MOV     R6,B
0476 90000000    R     MOV     DPTR,#i
047A E0                MOVX    A,@DPTR
047B 22                RET     
047C         L?0963:
047C         L?0964:
047C EF                MOV     A,R7
047D 110000      E     ACALL   ?C?CSTPTR
0480 010000      E     AJMP    ?C?CLDPTR
0483         L?0968:
0483         L?0969:
0483 7808              MOV     R0,#08H
0485 110000      E     ACALL   ?C?LSHL
0488 110000      E     ACALL   ?C?LSTPTR
048B 90000000    R     MOV     DPTR,#dTemp
048F 22                RET     
0490         L?0970:
0490         L?0971:
0490 F9                MOV     R1,A
0491         L?0972:
0491 110000      E     ACALL   ?C?LSTPTR
0494 90000000    R     MOV     DPTR,#header
0498 22                RET     
0499         L?0973:
0499 FF                MOV     R7,A
049A E5F0              MOV     A,B
049C F0                MOVX    @DPTR,A
049D A3                INC     DPTR
049E EF                MOV     A,R7
049F 22                RET     
04A0         L?0974:
04A0         L?0975:
04A0 850082      E     MOV     DPL,regTW88+01H
04A3 850083      E     MOV     DPH,regTW88
04A6 759300      E     MOV     DPX,#?C?XDATASEG
04A9 A3                INC     DPTR
04AA A3                INC     DPTR
04AB A3                INC     DPTR
04AC 22                RET     
04AD         L?0976:
04AD 90000000    R     MOV     DPTR,#?_InitSlideCtrl?BYTE+03H
04B1 F0                MOVX    @DPTR,A
04B2 A3                INC     DPTR
04B3 22                RET     
04B4         L?0977:
04B4 A3                INC     DPTR
04B5 F0                MOVX    @DPTR,A
04B6 A3                INC     DPTR
04B7 E9                MOV     A,R1
04B8 F0                MOVX    @DPTR,A
04B9 A3                INC     DPTR
04BA 22                RET     
04BB         L?0978:
04BB         L?0979:
04BB 90000000    R     MOV     DPTR,#winno
04BF         L?0980:
04BF E0                MOVX    A,@DPTR
04C0 FF                MOV     R7,A
04C1 90000000    R     MOV     DPTR,#text_info
04C5 22                RET     
04C6         L?0981:
04C6 90000000    R     MOV     DPTR,#touch_curr_menu_focus
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 109 

04CA F0                MOVX    @DPTR,A
04CB         L?0982:
04CB 90000000    R     MOV     DPTR,#ret
04CF E0                MOVX    A,@DPTR
04D0 FF                MOV     R7,A
04D1 22                RET     
04D2         L?0983:
04D2 E0                MOVX    A,@DPTR
04D3 FF                MOV     R7,A
04D4         L?0984:
04D4 E4                CLR     A
04D5 90000000    R     MOV     DPTR,#?_SliderShow_Set?BYTE+04H
04D9 F0                MOVX    @DPTR,A
04DA A3                INC     DPTR
04DB F0                MOVX    @DPTR,A
04DC 22                RET     
04DD         L?0985:
04DD         L?0986:
04DD 759300      E     MOV     DPX,#?C?XDATASEG
04E0 E500        E     MOV     A,regTW88+01H
04E2 2404              ADD     A,#04H
04E4 22                RET     
04E5         L?0987:
04E5         L?0988:
04E5 E0                MOVX    A,@DPTR
04E6 FC                MOV     R4,A
04E7 A3                INC     DPTR
04E8 E0                MOVX    A,@DPTR
04E9 FD                MOV     R5,A
04EA C3                CLR     C
04EB EF                MOV     A,R7
04EC 9D                SUBB    A,R5
04ED FF                MOV     R7,A
04EE EE                MOV     A,R6
04EF 9C                SUBB    A,R4
04F0 22                RET     
04F1         L?0989:
04F1 90000000    R     MOV     DPTR,#header
04F5 A3                INC     DPTR
04F6 E0                MOVX    A,@DPTR
04F7 FA                MOV     R2,A
04F8 A3                INC     DPTR
04F9 E0                MOVX    A,@DPTR
04FA 22                RET     
04FB         L?0990:
04FB         L?0991:
04FB 7B00        E     MOV     R3,#MBYTE menu_slider3_page
04FD 7A00        E     MOV     R2,#HIGH menu_slider3_page
04FF 7900        E     MOV     R1,#LOW menu_slider3_page
0501 6400        E     XRL     A,#MBYTE menu_slider3_page
0503 22                RET     
0504         L?0992:
0504         L?0993:
0504 EC                MOV     A,R4
0505 35F0              ADDC    A,B
0507         L?0994:
0507 FE                MOV     R6,A
0508 7D17              MOV     R5,#017H
050A 010000      E     AJMP    ?C?IMUL
050D         L?0995:
050D         L?0996:
050D 110000      E     ACALL   ?C?ICALLX2
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 110 

0510         L?0997:
0510 90000000    R     MOV     DPTR,#curr_slide_value
0514 EF                MOV     A,R7
0515 F0                MOVX    @DPTR,A
0516 22                RET     
0517         L?0998:
0517 E0                MOVX    A,@DPTR
0518 75F003            MOV     B,#03H
051B A4                MUL     AB
051C 2400        R     ADD     A,#LOW menu_level_stack
051E F582              MOV     DPL,A
0520 E4                CLR     A
0521 3400        R     ADDC    A,#HIGH menu_level_stack
0523 F583              MOV     DPH,A
0525 759300      E     MOV     DPX,#?C?XDATASEG
0528 22                RET     
0529         L?0999:
0529         L?1000:
0529 FF                MOV     R7,A
052A AEF0              MOV     R6,B
052C E4                CLR     A
052D FC                MOV     R4,A
052E FD                MOV     R5,A
052F 90000000    R     MOV     DPTR,#image
0533 22                RET     
0534         L?1001:
0534 C3                CLR     C
0535 EF                MOV     A,R7
0536 9401              SUBB    A,#01H
0538 FF                MOV     R7,A
0539 EE                MOV     A,R6
053A 9400              SUBB    A,#00H
053C         L?1002:
053C 90000000    R     MOV     DPTR,#i
0540 F0                MOVX    @DPTR,A
0541 A3                INC     DPTR
0542 22                RET     
0543         L?1003:
0543         L?1004:
0543 90000000    E     MOV     DPTR,#CpuTouchSkipCount
0547 7403              MOV     A,#03H
0549 F0                MOVX    @DPTR,A
054A A3                INC     DPTR
054B 74E8              MOV     A,#0E8H
054D 22                RET     
054E         L?1006:
054E 90000000    R     MOV     DPTR,#text_info
0552         L?1007:
0552 FD                MOV     R5,A
0553 A3                INC     DPTR
0554 E0                MOVX    A,@DPTR
0555 FA                MOV     R2,A
0556 A3                INC     DPTR
0557 E0                MOVX    A,@DPTR
0558 22                RET     
0559         L?1008:
0559 E5F0              MOV     A,B
055B 3C                ADDC    A,R4
055C         L?1009:
055C FE                MOV     R6,A
055D 7C00              MOV     R4,#00H
055F 7D17              MOV     R5,#017H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 111 

0561 010000      E     AJMP    ?C?IMUL
0564         L?1010:
0564 FF                MOV     R7,A
0565         L?1011:
0565 759300      E     MOV     DPX,#?C?XDATASEG
0568 E500        E     MOV     A,regTW88+01H
056A 241C              ADD     A,#01CH
056C 22                RET     
056D         L?1012:
056D FF                MOV     R7,A
056E E5F0              MOV     A,B
0570 F0                MOVX    @DPTR,A
0571 A3                INC     DPTR
0572 EF                MOV     A,R7
0573 22                RET     
0574         L?1013:
0574 90000000    R     MOV     DPTR,#sx+01H
0578 E0                MOVX    A,@DPTR
0579 2F                ADD     A,R7
057A         L?1014:
057A F0                MOVX    @DPTR,A
057B 90000000    R     MOV     DPTR,#sx
057F E0                MOVX    A,@DPTR
0580 22                RET     
0581         L?1015:
0581         L?1016:
0581 90000000    R     MOV     DPTR,#MenuInputMain
0585 E0                MOVX    A,@DPTR
0586 FF                MOV     R7,A
0587 22                RET     
0588         L?1017:
0588 A3                INC     DPTR
0589 F0                MOVX    @DPTR,A
058A A3                INC     DPTR
058B E9                MOV     A,R1
058C F0                MOVX    @DPTR,A
058D A3                INC     DPTR
058E 22                RET     
058F         L?1018:
058F 90000000    R     MOV     DPTR,#?_InitSlideCtrl?BYTE+03H
0593 F0                MOVX    @DPTR,A
0594 A3                INC     DPTR
0595 22                RET     
0596         L?1019:
0596 90000000    R     MOV     DPTR,#curr_menu
059A F0                MOVX    @DPTR,A
059B A3                INC     DPTR
059C 22                RET     
059D         L?1020:
059D 90000000    E     MOV     DPTR,#?_TWstrcat?BYTE+03H
05A1 7400        R     MOV     A,#MBYTE menu_str_buff
05A3 F0                MOVX    @DPTR,A
05A4 A3                INC     DPTR
05A5 7400        R     MOV     A,#HIGH menu_str_buff
05A7 F0                MOVX    @DPTR,A
05A8 A3                INC     DPTR
05A9 7400        R     MOV     A,#LOW menu_str_buff
05AB F0                MOVX    @DPTR,A
05AC 22                RET     
05AD         L?1021:
05AD 90000000    R     MOV     DPTR,#i
05B1 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 112 

05B2 FC                MOV     R4,A
05B3 A3                INC     DPTR
05B4 E0                MOVX    A,@DPTR
05B5 FD                MOV     R5,A
05B6 D3                SETB    C
05B7 9400              SUBB    A,#00H
05B9 EC                MOV     A,R4
05BA 9404              SUBB    A,#04H
05BC 22                RET     
05BD         L?1022:
05BD D3                SETB    C
05BE 90000000    R     MOV     DPTR,#i+01H
05C2 E0                MOVX    A,@DPTR
05C3 9400              SUBB    A,#00H
05C5 90000000    R     MOV     DPTR,#i
05C9 E0                MOVX    A,@DPTR
05CA 9404              SUBB    A,#04H
05CC 22                RET     
05CD         L?1023:
05CD         L?1024:
05CD C3                CLR     C
05CE 7458              MOV     A,#058H
05D0 9F                SUBB    A,R7
05D1 FF                MOV     R7,A
05D2 7402              MOV     A,#02H
05D4 9E                SUBB    A,R6
05D5 FE                MOV     R6,A
05D6 22                RET     
05D7         L?1026:
05D7 A3                INC     DPTR
05D8 E4                CLR     A
05D9 75F001            MOV     B,#01H
05DC 110000      E     ACALL   ?C?ILDIX
05DF A9F0              MOV     R1,B
05E1 FA                MOV     R2,A
05E2 010000      E     AJMP    ?C?CLDPTR
05E5         L?1027:
05E5 90000000    R     MOV     DPTR,#header
05E9 A3                INC     DPTR
05EA E0                MOVX    A,@DPTR
05EB FA                MOV     R2,A
05EC A3                INC     DPTR
05ED E0                MOVX    A,@DPTR
05EE 22                RET     
05EF         L?1028:
05EF E4                CLR     A
05F0         L?1029:
05F0 F0                MOVX    @DPTR,A
05F1 A3                INC     DPTR
05F2 F0                MOVX    @DPTR,A
05F3 A3                INC     DPTR
05F4 F0                MOVX    @DPTR,A
05F5 A3                INC     DPTR
05F6 F0                MOVX    @DPTR,A
05F7 22                RET     
05F8         L?1030:
05F8         L?1031:
05F8 FD                MOV     R5,A
05F9 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
05FD F0                MOVX    @DPTR,A
05FE E4                CLR     A
05FF FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 113 

0600 22                RET     
0601         L?1032:
0601 A3                INC     DPTR
0602         L?1033:
0602 F0                MOVX    @DPTR,A
0603 7B00        E     MOV     R3,#MBYTE img_slide_bright
0605 7A00        E     MOV     R2,#HIGH img_slide_bright
0607 7900        E     MOV     R1,#LOW img_slide_bright
0609 22                RET     
060A         L?1034:
060A A3                INC     DPTR
060B         L?1035:
060B F0                MOVX    @DPTR,A
060C 7B00        E     MOV     R3,#MBYTE img_slide_contrast
060E 7A00        E     MOV     R2,#HIGH img_slide_contrast
0610 7900        E     MOV     R1,#LOW img_slide_contrast
0612 22                RET     
0613         L?1036:
0613 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
0617 F0                MOVX    @DPTR,A
0618 90000000    R     MOV     DPTR,#?_InitSlide3Ctrl?BYTE+03H
061C 7400        E     MOV     A,#MBYTE _ImgAdjGetContrastRGB
061E F0                MOVX    @DPTR,A
061F A3                INC     DPTR
0620 22                RET     
0621         L?1037:
0621         L?1038:
0621 2404              ADD     A,#04H
0623 F9                MOV     R1,A
0624 E4                CLR     A
0625 3A                ADDC    A,R2
0626 FA                MOV     R2,A
0627 22                RET     
0628         L?1039:
0628 F0                MOVX    @DPTR,A
0629         L?1040:
0629 90000000    R     MOV     DPTR,#i
062D E0                MOVX    A,@DPTR
062E 3400              ADDC    A,#00H
0630 22                RET     
0631         L?1041:
0631 EE                MOV     A,R6
0632         L?1042:
0632 75F017            MOV     B,#017H
0635 A4                MUL     AB
0636 FF                MOV     R7,A
0637 AEF0              MOV     R6,B
0639 22                RET     
063A         L?1043:
063A         L?1044:
063A E0                MOVX    A,@DPTR
063B FD                MOV     R5,A
063C 90000000    R     MOV     DPTR,#_SetSlide3Value
0640 22                RET     
0641         L?1045:
0641         L?1046:
0641 7B00        R     MOV     R3,#MBYTE menu_str_buff
0643 7A00        R     MOV     R2,#HIGH menu_str_buff
0645 7900        R     MOV     R1,#LOW menu_str_buff
0647 22                RET     
0648         L?1047:
0648 2F                ADD     A,R7
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 114 

0649 FF                MOV     R7,A
064A E4                CLR     A
064B 35F0              ADDC    A,B
064D FE                MOV     R6,A
064E E0                MOVX    A,@DPTR
064F 13                RRC     A
0650 13                RRC     A
0651 543F              ANL     A,#03FH
0653 FD                MOV     R5,A
0654 22                RET     
0655         L?1048:
0655         L?1049:
0655 7B00        R     MOV     R3,#MBYTE str_buff
0657 7A00        R     MOV     R2,#HIGH str_buff
0659 7900        R     MOV     R1,#LOW str_buff
065B 22                RET     
065C         L?1050:
065C         L?1051:
065C 7B00        R     MOV     R3,#MBYTE str_buff
065E 7A00        R     MOV     R2,#HIGH str_buff
0660 7900        R     MOV     R1,#LOW str_buff
0662 22                RET     
0663         L?1054:
0663 EA                MOV     A,R2
0664 FE                MOV     R6,A
0665 90000000    R     MOV     DPTR,#header
0669 A3                INC     DPTR
066A E0                MOVX    A,@DPTR
066B FA                MOV     R2,A
066C A3                INC     DPTR
066D E0                MOVX    A,@DPTR
066E 22                RET     
066F         L?1055:
066F         L?1056:
066F EB                MOV     A,R3
0670 F0                MOVX    @DPTR,A
0671 A3                INC     DPTR
0672 EA                MOV     A,R2
0673 F0                MOVX    @DPTR,A
0674 A3                INC     DPTR
0675 E9                MOV     A,R1
0676 22                RET     
0677         L?1057:
0677 FD                MOV     R5,A
0678 ACF0              MOV     R4,B
067A E4                CLR     A
067B 90000000    E     MOV     DPTR,#?_FOsdSetPaletteColor?BYTE+04H
067F F0                MOVX    @DPTR,A
0680 7B08              MOV     R3,#08H
0682 22                RET     
0683         L?1058:
0683 A3                INC     DPTR
0684         L?1059:
0684 F0                MOVX    @DPTR,A
0685 A3                INC     DPTR
0686 7400        E     MOV     A,#MBYTE _ImgAdjSetBrightnessY
0688 F0                MOVX    @DPTR,A
0689 A3                INC     DPTR
068A 22                RET     
068B         L?1060:
068B A3                INC     DPTR
068C         L?1061:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 115 

068C F0                MOVX    @DPTR,A
068D F9                MOV     R1,A
068E A3                INC     DPTR
068F 7400        E     MOV     A,#MBYTE _ImgAdjSetBrightnessY
0691 F0                MOVX    @DPTR,A
0692 22                RET     
0693         L?1062:
0693 A3                INC     DPTR
0694         L?1063:
0694 F0                MOVX    @DPTR,A
0695 A3                INC     DPTR
0696 7400        E     MOV     A,#MBYTE _ImgAdjSetContrastY
0698 F0                MOVX    @DPTR,A
0699 A3                INC     DPTR
069A 22                RET     
069B         L?1064:
069B A3                INC     DPTR
069C         L?1065:
069C F0                MOVX    @DPTR,A
069D F9                MOV     R1,A
069E A3                INC     DPTR
069F 7400        E     MOV     A,#MBYTE _ImgAdjSetContrastY
06A1 F0                MOVX    @DPTR,A
06A2 22                RET     
06A3         L?1066:
06A3 7400        E     MOV     A,#MBYTE menu_yuv_list_page
06A5 F0                MOVX    @DPTR,A
06A6 A3                INC     DPTR
06A7 7400        E     MOV     A,#HIGH menu_yuv_list_page
06A9 F0                MOVX    @DPTR,A
06AA A3                INC     DPTR
06AB 7400        E     MOV     A,#LOW menu_yuv_list_page
06AD F0                MOVX    @DPTR,A
06AE 22                RET     
06AF         L?1067:
06AF 7400        R     MOV     A,#MBYTE back_header_table
06B1 F0                MOVX    @DPTR,A
06B2 A3                INC     DPTR
06B3 7400        R     MOV     A,#HIGH back_header_table
06B5 F0                MOVX    @DPTR,A
06B6 A3                INC     DPTR
06B7 7400        R     MOV     A,#LOW back_header_table
06B9 F0                MOVX    @DPTR,A
06BA 22                RET     
06BB         L?1068:
06BB 7400        R     MOV     A,#MBYTE front_header_table
06BD F0                MOVX    @DPTR,A
06BE A3                INC     DPTR
06BF 7400        R     MOV     A,#HIGH front_header_table
06C1 F0                MOVX    @DPTR,A
06C2 A3                INC     DPTR
06C3 7400        R     MOV     A,#LOW front_header_table
06C5 F0                MOVX    @DPTR,A
06C6 22                RET     
06C7         L?1069:
06C7 AF05              MOV     R7,AR5
06C9 AE04              MOV     R6,AR4
06CB E4                CLR     A
06CC FC                MOV     R4,A
06CD FD                MOV     R5,A
06CE 90000000    R     MOV     DPTR,#back_header_table+04H
06D2 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 116 

06D3         L?1070:
06D3 EF                MOV     A,R7
06D4 F0                MOVX    @DPTR,A
06D5         L?1071:
06D5 90000000    R     MOV     DPTR,#win_back
06D9 E0                MOVX    A,@DPTR
06DA FF                MOV     R7,A
06DB 22                RET     
06DC         L?1073:
06DC F0                MOVX    @DPTR,A
06DD         L?1074:
06DD E4                CLR     A
06DE 90000000    R     MOV     DPTR,#menu_lock_scroll
06E2 F0                MOVX    @DPTR,A
06E3 22                RET     
06E4         L?1075:
06E4 E4                CLR     A
06E5 90000000    R     MOV     DPTR,#start_bit
06E9 F0                MOVX    @DPTR,A
06EA 90000000    R     MOV     DPTR,#start_byte
06EE 22                RET     
06EF         L?1076:
06EF 90000000    R     MOV     DPTR,#start_byte
06F3 A3                INC     DPTR
06F4 A3                INC     DPTR
06F5 A3                INC     DPTR
06F6 E4                CLR     A
06F7 7B06              MOV     R3,#06H
06F9 22                RET     
06FA         L?1077:
06FA F0                MOVX    @DPTR,A
06FB 90000000    R     MOV     DPTR,#menu_item
06FF A3                INC     DPTR
0700 E0                MOVX    A,@DPTR
0701 FA                MOV     R2,A
0702 A3                INC     DPTR
0703 E0                MOVX    A,@DPTR
0704 22                RET     
0705         L?1078:
0705 7400        E     MOV     A,#MBYTE menu_touch_page
0707 F0                MOVX    @DPTR,A
0708 A3                INC     DPTR
0709 7400        E     MOV     A,#HIGH menu_touch_page
070B F0                MOVX    @DPTR,A
070C A3                INC     DPTR
070D 7400        E     MOV     A,#LOW menu_touch_page
070F 22                RET     
0710         L?1080:
0710 240F              ADD     A,#0FH
0712 F9                MOV     R1,A
0713 E4                CLR     A
0714 3A                ADDC    A,R2
0715 FA                MOV     R2,A
0716 EE                MOV     A,R6
0717 8FF0              MOV     B,R7
0719 22                RET     
071A         L?1081:
071A         L?1082:
071A 2408              ADD     A,#08H
071C F9                MOV     R1,A
071D E4                CLR     A
071E 3A                ADDC    A,R2
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 117 

071F FA                MOV     R2,A
0720 22                RET     
0721         L?1083:
0721         L?1084:
0721 90000000    R     MOV     DPTR,#winno
0725 E0                MOVX    A,@DPTR
0726 FF                MOV     R7,A
0727 22                RET     
0728         L?1085:
0728         L?1086:
0728 90000000    R     MOV     DPTR,#winno
072C E0                MOVX    A,@DPTR
072D FF                MOV     R7,A
072E 22                RET     
072F         L?1087:
072F         L?1088:
072F A3                INC     DPTR
0730 A3                INC     DPTR
0731 E0                MOVX    A,@DPTR
0732 FA                MOV     R2,A
0733 A3                INC     DPTR
0734 E0                MOVX    A,@DPTR
0735 22                RET     
0736         L?1089:
0736         L?1090:
0736 7B00        E     MOV     R3,#MBYTE menu_slider_page
0738 7A00        E     MOV     R2,#HIGH menu_slider_page
073A 7900        E     MOV     R1,#LOW menu_slider_page
073C 22                RET     
073D         L?1091:
073D         L?1092:
073D 7B00        E     MOV     R3,#MBYTE menu_position_page
073F 7A00        E     MOV     R2,#HIGH menu_position_page
0741 7900        E     MOV     R1,#LOW menu_position_page
0743 22                RET     
0744         L?1093:
0744         L?1094:
0744 E9                MOV     A,R1
0745 2F                ADD     A,R7
0746 F9                MOV     R1,A
0747 EA                MOV     A,R2
0748 3E                ADDC    A,R6
0749 FA                MOV     R2,A
074A 22                RET     
074B         L?1095:
074B         L?1096:
074B 90000000    R     MOV     DPTR,#i
074F E0                MOVX    A,@DPTR
0750 04                INC     A
0751 22                RET     
0752         L?1097:
0752 FF                MOV     R7,A
0753 90000000    R     MOV     DPTR,#ret
0757 E0                MOVX    A,@DPTR
0758 FE                MOV     R6,A
0759 C3                CLR     C
075A 9F                SUBB    A,R7
075B 22                RET     
075C         L?1098:
075C FF                MOV     R7,A
075D E5F0              MOV     A,B
075F F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 118 

0760 A3                INC     DPTR
0761 EF                MOV     A,R7
0762 22                RET     
0763         L?1099:
0763         L?1100:
0763 7B00        E     MOV     R3,#MBYTE img_slide_clock
0765 7A00        E     MOV     R2,#HIGH img_slide_clock
0767 7900        E     MOV     R1,#LOW img_slide_clock
0769 22                RET     
076A         L?1101:
076A         L?1102:
076A 7B00        E     MOV     R3,#MBYTE img_slide_phase
076C 7A00        E     MOV     R2,#HIGH img_slide_phase
076E 7900        E     MOV     R1,#LOW img_slide_phase
0770 22                RET     
0771         L?1103:
0771         L?1104:
0771 E0                MOVX    A,@DPTR
0772 FD                MOV     R5,A
0773 90000000    R     MOV     DPTR,#_SaveSlide3Value
0777 22                RET     
0778         L?1105:
0778 A3                INC     DPTR
0779 F0                MOVX    @DPTR,A
077A A3                INC     DPTR
077B E9                MOV     A,R1
077C F0                MOVX    @DPTR,A
077D A3                INC     DPTR
077E 22                RET     
077F         L?1106:
077F 90000000    R     MOV     DPTR,#?_InitSlideCtrl?BYTE+03H
0783 F0                MOVX    @DPTR,A
0784 A3                INC     DPTR
0785 22                RET     
0786         L?1107:
0786 F0                MOVX    @DPTR,A
0787 A3                INC     DPTR
0788 7402              MOV     A,#02H
078A F0                MOVX    @DPTR,A
078B A3                INC     DPTR
078C 7458              MOV     A,#058H
078E F0                MOVX    @DPTR,A
078F 22                RET     
             ; FUNCTION Com0300 (END)

             ; FUNCTION _info_to_header (BEGIN)
                                           ; SOURCE LINE # 227
0000 90000000    R     MOV     DPTR,#info
0004 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 228
                                           ; SOURCE LINE # 230
0007 110000      R     ACALL   L?0852
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 233
000B 90000000    R     MOV     DPTR,#info
000F 110000      R     ACALL   L?0777
0012 F9                MOV     R1,A
0013 110000      E     ACALL   ?C?CLDPTR
0016 FF                MOV     R7,A
0017 90000000    R     MOV     DPTR,#header
001B 110000      R     ACALL   L?0777
001E 110000      R     ACALL   L?0948
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 119 

                                           ; SOURCE LINE # 234
0021 90000000    R     MOV     DPTR,#info
0025 110000      R     ACALL   L?0777
0028 110000      R     ACALL   L?0785
002B C4                SWAP    A
002C 540F              ANL     A,#0FH
002E FF                MOV     R7,A
002F 90000000    R     MOV     DPTR,#header
0033 110000      R     ACALL   L?0777
0036 2409              ADD     A,#09H
0038 110000      R     ACALL   L?0949
                                           ; SOURCE LINE # 235
003B 90000000    R     MOV     DPTR,#info
003F 110000      R     ACALL   L?0777
0042 110000      R     ACALL   L?0785
0045 540F              ANL     A,#0FH
0047 FF                MOV     R7,A
0048 90000000    R     MOV     DPTR,#header
004C 110000      R     ACALL   L?0777
004F 240A              ADD     A,#0AH
0051 110000      R     ACALL   L?0949
                                           ; SOURCE LINE # 236
0054 90000000    R     MOV     DPTR,#info
0058 110000      R     ACALL   L?0777
005B 2402              ADD     A,#02H
005D 110000      R     ACALL   L?0794
0060 FF                MOV     R7,A
0061 90000000    R     MOV     DPTR,#header
0065 110000      R     ACALL   L?0777
0068 110000      R     ACALL   L?0934
                                           ; SOURCE LINE # 237
006B 90000000    R     MOV     DPTR,#info
006F 110000      R     ACALL   L?0777
0072 110000      R     ACALL   L?0793
0075 FF                MOV     R7,A
0076 90000000    R     MOV     DPTR,#header
007A 110000      R     ACALL   L?0777
007D 240D              ADD     A,#0DH
007F 110000      R     ACALL   L?0935
                                           ; SOURCE LINE # 238
0082 90000000    R     MOV     DPTR,#header
0086 110000      R     ACALL   L?0777
0089 2409              ADD     A,#09H
008B 110000      R     ACALL   L?0786
008E FF                MOV     R7,A
008F 7404              MOV     A,#04H
0091 7E00              MOV     R6,#00H
0093 A807              MOV     R0,AR7
0095 08                INC     R0
0096 8005              SJMP    ?C0664
0098         ?C0663:
0098 C3                CLR     C
0099 33                RLC     A
009A CE                XCH     A,R6
009B 33                RLC     A
009C CE                XCH     A,R6
009D         ?C0664:
009D D8F9              DJNZ    R0,?C0663
009F FF                MOV     R7,A
00A0 90000000    R     MOV     DPTR,#header
00A4 110000      R     ACALL   L?0777
00A7 110000      R     ACALL   L?1080
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 120 

00AA 010000      E     AJMP    ?C?ISTPTR
             ; FUNCTION _info_to_header (END)

             ; FUNCTION _rle2_to_header (BEGIN)
                                           ; SOURCE LINE # 244
0000 90000000    R     MOV     DPTR,#rle_header
0004 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 245
                                           ; SOURCE LINE # 250
0007 110000      R     ACALL   L?0852
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 252
000B 90000000    R     MOV     DPTR,#rle_header
000F 110000      R     ACALL   L?0777
0012 240C              ADD     A,#0CH
0014 110000      R     ACALL   L?0786
0017 5401              ANL     A,#01H
0019 FF                MOV     R7,A
001A 90000000    R     MOV     DPTR,#header
001E 110000      R     ACALL   L?0777
0021 110000      R     ACALL   L?0948
                                           ; SOURCE LINE # 253
0024 90000000    R     MOV     DPTR,#rle_header
0028 110000      R     ACALL   L?0777
002B 240D              ADD     A,#0DH
002D 110000      R     ACALL   L?0786
0030 2401              ADD     A,#01H
0032 FF                MOV     R7,A
0033 E4                CLR     A
0034 33                RLC     A
0035 FE                MOV     R6,A
;---- Variable 'colors' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 254
;---- Variable 'bpp' assigned to Register 'R5' ----
0036 E4                CLR     A
0037 FD                MOV     R5,A
0038         ?C0002:
                                           ; SOURCE LINE # 255
0038 EF                MOV     A,R7
0039 20E00C            JB      ACC.0,?C0003
                                           ; SOURCE LINE # 256
003C         ?C0004:
                                           ; SOURCE LINE # 257
003C EE                MOV     A,R6
003D C3                CLR     C
003E 13                RRC     A
003F FE                MOV     R6,A
0040 EF                MOV     A,R7
0041 13                RRC     A
0042 FF                MOV     R7,A
                                           ; SOURCE LINE # 258
0043 0D                INC     R5
                                           ; SOURCE LINE # 259
0044 ED                MOV     A,R5
0045 B409F0            CJNE    A,#09H,?C0002
0048         ?C0003:
                                           ; SOURCE LINE # 260
0048 90000000    R     MOV     DPTR,#header
004C 110000      R     ACALL   L?0777
004F 2409              ADD     A,#09H
0051 F9                MOV     R1,A
0052 E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 121 

0053 3A                ADDC    A,R2
0054 FA                MOV     R2,A
0055 ED                MOV     A,R5
0056 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 261
0059 90000000    R     MOV     DPTR,#rle_header
005D 110000      R     ACALL   L?0777
0060 2403              ADD     A,#03H
0062 110000      R     ACALL   L?0786
0065 540F              ANL     A,#0FH
0067 FF                MOV     R7,A
0068 90000000    R     MOV     DPTR,#header
006C 110000      R     ACALL   L?0777
006F 240A              ADD     A,#0AH
0071 110000      R     ACALL   L?0949
                                           ; SOURCE LINE # 262
0074 90000000    R     MOV     DPTR,#rle_header
0078 110000      R     ACALL   L?0777
007B 110000      R     ACALL   L?0793
007E FF                MOV     R7,A
007F 90000000    R     MOV     DPTR,#header
0083 110000      R     ACALL   L?0777
0086 110000      R     ACALL   L?0934
                                           ; SOURCE LINE # 263
0089 90000000    R     MOV     DPTR,#rle_header
008D 110000      R     ACALL   L?0777
0090 2406              ADD     A,#06H
0092 110000      R     ACALL   L?0794
0095 FF                MOV     R7,A
0096 90000000    R     MOV     DPTR,#header
009A 110000      R     ACALL   L?0777
009D 240D              ADD     A,#0DH
009F 110000      R     ACALL   L?0935
                                           ; SOURCE LINE # 264
00A2 AF05              MOV     R7,AR5
00A4 7404              MOV     A,#04H
00A6 7E00              MOV     R6,#00H
00A8 A807              MOV     R0,AR7
00AA 08                INC     R0
00AB 8005              SJMP    ?C0666
00AD         ?C0665:
00AD C3                CLR     C
00AE 33                RLC     A
00AF CE                XCH     A,R6
00B0 33                RLC     A
00B1 CE                XCH     A,R6
00B2         ?C0666:
00B2 D8F9              DJNZ    R0,?C0665
00B4 FF                MOV     R7,A
00B5 90000000    R     MOV     DPTR,#header
00B9 110000      R     ACALL   L?0777
00BC 110000      R     ACALL   L?1080
00BF 010000      E     AJMP    ?C?ISTPTR
             ; FUNCTION _rle2_to_header (END)

             ; FUNCTION push_menu_stack_level (BEGIN)
                                           ; SOURCE LINE # 310
                                           ; SOURCE LINE # 311
                                           ; SOURCE LINE # 312
0000 110000      R     ACALL   L?0776
0003 F9                MOV     R1,A
0004 90000000    R     MOV     DPTR,#menu_level
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 122 

0008 110000      R     ACALL   L?0998
000B 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 313
000E 90000000    R     MOV     DPTR,#menu_level
0012 E0                MOVX    A,@DPTR
0013 04                INC     A
                                           ; SOURCE LINE # 314
0014 110000      R     ACALL   L?1073
                                           ; SOURCE LINE # 315
0017 22                RET     
             ; FUNCTION push_menu_stack_level (END)

             ; FUNCTION pop_menu_stack_level (BEGIN)
                                           ; SOURCE LINE # 316
                                           ; SOURCE LINE # 317
                                           ; SOURCE LINE # 318
0000 90000000    R     MOV     DPTR,#menu_level
0004 E0                MOVX    A,@DPTR
0005 14                DEC     A
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 319
0007 110000      R     ACALL   L?0998
000A 110000      R     ACALL   L?0829
000D 90000000    R     MOV     DPTR,#curr_menu
0011 C9                XCH     A,R1
0012 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 320
0015 110000      R     ACALL   L?1074
                                           ; SOURCE LINE # 321
0018 22                RET     
             ; FUNCTION pop_menu_stack_level (END)

             ; FUNCTION MenuGetLevel (BEGIN)
                                           ; SOURCE LINE # 326
                                           ; SOURCE LINE # 327
                                           ; SOURCE LINE # 328
0000 90000000    R     MOV     DPTR,#menu_on
0004 E0                MOVX    A,@DPTR
0005 FF                MOV     R7,A
0006 90000000    R     MOV     DPTR,#menu_level
000A E0                MOVX    A,@DPTR
000B 2F                ADD     A,R7
000C FF                MOV     R7,A
                                           ; SOURCE LINE # 329
000D         ?C0008:
000D 22                RET     
             ; FUNCTION MenuGetLevel (END)

             ; FUNCTION _MenuReadRleHeader (BEGIN)
                                           ; SOURCE LINE # 343
0000 90000000    R     MOV     DPTR,#spi_loc
0004 110000      R     ACALL   L?0907
0007 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 344
                                           ; SOURCE LINE # 350
000A 7F01              MOV     R7,#01H
000C 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 352
000F 90000000    R     MOV     DPTR,#spi_loc
0013 110000      R     ACALL   L?0803
0016 A3                INC     DPTR
0017 A3                INC     DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 123 

0018 E0                MOVX    A,@DPTR
0019 FB                MOV     R3,A
001A A3                INC     DPTR
001B E0                MOVX    A,@DPTR
001C 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+04H
0020 CB                XCH     A,R3
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 EB                MOV     A,R3
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 E4                CLR     A
0027 F0                MOVX    @DPTR,A
0028 A3                INC     DPTR
0029 7410              MOV     A,#010H
002B F0                MOVX    @DPTR,A
002C 110000      E     ACALL   _SpiFlash_Read_XMem
                                           ; SOURCE LINE # 355
002F 90000000    R     MOV     DPTR,#header
0033 110000      R     ACALL   L?0829
0036 90000000    R     MOV     DPTR,#ptr
003A C9                XCH     A,R1
003B 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 356
;---- Variable 'i' assigned to Register 'R7' ----
003E E4                CLR     A
003F FF                MOV     R7,A
0040         ?C0009:
                                           ; SOURCE LINE # 358
0040 0F                INC     R7
0041 EF                MOV     A,R7
0042 B410FB            CJNE    A,#010H,?C0009
0045         ?C0010:
                                           ; SOURCE LINE # 359
0045 90000000    R     MOV     DPTR,#header
0049 110000      R     ACALL   L?0777
004C F9                MOV     R1,A
004D 110000      E     ACALL   ?C?CLDPTR
0050 B44908            CJNE    A,#049H,?C0013
0053 E9                MOV     A,R1
0054 110000      R     ACALL   L?0785
0057 6454              XRL     A,#054H
0059 601A              JZ      ?C0012
005B         ?C0013:
                                           ; SOURCE LINE # 361
005B 7B00        R     MOV     R3,#MBYTE ?SC_0
005D 7A00        R     MOV     R2,#HIGH ?SC_0
005F 7900        R     MOV     R1,#LOW ?SC_0
0061 90000000    R     MOV     DPTR,#spi_loc
0065 110000      R     ACALL   L?0803
0068 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
006C 110000      E     ACALL   ?C?LSTXDATA
006F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 362
0072 7F01              MOV     R7,#01H
0074 22                RET     
                                           ; SOURCE LINE # 363
0075         ?C0012:
                                           ; SOURCE LINE # 365
0075 90000000    R     MOV     DPTR,#header
0079 110000      R     ACALL   L?0777
007C 110000      R     ACALL   L?0793
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 124 

;---- Variable 'wTemp' assigned to Register 'R4/R5' ----
                                           ; SOURCE LINE # 366
007F FA                MOV     R2,A
0080 110000      R     ACALL   L?1054
0083 110000      R     ACALL   L?1037
0086 EE                MOV     A,R6
0087 110000      E     ACALL   ?C?ISTPTR
                                           ; SOURCE LINE # 367
008A 90000000    R     MOV     DPTR,#header
008E 110000      R     ACALL   L?0777
0091 2406              ADD     A,#06H
0093 110000      R     ACALL   L?0794
0096 FD                MOV     R5,A
0097 ACF0              MOV     R4,B
                                           ; SOURCE LINE # 368
0099 FA                MOV     R2,A
009A EC                MOV     A,R4
009B FF                MOV     R7,A
009C 110000      R     ACALL   L?1054
009F 2406              ADD     A,#06H
00A1 F9                MOV     R1,A
00A2 E4                CLR     A
00A3 3A                ADDC    A,R2
00A4 FA                MOV     R2,A
00A5 EE                MOV     A,R6
00A6 110000      E     ACALL   ?C?ISTPTR
                                           ; SOURCE LINE # 370
00A9 90000000    R     MOV     DPTR,#header
00AD 110000      R     ACALL   L?0777
00B0 2408              ADD     A,#08H
00B2 110000      R     ACALL   L?0864
00B5 90000000    R     MOV     DPTR,#dTemp
00B9 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 371
00BC 90000000    R     MOV     DPTR,#dTemp
00C0 A3                INC     DPTR
00C1 A3                INC     DPTR
00C2 A3                INC     DPTR
00C3 E0                MOVX    A,@DPTR
00C4 FF                MOV     R7,A
00C5 E4                CLR     A
00C6 FE                MOV     R6,A
00C7 FD                MOV     R5,A
00C8 FC                MOV     R4,A
00C9 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 372
00CC 110000      E     ACALL   ?C?LLDPTR
00CF 110000      R     ACALL   L?0968
00D2 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 373
00D5 110000      R     ACALL   L?0905
00D8 110000      R     ACALL   L?0777
00DB 110000      R     ACALL   L?1081
00DE C003              PUSH    AR3
00E0 C002              PUSH    AR2
00E2 C001              PUSH    AR1
00E4 110000      R     ACALL   L?0885
00E7 D001              POP     AR1
00E9 D002              POP     AR2
00EB D003              POP     AR3
00ED 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 374
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 125 

00F0 90000000    R     MOV     DPTR,#header
00F4 110000      R     ACALL   L?0777
00F7 2408              ADD     A,#08H
00F9 110000      R     ACALL   L?0864
00FC 110000      R     ACALL   L?0968
00FF 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 375
0102 110000      R     ACALL   L?0905
0105 110000      R     ACALL   L?0777
0108 110000      R     ACALL   L?1081
010B C003              PUSH    AR3
010D C002              PUSH    AR2
010F C001              PUSH    AR1
0111 110000      R     ACALL   L?0885
0114 D001              POP     AR1
0116 D002              POP     AR2
0118 D003              POP     AR3
011A 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 376
011D 90000000    R     MOV     DPTR,#header
0121 110000      R     ACALL   L?0777
0124 2408              ADD     A,#08H
0126 110000      R     ACALL   L?0864
0129 110000      R     ACALL   L?0969
012C 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 377
012F 110000      R     ACALL   L?0906
0132 110000      R     ACALL   L?0777
0135 110000      R     ACALL   L?1082
0138 C003              PUSH    AR3
013A C002              PUSH    AR2
013C C001              PUSH    AR1
013E 110000      R     ACALL   L?0886
0141 D001              POP     AR1
0143 D002              POP     AR2
0145 D003              POP     AR3
0147 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 387
014A 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 388
014C         ?C0014:
014C 22                RET     
             ; FUNCTION _MenuReadRleHeader (END)

             ; FUNCTION _MenuPrepareImageHeader (BEGIN)
                                           ; SOURCE LINE # 397
0000 90000000    R     MOV     DPTR,#image
0004 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 400
0007 90000000    R     MOV     DPTR,#header
000B 110000      R     ACALL   L?0854
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 402
000F E4                CLR     A
0010 90000000    R     MOV     DPTR,#ret
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 403
0015 90000000    R     MOV     DPTR,#image
0019 110000      R     ACALL   L?0777
001C F9                MOV     R1,A
001D 110000      E     ACALL   ?C?CLDPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 126 

0020 6401              XRL     A,#01H
0022 7052              JNZ     ?C0015
                                           ; SOURCE LINE # 405
0024 E9                MOV     A,R1
0025 110000      R     ACALL   L?0800
0028 110000      E     ACALL   ?C?LLDPTR
002B 7B00        R     MOV     R3,#MBYTE rle_header
002D 7A00        R     MOV     R2,#HIGH rle_header
002F 7900        R     MOV     R1,#LOW rle_header
0031 110000      R     ACALL   _MenuReadRleHeader
0034 90000000    R     MOV     DPTR,#ret
0038 EF                MOV     A,R7
0039 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 406
003A 7B00        R     MOV     R3,#MBYTE rle_header
003C 7A00        R     MOV     R2,#HIGH rle_header
003E 7900        R     MOV     R1,#LOW rle_header
0040 110000      R     ACALL   _rle2_to_header
                                           ; SOURCE LINE # 407
0043 90000000    R     MOV     DPTR,#image
0047 110000      R     ACALL   L?0777
004A 110000      R     ACALL   L?0800
004D 110000      R     ACALL   L?0908
0050 FC                MOV     R4,A
0051 90000000    R     MOV     DPTR,#header
0055 110000      R     ACALL   L?0777
                                           ; SOURCE LINE # 408
0058 110000      R     ACALL   L?0970
005B 110000      R     ACALL   L?0777
005E 240F              ADD     A,#0FH
0060 110000      R     ACALL   L?0794
0063 110000      R     ACALL   L?0999
0066 110000      R     ACALL   L?0777
0069 110000      R     ACALL   L?0800
006C 110000      R     ACALL   L?0893
006F FC                MOV     R4,A
0070 110000      R     ACALL   L?0909
                                           ; SOURCE LINE # 409
0073 010000      R     AJMP    ?C0718
0076         ?C0015:
                                           ; SOURCE LINE # 410
0076 90000000    R     MOV     DPTR,#image
007A 110000      R     ACALL   L?0777
007D F9                MOV     R1,A
007E 110000      E     ACALL   ?C?CLDPTR
0081 6402              XRL     A,#02H
0083 7059              JNZ     ?C0017
                                           ; SOURCE LINE # 412
0085 E9                MOV     A,R1
0086 2405              ADD     A,#05H
0088 110000      R     ACALL   L?0781
008B 110000      R     ACALL   _info_to_header
                                           ; SOURCE LINE # 413
008E 90000000    R     MOV     DPTR,#image
0092 110000      R     ACALL   L?0777
0095 110000      R     ACALL   L?0800
0098 110000      E     ACALL   ?C?LLDPTR
009B 90000000    R     MOV     DPTR,#header
009F 110000      R     ACALL   L?0777
                                           ; SOURCE LINE # 414
00A2 110000      R     ACALL   L?0970
00A5 110000      R     ACALL   L?0777
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 127 

00A8 240F              ADD     A,#0FH
00AA 110000      R     ACALL   L?0794
00AD 110000      R     ACALL   L?0999
00B0 110000      R     ACALL   L?0777
00B3 110000      R     ACALL   L?0800
00B6 110000      R     ACALL   L?0893
00B9 FC                MOV     R4,A
00BA 90000000    R     MOV     DPTR,#header
00BE 110000      R     ACALL   L?0777
00C1 110000      R     ACALL   L?1037
                                           ; SOURCE LINE # 415
00C4 110000      R     ACALL   L?0972
00C7 110000      R     ACALL   L?0777
00CA F9                MOV     R1,A
00CB 110000      R     ACALL   L?0908
00CE FC                MOV     R4,A
                                           ; SOURCE LINE # 416
00CF 110000      R     ACALL   L?0972
00D2 110000      R     ACALL   L?0777
00D5 110000      R     ACALL   L?0862
00D8 110000      R     ACALL   L?0909
00DB FC                MOV     R4,A
                                           ; SOURCE LINE # 417
00DC 8045              SJMP    ?C0719
00DE         ?C0017:
                                           ; SOURCE LINE # 418
                                           ; SOURCE LINE # 420
00DE 90000000    R     MOV     DPTR,#image
00E2 110000      R     ACALL   L?0777
00E5 2405              ADD     A,#05H
00E7 110000      R     ACALL   L?0781
00EA 110000      R     ACALL   _info_to_header
                                           ; SOURCE LINE # 421
00ED 90000000    R     MOV     DPTR,#image
00F1 110000      R     ACALL   L?0777
00F4 110000      R     ACALL   L?0800
00F7 110000      E     ACALL   ?C?LLDPTR
00FA 90000000    R     MOV     DPTR,#header
00FE 110000      R     ACALL   L?0777
                                           ; SOURCE LINE # 422
0101 110000      R     ACALL   L?0971
0104 110000      R     ACALL   L?0777
0107 240F              ADD     A,#0FH
0109 110000      R     ACALL   L?0794
010C 110000      R     ACALL   L?1000
010F 110000      R     ACALL   L?0777
0112 110000      R     ACALL   L?0800
0115 110000      R     ACALL   L?0894
0118         ?C0718:
0118 FC                MOV     R4,A
0119 90000000    R     MOV     DPTR,#header
011D 110000      R     ACALL   L?0777
0120 110000      R     ACALL   L?1038
0123         ?C0719:
0123 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 423
0126         ?C0016:
                                           ; SOURCE LINE # 424
0126 90000000    R     MOV     DPTR,#ret
012A E0                MOVX    A,@DPTR
012B FF                MOV     R7,A
                                           ; SOURCE LINE # 425
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 128 

012C         ?C0019:
012C 22                RET     
             ; FUNCTION _MenuPrepareImageHeader (END)

             ; FUNCTION InitLogo1 (BEGIN)
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
                                           ; SOURCE LINE # 442
0000 90000000    R     MOV     DPTR,#header
0004 110000      R     ACALL   L?0854
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 446
0008 90000000    R     MOV     DPTR,#sx
                                           ; SOURCE LINE # 447
000C 110000      R     ACALL   L?1028
                                           ; SOURCE LINE # 451
000F 90000000    R     MOV     DPTR,#customer_logo
0013 04                INC     A
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 452
0015 FF                MOV     R7,A
0016 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 453
0019 90000000    E     MOV     DPTR,#img_customer+01H
                                           ; SOURCE LINE # 455
001D 110000      R     ACALL   L?0939
0020 B44906            CJNE    A,#049H,?C0021
0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 6454              XRL     A,#054H
0027 600F              JZ      ?C0020
0029         ?C0021:
                                           ; SOURCE LINE # 456
0029 7B00        R     MOV     R3,#MBYTE ?SC_30
002B 7A00        R     MOV     R2,#HIGH ?SC_30
002D 7900        R     MOV     R1,#LOW ?SC_30
002F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 457
0032 E4                CLR     A
0033 90000000    R     MOV     DPTR,#customer_logo
0037 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 458
0038         ?C0020:
                                           ; SOURCE LINE # 461
0038 90000000    R     MOV     DPTR,#customer_logo
003C E0                MOVX    A,@DPTR
003D 703B              JNZ     ?C0022
                                           ; SOURCE LINE # 464
003F 7F01              MOV     R7,#01H
0041 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 465
0044 90000000    E     MOV     DPTR,#img_logo+01H
                                           ; SOURCE LINE # 467
0048 110000      R     ACALL   L?0939
004B B44906            CJNE    A,#049H,?C0024
004E A3                INC     DPTR
004F E0                MOVX    A,@DPTR
0050 6454              XRL     A,#054H
0052 6026              JZ      ?C0022
0054         ?C0024:
                                           ; SOURCE LINE # 468
0054 7B00        R     MOV     R3,#MBYTE ?SC_72
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 129 

0056 7A00        R     MOV     R2,#HIGH ?SC_72
0058 7900        R     MOV     R1,#LOW ?SC_72
005A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 469
005D 7B00        R     MOV     R3,#MBYTE ?SC_114
005F 7A00        R     MOV     R2,#HIGH ?SC_114
0061 7900        R     MOV     R1,#LOW ?SC_114
0063 90000000    R     MOV     DPTR,#rle_header
0067 E0                MOVX    A,@DPTR
0068 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
006C F0                MOVX    @DPTR,A
006D 90000000    R     MOV     DPTR,#rle_header+01H
0071 E0                MOVX    A,@DPTR
0072 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0076 F0                MOVX    @DPTR,A
0077 010000      E     AJMP    _Printf
                                           ; SOURCE LINE # 471
                                           ; SOURCE LINE # 472
007A         ?C0022:
                                           ; SOURCE LINE # 473
007A 90000000    R     MOV     DPTR,#NoSignalLogoShow
007E 7401              MOV     A,#01H
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 476
0081 110000      E     ACALL   SpiOsdSetDeValue
                                           ; SOURCE LINE # 478
0084 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 479
0087 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 480
008A 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 481
008D 7D08              MOV     R5,#08H
008F E4                CLR     A
0090 FF                MOV     R7,A
0091 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 482
0094 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 484
0097 7F01              MOV     R7,#01H
0099 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 486
009C 90000000    R     MOV     DPTR,#customer_logo
00A0 E0                MOVX    A,@DPTR
00A1 90000000    R     MOV     DPTR,#image
00A5 600D              JZ      ?C0026
                                           ; SOURCE LINE # 487
00A7 7400        E     MOV     A,#MBYTE img_customer
00A9 F0                MOVX    @DPTR,A
00AA A3                INC     DPTR
00AB 7400        E     MOV     A,#HIGH img_customer
00AD F0                MOVX    @DPTR,A
00AE A3                INC     DPTR
00AF 7400        E     MOV     A,#LOW img_customer
00B1 F0                MOVX    @DPTR,A
00B2 800B              SJMP    ?C0027
00B4         ?C0026:
                                           ; SOURCE LINE # 489
00B4 7400        E     MOV     A,#MBYTE img_logo
00B6 F0                MOVX    @DPTR,A
00B7 A3                INC     DPTR
00B8 7400        E     MOV     A,#HIGH img_logo
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 130 

00BA F0                MOVX    @DPTR,A
00BB A3                INC     DPTR
00BC 7400        E     MOV     A,#LOW img_logo
00BE F0                MOVX    @DPTR,A
00BF         ?C0027:
                                           ; SOURCE LINE # 490
00BF E4                CLR     A
00C0 90000000    R     MOV     DPTR,#lut_loc
00C4 F0                MOVX    @DPTR,A
00C5 A3                INC     DPTR
00C6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 494
00C7 90000000    R     MOV     DPTR,#image
00CB 110000      R     ACALL   L?0777
00CE F9                MOV     R1,A
00CF 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 497
00D2 90000000    R     MOV     DPTR,#header
00D6 110000      R     ACALL   L?0777
00D9 110000      R     ACALL   L?0862
00DC 110000      R     ACALL   L?0956
00DF 7F01              MOV     R7,#01H
00E1 110000      E     ACALL   _SOsd_SetSpiStartOffset
                                           ; SOURCE LINE # 498
00E4 90000000    R     MOV     DPTR,#header
00E8 110000      R     ACALL   L?0777
00EB 240B              ADD     A,#0BH
00ED 110000      R     ACALL   L?0794
00F0 FD                MOV     R5,A
00F1 ACF0              MOV     R4,B
00F3 110000      R     ACALL   L?0881
00F6 240D              ADD     A,#0DH
00F8 110000      R     ACALL   L?0794
00FB FB                MOV     R3,A
00FC AAF0              MOV     R2,B
00FE 7F01              MOV     R7,#01H
0100 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 499
0103 90000000    R     MOV     DPTR,#sx
0107 E0                MOVX    A,@DPTR
0108 FC                MOV     R4,A
0109 A3                INC     DPTR
010A E0                MOVX    A,@DPTR
010B FD                MOV     R5,A
010C 90000000    R     MOV     DPTR,#header
0110 110000      R     ACALL   L?0777
0113 240B              ADD     A,#0BH
0115 110000      R     ACALL   L?0794
0118 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
011C 110000      R     ACALL   L?0872
011F F0                MOVX    @DPTR,A
0120 110000      R     ACALL   L?0881
0123 240D              ADD     A,#0DH
0125 110000      R     ACALL   L?0794
0128 FF                MOV     R7,A
0129 E5F0              MOV     A,B
012B 110000      R     ACALL   L?0850
012E EF                MOV     A,R7
012F F0                MOVX    @DPTR,A
0130 90000000    R     MOV     DPTR,#sy
0134 E0                MOVX    A,@DPTR
0135 FA                MOV     R2,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 131 

0136 A3                INC     DPTR
0137 E0                MOVX    A,@DPTR
0138 FB                MOV     R3,A
0139 7F01              MOV     R7,#01H
013B 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 500
                                           ; SOURCE LINE # 501
                                           ; SOURCE LINE # 502
                                           ; SOURCE LINE # 503
013E         ?C0028:
                                           ; SOURCE LINE # 504
013E 7D01              MOV     R5,#01H
0140 7F01              MOV     R7,#01H
0142 110000      E     ACALL   _SOsd_SetPixelAlpha
                                           ; SOURCE LINE # 505
0145 E4                CLR     A
0146 FD                MOV     R5,A
0147 7F01              MOV     R7,#01H
0149 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 506
014C 90000000    R     MOV     DPTR,#header
0150 110000      R     ACALL   L?0777
0153 2409              ADD     A,#09H
0155 110000      R     ACALL   L?0786
0158 FD                MOV     R5,A
0159 7F01              MOV     R7,#01H
015B 110000      E     ACALL   _SOsd_SetPixelWidth
                                           ; SOURCE LINE # 507
015E E4                CLR     A
015F FD                MOV     R5,A
0160 FC                MOV     R4,A
0161 7F01              MOV     R7,#01H
0163 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 509
0166 7D01              MOV     R5,#01H
0168 7F01              MOV     R7,#01H
016A 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 512
016D 90000000    R     MOV     DPTR,#header
0171 110000      R     ACALL   L?0777
0174 240A              ADD     A,#0AH
0176 110000      R     ACALL   L?0786
0179 FF                MOV     R7,A
017A 6010              JZ      ?C0029
                                           ; SOURCE LINE # 513
017C 110000      R     ACALL   L?0882
017F 2409              ADD     A,#09H
0181 110000      R     ACALL   L?0786
0184 FD                MOV     R5,A
0185 AB07              MOV     R3,AR7
0187 7F01              MOV     R7,#01H
0189 110000      E     ACALL   _SOsd_SetRlc
018C         ?C0029:
                                           ; SOURCE LINE # 516
018C 7F01              MOV     R7,#01H
018E 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 517
0191 7D01              MOV     R5,#01H
0193 7F01              MOV     R7,#01H
0195 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 518
0198 110000      E     ACALL   SOsd_UpdateRlc
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 132 

                                           ; SOURCE LINE # 526
019B 90000000    R     MOV     DPTR,#header
019F 110000      R     ACALL   L?0777
01A2 2408              ADD     A,#08H
01A4 110000      R     ACALL   L?0786
01A7 FD                MOV     R5,A
01A8 C005              PUSH    AR5
01AA 110000      R     ACALL   L?0882
01AD 240F              ADD     A,#0FH
01AF 110000      R     ACALL   L?0794
01B2 110000      R     ACALL   L?0870
01B5 F0                MOVX    @DPTR,A
01B6 90000000    R     MOV     DPTR,#header
01BA 110000      R     ACALL   L?0845
01BD 90000000    R     MOV     DPTR,#image
01C1 110000      R     ACALL   L?0777
01C4 2408              ADD     A,#08H
01C6 110000      R     ACALL   L?0786
01C9 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
01CD F0                MOVX    @DPTR,A
01CE 90000000    R     MOV     DPTR,#lut_loc
01D2 E0                MOVX    A,@DPTR
01D3 FA                MOV     R2,A
01D4 A3                INC     DPTR
01D5 E0                MOVX    A,@DPTR
01D6 FB                MOV     R3,A
01D7 D005              POP     AR5
01D9 7F01              MOV     R7,#01H
01DB 110000      E     ACALL   _SOsd_SetLut
                                           ; SOURCE LINE # 527
01DE E4                CLR     A
01DF FD                MOV     R5,A
01E0 7F01              MOV     R7,#01H
01E2 110000      E     ACALL   _SOsd_UpdateLut
                                           ; SOURCE LINE # 530
01E5         ?C0025:
01E5 22                RET     
01E6         L?0939:
01E6 110000      E     ACALL   ?C?LLDCODE
01E9 90000000    E     MOV     DPTR,#?_SpiFlash_Read_XMem?BYTE+04H
01ED 7400        R     MOV     A,#HIGH rle_header
01EF F0                MOVX    @DPTR,A
01F0 A3                INC     DPTR
01F1 7400        R     MOV     A,#LOW rle_header
01F3 F0                MOVX    @DPTR,A
01F4 A3                INC     DPTR
01F5 E4                CLR     A
01F6 F0                MOVX    @DPTR,A
01F7 A3                INC     DPTR
01F8 7410              MOV     A,#010H
01FA F0                MOVX    @DPTR,A
01FB 110000      E     ACALL   _SpiFlash_Read_XMem
01FE 90000000    R     MOV     DPTR,#rle_header
0202 E0                MOVX    A,@DPTR
0203 22                RET     
             ; FUNCTION InitLogo1 (END)

             ; FUNCTION _RemoveLogoWithWait (BEGIN)
                                           ; SOURCE LINE # 540
;---- Variable 'fPowerUpBoot' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 541
                                           ; SOURCE LINE # 546
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 133 

0000 E4                CLR     A
0001 90000000    R     MOV     DPTR,#NoSignalLogoShow
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 549
0006 EF                MOV     A,R7
0007 6067              JZ      END_END
                                           ; SOURCE LINE # 550
0009 E4                CLR     A
000A 90000000    R     MOV     DPTR,#i
000E F0                MOVX    @DPTR,A
000F         ?C0031:
                                           ; SOURCE LINE # 551
                                           ; SOURCE LINE # 552
000F 110000      R     ACALL   L?1052
0012 6004              JZ      ?C0034
0014 E0                MOVX    A,@DPTR
0015 B40314            CJNE    A,#03H,?C0032
0018         ?C0034:
                                           ; SOURCE LINE # 553
0018 7F0A              MOV     R7,#0AH
001A 7E00              MOV     R6,#00H
001C 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 554
001F 90000000    R     MOV     DPTR,#i
0023 E0                MOVX    A,@DPTR
0024 04                INC     A
0025 F0                MOVX    @DPTR,A
0026 E0                MOVX    A,@DPTR
0027 C3                CLR     C
0028 9480              SUBB    A,#080H
002A 40E3              JC      ?C0031
002C         ?C0032:
                                           ; SOURCE LINE # 555
002C 90000000    R     MOV     DPTR,#i
0030 E0                MOVX    A,@DPTR
0031 6480              XRL     A,#080H
0033 703B              JNZ     END_END
                                           ; SOURCE LINE # 557
                                           ; SOURCE LINE # 558
0035         ?C0035:
                                           ; SOURCE LINE # 560
0035 E4                CLR     A
0036 90000000    R     MOV     DPTR,#i
003A F0                MOVX    @DPTR,A
003B         ?C0037:
003B 90000000    R     MOV     DPTR,#i
003F E0                MOVX    A,@DPTR
0040 FD                MOV     R5,A
0041 C3                CLR     C
0042 9480              SUBB    A,#080H
0044 502A              JNC     ?C0038
                                           ; SOURCE LINE # 561
0046 7F01              MOV     R7,#01H
0048 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 562
004B 7F01              MOV     R7,#01H
004D 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 563
0050 7D01              MOV     R5,#01H
0052 7F01              MOV     R7,#01H
0054 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 564
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 134 

0057 7F0A              MOV     R7,#0AH
0059 7E00              MOV     R6,#00H
005B 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 565
                                           ; SOURCE LINE # 566
005E 110000      R     ACALL   L?1052
0061 6004              JZ      ?C0039
0063 E0                MOVX    A,@DPTR
0064 B40309            CJNE    A,#03H,?C0038
                                           ; SOURCE LINE # 567
0067         ?C0040:
                                           ; SOURCE LINE # 568
0067         ?C0039:
0067 90000000    R     MOV     DPTR,#i
006B E0                MOVX    A,@DPTR
006C 04                INC     A
006D F0                MOVX    @DPTR,A
006E 80CB              SJMP    ?C0037
0070         ?C0038:
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 571
                                           ; SOURCE LINE # 572
                                           ; SOURCE LINE # 573
0070         END_END:
                                           ; SOURCE LINE # 574
0070 7F01              MOV     R7,#01H
0072 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 575
0075 E4                CLR     A
0076 FD                MOV     R5,A
0077 7F01              MOV     R7,#01H
0079 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 576
007C E4                CLR     A
007D FF                MOV     R7,A
007E 010000      E     AJMP    _SpiOsdEnable
                                           ; SOURCE LINE # 577
0081         L?1052:
0081 7F01              MOV     R7,#01H
0083 110000      E     ACALL   _CheckHumanInputs
0086 90000000    R     MOV     DPTR,#human_input
008A EF                MOV     A,R7
008B F0                MOVX    @DPTR,A
008C E0                MOVX    A,@DPTR
008D 22                RET     
             ; FUNCTION _RemoveLogoWithWait (END)

             ; FUNCTION RemoveLogo (BEGIN)
                                           ; SOURCE LINE # 578
                                           ; SOURCE LINE # 579
                                           ; SOURCE LINE # 581
0000 E4                CLR     A
0001 90000000    R     MOV     DPTR,#NoSignalLogoShow
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 583
0006 7F01              MOV     R7,#01H
0008 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 584
000B E4                CLR     A
000C FD                MOV     R5,A
000D 7F01              MOV     R7,#01H
000F 110000      E     ACALL   _SOsd_Enable
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 135 

                                           ; SOURCE LINE # 585
0012 E4                CLR     A
0013 FF                MOV     R7,A
0014 010000      E     AJMP    _SpiOsdEnable
             ; FUNCTION RemoveLogo (END)

             ; FUNCTION getNoSignalLogoStatus (BEGIN)
                                           ; SOURCE LINE # 596
                                           ; SOURCE LINE # 597
                                           ; SOURCE LINE # 598
0000 90000000    R     MOV     DPTR,#NoSignalLogoShow
0004 E0                MOVX    A,@DPTR
0005 FF                MOV     R7,A
                                           ; SOURCE LINE # 599
0006         ?C0044:
0006 22                RET     
             ; FUNCTION getNoSignalLogoStatus (END)

             ; FUNCTION _MenuFontOsdItemInit (BEGIN)
                                           ; SOURCE LINE # 615
0000 90000000    R     MOV     DPTR,#f1BPP_ALPHA
0004 ED                MOV     A,R5
;---- Variable 'item' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 616
                                           ; SOURCE LINE # 623
0005 110000      R     ACALL   L?0775
0008 2405              ADD     A,#05H
000A 110000      R     ACALL   L?0781
000D 90000000    R     MOV     DPTR,#menu_item
0011 110000      R     ACALL   L?1055
                                           ; SOURCE LINE # 624
0014 110000      R     ACALL   L?0775
0017 2408              ADD     A,#08H
0019 110000      R     ACALL   L?0781
001C 90000000    R     MOV     DPTR,#text_info
0020 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 626
0023 90000000    R     MOV     DPTR,#text_info+01H
0027 110000      R     ACALL   L?0915
                                           ; SOURCE LINE # 628
002A 90000000    R     MOV     DPTR,#text_info
002E 110000      R     ACALL   L?0777
0031 F9                MOV     R1,A
0032 110000      E     ACALL   ?C?CLDPTR
0035 FF                MOV     R7,A
0036 90000000    R     MOV     DPTR,#winno
003A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 629
003B E9                MOV     A,R1
003C 240C              ADD     A,#0CH
003E 110000      R     ACALL   L?0786
0041 90000000    R     MOV     DPTR,#palette
0045 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 639
0046 E4                CLR     A
0047 FD                MOV     R5,A
0048 110000      E     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 644
004B 110000      R     ACALL   L?0985
004E 110000      R     ACALL   L?0825
0051 E0                MOVX    A,@DPTR
0052 54DF              ANL     A,#0DFH
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 136 

0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 645
0055 110000      R     ACALL   L?0985
0058 110000      R     ACALL   L?0825
005B E0                MOVX    A,@DPTR
005C 54FE              ANL     A,#0FEH
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 647
005F 110000      R     ACALL   L?1083
0062 7D01              MOV     R5,#01H
0064 110000      E     ACALL   _FOsdWinMulticolor
                                           ; SOURCE LINE # 651
0067 90000000    R     MOV     DPTR,#text_info
006B 110000      R     ACALL   L?0777
006E 2403              ADD     A,#03H
0070 110000      R     ACALL   L?0794
0073 FF                MOV     R7,A
0074 AEF0              MOV     R6,B
0076 90000000    R     MOV     DPTR,#menu_item
007A 110000      R     ACALL   L?0777
007D 110000      R     ACALL   L?0793
0080 2F                ADD     A,R7
0081 FD                MOV     R5,A
0082 E5F0              MOV     A,B
0084 3E                ADDC    A,R6
0085 FC                MOV     R4,A
0086 90000000    R     MOV     DPTR,#text_info
008A 110000      R     ACALL   L?0777
008D 2405              ADD     A,#05H
008F 110000      R     ACALL   L?0794
0092 FF                MOV     R7,A
0093 AEF0              MOV     R6,B
0095 90000000    R     MOV     DPTR,#menu_item
0099 110000      R     ACALL   L?0777
009C 2406              ADD     A,#06H
009E 110000      R     ACALL   L?0794
00A1 90000000    R     MOV     DPTR,#winno
00A5 110000      R     ACALL   L?0947
00A8 110000      E     ACALL   _FOsdWinScreenXY
                                           ; SOURCE LINE # 652
00AB 110000      R     ACALL   L?0958
00AE 110000      R     ACALL   L?0777
00B1 2407              ADD     A,#07H
00B3 110000      R     ACALL   L?0786
00B6 110000      R     ACALL   L?1006
00B9 2408              ADD     A,#08H
00BB 110000      R     ACALL   L?0786
00BE FB                MOV     R3,A
00BF 110000      E     ACALL   _FOsdWinScreenWH
                                           ; SOURCE LINE # 653
00C2 110000      R     ACALL   L?0958
00C5 110000      R     ACALL   L?0777
00C8 2409              ADD     A,#09H
00CA 110000      R     ACALL   L?0786
00CD 110000      R     ACALL   L?1006
00D0 240A              ADD     A,#0AH
00D2 110000      R     ACALL   L?0786
00D5 FB                MOV     R3,A
00D6 110000      E     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 655
00D9 110000      R     ACALL   L?1083
00DC A3                INC     DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 137 

00DD E0                MOVX    A,@DPTR
00DE FD                MOV     R5,A
00DF 110000      E     ACALL   _FOsdWinSetBpp3Alpha
                                           ; SOURCE LINE # 656
00E2 90000000    R     MOV     DPTR,#palette
00E6 110000      R     ACALL   L?0960
00E9 110000      R     ACALL   L?0777
00EC 240D              ADD     A,#0DH
00EE 110000      R     ACALL   L?0794
00F1 110000      R     ACALL   L?1057
00F4 110000      E     ACALL   _FOsdSetPaletteColor
                                           ; SOURCE LINE # 657
00F7 110000      R     ACALL   L?0959
00FA 110000      R     ACALL   L?0777
00FD 2401              ADD     A,#01H
00FF 110000      R     ACALL   L?0794
0102 FD                MOV     R5,A
0103 ACF0              MOV     R4,B
0105 110000      E     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 668
0108 90000000    R     MOV     DPTR,#f1BPP_ALPHA
010C E0                MOVX    A,@DPTR
010D 6016              JZ      ?C0045
                                           ; SOURCE LINE # 669
010F A3                INC     DPTR
0110 110000      R     ACALL   L?0960
0113 110000      R     ACALL   L?0777
0116 240B              ADD     A,#0BH
0118 110000      R     ACALL   L?0786
011B FE                MOV     R6,A
011C C4                SWAP    A
011D 540F              ANL     A,#0FH
011F FD                MOV     R5,A
0120 7B0F              MOV     R3,#0FH
0122 110000      E     ACALL   _FOsdWinAlphaPixel
                                           ; SOURCE LINE # 670
0125         ?C0045:
                                           ; SOURCE LINE # 672
0125 110000      R     ACALL   L?1084
0128 7D01              MOV     R5,#01H
012A 010000      E     AJMP    _FOsdWinEnable
             ; FUNCTION _MenuFontOsdItemInit (END)

             ; FUNCTION _MenuFontOsdItemInitNew (BEGIN)
                                           ; SOURCE LINE # 686
0000 90000000    R     MOV     DPTR,#item_end
0004 ED                MOV     A,R5
;---- Variable 'item_start' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 687
                                           ; SOURCE LINE # 696
0005 110000      R     ACALL   L?0775
0008 2405              ADD     A,#05H
000A 110000      R     ACALL   L?0781
000D 90000000    R     MOV     DPTR,#menu_item
0011 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 698
0014 90000000    R     MOV     DPTR,#item
0018 EF                MOV     A,R7
0019 F0                MOVX    @DPTR,A
001A         ?C0047:
001A 90000000    R     MOV     DPTR,#item_end
001E E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 138 

001F FF                MOV     R7,A
0020 90000000    R     MOV     DPTR,#item
0024 E0                MOVX    A,@DPTR
0025 FE                MOV     R6,A
0026 D3                SETB    C
0027 9F                SUBB    A,R7
0028 4003              JC      $ + 5H
002A 010000      R     AJMP    ?C0050
                                           ; SOURCE LINE # 699
002D 110000      R     ACALL   L?0776
0030 2408              ADD     A,#08H
0032 110000      R     ACALL   L?0781
0035 90000000    R     MOV     DPTR,#text_info
0039 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 700
003C EE                MOV     A,R6
003D 75F00F            MOV     B,#0FH
0040 A4                MUL     AB
0041 FF                MOV     R7,A
0042 90000000    R     MOV     DPTR,#text_info+01H
0046 110000      R     ACALL   L?0916
                                           ; SOURCE LINE # 702
0049 90000000    R     MOV     DPTR,#text_info
004D 110000      R     ACALL   L?0777
0050 F9                MOV     R1,A
0051 110000      E     ACALL   ?C?CLDPTR
0054 FF                MOV     R7,A
0055 90000000    R     MOV     DPTR,#winno
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 703
005A E9                MOV     A,R1
005B 240C              ADD     A,#0CH
005D 110000      R     ACALL   L?0786
0060 90000000    R     MOV     DPTR,#palette
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 711
0065 E4                CLR     A
0066 FD                MOV     R5,A
0067 110000      E     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 713
006A 110000      R     ACALL   L?0986
006D 110000      R     ACALL   L?0825
0070 E0                MOVX    A,@DPTR
0071 90000000    R     MOV     DPTR,#value
0075 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 714
0076 E0                MOVX    A,@DPTR
0077 54DE              ANL     A,#0DEH
0079 FF                MOV     R7,A
007A 110000      R     ACALL   L?0986
007D 110000      R     ACALL   L?0825
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 716
0082 110000      R     ACALL   L?1085
0085 7D01              MOV     R5,#01H
0087 110000      E     ACALL   _FOsdWinMulticolor
                                           ; SOURCE LINE # 718
008A 90000000    R     MOV     DPTR,#text_info
008E 110000      R     ACALL   L?0777
0091 2403              ADD     A,#03H
0093 110000      R     ACALL   L?0794
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 139 

0096 FF                MOV     R7,A
0097 AEF0              MOV     R6,B
0099 90000000    R     MOV     DPTR,#menu_item
009D 110000      R     ACALL   L?0777
00A0 110000      R     ACALL   L?0793
00A3 2F                ADD     A,R7
00A4 FD                MOV     R5,A
00A5 E5F0              MOV     A,B
00A7 3E                ADDC    A,R6
00A8 FC                MOV     R4,A
00A9 90000000    R     MOV     DPTR,#text_info
00AD 110000      R     ACALL   L?0777
00B0 2405              ADD     A,#05H
00B2 110000      R     ACALL   L?0794
00B5 FF                MOV     R7,A
00B6 AEF0              MOV     R6,B
00B8 90000000    R     MOV     DPTR,#menu_item
00BC 110000      R     ACALL   L?0777
00BF 2406              ADD     A,#06H
00C1 110000      R     ACALL   L?0794
00C4 90000000    R     MOV     DPTR,#winno
00C8 110000      R     ACALL   L?0947
00CB 110000      E     ACALL   _FOsdWinScreenXY
                                           ; SOURCE LINE # 719
00CE 110000      R     ACALL   L?0978
00D1 110000      R     ACALL   L?0777
00D4 2407              ADD     A,#07H
00D6 110000      R     ACALL   L?0786
00D9 90000000    R     MOV     DPTR,#text_info
00DD 110000      R     ACALL   L?1007
00E0 2408              ADD     A,#08H
00E2 110000      R     ACALL   L?0786
00E5 FB                MOV     R3,A
00E6 110000      E     ACALL   _FOsdWinScreenWH
                                           ; SOURCE LINE # 720
00E9 110000      R     ACALL   L?0978
00EC 110000      R     ACALL   L?0777
00EF 2409              ADD     A,#09H
00F1 110000      R     ACALL   L?0786
00F4 FD                MOV     R5,A
00F5 90000000    R     MOV     DPTR,#text_info
00F9 A3                INC     DPTR
00FA E0                MOVX    A,@DPTR
00FB FA                MOV     R2,A
00FC A3                INC     DPTR
00FD E0                MOVX    A,@DPTR
00FE 240A              ADD     A,#0AH
0100 110000      R     ACALL   L?0786
0103 FB                MOV     R3,A
0104 110000      E     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 723
0107 110000      R     ACALL   L?1085
010A A3                INC     DPTR
010B E0                MOVX    A,@DPTR
010C FD                MOV     R5,A
010D 110000      E     ACALL   _FOsdWinSetBpp3Alpha
                                           ; SOURCE LINE # 733
0110 90000000    R     MOV     DPTR,#palette
0114 110000      R     ACALL   L?0980
0117 110000      R     ACALL   L?0777
011A 240D              ADD     A,#0DH
011C 110000      R     ACALL   L?0794
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 140 

011F 110000      R     ACALL   L?1057
0122 110000      E     ACALL   _FOsdSetPaletteColor
                                           ; SOURCE LINE # 734
0125 110000      R     ACALL   L?0979
0128 110000      R     ACALL   L?0777
012B 2401              ADD     A,#01H
012D 110000      R     ACALL   L?0794
0130 FD                MOV     R5,A
0131 ACF0              MOV     R4,B
0133 110000      E     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 736
0136 110000      R     ACALL   L?1086
0139 7D01              MOV     R5,#01H
013B 110000      E     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 737
013E 90000000    R     MOV     DPTR,#item
0142 E0                MOVX    A,@DPTR
0143 04                INC     A
0144 F0                MOVX    @DPTR,A
0145 010000      R     AJMP    ?C0047
                                           ; SOURCE LINE # 738
0148         ?C0050:
0148 22                RET     
             ; FUNCTION _MenuFontOsdItemInitNew (END)

             ; FUNCTION _MenuDrawCurrImage (BEGIN)
                                           ; SOURCE LINE # 850
0000 90000000    R     MOV     DPTR,#use1
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 851
                                           ; SOURCE LINE # 856
0009 90000000    R     MOV     DPTR,#header
000D 110000      R     ACALL   L?0854
                                           ; SOURCE LINE # 858
0010 110000      R     ACALL   L?0775
0013 2405              ADD     A,#05H
0015 110000      R     ACALL   L?0781
0018 90000000    R     MOV     DPTR,#item
001C E0                MOVX    A,@DPTR
001D 90000000    R     MOV     DPTR,#menu_item
0021 110000      R     ACALL   L?0805
                                           ; SOURCE LINE # 859
0024 90000000    R     MOV     DPTR,#use1
0028 E0                MOVX    A,@DPTR
0029 90000000    R     MOV     DPTR,#menu_item
002D 6007              JZ      ?C0051
002F 110000      R     ACALL   L?0777
0032 240C              ADD     A,#0CH
0034 8005              SJMP    ?C0720
0036         ?C0051:
                                           ; SOURCE LINE # 860
0036 110000      R     ACALL   L?0777
0039 2409              ADD     A,#09H
003B         ?C0720:
003B 110000      R     ACALL   L?0781
003E 90000000    R     MOV     DPTR,#image
0042 110000      R     ACALL   L?0806
0045         ?C0052:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 141 

                                           ; SOURCE LINE # 861
0045 90000000    R     MOV     DPTR,#image
0049 110000      R     ACALL   L?0777
004C 4A                ORL     A,R2
004D 4B                ORL     A,R3
004E 7003              JNZ     $ + 5H
0050 010000      R     AJMP    ?C0054
                                           ; SOURCE LINE # 864
0053         ?C0053:
                                           ; SOURCE LINE # 866
0053 110000      R     ACALL   L?0776
0056 110000      R     ACALL   L?0836
0059 6400        E     XRL     A,#MBYTE menu_slider_page
005B 700A              JNZ     ?C0668
005D 7400        E     MOV     A,#LOW menu_slider_page
005F 6582              XRL     A,DPL
0061 7004              JNZ     ?C0668
0063 7400        E     MOV     A,#HIGH menu_slider_page
0065 6583              XRL     A,DPH
0067         ?C0668:
0067 6016              JZ      ?C0056
0069 110000      R     ACALL   L?0776
006C 110000      R     ACALL   L?0836
006F 6400        E     XRL     A,#MBYTE menu_slider3_page
0071 700A              JNZ     ?C0669
0073 7400        E     MOV     A,#LOW menu_slider3_page
0075 6582              XRL     A,DPL
0077 7004              JNZ     ?C0669
0079 7400        E     MOV     A,#HIGH menu_slider3_page
007B 6583              XRL     A,DPH
007D         ?C0669:
007D 7017              JNZ     ?C0055
007F         ?C0056:
                                           ; SOURCE LINE # 867
007F 90000000    R     MOV     DPTR,#item
0083 E0                MOVX    A,@DPTR
0084 B4010F            CJNE    A,#01H,?C0055
                                           ; SOURCE LINE # 869
0087 90000000    R     MOV     DPTR,#slide_title_img
008B 110000      R     ACALL   L?0829
008E 90000000    R     MOV     DPTR,#image
0092 C9                XCH     A,R1
0093 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 870
                                           ; SOURCE LINE # 871
0096         ?C0055:
                                           ; SOURCE LINE # 873
0096 90000000    R     MOV     DPTR,#image
009A 110000      R     ACALL   L?0777
009D F9                MOV     R1,A
009E 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 881
00A1 90000000    R     MOV     DPTR,#menu_item
00A5 110000      R     ACALL   L?0777
00A8 110000      R     ACALL   L?0793
00AB 90000000    R     MOV     DPTR,#sx
00AF 110000      R     ACALL   L?0973
00B2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 882
00B3 90000000    R     MOV     DPTR,#menu_item
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 142 

00B9 FA                MOV     R2,A
00BA A3                INC     DPTR
00BB E0                MOVX    A,@DPTR
00BC 2406              ADD     A,#06H
00BE 110000      R     ACALL   L?0794
00C1 90000000    R     MOV     DPTR,#sy
00C5 110000      R     ACALL   L?0973
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 883
00C9 110000      R     ACALL   L?1087
00CC 2410              ADD     A,#010H
00CE 110000      R     ACALL   L?0786
00D1 90000000    R     MOV     DPTR,#sosd_win
00D5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 886
                                           ; SOURCE LINE # 888
00D6         ?C0058:
                                           ; SOURCE LINE # 891
00D6 90000000    R     MOV     DPTR,#header
00DA 110000      R     ACALL   L?0777
00DD 110000      R     ACALL   L?0863
00E0 110000      R     ACALL   L?0956
00E3 110000      R     ACALL   L?0884
00E6 110000      E     ACALL   _SOsd_SetSpiStartOffset
                                           ; SOURCE LINE # 892
00E9 110000      R     ACALL   L?0884
00EC A3                INC     DPTR
00ED 110000      R     ACALL   L?0777
00F0 240B              ADD     A,#0BH
00F2 110000      R     ACALL   L?0794
00F5 FD                MOV     R5,A
00F6 ACF0              MOV     R4,B
00F8 90000000    R     MOV     DPTR,#header
00FC A3                INC     DPTR
00FD E0                MOVX    A,@DPTR
00FE FA                MOV     R2,A
00FF A3                INC     DPTR
0100 E0                MOVX    A,@DPTR
0101 240D              ADD     A,#0DH
0103 110000      R     ACALL   L?0794
0106 FB                MOV     R3,A
0107 AAF0              MOV     R2,B
0109 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 893
010C 110000      R     ACALL   L?0884
010F 90000000    R     MOV     DPTR,#sx
0113 E0                MOVX    A,@DPTR
0114 FC                MOV     R4,A
0115 A3                INC     DPTR
0116 E0                MOVX    A,@DPTR
0117 FD                MOV     R5,A
0118 90000000    R     MOV     DPTR,#header
011C 110000      R     ACALL   L?0777
011F 240B              ADD     A,#0BH
0121 110000      R     ACALL   L?0794
0124 110000      R     ACALL   L?0875
0127 90000000    R     MOV     DPTR,#header
012B 110000      R     ACALL   L?0777
012E 240D              ADD     A,#0DH
0130 110000      R     ACALL   L?0794
0133 110000      R     ACALL   L?0917
0136 90000000    R     MOV     DPTR,#sy
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 143 

013A E0                MOVX    A,@DPTR
013B FA                MOV     R2,A
013C A3                INC     DPTR
013D E0                MOVX    A,@DPTR
013E FB                MOV     R3,A
013F 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 894
0142 90000000    R     MOV     DPTR,#sosd_win
0146 E0                MOVX    A,@DPTR
0147 700D              JNZ     ?C0059
                                           ; SOURCE LINE # 895
0149 FD                MOV     R5,A
014A FC                MOV     R4,A
014B FF                MOV     R7,A
014C FE                MOV     R6,A
014D 110000      E     ACALL   _SOsd_SetWin0ImageOffsetXY
                                           ; SOURCE LINE # 896
0150 110000      R     ACALL   L?0950
0153 110000      E     ACALL   _SOsd_SetWin0Animation
                                           ; SOURCE LINE # 897
0156         ?C0059:
                                           ; SOURCE LINE # 898
0156 90000000    R     MOV     DPTR,#image
015A 110000      R     ACALL   L?0777
015D 2408              ADD     A,#08H
015F 110000      R     ACALL   L?0786
0162 F4                CPL     A
0163 90000000    R     MOV     DPTR,#sosd_win
0167 601C              JZ      ?C0060
                                           ; SOURCE LINE # 899
0169 E0                MOVX    A,@DPTR
016A FF                MOV     R7,A
016B 7D01              MOV     R5,#01H
016D 110000      E     ACALL   _SOsd_SetPixelAlpha
                                           ; SOURCE LINE # 900
0170 110000      R     ACALL   L?0884
0173 90000000    R     MOV     DPTR,#image
0177 110000      R     ACALL   L?0777
017A 2408              ADD     A,#08H
017C 110000      R     ACALL   L?0786
017F FD                MOV     R5,A
0180 110000      E     ACALL   _SOsd_SetPixelAlphaIndex
                                           ; SOURCE LINE # 901
0183 8007              SJMP    ?C0061
0185         ?C0060:
                                           ; SOURCE LINE # 902
                                           ; SOURCE LINE # 903
0185 E0                MOVX    A,@DPTR
0186 FF                MOV     R7,A
0187 E4                CLR     A
0188 FD                MOV     R5,A
0189 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 904
018C         ?C0061:
                                           ; SOURCE LINE # 905
018C 110000      R     ACALL   L?0884
018F A3                INC     DPTR
0190 110000      R     ACALL   L?0777
0193 2409              ADD     A,#09H
0195 110000      R     ACALL   L?0786
0198 FD                MOV     R5,A
0199 110000      E     ACALL   _SOsd_SetPixelWidth
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 144 

                                           ; SOURCE LINE # 906
019C 110000      R     ACALL   L?0884
019F 90000000    R     MOV     DPTR,#menu_item
01A3 110000      R     ACALL   L?0777
01A6 2411              ADD     A,#011H
01A8 110000      R     ACALL   L?0794
01AB FD                MOV     R5,A
01AC ACF0              MOV     R4,B
01AE 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 908
01B1 110000      R     ACALL   L?0884
01B4 7D01              MOV     R5,#01H
01B6 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 910
01B9 90000000    R     MOV     DPTR,#UseSOsdHwBuff
01BD E0                MOVX    A,@DPTR
01BE 6069              JZ      ?C0062
                                           ; SOURCE LINE # 914
01C0 90000000    R     MOV     DPTR,#header
01C4 110000      R     ACALL   L?0777
01C7 240A              ADD     A,#0AH
01C9 110000      R     ACALL   L?0786
01CC FE                MOV     R6,A
01CD 6011              JZ      ?C0063
                                           ; SOURCE LINE # 915
01CF 110000      R     ACALL   L?0884
01D2 110000      R     ACALL   L?1087
01D5 2409              ADD     A,#09H
01D7 110000      R     ACALL   L?0786
01DA FD                MOV     R5,A
01DB AB06              MOV     R3,AR6
01DD 110000      E     ACALL   _SOsd_SetRlc
01E0         ?C0063:
                                           ; SOURCE LINE # 916
01E0 90000000    R     MOV     DPTR,#header
01E4 110000      R     ACALL   L?0777
01E7 2408              ADD     A,#08H
01E9 110000      R     ACALL   L?0786
01EC FD                MOV     R5,A
01ED C005              PUSH    AR5
01EF 90000000    R     MOV     DPTR,#menu_item
01F3 110000      R     ACALL   L?0777
01F6 2411              ADD     A,#011H
01F8 110000      R     ACALL   L?0794
01FB FB                MOV     R3,A
01FC AAF0              MOV     R2,B
01FE C002              PUSH    AR2
0200 C003              PUSH    AR3
0202 90000000    R     MOV     DPTR,#header
0206 110000      R     ACALL   L?0777
0209 240F              ADD     A,#0FH
020B 110000      R     ACALL   L?0794
020E 110000      R     ACALL   L?0844
0211 90000000    R     MOV     DPTR,#image
0215 110000      R     ACALL   L?0777
0218 2408              ADD     A,#08H
021A 110000      R     ACALL   L?0786
021D 110000      R     ACALL   L?0883
0220 D003              POP     AR3
0222 D002              POP     AR2
0224 D005              POP     AR5
0226 010000      E     AJMP    _SOsd_SetLut
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 145 

                                           ; SOURCE LINE # 922
0229         ?C0062:
                                           ; SOURCE LINE # 923
                                           ; SOURCE LINE # 929
0229 90000000    R     MOV     DPTR,#header
022D 110000      R     ACALL   L?0777
0230 240A              ADD     A,#0AH
0232 110000      R     ACALL   L?0786
0235 FE                MOV     R6,A
0236 6013              JZ      ?C0065
                                           ; SOURCE LINE # 930
0238 110000      R     ACALL   L?0884
023B 110000      R     ACALL   L?1088
023E 2409              ADD     A,#09H
0240 110000      R     ACALL   L?0786
0243 FD                MOV     R5,A
0244 AB06              MOV     R3,AR6
0246 110000      E     ACALL   _SOsd_SetRlc
                                           ; SOURCE LINE # 931
                                           ; SOURCE LINE # 932
0249 800A              SJMP    ?C0721
024B         ?C0065:
                                           ; SOURCE LINE # 933
                                           ; SOURCE LINE # 935
024B 90000000    R     MOV     DPTR,#item
024F E0                MOVX    A,@DPTR
0250 7006              JNZ     ?C0066
                                           ; SOURCE LINE # 936
0252 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 937
0255         ?C0721:
0255 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 938
                                           ; SOURCE LINE # 939
0258         ?C0066:
                                           ; SOURCE LINE # 940
0258 7F01              MOV     R7,#01H
025A 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 944
025D 90000000    R     MOV     DPTR,#header
0261 110000      R     ACALL   L?0777
0264 2408              ADD     A,#08H
0266 110000      R     ACALL   L?0786
0269 FD                MOV     R5,A
026A C005              PUSH    AR5
026C 90000000    R     MOV     DPTR,#menu_item
0270 110000      R     ACALL   L?0777
0273 2411              ADD     A,#011H
0275 110000      R     ACALL   L?0794
0278 FB                MOV     R3,A
0279 AAF0              MOV     R2,B
027B C002              PUSH    AR2
027D C003              PUSH    AR3
027F 90000000    R     MOV     DPTR,#header
0283 110000      R     ACALL   L?0777
0286 240F              ADD     A,#0FH
0288 110000      R     ACALL   L?0794
028B 110000      R     ACALL   L?0844
028E 90000000    R     MOV     DPTR,#image
0292 110000      R     ACALL   L?0777
0295 2408              ADD     A,#08H
0297 110000      R     ACALL   L?0786
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 146 

029A 110000      R     ACALL   L?0883
029D D003              POP     AR3
029F D002              POP     AR2
02A1 D005              POP     AR5
02A3 110000      E     ACALL   _SOsd_SetLut
                                           ; SOURCE LINE # 945
02A6 110000      R     ACALL   L?0884
02A9 7D01              MOV     R5,#01H
02AB 110000      E     ACALL   _SOsd_UpdateLut
                                           ; SOURCE LINE # 949
02AE 90000000    R     MOV     DPTR,#menu_item
02B2 110000      R     ACALL   L?0777
02B5 2410              ADD     A,#010H
02B7 110000      R     ACALL   L?0786
02BA FD                MOV     R5,A
02BB FF                MOV     R7,A
02BC 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 950
                                           ; SOURCE LINE # 951
02BF         ?C0054:
02BF 22                RET     
             ; FUNCTION _MenuDrawCurrImage (END)

             ; FUNCTION _MenuDrawScrollImage (BEGIN)
                                           ; SOURCE LINE # 966
0000 90000000    R     MOV     DPTR,#item
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 967
                                           ; SOURCE LINE # 975
0009 90000000    R     MOV     DPTR,#sx
                                           ; SOURCE LINE # 976
000D 110000      R     ACALL   L?1028
                                           ; SOURCE LINE # 978
0010 110000      R     ACALL   L?0853
                                           ; SOURCE LINE # 981
0013 110000      R     ACALL   L?0775
0016 2405              ADD     A,#05H
0018 110000      R     ACALL   L?0781
001B 90000000    R     MOV     DPTR,#item
001F E0                MOVX    A,@DPTR
0020 90000000    R     MOV     DPTR,#menu_item
0024 110000      R     ACALL   L?0805
                                           ; SOURCE LINE # 982
0027 2409              ADD     A,#09H
0029 110000      R     ACALL   L?0781
002C 90000000    R     MOV     DPTR,#image
0030 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 985
0033 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 989
0036 90000000    R     MOV     DPTR,#header
003A 110000      R     ACALL   L?0777
003D 240A              ADD     A,#0AH
003F 110000      R     ACALL   L?0786
0042 6003              JZ      ?C0068
                                           ; SOURCE LINE # 991
0044 010000      R     AJMP    ?C0722
                                           ; SOURCE LINE # 993
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 147 

0047         ?C0068:
                                           ; SOURCE LINE # 995
0047 90000000    R     MOV     DPTR,#menu_item
004B 110000      R     ACALL   L?0777
004E 2410              ADD     A,#010H
0050 110000      R     ACALL   L?0786
0053 90000000    R     MOV     DPTR,#sosd_win
0057 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 998
0058 7F01              MOV     R7,#01H
005A 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 1000
005D 90000000    R     MOV     DPTR,#header
0061 110000      R     ACALL   L?0777
0064 2408              ADD     A,#08H
0066 110000      R     ACALL   L?0786
0069 FD                MOV     R5,A
006A C005              PUSH    AR5
006C 90000000    R     MOV     DPTR,#menu_item
0070 110000      R     ACALL   L?0777
0073 2411              ADD     A,#011H
0075 110000      R     ACALL   L?0794
0078 FB                MOV     R3,A
0079 AAF0              MOV     R2,B
007B C002              PUSH    AR2
007D C003              PUSH    AR3
007F 90000000    R     MOV     DPTR,#header
0083 110000      R     ACALL   L?0777
0086 240F              ADD     A,#0FH
0088 110000      R     ACALL   L?0794
008B 110000      R     ACALL   L?0870
008E F0                MOVX    @DPTR,A
008F 90000000    R     MOV     DPTR,#header
0093 110000      R     ACALL   L?0845
0096 90000000    R     MOV     DPTR,#image
009A 110000      R     ACALL   L?0777
009D 2408              ADD     A,#08H
009F 110000      R     ACALL   L?0786
00A2 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
00A6 F0                MOVX    @DPTR,A
00A7 110000      R     ACALL   L?0952
00AA D003              POP     AR3
00AC D002              POP     AR2
00AE D005              POP     AR5
00B0 110000      E     ACALL   _SOsd_SetLut
                                           ; SOURCE LINE # 1001
00B3 110000      R     ACALL   L?0952
00B6 7D01              MOV     R5,#01H
00B8 110000      E     ACALL   _SOsd_UpdateLut
                                           ; SOURCE LINE # 1003
00BB 110000      R     ACALL   L?0953
00BE 7D01              MOV     R5,#01H
00C0 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 1004
00C3 110000      R     ACALL   L?0953
00C6 7D01              MOV     R5,#01H
00C8 110000      E     ACALL   _SOsd_SetPixelAlpha
                                           ; SOURCE LINE # 1005
00CB 110000      R     ACALL   L?0953
00CE 90000000    R     MOV     DPTR,#header
00D2 110000      R     ACALL   L?0777
00D5 2409              ADD     A,#09H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 148 

00D7 110000      R     ACALL   L?0786
00DA FD                MOV     R5,A
00DB 110000      E     ACALL   _SOsd_SetPixelWidth
                                           ; SOURCE LINE # 1006
00DE 110000      R     ACALL   L?0953
00E1 90000000    R     MOV     DPTR,#menu_item
00E5 110000      R     ACALL   L?0777
00E8 2411              ADD     A,#011H
00EA 110000      R     ACALL   L?0794
00ED FD                MOV     R5,A
00EE ACF0              MOV     R4,B
00F0 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 1007
00F3 90000000    R     MOV     DPTR,#sosd_win
00F7 E0                MOVX    A,@DPTR
00F8 700D              JNZ     ?C0070
                                           ; SOURCE LINE # 1008
00FA FD                MOV     R5,A
00FB FC                MOV     R4,A
00FC FF                MOV     R7,A
00FD FE                MOV     R6,A
00FE 110000      E     ACALL   _SOsd_SetWin0ImageOffsetXY
                                           ; SOURCE LINE # 1009
0101 110000      R     ACALL   L?0950
0104 110000      E     ACALL   _SOsd_SetWin0Animation
                                           ; SOURCE LINE # 1010
0107         ?C0070:
                                           ; SOURCE LINE # 1012
0107 90000000    R     MOV     DPTR,#direction
010B E0                MOVX    A,@DPTR
010C 6403              XRL     A,#03H
010E 6003              JZ      $ + 5H
0110 010000      R     AJMP    ?C0071
                                           ; SOURCE LINE # 1013
0113 A3                INC     DPTR
0114 F0                MOVX    @DPTR,A
0115 A3                INC     DPTR
0116 04                INC     A
0117 F0                MOVX    @DPTR,A
0118         ?C0072:
0118 90000000    R     MOV     DPTR,#header
011C 110000      R     ACALL   L?0777
011F 240D              ADD     A,#0DH
0121 110000      R     ACALL   L?0794
0124 110000      R     ACALL   L?0961
0127 9E                SUBB    A,R6
0128 4003              JC      $ + 5H
012A 010000      R     AJMP    ?C0069
                                           ; SOURCE LINE # 1014
012D 110000      R     ACALL   L?0987
0130 FE                MOV     R6,A
0131 110000      R     ACALL   L?0989
0134 240B              ADD     A,#0BH
0136 110000      R     ACALL   L?0794
0139 FD                MOV     R5,A
013A ACF0              MOV     R4,B
013C 110000      E     ACALL   ?C?IMUL
013F E4                CLR     A
0140 FC                MOV     R4,A
0141 FD                MOV     R5,A
0142 110000      R     ACALL   L?0856
                                           ; SOURCE LINE # 1015
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 149 

                                           ; SOURCE LINE # 1016
0145 110000      R     ACALL   L?1075
0148 110000      R     ACALL   L?0803
014B EC                MOV     A,R4
014C 4D                ORL     A,R5
014D 4E                ORL     A,R6
014E 4F                ORL     A,R7
014F 6032              JZ      ?C0075
                                           ; SOURCE LINE # 1017
0151 90000000    R     MOV     DPTR,#header
0155 110000      R     ACALL   L?0777
0158 2409              ADD     A,#09H
015A 110000      R     ACALL   L?0786
015D 6406              XRL     A,#06H
015F 7005              JNZ     ?C0076
                                           ; SOURCE LINE # 1018
0161 110000      R     ACALL   L?1076
                                           ; SOURCE LINE # 1019
                                           ; SOURCE LINE # 1020
                                           ; SOURCE LINE # 1021
                                           ; SOURCE LINE # 1022
0164 801A              SJMP    ?C0723
0166         ?C0076:
                                           ; SOURCE LINE # 1023
0166 90000000    R     MOV     DPTR,#header
016A 110000      R     ACALL   L?0777
016D 2409              ADD     A,#09H
016F 110000      R     ACALL   L?0786
0172 6404              XRL     A,#04H
0174 700D              JNZ     ?C0075
                                           ; SOURCE LINE # 1024
0176 90000000    R     MOV     DPTR,#start_byte
017A 110000      R     ACALL   L?0803
017D E4                CLR     A
017E 7B04              MOV     R3,#04H
0180         ?C0723:
                                           ; SOURCE LINE # 1025
                                           ; SOURCE LINE # 1026
                                           ; SOURCE LINE # 1027
0180 110000      R     ACALL   L?0855
                                           ; SOURCE LINE # 1028
                                           ; SOURCE LINE # 1029
0183         ?C0075:
                                           ; SOURCE LINE # 1031
0183 90000000    R     MOV     DPTR,#header
0187 110000      R     ACALL   L?0777
018A 110000      R     ACALL   L?0863
018D 90000000    R     MOV     DPTR,#start_byte
0191 110000      R     ACALL   L?0828
                                           ; SOURCE LINE # 1032
                                           ; SOURCE LINE # 1033
0194 110000      R     ACALL   L?0851
0197 A3                INC     DPTR
0198 E0                MOVX    A,@DPTR
0199 FC                MOV     R4,A
019A A3                INC     DPTR
019B E0                MOVX    A,@DPTR
019C FD                MOV     R5,A
019D 90000000    R     MOV     DPTR,#header
01A1 110000      R     ACALL   L?0777
01A4 240B              ADD     A,#0BH
01A6 110000      R     ACALL   L?0794
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 150 

01A9 110000      R     ACALL   L?0875
01AC 90000000    R     MOV     DPTR,#i
01B0 E0                MOVX    A,@DPTR
01B1 FB                MOV     R3,A
01B2 A3                INC     DPTR
01B3 E0                MOVX    A,@DPTR
01B4 CB                XCH     A,R3
01B5 110000      R     ACALL   L?0919
01B8 110000      R     ACALL   L?1053
                                           ; SOURCE LINE # 1034
01BB 110000      R     ACALL   L?0953
01BE 90000000    R     MOV     DPTR,#header
01C2 110000      R     ACALL   L?0777
01C5 240B              ADD     A,#0BH
01C7 110000      R     ACALL   L?0794
01CA FD                MOV     R5,A
01CB ACF0              MOV     R4,B
01CD 90000000    R     MOV     DPTR,#i
01D1 E0                MOVX    A,@DPTR
01D2 FA                MOV     R2,A
01D3 A3                INC     DPTR
01D4 E0                MOVX    A,@DPTR
01D5 FB                MOV     R3,A
01D6 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 1036
                                           ; SOURCE LINE # 1037
01D9 110000      R     ACALL   L?1108
01DC 110000      R     ACALL   L?0777
01DF 2410              ADD     A,#010H
01E1 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 1039
01E4 110000      R     ACALL   L?1109
01E7 110000      R     ACALL   L?0777
01EA 240D              ADD     A,#0DH
01EC 110000      R     ACALL   L?0794
01EF FF                MOV     R7,A
01F0 90000000    R     MOV     DPTR,#i+01H
01F4 E0                MOVX    A,@DPTR
01F5 2402              ADD     A,#02H
01F7 FD                MOV     R5,A
01F8 110000      R     ACALL   L?0962
01FB 3400              ADDC    A,#00H
01FD FC                MOV     R4,A
01FE C3                CLR     C
01FF ED                MOV     A,R5
0200 9F                SUBB    A,R7
0201 EC                MOV     A,R4
0202 9E                SUBB    A,R6
0203 4010              JC      ?C0079
                                           ; SOURCE LINE # 1041
0205 E0                MOVX    A,@DPTR
0206 6E                XRL     A,R6
0207 7003              JNZ     ?C0670
0209 A3                INC     DPTR
020A E0                MOVX    A,@DPTR
020B 6F                XRL     A,R7
020C         ?C0670:
020C 6012              JZ      ?C0074
                                           ; SOURCE LINE # 1042
020E 110000      R     ACALL   L?1001
0211 EF                MOV     A,R7
0212 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 151 

                                           ; SOURCE LINE # 1043
                                           ; SOURCE LINE # 1045
0213 800B              SJMP    ?C0074
0215         ?C0079:
                                           ; SOURCE LINE # 1046
                                           ; SOURCE LINE # 1047
0215 90000000    R     MOV     DPTR,#i+01H
0219 E0                MOVX    A,@DPTR
021A 2402              ADD     A,#02H
021C 110000      R     ACALL   L?1039
021F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1049
                                           ; SOURCE LINE # 1050
0220         ?C0074:
0220 90000000    R     MOV     DPTR,#i+01H
0224 E0                MOVX    A,@DPTR
0225 04                INC     A
0226 F0                MOVX    @DPTR,A
0227 7007              JNZ     ?C0671
0229 90000000    R     MOV     DPTR,#i
022D E0                MOVX    A,@DPTR
022E 04                INC     A
022F F0                MOVX    @DPTR,A
0230         ?C0671:
0230 010000      R     AJMP    ?C0072
                                           ; SOURCE LINE # 1051
0233         ?C0071:
                                           ; SOURCE LINE # 1052
0233 90000000    R     MOV     DPTR,#direction
0237 E0                MOVX    A,@DPTR
0238 6405              XRL     A,#05H
023A 6003              JZ      $ + 5H
023C 010000      R     AJMP    ?C0083
                                           ; SOURCE LINE # 1053
                                           ; SOURCE LINE # 1066
023F 110000      R     ACALL   L?0953
0242 90000000    R     MOV     DPTR,#header
0246 110000      R     ACALL   L?0777
0249 240B              ADD     A,#0BH
024B 110000      R     ACALL   L?0794
024E FD                MOV     R5,A
024F ACF0              MOV     R4,B
0251 110000      R     ACALL   L?0989
0254 240D              ADD     A,#0DH
0256 110000      R     ACALL   L?0794
0259 FB                MOV     R3,A
025A AAF0              MOV     R2,B
025C 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 1068
025F E4                CLR     A
0260 110000      R     ACALL   L?1002
0263 F0                MOVX    @DPTR,A
0264         ?C0084:
0264 90000000    R     MOV     DPTR,#header
0268 110000      R     ACALL   L?0777
026B 240B              ADD     A,#0BH
026D 110000      R     ACALL   L?0794
0270 110000      R     ACALL   L?0961
0273 9E                SUBB    A,R6
0274 4003              JC      $ + 5H
0276 010000      R     AJMP    ?C0069
                                           ; SOURCE LINE # 1069
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 152 

0279 110000      R     ACALL   L?0987
027C FE                MOV     R6,A
027D E4                CLR     A
027E FC                MOV     R4,A
027F FD                MOV     R5,A
0280 A3                INC     DPTR
0281 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1070
                                           ; SOURCE LINE # 1071
0284 110000      R     ACALL   L?1075
0287 110000      R     ACALL   L?0803
028A EC                MOV     A,R4
028B 4D                ORL     A,R5
028C 4E                ORL     A,R6
028D 4F                ORL     A,R7
028E 6032              JZ      ?C0087
                                           ; SOURCE LINE # 1072
0290 90000000    R     MOV     DPTR,#header
0294 110000      R     ACALL   L?0777
0297 2409              ADD     A,#09H
0299 110000      R     ACALL   L?0786
029C 6406              XRL     A,#06H
029E 7005              JNZ     ?C0088
                                           ; SOURCE LINE # 1073
02A0 110000      R     ACALL   L?1076
                                           ; SOURCE LINE # 1074
                                           ; SOURCE LINE # 1075
                                           ; SOURCE LINE # 1076
                                           ; SOURCE LINE # 1077
02A3 801A              SJMP    ?C0724
02A5         ?C0088:
                                           ; SOURCE LINE # 1078
02A5 90000000    R     MOV     DPTR,#header
02A9 110000      R     ACALL   L?0777
02AC 2409              ADD     A,#09H
02AE 110000      R     ACALL   L?0786
02B1 6404              XRL     A,#04H
02B3 700D              JNZ     ?C0087
                                           ; SOURCE LINE # 1079
02B5 90000000    R     MOV     DPTR,#start_byte
02B9 110000      R     ACALL   L?0803
02BC E4                CLR     A
02BD 7B04              MOV     R3,#04H
02BF         ?C0724:
                                           ; SOURCE LINE # 1080
                                           ; SOURCE LINE # 1081
                                           ; SOURCE LINE # 1082
02BF 110000      R     ACALL   L?0855
                                           ; SOURCE LINE # 1083
                                           ; SOURCE LINE # 1084
02C2         ?C0087:
                                           ; SOURCE LINE # 1085
02C2 90000000    R     MOV     DPTR,#header
02C6 110000      R     ACALL   L?0777
02C9 110000      R     ACALL   L?0863
02CC 90000000    R     MOV     DPTR,#start_byte
02D0 110000      R     ACALL   L?0828
                                           ; SOURCE LINE # 1086
                                           ; SOURCE LINE # 1087
02D3 110000      R     ACALL   L?0851
02D6 A3                INC     DPTR
02D7 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 153 

02D8 FC                MOV     R4,A
02D9 A3                INC     DPTR
02DA E0                MOVX    A,@DPTR
02DB FD                MOV     R5,A
02DC 90000000    R     MOV     DPTR,#i
02E0 E0                MOVX    A,@DPTR
02E1 FB                MOV     R3,A
02E2 A3                INC     DPTR
02E3 E0                MOVX    A,@DPTR
02E4 CB                XCH     A,R3
02E5 110000      R     ACALL   L?0877
02E8 90000000    R     MOV     DPTR,#header
02EC 110000      R     ACALL   L?0777
02EF 240D              ADD     A,#0DH
02F1 110000      R     ACALL   L?0794
02F4 110000      R     ACALL   L?0917
02F7 110000      R     ACALL   L?1053
                                           ; SOURCE LINE # 1089
                                           ; SOURCE LINE # 1090
02FA 110000      R     ACALL   L?1108
02FD 110000      R     ACALL   L?0777
0300 2410              ADD     A,#010H
0302 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 1093
0305 110000      R     ACALL   L?1109
0308 110000      R     ACALL   L?0777
030B 240B              ADD     A,#0BH
030D 110000      R     ACALL   L?0794
0310 FF                MOV     R7,A
0311 AEF0              MOV     R6,B
0313 90000000    R     MOV     DPTR,#i+01H
0317 E0                MOVX    A,@DPTR
0318 240F              ADD     A,#0FH
031A FD                MOV     R5,A
031B 110000      R     ACALL   L?1040
031E FC                MOV     R4,A
031F C3                CLR     C
0320 ED                MOV     A,R5
0321 9F                SUBB    A,R7
0322 EC                MOV     A,R4
0323 9E                SUBB    A,R6
0324 4010              JC      ?C0091
                                           ; SOURCE LINE # 1095
0326 E0                MOVX    A,@DPTR
0327 6E                XRL     A,R6
0328 7003              JNZ     ?C0672
032A A3                INC     DPTR
032B E0                MOVX    A,@DPTR
032C 6F                XRL     A,R7
032D         ?C0672:
032D 6012              JZ      ?C0086
                                           ; SOURCE LINE # 1096
032F 110000      R     ACALL   L?1001
0332 EF                MOV     A,R7
0333 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1097
                                           ; SOURCE LINE # 1099
0334 800B              SJMP    ?C0086
0336         ?C0091:
                                           ; SOURCE LINE # 1100
                                           ; SOURCE LINE # 1101
0336 90000000    R     MOV     DPTR,#i+01H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 154 

033A E0                MOVX    A,@DPTR
033B 240F              ADD     A,#0FH
033D 110000      R     ACALL   L?1039
0340 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1103
                                           ; SOURCE LINE # 1104
0341         ?C0086:
0341 90000000    R     MOV     DPTR,#i+01H
0345 E0                MOVX    A,@DPTR
0346 04                INC     A
0347 F0                MOVX    @DPTR,A
0348 7007              JNZ     ?C0673
034A 90000000    R     MOV     DPTR,#i
034E E0                MOVX    A,@DPTR
034F 04                INC     A
0350 F0                MOVX    @DPTR,A
0351         ?C0673:
0351 010000      R     AJMP    ?C0084
                                           ; SOURCE LINE # 1105
0354         ?C0083:
                                           ; SOURCE LINE # 1106
                                           ; SOURCE LINE # 1109
0354         ?C0722:
0354 90000000    R     MOV     DPTR,#item
0358 E0                MOVX    A,@DPTR
0359 FD                MOV     R5,A
035A E4                CLR     A
035B FF                MOV     R7,A
035C 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1110
                                           ; SOURCE LINE # 1111
035F         ?C0069:
035F 22                RET     
0360         L?0851:
0360 2F                ADD     A,R7
0361 FF                MOV     R7,A
0362 EA                MOV     A,R2
0363 3E                ADDC    A,R6
0364 FE                MOV     R6,A
0365 E9                MOV     A,R1
0366 3D                ADDC    A,R5
0367 FD                MOV     R5,A
0368 E8                MOV     A,R0
0369 3C                ADDC    A,R4
036A FC                MOV     R4,A
036B 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
036F 110000      E     ACALL   ?C?LSTXDATA
0372 90000000    R     MOV     DPTR,#sosd_win
0376 E0                MOVX    A,@DPTR
0377 FF                MOV     R7,A
0378 110000      E     ACALL   _SOsd_SetSpiStartOffset
037B 90000000    R     MOV     DPTR,#sosd_win
037F E0                MOVX    A,@DPTR
0380 FF                MOV     R7,A
0381 90000000    R     MOV     DPTR,#start_bit
0385 E0                MOVX    A,@DPTR
0386 FD                MOV     R5,A
0387 110000      E     ACALL   _SOsd_SetSpiStartBit
038A 90000000    R     MOV     DPTR,#sosd_win
038E E0                MOVX    A,@DPTR
038F FF                MOV     R7,A
0390 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 155 

0391         L?1053:
0391 90000000    R     MOV     DPTR,#sy
0395 E0                MOVX    A,@DPTR
0396 FA                MOV     R2,A
0397 A3                INC     DPTR
0398 E0                MOVX    A,@DPTR
0399 FB                MOV     R3,A
039A 110000      E     ACALL   _SOsd_SetScreen
039D 22                RET     
039E         L?1108:
039E 7F01              MOV     R7,#01H
03A0 110000      E     ACALL   _WaitVBlank
03A3 90000000    R     MOV     DPTR,#menu_item
03A7 22                RET     
03A8         L?1109:
03A8 FD                MOV     R5,A
03A9 FF                MOV     R7,A
03AA 110000      E     ACALL   _SOsd_UpdateReg
03AD 90000000    R     MOV     DPTR,#header
03B1 22                RET     
             ; FUNCTION _MenuDrawScrollImage (END)

             ; FUNCTION _MenuTurnOffCurrImage (BEGIN)
                                           ; SOURCE LINE # 1121
;---- Variable 'item' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1122
                                           ; SOURCE LINE # 1126
0000 110000      R     ACALL   L?0776
0003 2405              ADD     A,#05H
0005 110000      R     ACALL   L?0781
0008 EF                MOV     A,R7
0009 110000      R     ACALL   L?0834
;---- Variable 'menu_item' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 1127
000C E9                MOV     A,R1
000D 2410              ADD     A,#010H
000F 110000      R     ACALL   L?0786
0012 90000000    R     MOV     DPTR,#sosd_win
0016 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1128
0017 7F01              MOV     R7,#01H
0019 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 1129
001C 90000000    R     MOV     DPTR,#sosd_win
0020 E0                MOVX    A,@DPTR
0021 FF                MOV     R7,A
0022 E4                CLR     A
0023 FD                MOV     R5,A
0024 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 1130
0027 90000000    R     MOV     DPTR,#sosd_win
002B E0                MOVX    A,@DPTR
002C FD                MOV     R5,A
002D FF                MOV     R7,A
002E 010000      E     AJMP    _SOsd_UpdateReg
             ; FUNCTION _MenuTurnOffCurrImage (END)

             ; FUNCTION _MenuDrawDeactivatedItemImage (BEGIN)
                                           ; SOURCE LINE # 1141
;---- Variable 'item' assigned to Register 'R5' ----
;---- Variable 'sosd_win' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1142
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 156 

                                           ; SOURCE LINE # 1143
0000 90000000    R     MOV     DPTR,#temp
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1144
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1146
0009 22                RET     
             ; FUNCTION _MenuDrawDeactivatedItemImage (END)

             ; FUNCTION _MenuFontOsdItemString (BEGIN)
                                           ; SOURCE LINE # 1163
0000 90000000    R     MOV     DPTR,#str
0004 110000      R     ACALL   L?1055
;---- Variable 'index' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1164
                                           ; SOURCE LINE # 1168
0007 110000      R     ACALL   L?0775
000A 2408              ADD     A,#08H
000C 110000      R     ACALL   L?0781
000F 90000000    R     MOV     DPTR,#text_info
0013 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 1169
0016 90000000    R     MOV     DPTR,#text_info+01H
001A 110000      R     ACALL   L?0915
                                           ; SOURCE LINE # 1172
001D 90000000    R     MOV     DPTR,#text_info
0021 110000      R     ACALL   L?0777
0024 240B              ADD     A,#0BH
0026 110000      R     ACALL   L?0786
0029 FD                MOV     R5,A
002A 90000000    R     MOV     DPTR,#palette
002E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1173
002F A3                INC     DPTR
0030 110000      R     ACALL   L?0921
0033 110000      R     ACALL   L?0794
0036 FF                MOV     R7,A
0037 AEF0              MOV     R6,B
0039 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 1175
;---- Variable 'n_char' assigned to Register 'R6' ----
003C E4                CLR     A
003D FE                MOV     R6,A
003E         ?C0097:
                                           ; SOURCE LINE # 1176
003E 90000000    R     MOV     DPTR,#str
0042 110000      R     ACALL   L?0777
0045 F9                MOV     R1,A
0046 110000      E     ACALL   ?C?CLDPTR
0049 600F              JZ      ?C0098
                                           ; SOURCE LINE # 1177
004B 90000000    R     MOV     DPTR,#str
004F 110000      R     ACALL   L?1026
0052 110000      R     ACALL   L?0823
0055 EF                MOV     A,R7
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1178
0057 0E                INC     R6
                                           ; SOURCE LINE # 1179
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 157 

0058 80E4              SJMP    ?C0097
005A         ?C0098:
                                           ; SOURCE LINE # 1182
005A 90000000    R     MOV     DPTR,#text_info
005E 110000      R     ACALL   L?0777
0061 F9                MOV     R1,A
0062 110000      E     ACALL   ?C?CLDPTR
0065 FF                MOV     R7,A
0066 AD06              MOV     R5,AR6
0068 7B01              MOV     R3,#01H
006A 010000      E     AJMP    _FOsdWinScreenWH
             ; FUNCTION _MenuFontOsdItemString (END)

             ; FUNCTION proc_menu_bg (BEGIN)
                                           ; SOURCE LINE # 1195
                                           ; SOURCE LINE # 1196
                                           ; SOURCE LINE # 1198
0000 110000      R     ACALL   L?0776
0003 F9                MOV     R1,A
0004 110000      E     ACALL   ?C?CLDPTR
0007 540F              ANL     A,#0FH
0009 90000000    R     MOV     DPTR,#curr_menu_type
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1200
000E 110000      R     ACALL   L?1003
                                           ; SOURCE LINE # 1202
0011 110000      R     ACALL   L?0937
                                           ; SOURCE LINE # 1203
0014 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 1204
0017 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 1205
001A 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 1208
001D E4                CLR     A
001E FD                MOV     R5,A
001F FF                MOV     R7,A
0020 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1210
0023 90000000    R     MOV     DPTR,#curr_menu_type
0027 E0                MOVX    A,@DPTR
0028 FF                MOV     R7,A
0029 6401              XRL     A,#01H
002B 6005              JZ      ?C0101
002D EF                MOV     A,R7
002E 6402              XRL     A,#02H
0030 7043              JNZ     ?C0100
0032         ?C0101:
                                           ; SOURCE LINE # 1211
                                           ; SOURCE LINE # 1213
0032 7F01              MOV     R7,#01H
0034 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 1214
0037 110000      R     ACALL   L?0942
                                           ; SOURCE LINE # 1216
003A 90000000    R     MOV     DPTR,#menu_lock_scroll
003E E0                MOVX    A,@DPTR
003F 702D              JNZ     ?C0102
                                           ; SOURCE LINE # 1217
0041 90000000    R     MOV     DPTR,#curr_menu_type
0045 E0                MOVX    A,@DPTR
0046 B40104            CJNE    A,#01H,?C0103
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 158 

                                           ; SOURCE LINE # 1218
0049 7D05              MOV     R5,#05H
004B 800A              SJMP    ?C0725
004D         ?C0103:
                                           ; SOURCE LINE # 1219
004D 90000000    R     MOV     DPTR,#curr_menu_type
0051 E0                MOVX    A,@DPTR
0052 B40209            CJNE    A,#02H,?C0105
                                           ; SOURCE LINE # 1220
0055 7D03              MOV     R5,#03H
0057         ?C0725:
0057 7F01              MOV     R7,#01H
0059 110000      R     ACALL   _MenuDrawScrollImage
                                           ; SOURCE LINE # 1221
005C 8007              SJMP    ?C0104
005E         ?C0105:
                                           ; SOURCE LINE # 1222
                                           ; SOURCE LINE # 1224
005E 7D01              MOV     R5,#01H
0060 E4                CLR     A
0061 FF                MOV     R7,A
0062 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1225
0065         ?C0104:
                                           ; SOURCE LINE # 1226
0065 90000000    R     MOV     DPTR,#menu_lock_scroll
0069 7401              MOV     A,#01H
006B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1227
006C 8007              SJMP    ?C0100
006E         ?C0102:
                                           ; SOURCE LINE # 1229
006E 7D01              MOV     R5,#01H
0070 E4                CLR     A
0071 FF                MOV     R7,A
0072 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1230
0075         ?C0100:
                                           ; SOURCE LINE # 1232
0075 110000      R     ACALL   L?0776
0078 110000      R     ACALL   L?0785
007B FD                MOV     R5,A
007C E4                CLR     A
007D FF                MOV     R7,A
007E 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1233
0081 110000      R     ACALL   L?0776
0084 F9                MOV     R1,A
0085 110000      E     ACALL   ?C?CLDPTR
0088 30E416            JNB     ACC.4,?C0108
                                           ; SOURCE LINE # 1234
008B E9                MOV     A,R1
008C 2404              ADD     A,#04H
008E 110000      R     ACALL   L?0786
0091 FF                MOV     R7,A
0092 110000      R     ACALL   L?0789
0095 2402              ADD     A,#02H
0097 110000      R     ACALL   L?0786
009A 2F                ADD     A,R7
009B FD                MOV     R5,A
009C E4                CLR     A
009D FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 159 

009E 110000      R     ACALL   _MenuDrawCurrImage
00A1         ?C0108:
                                           ; SOURCE LINE # 1237
                                           ; SOURCE LINE # 1238
00A1 90000000    R     MOV     DPTR,#UseSOsdHwBuff
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 1239
00AA 110000      R     ACALL   L?0942
                                           ; SOURCE LINE # 1240
                                           ; SOURCE LINE # 1241
00AD 22                RET     
             ; FUNCTION proc_menu_bg (END)

             ; FUNCTION _MenuKeyInput_slider_page (BEGIN)
                                           ; SOURCE LINE # 1255
;---- Variable 'key' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1256
                                           ; SOURCE LINE # 1257
0000 EF                MOV     A,R7
0001 24FD              ADD     A,#0FDH
0003 601F              JZ      ?C0113
0005 14                DEC     A
0006 6047              JZ      ?C0114
0008 14                DEC     A
0009 6054              JZ      ?C0116
000B 2403              ADD     A,#03H
000D 705E              JNZ     ?C0110
                                           ; SOURCE LINE # 1258
                                           ; SOURCE LINE # 1259
                                           ; SOURCE LINE # 1260
000F         ?C0112:
                                           ; SOURCE LINE # 1261
000F 110000      R     ACALL   L?0776
0012 110000      R     ACALL   L?0785
0015 110000      R     ACALL   L?0788
0018 2405              ADD     A,#05H
001A 110000      R     ACALL   L?0781
001D 110000      R     ACALL   L?0860
0020 2413              ADD     A,#013H
                                           ; SOURCE LINE # 1262
                                           ; SOURCE LINE # 1263
                                           ; SOURCE LINE # 1264
                                           ; SOURCE LINE # 1265
0022 8013              SJMP    ?C0726
                                           ; SOURCE LINE # 1266
0024         ?C0113:
                                           ; SOURCE LINE # 1267
0024 110000      R     ACALL   L?0776
0027 110000      R     ACALL   L?0785
002A 110000      R     ACALL   L?0788
002D 2405              ADD     A,#05H
002F 110000      R     ACALL   L?0781
0032 110000      R     ACALL   L?0860
0035 2415              ADD     A,#015H
0037         ?C0726:
0037 110000      R     ACALL   L?0786
003A FF                MOV     R7,A
003B 110000      R     ACALL   L?0776
003E 110000      R     ACALL   L?0800
0041 EF                MOV     A,R7
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 160 

                                           ; SOURCE LINE # 1268
                                           ; SOURCE LINE # 1269
0042 110000      R     ACALL   L?0773
0045 110000      R     ACALL   L?0778
0048 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 1270
004B E4                CLR     A
004C FF                MOV     R7,A
                                           ; SOURCE LINE # 1271
004D 801E              SJMP    ?C0110
                                           ; SOURCE LINE # 1272
004F         ?C0114:
                                           ; SOURCE LINE # 1273
004F 110000      R     ACALL   L?0776
0052 110000      R     ACALL   L?0785
0055 B40515            CJNE    A,#05H,?C0110
                                           ; SOURCE LINE # 1274
0058 110000      R     ACALL   proc_slider_left
                                           ; SOURCE LINE # 1275
005B E4                CLR     A
005C FF                MOV     R7,A
                                           ; SOURCE LINE # 1276
                                           ; SOURCE LINE # 1277
005D 800E              SJMP    ?C0110
                                           ; SOURCE LINE # 1278
005F         ?C0116:
                                           ; SOURCE LINE # 1279
005F 110000      R     ACALL   L?0776
0062 110000      R     ACALL   L?0785
0065 B40505            CJNE    A,#05H,?C0110
                                           ; SOURCE LINE # 1280
0068 110000      R     ACALL   proc_slider_right
                                           ; SOURCE LINE # 1281
006B E4                CLR     A
006C FF                MOV     R7,A
                                           ; SOURCE LINE # 1282
                                           ; SOURCE LINE # 1283
                                           ; SOURCE LINE # 1284
                                           ; SOURCE LINE # 1286
                                           ; SOURCE LINE # 1287
006D         ?C0110:
                                           ; SOURCE LINE # 1288
                                           ; SOURCE LINE # 1289
006D         ?C0119:
006D 22                RET     
             ; FUNCTION _MenuKeyInput_slider_page (END)

             ; FUNCTION _MenuKeyInput_slider3_page (BEGIN)
                                           ; SOURCE LINE # 1299
0000 90000000    R     MOV     DPTR,#key
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1300
                                           ; SOURCE LINE # 1301
0006 24FD              ADD     A,#0FDH
0008 6053              JZ      ?C0124
000A 14                DEC     A
000B 7003              JNZ     $ + 5H
000D 010000      R     AJMP    ?C0126
0010 14                DEC     A
0011 7003              JNZ     $ + 5H
0013 010000      R     AJMP    ?C0129
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 161 

0016 2403              ADD     A,#03H
0018 6003              JZ      $ + 5H
001A 010000      R     AJMP    ?C0120
                                           ; SOURCE LINE # 1302
                                           ; SOURCE LINE # 1303
                                           ; SOURCE LINE # 1304
001D         ?C0122:
                                           ; SOURCE LINE # 1305
001D 110000      R     ACALL   L?0776
0020 110000      R     ACALL   L?0785
0023 110000      R     ACALL   L?0788
0026 2405              ADD     A,#05H
0028 110000      R     ACALL   L?0781
002B 110000      R     ACALL   L?0861
002E 2413              ADD     A,#013H
0030 110000      R     ACALL   L?0786
0033 FF                MOV     R7,A
0034 110000      R     ACALL   L?0776
0037 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 1306
003A 110000      R     ACALL   L?0963
003D FF                MOV     R7,A
                                           ; SOURCE LINE # 1307
003E 110000      R     ACALL   L?0774
0041 2403              ADD     A,#03H
0043 110000      R     ACALL   L?0786
0046 FE                MOV     R6,A
0047 EF                MOV     A,R7
0048 C3                CLR     C
0049 9E                SUBB    A,R6
004A 404F              JC      ?C0727
                                           ; SOURCE LINE # 1308
004C 110000      R     ACALL   L?0784
004F FF                MOV     R7,A
0050 110000      R     ACALL   L?0789
0053 110000      R     ACALL   L?0842
0056 EF                MOV     A,R7
                                           ; SOURCE LINE # 1309
0057 110000      R     ACALL   L?0817
005A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1310
005B         ?C0123:
                                           ; SOURCE LINE # 1311
                                           ; SOURCE LINE # 1312
                                           ; SOURCE LINE # 1313
005B 803E              SJMP    ?C0727
                                           ; SOURCE LINE # 1314
005D         ?C0124:
                                           ; SOURCE LINE # 1315
005D 110000      R     ACALL   L?0776
0060 110000      R     ACALL   L?0785
0063 110000      R     ACALL   L?0788
0066 2405              ADD     A,#05H
0068 110000      R     ACALL   L?0781
006B 110000      R     ACALL   L?0861
006E 2415              ADD     A,#015H
0070 110000      R     ACALL   L?0786
0073 FF                MOV     R7,A
0074 110000      R     ACALL   L?0776
0077 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 1316
007A 110000      R     ACALL   L?0963
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 162 

007D FF                MOV     R7,A
                                           ; SOURCE LINE # 1317
007E 110000      R     ACALL   L?0774
0081 2403              ADD     A,#03H
0083 110000      R     ACALL   L?0786
0086 FE                MOV     R6,A
0087 EF                MOV     A,R7
0088 C3                CLR     C
0089 9E                SUBB    A,R6
008A 400F              JC      ?C0125
                                           ; SOURCE LINE # 1318
008C 110000      R     ACALL   L?0784
008F FF                MOV     R7,A
0090 110000      R     ACALL   L?0789
0093 110000      R     ACALL   L?0842
0096 EF                MOV     A,R7
                                           ; SOURCE LINE # 1319
0097 110000      R     ACALL   L?0817
009A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1320
009B         ?C0125:
                                           ; SOURCE LINE # 1321
009B         ?C0727:
009B 110000      R     ACALL   L?0776
009E 110000      R     ACALL   L?0778
00A1 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 1322
                                           ; SOURCE LINE # 1323
00A4 8031              SJMP    ?C0729
                                           ; SOURCE LINE # 1324
00A6         ?C0126:
                                           ; SOURCE LINE # 1325
00A6 110000      R     ACALL   L?0776
00A9 110000      R     ACALL   L?0785
00AC FF                MOV     R7,A
00AD 6405              XRL     A,#05H
00AF 600A              JZ      ?C0128
00B1 EF                MOV     A,R7
00B2 6407              XRL     A,#07H
00B4 6005              JZ      ?C0128
00B6 EF                MOV     A,R7
00B7 6409              XRL     A,#09H
00B9 7022              JNZ     ?C0120
00BB         ?C0128:
                                           ; SOURCE LINE # 1326
00BB 110000      R     ACALL   proc_slider3_left
                                           ; SOURCE LINE # 1327
00BE         ?C0728:
                                           ; SOURCE LINE # 1328
                                           ; SOURCE LINE # 1329
00BE 8017              SJMP    ?C0729
                                           ; SOURCE LINE # 1330
00C0         ?C0129:
                                           ; SOURCE LINE # 1331
00C0 110000      R     ACALL   L?0776
00C3 110000      R     ACALL   L?0785
00C6 FF                MOV     R7,A
00C7 6405              XRL     A,#05H
00C9 6009              JZ      ?C0131
00CB EF                MOV     A,R7
00CC 6407              XRL     A,#07H
00CE 6004              JZ      ?C0131
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 163 

00D0 EF                MOV     A,R7
00D1 B40909            CJNE    A,#09H,?C0120
00D4         ?C0131:
                                           ; SOURCE LINE # 1332
00D4 110000      R     ACALL   proc_slider3_right
                                           ; SOURCE LINE # 1333
00D7         ?C0729:
00D7 E4                CLR     A
00D8 90000000    R     MOV     DPTR,#key
00DC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1334
                                           ; SOURCE LINE # 1335
                                           ; SOURCE LINE # 1336
                                           ; SOURCE LINE # 1338
                                           ; SOURCE LINE # 1339
00DD         ?C0120:
                                           ; SOURCE LINE # 1340
00DD 90000000    R     MOV     DPTR,#key
00E1 E0                MOVX    A,@DPTR
00E2 FF                MOV     R7,A
                                           ; SOURCE LINE # 1341
00E3         ?C0133:
00E3 22                RET     
             ; FUNCTION _MenuKeyInput_slider3_page (END)

             ; FUNCTION _MenuKeyInput_main_page (BEGIN)
                                           ; SOURCE LINE # 1351
0000 90000000    R     MOV     DPTR,#key
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1352
                                           ; SOURCE LINE # 1355
0006 24FD              ADD     A,#0FDH
0008 6054              JZ      ?C0140
000A 14                DEC     A
000B 7003              JNZ     $ + 5H
000D 010000      R     AJMP    ?C0144
0010 14                DEC     A
0011 7003              JNZ     $ + 5H
0013 010000      R     AJMP    ?C0146
0016 2403              ADD     A,#03H
0018 6003              JZ      $ + 5H
001A 010000      R     AJMP    ?C0134
                                           ; SOURCE LINE # 1356
                                           ; SOURCE LINE # 1357
                                           ; SOURCE LINE # 1358
001D         ?C0136:
                                           ; SOURCE LINE # 1359
001D 110000      R     ACALL   L?0776
0020 2403              ADD     A,#03H
0022 110000      R     ACALL   L?0786
0025 FE                MOV     R6,A
0026 110000      R     ACALL   L?0784
0029 FF                MOV     R7,A
002A C3                CLR     C
002B 9E                SUBB    A,R6
002C 5002              JNC     ?C0137
                                           ; SOURCE LINE # 1361
                                           ; SOURCE LINE # 1362
                                           ; SOURCE LINE # 1363
                                           ; SOURCE LINE # 1364
                                           ; SOURCE LINE # 1365
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 164 

                                           ; SOURCE LINE # 1366
002E 803F              SJMP    ?C0730
0030         ?C0137:
                                           ; SOURCE LINE # 1367
                                           ; SOURCE LINE # 1369
0030 110000      R     ACALL   L?0776
0033 110000      R     ACALL   L?0785
0036 110000      R     ACALL   L?0788
0039 2405              ADD     A,#05H
003B 110000      R     ACALL   L?0781
003E 110000      R     ACALL   L?0861
0041 2413              ADD     A,#013H
0043 110000      R     ACALL   L?0786
0046 FF                MOV     R7,A
0047 90000000    R     MOV     DPTR,#new
                                           ; SOURCE LINE # 1370
004B 110000      R     ACALL   L?0775
004E 2403              ADD     A,#03H
0050 110000      R     ACALL   L?0786
0053 FE                MOV     R6,A
0054 EF                MOV     A,R7
0055 C3                CLR     C
0056 9E                SUBB    A,R6
0057 5003              JNC     $ + 5H
0059 010000      R     AJMP    ?C0134
                                           ; SOURCE LINE # 1371
                                           ; SOURCE LINE # 1372
                                           ; SOURCE LINE # 1373
                                           ; SOURCE LINE # 1374
                                           ; SOURCE LINE # 1375
005C 805E              SJMP    ?C0731
                                           ; SOURCE LINE # 1377
005E         ?C0140:
                                           ; SOURCE LINE # 1378
005E 110000      R     ACALL   L?0776
0061 2403              ADD     A,#03H
0063 110000      R     ACALL   L?0786
0066 FE                MOV     R6,A
0067 110000      R     ACALL   L?0784
006A FF                MOV     R7,A
006B C3                CLR     C
006C 9E                SUBB    A,R6
006D 5024              JNC     ?C0141
                                           ; SOURCE LINE # 1380
006F         ?C0730:
006F 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1381
0072 110000      R     ACALL   L?0776
0075 2402              ADD     A,#02H
0077 110000      R     ACALL   L?0786
007A FF                MOV     R7,A
007B 110000      R     ACALL   L?0789
007E 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 1382
0081 110000      R     ACALL   L?0964
                                           ; SOURCE LINE # 1383
0084 110000      R     ACALL   L?1030
0087 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1384
008A E4                CLR     A
008B 90000000    R     MOV     DPTR,#key
008F F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 165 

                                           ; SOURCE LINE # 1385
0090 010000      R     AJMP    ?C0134
0093         ?C0141:
                                           ; SOURCE LINE # 1386
                                           ; SOURCE LINE # 1388
0093 110000      R     ACALL   L?0776
0096 110000      R     ACALL   L?0785
0099 110000      R     ACALL   L?0788
009C 2405              ADD     A,#05H
009E 110000      R     ACALL   L?0781
00A1 110000      R     ACALL   L?0861
00A4 2415              ADD     A,#015H
00A6 110000      R     ACALL   L?0786
00A9 FF                MOV     R7,A
00AA 90000000    R     MOV     DPTR,#new
                                           ; SOURCE LINE # 1389
00AE 110000      R     ACALL   L?0775
00B1 2403              ADD     A,#03H
00B3 110000      R     ACALL   L?0786
00B6 FE                MOV     R6,A
00B7 EF                MOV     A,R7
00B8 C3                CLR     C
00B9 9E                SUBB    A,R6
00BA 405F              JC      ?C0134
                                           ; SOURCE LINE # 1390
00BC         ?C0731:
00BC 90000000    R     MOV     DPTR,#new
00C0 E0                MOVX    A,@DPTR
00C1 FF                MOV     R7,A
00C2 90000000    R     MOV     DPTR,#curr_menu
                                           ; SOURCE LINE # 1391
                                           ; SOURCE LINE # 1392
                                           ; SOURCE LINE # 1393
                                           ; SOURCE LINE # 1394
00C6 8046              SJMP    ?C0733
                                           ; SOURCE LINE # 1396
00C8         ?C0144:
                                           ; SOURCE LINE # 1397
00C8 110000      R     ACALL   L?0776
00CB 110000      R     ACALL   L?0782
00CE FE                MOV     R6,A
00CF C3                CLR     C
00D0 9F                SUBB    A,R7
00D1 4048              JC      ?C0134
                                           ; SOURCE LINE # 1398
00D3 110000      R     ACALL   L?0787
00D6 2405              ADD     A,#05H
00D8 110000      R     ACALL   L?0781
00DB 110000      R     ACALL   L?0861
00DE 2414              ADD     A,#014H
00E0 110000      R     ACALL   L?0786
00E3 FF                MOV     R7,A
00E4 90000000    R     MOV     DPTR,#curr_menu
00E8 E0                MOVX    A,@DPTR
00E9 FB                MOV     R3,A
00EA         ?C0732:
                                           ; SOURCE LINE # 1399
                                           ; SOURCE LINE # 1400
                                           ; SOURCE LINE # 1401
00EA 8022              SJMP    ?C0733
                                           ; SOURCE LINE # 1402
00EC         ?C0146:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 166 

                                           ; SOURCE LINE # 1403
00EC 110000      R     ACALL   L?0776
00EF 110000      R     ACALL   L?0782
00F2 FE                MOV     R6,A
00F3 C3                CLR     C
00F4 9F                SUBB    A,R7
00F5 4024              JC      ?C0134
                                           ; SOURCE LINE # 1404
00F7 110000      R     ACALL   L?0787
00FA 2405              ADD     A,#05H
00FC 110000      R     ACALL   L?0781
00FF 110000      R     ACALL   L?0861
0102 2416              ADD     A,#016H
0104 110000      R     ACALL   L?0786
0107 FF                MOV     R7,A
0108 90000000    R     MOV     DPTR,#curr_menu
010C E0                MOVX    A,@DPTR
010D FB                MOV     R3,A
010E         ?C0733:
010E A3                INC     DPTR
010F E0                MOVX    A,@DPTR
0110 FA                MOV     R2,A
0111 A3                INC     DPTR
0112 E0                MOVX    A,@DPTR
0113 110000      R     ACALL   L?0843
0116 EF                MOV     A,R7
                                           ; SOURCE LINE # 1405
0117 110000      R     ACALL   L?0817
011A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1406
                                           ; SOURCE LINE # 1407
                                           ; SOURCE LINE # 1408
                                           ; SOURCE LINE # 1410
                                           ; SOURCE LINE # 1411
011B         ?C0134:
                                           ; SOURCE LINE # 1412
011B 90000000    R     MOV     DPTR,#key
011F E0                MOVX    A,@DPTR
0120 FF                MOV     R7,A
                                           ; SOURCE LINE # 1413
0121         ?C0149:
0121 22                RET     
             ; FUNCTION _MenuKeyInput_main_page (END)

             ; FUNCTION _MenuKeyInput_input_page (BEGIN)
                                           ; SOURCE LINE # 1424
0000 90000000    R     MOV     DPTR,#key
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1425
                                           ; SOURCE LINE # 1426
0006 24FD              ADD     A,#0FDH
0008 606A              JZ      ?C0156
000A 04                INC     A
000B 6003              JZ      $ + 5H
000D 010000      R     AJMP    ?C0150
                                           ; SOURCE LINE # 1427
                                           ; SOURCE LINE # 1428
                                           ; SOURCE LINE # 1429
0010         ?C0152:
                                           ; SOURCE LINE # 1430
0010 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 167 

0013 110000      R     ACALL   L?0785
0016 FF                MOV     R7,A
0017 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1431
001A 110000      R     ACALL   L?0776
001D 110000      R     ACALL   L?0783
0020 FE                MOV     R6,A
0021 C3                CLR     C
0022 9F                SUBB    A,R7
0023 5016              JNC     ?C0153
                                           ; SOURCE LINE # 1433
0025 110000      R     ACALL   L?0789
0028 2402              ADD     A,#02H
002A 110000      R     ACALL   L?0786
002D FF                MOV     R7,A
002E 110000      R     ACALL   L?0789
0031 110000      R     ACALL   L?0800
0034 EF                MOV     A,R7
                                           ; SOURCE LINE # 1434
0035 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 1435
0038 010000      R     AJMP    ?C0734
003B         ?C0153:
                                           ; SOURCE LINE # 1436
                                           ; SOURCE LINE # 1438
003B 110000      R     ACALL   L?1041
003E 110000      R     ACALL   L?0776
0041 2405              ADD     A,#05H
0043 110000      R     ACALL   L?0781
0046 110000      R     ACALL   L?0861
0049 2413              ADD     A,#013H
004B 110000      R     ACALL   L?0786
004E FF                MOV     R7,A
004F 110000      R     ACALL   L?0776
0052 110000      R     ACALL   L?0800
0055 EF                MOV     A,R7
                                           ; SOURCE LINE # 1439
                                           ; SOURCE LINE # 1440
0056 110000      R     ACALL   L?0773
0059 F9                MOV     R1,A
005A 110000      E     ACALL   ?C?CLDPTR
005D 30E475            JNB     ACC.4,?C0734
                                           ; SOURCE LINE # 1441
0060 E9                MOV     A,R1
0061 2404              ADD     A,#04H
0063 110000      R     ACALL   L?0786
0066 FF                MOV     R7,A
0067 110000      R     ACALL   L?0789
006A 2402              ADD     A,#02H
006C 110000      R     ACALL   L?0786
006F 110000      R     ACALL   L?1079
                                           ; SOURCE LINE # 1442
0072         ?C0154:
                                           ; SOURCE LINE # 1443
                                           ; SOURCE LINE # 1444
                                           ; SOURCE LINE # 1445
0072 8061              SJMP    ?C0734
                                           ; SOURCE LINE # 1447
0074         ?C0156:
                                           ; SOURCE LINE # 1448
0074 110000      R     ACALL   L?0776
0077 110000      R     ACALL   L?0785
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 168 

007A FF                MOV     R7,A
007B 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1449
007E 110000      R     ACALL   L?0776
0081 110000      R     ACALL   L?0783
0084 FE                MOV     R6,A
0085 C3                CLR     C
0086 9F                SUBB    A,R7
0087 5015              JNC     ?C0157
                                           ; SOURCE LINE # 1451
0089 110000      R     ACALL   L?0789
008C 2402              ADD     A,#02H
008E 110000      R     ACALL   L?0786
0091 FF                MOV     R7,A
0092 110000      R     ACALL   L?0789
0095 110000      R     ACALL   L?0800
0098 EF                MOV     A,R7
                                           ; SOURCE LINE # 1452
0099 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 1453
009C 8037              SJMP    ?C0158
009E         ?C0157:
                                           ; SOURCE LINE # 1454
                                           ; SOURCE LINE # 1456
009E 110000      R     ACALL   L?1041
00A1 110000      R     ACALL   L?0776
00A4 2405              ADD     A,#05H
00A6 110000      R     ACALL   L?0781
00A9 110000      R     ACALL   L?0861
00AC 2415              ADD     A,#015H
00AE 110000      R     ACALL   L?0786
00B1 FF                MOV     R7,A
00B2 110000      R     ACALL   L?0776
00B5 110000      R     ACALL   L?0800
00B8 EF                MOV     A,R7
                                           ; SOURCE LINE # 1457
                                           ; SOURCE LINE # 1458
00B9 110000      R     ACALL   L?0773
00BC F9                MOV     R1,A
00BD 110000      E     ACALL   ?C?CLDPTR
00C0 30E412            JNB     ACC.4,?C0158
                                           ; SOURCE LINE # 1459
00C3 E9                MOV     A,R1
00C4 2404              ADD     A,#04H
00C6 110000      R     ACALL   L?0786
00C9 FF                MOV     R7,A
00CA 110000      R     ACALL   L?0789
00CD 2402              ADD     A,#02H
00CF 110000      R     ACALL   L?0786
00D2 110000      R     ACALL   L?1079
                                           ; SOURCE LINE # 1460
00D5         ?C0158:
                                           ; SOURCE LINE # 1461
00D5         ?C0734:
00D5 110000      R     ACALL   L?0776
00D8 110000      R     ACALL   L?0785
00DB FD                MOV     R5,A
00DC E4                CLR     A
00DD FF                MOV     R7,A
00DE 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1462
00E1 E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 169 

00E2 90000000    R     MOV     DPTR,#key
00E6 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1463
                                           ; SOURCE LINE # 1465
                                           ; SOURCE LINE # 1466
                                           ; SOURCE LINE # 1467
                                           ; SOURCE LINE # 1468
                                           ; SOURCE LINE # 1469
                                           ; SOURCE LINE # 1471
                                           ; SOURCE LINE # 1472
00E7         ?C0150:
                                           ; SOURCE LINE # 1473
00E7 90000000    R     MOV     DPTR,#key
00EB E0                MOVX    A,@DPTR
00EC FF                MOV     R7,A
                                           ; SOURCE LINE # 1474
00ED         ?C0163:
00ED 22                RET     
00EE         L?1079:
00EE 2F                ADD     A,R7
00EF FD                MOV     R5,A
00F0 E4                CLR     A
00F1 FF                MOV     R7,A
00F2 110000      R     ACALL   _MenuDrawCurrImage
00F5 22                RET     
             ; FUNCTION _MenuKeyInput_input_page (END)

             ; FUNCTION _MenuKeyInput_position_page (BEGIN)
                                           ; SOURCE LINE # 1484
0000 90000000    R     MOV     DPTR,#key
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1485
                                           ; SOURCE LINE # 1490
0006 24FD              ADD     A,#0FDH
0008 6025              JZ      ?C0169
000A 14                DEC     A
000B 603D              JZ      ?C0172
000D 14                DEC     A
000E 6055              JZ      ?C0175
0010 2403              ADD     A,#03H
0012 7072              JNZ     ?C0164
                                           ; SOURCE LINE # 1491
                                           ; SOURCE LINE # 1492
                                           ; SOURCE LINE # 1493
0014         ?C0166:
                                           ; SOURCE LINE # 1495
0014 110000      R     ACALL   L?0776
0017 110000      R     ACALL   L?0785
001A 6403              XRL     A,#03H
001C 7068              JNZ     ?C0164
                                           ; SOURCE LINE # 1497
001E 110000      R     ACALL   L?1025
                                           ; SOURCE LINE # 1498
0021 C3                CLR     C
0022 9464              SUBB    A,#064H
0024 501F              JNC     ?C0735
                                           ; SOURCE LINE # 1499
0026 E0                MOVX    A,@DPTR
0027 04                INC     A
0028 FF                MOV     R7,A
0029 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 170 

002A 110000      E     ACALL   _SetRGBPosV
002D         ?C0168:
                                           ; SOURCE LINE # 1500
                                           ; SOURCE LINE # 1501
                                           ; SOURCE LINE # 1502
                                           ; SOURCE LINE # 1504
002D 8016              SJMP    ?C0735
                                           ; SOURCE LINE # 1505
002F         ?C0169:
                                           ; SOURCE LINE # 1507
002F 110000      R     ACALL   L?0776
0032 110000      R     ACALL   L?0785
0035 6403              XRL     A,#03H
0037 704D              JNZ     ?C0164
                                           ; SOURCE LINE # 1509
0039 110000      R     ACALL   L?1025
                                           ; SOURCE LINE # 1510
003C 6007              JZ      ?C0171
                                           ; SOURCE LINE # 1511
003E E0                MOVX    A,@DPTR
003F 14                DEC     A
0040 FF                MOV     R7,A
0041 F0                MOVX    @DPTR,A
0042 110000      E     ACALL   _SetRGBPosV
0045         ?C0171:
                                           ; SOURCE LINE # 1512
0045         ?C0735:
0045 110000      R     ACALL   proc_position_V_digit
                                           ; SOURCE LINE # 1513
                                           ; SOURCE LINE # 1514
                                           ; SOURCE LINE # 1516
0048 8036              SJMP    ?C0737
                                           ; SOURCE LINE # 1517
004A         ?C0172:
                                           ; SOURCE LINE # 1519
004A 110000      R     ACALL   L?0776
004D 110000      R     ACALL   L?0785
0050 6403              XRL     A,#03H
0052 7032              JNZ     ?C0164
                                           ; SOURCE LINE # 1521
0054 110000      R     ACALL   L?1110
                                           ; SOURCE LINE # 1522
0057 6007              JZ      ?C0174
                                           ; SOURCE LINE # 1523
0059 E0                MOVX    A,@DPTR
005A 14                DEC     A
005B FF                MOV     R7,A
005C F0                MOVX    @DPTR,A
005D 110000      E     ACALL   _SetRGBPosH
0060         ?C0174:
                                           ; SOURCE LINE # 1524
0060 110000      R     ACALL   proc_position_H_digit
                                           ; SOURCE LINE # 1525
0063         ?C0736:
                                           ; SOURCE LINE # 1526
                                           ; SOURCE LINE # 1528
0063 801B              SJMP    ?C0737
                                           ; SOURCE LINE # 1529
0065         ?C0175:
                                           ; SOURCE LINE # 1531
0065 110000      R     ACALL   L?0776
0068 110000      R     ACALL   L?0785
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 171 

006B B40318            CJNE    A,#03H,?C0164
                                           ; SOURCE LINE # 1533
006E 110000      R     ACALL   L?1110
                                           ; SOURCE LINE # 1534
0071 C3                CLR     C
0072 9464              SUBB    A,#064H
0074 5007              JNC     ?C0177
                                           ; SOURCE LINE # 1535
0076 E0                MOVX    A,@DPTR
0077 04                INC     A
0078 FF                MOV     R7,A
0079 F0                MOVX    @DPTR,A
007A 110000      E     ACALL   _SetRGBPosH
007D         ?C0177:
                                           ; SOURCE LINE # 1536
007D 110000      R     ACALL   proc_position_H_digit
                                           ; SOURCE LINE # 1537
0080         ?C0737:
0080 E4                CLR     A
0081 90000000    R     MOV     DPTR,#key
0085 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1538
                                           ; SOURCE LINE # 1540
                                           ; SOURCE LINE # 1541
                                           ; SOURCE LINE # 1543
                                           ; SOURCE LINE # 1544
0086         ?C0164:
                                           ; SOURCE LINE # 1545
0086 90000000    R     MOV     DPTR,#key
008A E0                MOVX    A,@DPTR
008B FF                MOV     R7,A
                                           ; SOURCE LINE # 1546
008C         ?C0179:
008C 22                RET     
008D         L?1025:
008D 110000      E     ACALL   GetRGBPosV
0090 90000000    R     MOV     DPTR,#digit
0094 EF                MOV     A,R7
0095 F0                MOVX    @DPTR,A
0096 22                RET     
0097         L?1110:
0097 110000      E     ACALL   GetRGBPosH
009A 90000000    R     MOV     DPTR,#digit
009E EF                MOV     A,R7
009F F0                MOVX    @DPTR,A
00A0 22                RET     
             ; FUNCTION _MenuKeyInput_position_page (END)

             ; FUNCTION _MenuKeyInput (BEGIN)
                                           ; SOURCE LINE # 1557
;---- Variable 'key' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1558
                                           ; SOURCE LINE # 1580
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 110000      R     ACALL   L?1089
0009 6400        E     XRL     A,#MBYTE menu_slider_page
000B 700A              JNZ     ?C0674
000D 7400        E     MOV     A,#LOW menu_slider_page
000F 6582              XRL     A,DPL
0011 7004              JNZ     ?C0674
0013 7400        E     MOV     A,#HIGH menu_slider_page
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 172 

0015 6583              XRL     A,DPH
0017         ?C0674:
0017 7006              JNZ     ?C0180
                                           ; SOURCE LINE # 1581
0019 110000      R     ACALL   _MenuKeyInput_slider_page
001C 010000      R     AJMP    ?C0181
001F         ?C0180:
                                           ; SOURCE LINE # 1582
001F 110000      R     ACALL   L?0776
0022 110000      R     ACALL   L?0837
0025 110000      R     ACALL   L?0990
0028 700A              JNZ     ?C0675
002A 7400        E     MOV     A,#LOW menu_slider3_page
002C 6582              XRL     A,DPL
002E 7004              JNZ     ?C0675
0030 7400        E     MOV     A,#HIGH menu_slider3_page
0032 6583              XRL     A,DPH
0034         ?C0675:
0034 7005              JNZ     ?C0182
                                           ; SOURCE LINE # 1583
0036 110000      R     ACALL   _MenuKeyInput_slider3_page
0039 807A              SJMP    ?C0181
003B         ?C0182:
                                           ; SOURCE LINE # 1584
003B 110000      R     ACALL   L?0776
003E 110000      R     ACALL   L?0837
0041 110000      R     ACALL   L?1091
0044 6400        E     XRL     A,#MBYTE menu_position_page
0046 700A              JNZ     ?C0676
0048 7400        E     MOV     A,#LOW menu_position_page
004A 6582              XRL     A,DPL
004C 7004              JNZ     ?C0676
004E 7400        E     MOV     A,#HIGH menu_position_page
0050 6583              XRL     A,DPH
0052         ?C0676:
0052 7005              JNZ     ?C0184
                                           ; SOURCE LINE # 1585
0054 110000      R     ACALL   _MenuKeyInput_position_page
0057 805C              SJMP    ?C0181
0059         ?C0184:
                                           ; SOURCE LINE # 1586
0059 110000      R     ACALL   L?0776
005C 110000      R     ACALL   L?0837
005F 7B00        E     MOV     R3,#MBYTE menu_input_page
0061 7A00        E     MOV     R2,#HIGH menu_input_page
0063 7900        E     MOV     R1,#LOW menu_input_page
0065 6400        E     XRL     A,#MBYTE menu_input_page
0067 700A              JNZ     ?C0677
0069 7400        E     MOV     A,#LOW menu_input_page
006B 6582              XRL     A,DPL
006D 7004              JNZ     ?C0677
006F 7400        E     MOV     A,#HIGH menu_input_page
0071 6583              XRL     A,DPH
0073         ?C0677:
0073 601C              JZ      ?C0187
0075 110000      R     ACALL   L?0776
0078 110000      R     ACALL   L?0837
007B 7B00        E     MOV     R3,#MBYTE menu_system_page
007D 7A00        E     MOV     R2,#HIGH menu_system_page
007F 7900        E     MOV     R1,#LOW menu_system_page
0081 6400        E     XRL     A,#MBYTE menu_system_page
0083 700A              JNZ     ?C0678
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 173 

0085 7400        E     MOV     A,#LOW menu_system_page
0087 6582              XRL     A,DPL
0089 7004              JNZ     ?C0678
008B 7400        E     MOV     A,#HIGH menu_system_page
008D 6583              XRL     A,DPH
008F         ?C0678:
008F 7005              JNZ     ?C0186
0091         ?C0187:
                                           ; SOURCE LINE # 1587
0091 110000      R     ACALL   _MenuKeyInput_input_page
0094 801F              SJMP    ?C0181
0096         ?C0186:
                                           ; SOURCE LINE # 1588
0096 110000      R     ACALL   L?0776
0099 110000      R     ACALL   L?0837
009C 7B00        E     MOV     R3,#MBYTE menu_main_page
009E 7A00        E     MOV     R2,#HIGH menu_main_page
00A0 7900        E     MOV     R1,#LOW menu_main_page
00A2 6400        E     XRL     A,#MBYTE menu_main_page
00A4 700A              JNZ     ?C0679
00A6 7400        E     MOV     A,#LOW menu_main_page
00A8 6582              XRL     A,DPL
00AA 7004              JNZ     ?C0679
00AC 7400        E     MOV     A,#HIGH menu_main_page
00AE 6583              XRL     A,DPH
00B0         ?C0679:
00B0 7003              JNZ     ?C0181
                                           ; SOURCE LINE # 1589
00B2 110000      R     ACALL   _MenuKeyInput_main_page
                                           ; SOURCE LINE # 1590
00B5         ?C0181:
                                           ; SOURCE LINE # 1593
00B5 EF                MOV     A,R7
00B6 24FE              ADD     A,#0FEH
00B8 6027              JZ      ?C0192
00BA 14                DEC     A
00BB 6043              JZ      ?C0193
00BD 14                DEC     A
00BE 605F              JZ      ?C0194
00C0 14                DEC     A
00C1 607B              JZ      ?C0195
00C3 2404              ADD     A,#04H
00C5 6003              JZ      $ + 5H
00C7 010000      R     AJMP    ?C0197
                                           ; SOURCE LINE # 1594
00CA         ?C0191:
                                           ; SOURCE LINE # 1595
00CA 110000      R     ACALL   L?0776
00CD 110000      R     ACALL   L?0785
00D0 110000      R     ACALL   L?0788
00D3 2405              ADD     A,#05H
00D5 110000      R     ACALL   L?0781
00D8 110000      R     ACALL   L?1093
00DB 110000      R     ACALL   L?0780
00DE 010000      E     AJMP    ?C?ICALL390
                                           ; SOURCE LINE # 1597
                                           ; SOURCE LINE # 1598
00E1         ?C0192:
                                           ; SOURCE LINE # 1599
00E1 110000      R     ACALL   L?0776
00E4 110000      R     ACALL   L?0785
00E7 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 174 

00E8 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1600
00EB 110000      R     ACALL   L?0776
00EE 110000      R     ACALL   L?0785
00F1 110000      R     ACALL   L?0788
00F4 2405              ADD     A,#05H
00F6 110000      R     ACALL   L?0781
00F9 110000      R     ACALL   L?0861
00FC 2413              ADD     A,#013H
                                           ; SOURCE LINE # 1601
                                           ; SOURCE LINE # 1602
                                           ; SOURCE LINE # 1603
00FE 805B              SJMP    ?C0740
                                           ; SOURCE LINE # 1604
0100         ?C0193:
                                           ; SOURCE LINE # 1605
0100 110000      R     ACALL   L?0776
0103 110000      R     ACALL   L?0785
0106 FF                MOV     R7,A
0107 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1606
010A 110000      R     ACALL   L?0776
010D 110000      R     ACALL   L?0785
0110 110000      R     ACALL   L?0788
0113 2405              ADD     A,#05H
0115 110000      R     ACALL   L?0781
0118 110000      R     ACALL   L?0861
011B 2415              ADD     A,#015H
011D         ?C0738:
                                           ; SOURCE LINE # 1607
                                           ; SOURCE LINE # 1608
                                           ; SOURCE LINE # 1609
011D 803C              SJMP    ?C0740
                                           ; SOURCE LINE # 1610
011F         ?C0194:
                                           ; SOURCE LINE # 1611
011F 110000      R     ACALL   L?0776
0122 110000      R     ACALL   L?0785
0125 FF                MOV     R7,A
0126 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1612
0129 110000      R     ACALL   L?0776
012C 110000      R     ACALL   L?0785
012F 110000      R     ACALL   L?0788
0132 2405              ADD     A,#05H
0134 110000      R     ACALL   L?0781
0137 110000      R     ACALL   L?0861
013A 2414              ADD     A,#014H
013C         ?C0739:
                                           ; SOURCE LINE # 1613
                                           ; SOURCE LINE # 1614
                                           ; SOURCE LINE # 1615
013C 801D              SJMP    ?C0740
                                           ; SOURCE LINE # 1616
013E         ?C0195:
                                           ; SOURCE LINE # 1618
013E 110000      R     ACALL   L?0776
0141 110000      R     ACALL   L?0785
0144 FF                MOV     R7,A
0145 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1619
0148 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 175 

014B 110000      R     ACALL   L?0785
014E 110000      R     ACALL   L?0788
0151 2405              ADD     A,#05H
0153 110000      R     ACALL   L?0781
0156 110000      R     ACALL   L?0861
0159 2416              ADD     A,#016H
015B         ?C0740:
015B 110000      R     ACALL   L?0786
015E FF                MOV     R7,A
015F 110000      R     ACALL   L?0776
0162 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 1620
0165 110000      R     ACALL   L?0964
                                           ; SOURCE LINE # 1622
0168 110000      R     ACALL   L?1030
016B 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 1623
                                           ; SOURCE LINE # 1624
                                           ; SOURCE LINE # 1626
                                           ; SOURCE LINE # 1627
                                           ; SOURCE LINE # 1636
016E         ?C0197:
016E 22                RET     
             ; FUNCTION _MenuKeyInput (END)

             ; FUNCTION _MenuCheckItemPosition (BEGIN)
                                           ; SOURCE LINE # 1653
0000 90000000    R     MOV     DPTR,#x
0004 EE                MOV     A,R6
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 EF                MOV     A,R7
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EC                MOV     A,R4
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D ED                MOV     A,R5
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1654
                                           ; SOURCE LINE # 1656
000F 90000000    R     MOV     DPTR,#header
0013 110000      R     ACALL   L?0854
                                           ; SOURCE LINE # 1662
0016 110000      R     ACALL   L?0775
0019 2404              ADD     A,#04H
001B 110000      R     ACALL   L?0786
001E FD                MOV     R5,A
001F 110000      R     ACALL   L?0789
0022 2403              ADD     A,#03H
0024 110000      R     ACALL   L?0786
0027 2D                ADD     A,R5
0028 90000000    R     MOV     DPTR,#max
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1663
002D 110000      R     ACALL   L?0789
0030 F9                MOV     R1,A
0031 110000      E     ACALL   ?C?CLDPTR
0034 30E407            JNB     ACC.4,?C0198
                                           ; SOURCE LINE # 1664
0037 90000000    R     MOV     DPTR,#max
003B E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 176 

003C 2D                ADD     A,R5
003D F0                MOVX    @DPTR,A
003E         ?C0198:
                                           ; SOURCE LINE # 1667
003E E4                CLR     A
003F 90000000    R     MOV     DPTR,#i
0043 F0                MOVX    @DPTR,A
0044         ?C0199:
0044 90000000    R     MOV     DPTR,#max
0048 E0                MOVX    A,@DPTR
0049 FF                MOV     R7,A
004A 90000000    R     MOV     DPTR,#i
004E E0                MOVX    A,@DPTR
004F FE                MOV     R6,A
0050 C3                CLR     C
0051 9F                SUBB    A,R7
0052 4003              JC      $ + 5H
0054 010000      R     AJMP    ?C0200
                                           ; SOURCE LINE # 1668
0057 110000      R     ACALL   L?0776
005A 2405              ADD     A,#05H
005C 110000      R     ACALL   L?0781
005F 75F017            MOV     B,#017H
0062 EE                MOV     A,R6
0063 110000      R     ACALL   L?0835
0066 110000      E     ACALL   ?C?CLDPTR
0069 FF                MOV     R7,A
006A 6401              XRL     A,#01H
006C 7003              JNZ     $ + 5H
006E 010000      R     AJMP    ?C0201
0071         ?C0202:
                                           ; SOURCE LINE # 1669
0071 EF                MOV     A,R7
0072 6402              XRL     A,#02H
0074 7003              JNZ     $ + 5H
0076 010000      R     AJMP    ?C0201
0079         ?C0203:
                                           ; SOURCE LINE # 1670
0079 EF                MOV     A,R7
007A 6403              XRL     A,#03H
007C 7003              JNZ     $ + 5H
007E 010000      R     AJMP    ?C0201
0081         ?C0204:
                                           ; SOURCE LINE # 1671
0081 EF                MOV     A,R7
0082 6404              XRL     A,#04H
0084 6003              JZ      $ + 5H
0086 010000      R     AJMP    ?C0205
                                           ; SOURCE LINE # 1672
0089 110000      R     ACALL   L?0776
008C 2405              ADD     A,#05H
008E 110000      R     ACALL   L?0781
0091 110000      R     ACALL   L?0831
0094 E9                MOV     A,R1
0095 110000      R     ACALL   L?0793
0098 FF                MOV     R7,A
0099 AEF0              MOV     R6,B
009B 110000      R     ACALL   L?0776
009E 2405              ADD     A,#05H
00A0 110000      R     ACALL   L?0781
00A3 E9                MOV     A,R1
00A4 110000      R     ACALL   L?0793
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 177 

00A7 2F                ADD     A,R7
00A8 FF                MOV     R7,A
00A9 E5F0              MOV     A,B
00AB 3E                ADDC    A,R6
00AC 110000      R     ACALL   L?0924
00AF 9E                SUBB    A,R6
00B0 5003              JNC     $ + 5H
00B2 010000      R     AJMP    ?C0206
00B5 110000      R     ACALL   L?0776
00B8 2405              ADD     A,#05H
00BA 110000      R     ACALL   L?0781
00BD 110000      R     ACALL   L?0831
00C0 E9                MOV     A,R1
00C1 241B              ADD     A,#01BH
00C3 110000      R     ACALL   L?0794
00C6 FF                MOV     R7,A
00C7 AEF0              MOV     R6,B
00C9 110000      R     ACALL   L?0776
00CC 2405              ADD     A,#05H
00CE 110000      R     ACALL   L?0781
00D1 E9                MOV     A,R1
00D2 110000      R     ACALL   L?0793
00D5 2F                ADD     A,R7
00D6 FF                MOV     R7,A
00D7 E5F0              MOV     A,B
00D9 3E                ADDC    A,R6
00DA D3                SETB    C
00DB 110000      R     ACALL   L?0925
00DE 9E                SUBB    A,R6
00DF 5060              JNC     ?C0206
00E1 110000      R     ACALL   L?0776
00E4 2405              ADD     A,#05H
00E6 110000      R     ACALL   L?0781
00E9 110000      R     ACALL   L?0832
00EC E9                MOV     A,R1
00ED 2406              ADD     A,#06H
00EF 110000      R     ACALL   L?0794
00F2 FF                MOV     R7,A
00F3 AEF0              MOV     R6,B
00F5 110000      R     ACALL   L?0776
00F8 2405              ADD     A,#05H
00FA 110000      R     ACALL   L?0781
00FD E9                MOV     A,R1
00FE 2406              ADD     A,#06H
0100 110000      R     ACALL   L?0794
0103 2F                ADD     A,R7
0104 FF                MOV     R7,A
0105 E5F0              MOV     A,B
0107 3E                ADDC    A,R6
0108 110000      R     ACALL   L?0927
010B 9E                SUBB    A,R6
010C 4033              JC      ?C0206
010E 110000      R     ACALL   L?0776
0111 2405              ADD     A,#05H
0113 110000      R     ACALL   L?0781
0116 110000      R     ACALL   L?0832
0119 E9                MOV     A,R1
011A 241D              ADD     A,#01DH
011C 110000      R     ACALL   L?0794
011F FF                MOV     R7,A
0120 AEF0              MOV     R6,B
0122 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 178 

0125 2405              ADD     A,#05H
0127 110000      R     ACALL   L?0781
012A E9                MOV     A,R1
012B 2406              ADD     A,#06H
012D 110000      R     ACALL   L?0794
0130 2F                ADD     A,R7
0131 FF                MOV     R7,A
0132 E5F0              MOV     A,B
0134 3E                ADDC    A,R6
0135 D3                SETB    C
0136 110000      R     ACALL   L?0928
0139 9E                SUBB    A,R6
013A 5005              JNC     ?C0206
                                           ; SOURCE LINE # 1675
                                           ; SOURCE LINE # 1676
013C 110000      R     ACALL   L?1095
013F FF                MOV     R7,A
0140 22                RET     
                                           ; SOURCE LINE # 1677
0141         ?C0206:
                                           ; SOURCE LINE # 1678
0141 110000      R     ACALL   L?1095
0144 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1679
0145 010000      R     AJMP    ?C0201
                                           ; SOURCE LINE # 1680
0148         ?C0205:
                                           ; SOURCE LINE # 1685
0148 110000      R     ACALL   L?0776
014B 2405              ADD     A,#05H
014D 110000      R     ACALL   L?0781
0150 110000      R     ACALL   L?0832
0153 E9                MOV     A,R1
0154 110000      R     ACALL   L?0793
0157 FF                MOV     R7,A
0158 C3                CLR     C
0159 110000      R     ACALL   L?0926
015C 95F0              SUBB    A,B
015E 5003              JNC     $ + 5H
0160 010000      R     AJMP    ?C0201
0163 110000      R     ACALL   L?0776
0166 2405              ADD     A,#05H
0168 110000      R     ACALL   L?0781
016B 110000      R     ACALL   L?0832
016E E9                MOV     A,R1
016F 2406              ADD     A,#06H
0171 110000      R     ACALL   L?0794
0174 FF                MOV     R7,A
0175 C3                CLR     C
0176 110000      R     ACALL   L?0929
0179 95F0              SUBB    A,B
017B 5003              JNC     $ + 5H
017D 010000      R     AJMP    ?C0201
                                           ; SOURCE LINE # 1686
0180 110000      R     ACALL   L?0776
0183 2405              ADD     A,#05H
0185 110000      R     ACALL   L?0781
0188 90000000    R     MOV     DPTR,#i
018C E0                MOVX    A,@DPTR
018D 110000      R     ACALL   L?1042
0190 29                ADD     A,R1
0191 F9                MOV     R1,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 179 

0192 EA                MOV     A,R2
0193 3E                ADDC    A,R6
0194 FA                MOV     R2,A
0195 E9                MOV     A,R1
0196 2409              ADD     A,#09H
0198 110000      R     ACALL   L?0781
019B 90000000    R     MOV     DPTR,#image
019F 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 1687
01A2 90000000    R     MOV     DPTR,#image
01A6 110000      R     ACALL   L?0777
01A9 4A                ORL     A,R2
01AA 4B                ORL     A,R3
01AB 7017              JNZ     ?C0209
                                           ; SOURCE LINE # 1688
01AD 110000      R     ACALL   L?0776
01B0 2405              ADD     A,#05H
01B2 110000      R     ACALL   L?0781
01B5 110000      R     ACALL   L?0861
01B8 240C              ADD     A,#0CH
01BA 110000      R     ACALL   L?0781
01BD 90000000    R     MOV     DPTR,#image
01C1 110000      R     ACALL   L?0806
01C4         ?C0209:
                                           ; SOURCE LINE # 1689
01C4 90000000    R     MOV     DPTR,#image
01C8 110000      R     ACALL   L?0777
01CB 4A                ORL     A,R2
01CC 4B                ORL     A,R3
01CD 6066              JZ      ?C0201
                                           ; SOURCE LINE # 1691
                                           ; SOURCE LINE # 1692
01CF         ?C0210:
                                           ; SOURCE LINE # 1695
01CF 90000000    R     MOV     DPTR,#image
01D3 110000      R     ACALL   L?0777
01D6 F9                MOV     R1,A
01D7 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 1698
01DA 110000      R     ACALL   L?0776
01DD 2405              ADD     A,#05H
01DF 110000      R     ACALL   L?0781
01E2 110000      R     ACALL   L?0832
01E5 E9                MOV     A,R1
01E6 110000      R     ACALL   L?0793
01E9 FF                MOV     R7,A
01EA AEF0              MOV     R6,B
01EC 90000000    R     MOV     DPTR,#header
01F0 110000      R     ACALL   L?0777
01F3 240B              ADD     A,#0BH
01F5 110000      R     ACALL   L?0794
01F8 2F                ADD     A,R7
01F9 FF                MOV     R7,A
01FA EE                MOV     A,R6
01FB 35F0              ADDC    A,B
01FD 110000      R     ACALL   L?0924
0200 9E                SUBB    A,R6
0201 5032              JNC     ?C0201
0203 110000      R     ACALL   L?0776
0206 2405              ADD     A,#05H
0208 110000      R     ACALL   L?0781
020B 110000      R     ACALL   L?0832
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 180 

020E E9                MOV     A,R1
020F 2406              ADD     A,#06H
0211 110000      R     ACALL   L?0794
0214 FF                MOV     R7,A
0215 AEF0              MOV     R6,B
0217 90000000    R     MOV     DPTR,#header
021B 110000      R     ACALL   L?0777
021E 240D              ADD     A,#0DH
0220 110000      R     ACALL   L?0794
0223 2F                ADD     A,R7
0224 FF                MOV     R7,A
0225 EE                MOV     A,R6
0226 35F0              ADDC    A,B
0228 110000      R     ACALL   L?0927
022B 9E                SUBB    A,R6
022C 5007              JNC     ?C0201
                                           ; SOURCE LINE # 1701
022E 90000000    R     MOV     DPTR,#i
0232 E0                MOVX    A,@DPTR
0233 FF                MOV     R7,A
0234 22                RET     
                                           ; SOURCE LINE # 1702
                                           ; SOURCE LINE # 1703
                                           ; SOURCE LINE # 1704
0235         ?C0201:
0235 110000      R     ACALL   L?1096
0238 F0                MOVX    @DPTR,A
0239 010000      R     AJMP    ?C0199
023C         ?C0200:
                                           ; SOURCE LINE # 1705
023C 7FFF              MOV     R7,#0FFH
                                           ; SOURCE LINE # 1706
023E         ?C0207:
023E 22                RET     
             ; FUNCTION _MenuCheckItemPosition (END)

             ; FUNCTION _MenuCheckTouchInput (BEGIN)
                                           ; SOURCE LINE # 1723
0000 90000000    R     MOV     DPTR,#TscStatus
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 EC                MOV     A,R4
0008 F0                MOVX    @DPTR,A
0009 FE                MOV     R6,A
000A A3                INC     DPTR
000B ED                MOV     A,R5
000C F0                MOVX    @DPTR,A
000D FF                MOV     R7,A
000E A3                INC     DPTR
000F EA                MOV     A,R2
0010 F0                MOVX    @DPTR,A
0011 FC                MOV     R4,A
0012 A3                INC     DPTR
0013 EB                MOV     A,R3
0014 F0                MOVX    @DPTR,A
0015 FD                MOV     R5,A
                                           ; SOURCE LINE # 1724
                                           ; SOURCE LINE # 1728
0016 110000      R     ACALL   _MenuCheckItemPosition
0019 90000000    R     MOV     DPTR,#ret
001D EF                MOV     A,R7
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 181 

001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1730
001F F4                CPL     A
0020 6003              JZ      $ + 5H
0022 010000      R     AJMP    ?C0212
                                           ; SOURCE LINE # 1736
0025 110000      R     ACALL   MenuIsSlideMode
0028 EF                MOV     A,R7
0029 7003              JNZ     $ + 5H
002B 010000      R     AJMP    ?C0213
                                           ; SOURCE LINE # 1737
002E 110000      R     ACALL   L?0776
0031 110000      R     ACALL   L?0837
0034 6400        E     XRL     A,#MBYTE menu_slider_page
0036 700A              JNZ     ?C0682
0038 7400        E     MOV     A,#LOW menu_slider_page
003A 6582              XRL     A,DPL
003C 7004              JNZ     ?C0682
003E 7400        E     MOV     A,#HIGH menu_slider_page
0040 6583              XRL     A,DPH
0042         ?C0682:
0042 7031              JNZ     ?C0214
                                           ; SOURCE LINE # 1738
0044 110000      R     ACALL   L?0776
0047 110000      R     ACALL   L?0785
004A FF                MOV     R7,A
004B 6406              XRL     A,#06H
004D 6012              JZ      ?C0216
004F EF                MOV     A,R7
0050 6407              XRL     A,#07H
0052 600D              JZ      ?C0216
0054 EF                MOV     A,R7
0055 6402              XRL     A,#02H
0057 6008              JZ      ?C0216
0059 EF                MOV     A,R7
005A 6403              XRL     A,#03H
005C 6003              JZ      $ + 5H
005E 010000      R     AJMP    ?C0217
0061         ?C0216:
                                           ; SOURCE LINE # 1742
                                           ; SOURCE LINE # 1743
0061 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1744
0064 110000      R     ACALL   L?0776
0067 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 1745
006A 110000      R     ACALL   L?0838
                                           ; SOURCE LINE # 1746
006D 7B01              MOV     R3,#01H
006F 110000      R     ACALL   L?0904
                                           ; SOURCE LINE # 1747
0072 010000      R     AJMP    ?C0741
                                           ; SOURCE LINE # 1749
0075         ?C0214:
                                           ; SOURCE LINE # 1750
0075 110000      R     ACALL   L?0776
0078 110000      R     ACALL   L?0837
007B 6400        E     XRL     A,#MBYTE menu_slider3_page
007D 700A              JNZ     ?C0683
007F 7400        E     MOV     A,#LOW menu_slider3_page
0081 6582              XRL     A,DPL
0083 7004              JNZ     ?C0683
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 182 

0085 7400        E     MOV     A,#HIGH menu_slider3_page
0087 6583              XRL     A,DPH
0089         ?C0683:
0089 7073              JNZ     ?C0213
                                           ; SOURCE LINE # 1751
008B 110000      R     ACALL   L?0776
008E 110000      R     ACALL   L?0785
0091 FF                MOV     R7,A
0092 640A              XRL     A,#0AH
0094 6012              JZ      ?C0221
0096 EF                MOV     A,R7
0097 640B              XRL     A,#0BH
0099 600D              JZ      ?C0221
009B EF                MOV     A,R7
009C 6402              XRL     A,#02H
009E 6008              JZ      ?C0221
00A0 EF                MOV     A,R7
00A1 6403              XRL     A,#03H
00A3 6003              JZ      $ + 5H
00A5 010000      R     AJMP    ?C0217
00A8         ?C0221:
                                           ; SOURCE LINE # 1755
                                           ; SOURCE LINE # 1756
00A8 110000      R     ACALL   L?0776
00AB 110000      R     ACALL   L?0785
00AE FF                MOV     R7,A
00AF 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 1757
00B2 110000      R     ACALL   L?0776
00B5 2402              ADD     A,#02H
00B7 110000      R     ACALL   L?0786
00BA FF                MOV     R7,A
00BB 110000      R     ACALL   L?0789
00BE 110000      R     ACALL   L?0800
00C1 EF                MOV     A,R7
                                           ; SOURCE LINE # 1758
00C2 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 1760
00C5 BF0502            CJNE    R7,#05H,?C0222
00C8 8020              SJMP    ?C0742
00CA         ?C0222:
                                           ; SOURCE LINE # 1761
00CA 110000      R     ACALL   L?0776
00CD 110000      R     ACALL   L?0785
00D0 FF                MOV     R7,A
00D1 B40709            CJNE    A,#07H,?C0224
00D4 90000000    R     MOV     DPTR,#index
00D8 7401              MOV     A,#01H
00DA F0                MOVX    @DPTR,A
00DB 8013              SJMP    ?C0223
00DD         ?C0224:
                                           ; SOURCE LINE # 1762
00DD EF                MOV     A,R7
00DE B40909            CJNE    A,#09H,?C0226
00E1 90000000    R     MOV     DPTR,#index
00E5 7402              MOV     A,#02H
00E7 F0                MOVX    @DPTR,A
00E8 8006              SJMP    ?C0223
00EA         ?C0226:
                                           ; SOURCE LINE # 1763
00EA         ?C0742:
00EA E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 183 

00EB 90000000    R     MOV     DPTR,#index
00EF F0                MOVX    @DPTR,A
00F0         ?C0223:
                                           ; SOURCE LINE # 1765
00F0 90000000    R     MOV     DPTR,#index
00F4 110000      R     ACALL   L?0812
00F7 E0                MOVX    A,@DPTR
00F8 FD                MOV     R5,A
00F9 7B01              MOV     R3,#01H
00FB         ?C0741:
00FB 010000      R     AJMP    _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 1766
                                           ; SOURCE LINE # 1768
                                           ; SOURCE LINE # 1769
00FE         ?C0213:
                                           ; SOURCE LINE # 1770
00FE 110000      R     ACALL   L?0776
0101 110000      R     ACALL   L?0785
0104 FD                MOV     R5,A
0105 E4                CLR     A
0106 FF                MOV     R7,A
0107 010000      R     AJMP    ?C0747
                                           ; SOURCE LINE # 1773
010A         ?C0212:
                                           ; SOURCE LINE # 1776
010A 90000000    R     MOV     DPTR,#TscStatus
010E E0                MOVX    A,@DPTR
010F FF                MOV     R7,A
0110 6480              XRL     A,#080H
0112 6009              JZ      ?C0229
0114 EF                MOV     A,R7
0115 C3                CLR     C
0116 94C0              SUBB    A,#0C0H
0118 5003              JNC     $ + 5H
011A 010000      R     AJMP    ?C0228
011D         ?C0229:
                                           ; SOURCE LINE # 1779
011D 110000      R     ACALL   L?0776
0120 110000      R     ACALL   L?0785
                                           ; SOURCE LINE # 1781
0123 110000      R     ACALL   L?0981
                                           ; SOURCE LINE # 1782
0126 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 1784
0129 110000      R     ACALL   MenuIsSlideMode
012C EF                MOV     A,R7
012D 606C              JZ      ?C0230
                                           ; SOURCE LINE # 1785
012F 110000      R     ACALL   L?0776
0132 110000      R     ACALL   L?0837
0135 6400        E     XRL     A,#MBYTE menu_slider_page
0137 700A              JNZ     ?C0684
0139 7400        E     MOV     A,#LOW menu_slider_page
013B 6582              XRL     A,DPL
013D 7004              JNZ     ?C0684
013F 7400        E     MOV     A,#HIGH menu_slider_page
0141 6583              XRL     A,DPH
0143         ?C0684:
0143 701D              JNZ     ?C0231
                                           ; SOURCE LINE # 1787
0145 110000      R     ACALL   L?0982
0148 6404              XRL     A,#04H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 184 

014A 7003              JNZ     $ + 5H
014C 010000      R     AJMP    ?C0744
014F EF                MOV     A,R7
0150 6405              XRL     A,#05H
0152 7003              JNZ     ?C0232
0154         ?C0233:
                                           ; SOURCE LINE # 1788
                                           ; SOURCE LINE # 1789
                                           ; SOURCE LINE # 1790
                                           ; SOURCE LINE # 1791
                                           ; SOURCE LINE # 1792
                                           ; SOURCE LINE # 1793
0154 010000      R     AJMP    ?C0744
                                           ; SOURCE LINE # 1796
0157         ?C0232:
                                           ; SOURCE LINE # 1797
                                           ; SOURCE LINE # 1798
0157 110000      R     ACALL   L?0776
015A 110000      R     ACALL   L?0785
015D FD                MOV     R5,A
015E 7F01              MOV     R7,#01H
0160         ?C0743:
0160 8042              SJMP    ?C0747
                                           ; SOURCE LINE # 1801
                                           ; SOURCE LINE # 1802
0162         ?C0231:
                                           ; SOURCE LINE # 1803
0162 110000      R     ACALL   L?0776
0165 110000      R     ACALL   L?0837
0168 6400        E     XRL     A,#MBYTE menu_slider3_page
016A 700A              JNZ     ?C0685
016C 7400        E     MOV     A,#LOW menu_slider3_page
016E 6582              XRL     A,DPL
0170 7004              JNZ     ?C0685
0172 7400        E     MOV     A,#HIGH menu_slider3_page
0174 6583              XRL     A,DPH
0176         ?C0685:
0176 6003              JZ      $ + 5H
0178 010000      R     AJMP    ?C0217
                                           ; SOURCE LINE # 1804
017B 110000      R     ACALL   L?0776
017E 2403              ADD     A,#03H
0180 110000      R     ACALL   L?0786
0183 110000      R     ACALL   L?1097
0186 4008              JC      ?C0237
0188 110000      R     ACALL   L?0940
018B 5003              JNC     ?C0237
                                           ; SOURCE LINE # 1805
                                           ; SOURCE LINE # 1806
                                           ; SOURCE LINE # 1807
                                           ; SOURCE LINE # 1808
                                           ; SOURCE LINE # 1809
018D 010000      R     AJMP    ?C0746
                                           ; SOURCE LINE # 1812
0190         ?C0237:
                                           ; SOURCE LINE # 1813
                                           ; SOURCE LINE # 1814
0190 110000      R     ACALL   L?0776
0193 110000      R     ACALL   L?0785
0196 FD                MOV     R5,A
0197 7F01              MOV     R7,#01H
0199         ?C0745:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 185 

                                           ; SOURCE LINE # 1815
                                           ; SOURCE LINE # 1816
0199 8009              SJMP    ?C0747
                                           ; SOURCE LINE # 1818
019B         ?C0230:
                                           ; SOURCE LINE # 1820
019B 110000      R     ACALL   L?0776
019E 110000      R     ACALL   L?0785
01A1 FD                MOV     R5,A
01A2 7F01              MOV     R7,#01H
01A4         ?C0747:
01A4 010000      R     AJMP    _MenuDrawCurrImage
                                           ; SOURCE LINE # 1823
01A7         ?C0228:
                                           ; SOURCE LINE # 1824
01A7 90000000    R     MOV     DPTR,#TscStatus
01AB E0                MOVX    A,@DPTR
01AC FF                MOV     R7,A
01AD 6401              XRL     A,#01H
01AF 600D              JZ      ?C0240
01B1 EF                MOV     A,R7
01B2 6402              XRL     A,#02H
01B4 6008              JZ      ?C0240
01B6 EF                MOV     A,R7
01B7 6404              XRL     A,#04H
01B9 6003              JZ      $ + 5H
01BB 010000      R     AJMP    ?C0239
01BE         ?C0240:
                                           ; SOURCE LINE # 1827
01BE 110000      R     ACALL   MenuIsSlideMode
01C1 EF                MOV     A,R7
01C2 7003              JNZ     $ + 5H
01C4 010000      R     AJMP    ?C0241
                                           ; SOURCE LINE # 1828
01C7 110000      R     ACALL   L?0776
01CA 110000      R     ACALL   L?0837
01CD 6400        E     XRL     A,#MBYTE menu_slider_page
01CF 700A              JNZ     ?C0686
01D1 7400        E     MOV     A,#LOW menu_slider_page
01D3 6582              XRL     A,DPL
01D5 7004              JNZ     ?C0686
01D7 7400        E     MOV     A,#HIGH menu_slider_page
01D9 6583              XRL     A,DPH
01DB         ?C0686:
01DB 704C              JNZ     ?C0242
                                           ; SOURCE LINE # 1829
01DD 110000      R     ACALL   L?0982
01E0 6404              XRL     A,#04H
01E2 6008              JZ      ?C0244
01E4 EF                MOV     A,R7
01E5 6405              XRL     A,#05H
01E7 6003              JZ      $ + 5H
01E9 010000      R     AJMP    ?C0241
01EC         ?C0244:
                                           ; SOURCE LINE # 1830
01EC         ?C0744:
01EC 110000      R     ACALL   L?0776
01EF 110000      R     ACALL   L?0800
01F2 EF                MOV     A,R7
01F3 110000      E     ACALL   ?C?CSTPTR
01F6 110000      R     ACALL   L?0776
01F9 110000      R     ACALL   L?0843
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 186 

01FC EF                MOV     A,R7
01FD 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 1831
0200 110000      R     ACALL   L?0776
0203 110000      R     ACALL   L?0785
0206 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
020A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1832
020B 110000      R     ACALL   L?0789
020E 2402              ADD     A,#02H
0210 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 1833
0213 110000      R     ACALL   L?1005
                                           ; SOURCE LINE # 1834
0216 90000000    R     MOV     DPTR,#curr_slide_value
021A E0                MOVX    A,@DPTR
021B FD                MOV     R5,A
021C 7B01              MOV     R3,#01H
021E E4                CLR     A
021F FF                MOV     R7,A
0220 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 1835
0223 110000      R     ACALL   L?0902
0226 010000      R     AJMP    _MenuDrawSlideCurrValue
                                           ; SOURCE LINE # 1838
                                           ; SOURCE LINE # 1839
0229         ?C0242:
                                           ; SOURCE LINE # 1840
0229 110000      R     ACALL   L?0776
022C 110000      R     ACALL   L?0837
022F 6400        E     XRL     A,#MBYTE menu_slider3_page
0231 700A              JNZ     ?C0687
0233 7400        E     MOV     A,#LOW menu_slider3_page
0235 6582              XRL     A,DPL
0237 7004              JNZ     ?C0687
0239 7400        E     MOV     A,#HIGH menu_slider3_page
023B 6583              XRL     A,DPH
023D         ?C0687:
023D 7049              JNZ     ?C0241
                                           ; SOURCE LINE # 1841
023F 110000      R     ACALL   L?0776
0242 2403              ADD     A,#03H
0244 110000      R     ACALL   L?0786
0247 110000      R     ACALL   L?1097
024A 403C              JC      ?C0241
024C 110000      R     ACALL   L?0940
024F 5037              JNC     ?C0241
                                           ; SOURCE LINE # 1842
0251         ?C0746:
0251 E0                MOVX    A,@DPTR
0252 FF                MOV     R7,A
0253 110000      R     ACALL   L?0789
0256 110000      R     ACALL   L?0800
0259 EF                MOV     A,R7
025A 110000      E     ACALL   ?C?CSTPTR
025D FF                MOV     R7,A
025E 110000      R     ACALL   L?0776
0261 110000      R     ACALL   L?0843
0264 EF                MOV     A,R7
0265 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 1843
0268 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 187 

026B 110000      R     ACALL   L?0785
026E 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0272 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1844
0273 110000      R     ACALL   L?0789
0276 2402              ADD     A,#02H
0278 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 1845
027B 110000      R     ACALL   L?1005
                                           ; SOURCE LINE # 1846
027E 110000      R     ACALL   L?0776
0281 2405              ADD     A,#05H
0283 110000      R     ACALL   L?0781
0286 804E              SJMP    ?C0749
                                           ; SOURCE LINE # 1849
                                           ; SOURCE LINE # 1850
                                           ; SOURCE LINE # 1851
0288         ?C0241:
                                           ; SOURCE LINE # 1854
0288 110000      R     ACALL   L?0982
028B 110000      R     ACALL   L?0776
028E 110000      R     ACALL   L?0800
0291 EF                MOV     A,R7
                                           ; SOURCE LINE # 1855
                                           ; SOURCE LINE # 1857
0292 110000      R     ACALL   L?0773
0295 2405              ADD     A,#05H
0297 110000      R     ACALL   L?0781
029A EF                MOV     A,R7
029B 110000      R     ACALL   L?0834
029E         ?C0748:
029E 8036              SJMP    ?C0749
                                           ; SOURCE LINE # 1862
02A0         ?C0239:
                                           ; SOURCE LINE # 1865
                                           ; SOURCE LINE # 1866
02A0 90000000    R     MOV     DPTR,#x
02A4 E0                MOVX    A,@DPTR
02A5 FF                MOV     R7,A
02A6 A3                INC     DPTR
02A7 E0                MOVX    A,@DPTR
02A8 90000000    R     MOV     DPTR,#last_touch_x
02AC CF                XCH     A,R7
02AD F0                MOVX    @DPTR,A
02AE A3                INC     DPTR
02AF EF                MOV     A,R7
02B0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1867
02B1 90000000    R     MOV     DPTR,#y
02B5 E0                MOVX    A,@DPTR
02B6 FF                MOV     R7,A
02B7 A3                INC     DPTR
02B8 E0                MOVX    A,@DPTR
02B9 90000000    R     MOV     DPTR,#last_touch_y
02BD CF                XCH     A,R7
02BE F0                MOVX    @DPTR,A
02BF A3                INC     DPTR
02C0 EF                MOV     A,R7
                                           ; SOURCE LINE # 1869
02C1 110000      R     ACALL   L?0775
02C4 110000      R     ACALL   L?0785
                                           ; SOURCE LINE # 1870
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 188 

02C7 110000      R     ACALL   L?0981
                                           ; SOURCE LINE # 1871
                                           ; SOURCE LINE # 1872
02CA 110000      R     ACALL   L?0773
02CD 2405              ADD     A,#05H
02CF 110000      R     ACALL   L?0781
02D2 EF                MOV     A,R7
02D3 110000      R     ACALL   L?0834
02D6         ?C0749:
02D6 110000      R     ACALL   L?0780
02D9 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 1876
                                           ; SOURCE LINE # 1877
02DC         ?C0217:
02DC 22                RET     
02DD         L?1005:
02DD 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
02E1 F0                MOVX    @DPTR,A
02E2 90000000    R     MOV     DPTR,#x
02E6 E0                MOVX    A,@DPTR
02E7 FE                MOV     R6,A
02E8 A3                INC     DPTR
02E9 E0                MOVX    A,@DPTR
02EA FF                MOV     R7,A
02EB 110000      R     ACALL   _MenuUpdateSlideNeedleByPosition
02EE 22                RET     
             ; FUNCTION _MenuCheckTouchInput (END)

             ; FUNCTION proc_demo_icon (BEGIN)
                                           ; SOURCE LINE # 1897
                                           ; SOURCE LINE # 1898
                                           ; SOURCE LINE # 1899
                                           ; SOURCE LINE # 1900
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_demo_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_demo_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_demo_page
                                           ; SOURCE LINE # 1901
000D 110000      R     ACALL   L?0775
0010 2403              ADD     A,#03H
0012 110000      R     ACALL   L?0786
0015 FF                MOV     R7,A
0016 110000      R     ACALL   L?0789
0019 110000      R     ACALL   L?0800
001C EF                MOV     A,R7
                                           ; SOURCE LINE # 1902
                                           ; SOURCE LINE # 1903
001D 110000      R     ACALL   L?0773
0020 110000      R     ACALL   L?0779
0023 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_demo_icon (END)

             ; FUNCTION proc_exit_icon (BEGIN)
                                           ; SOURCE LINE # 1905
                                           ; SOURCE LINE # 1906
                                           ; SOURCE LINE # 1909
0000 010000      R     AJMP    MenuEnd
             ; FUNCTION proc_exit_icon (END)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 189 


             ; FUNCTION proc_return_icon (BEGIN)
                                           ; SOURCE LINE # 1911
                                           ; SOURCE LINE # 1912
                                           ; SOURCE LINE # 1914
0000 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 1916
0003 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 1917
0006 110000      R     ACALL   L?0776
0009 110000      R     ACALL   L?0779
000C 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_return_icon (END)

             ; FUNCTION proc_home_icon (BEGIN)
                                           ; SOURCE LINE # 1920
                                           ; SOURCE LINE # 1921
                                           ; SOURCE LINE # 1923
0000 90000000    R     MOV     DPTR,#menu_level
0004 7401              MOV     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1924
0007 010000      R     AJMP    proc_return_icon
             ; FUNCTION proc_home_icon (END)

             ; FUNCTION _InitSlideCtrl (BEGIN)
                                           ; SOURCE LINE # 1942
0000 90000000    R     MOV     DPTR,#title_img
0004 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 1943
                                           ; SOURCE LINE # 1944
0007 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 1945
000A 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 1947
000D 7D08              MOV     R5,#08H
000F E4                CLR     A
0010 FF                MOV     R7,A
0011 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 1948
0014 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 1950
0017 90000000    R     MOV     DPTR,#title_img
001B 110000      R     ACALL   L?0829
001E 90000000    R     MOV     DPTR,#slide_title_img
0022 C9                XCH     A,R1
0023 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1951
0026 90000000    R     MOV     DPTR,#pGet
002A 110000      R     ACALL   L?0829
002D 90000000    R     MOV     DPTR,#GetSlideValue
0031 C9                XCH     A,R1
0032 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1952
0035 90000000    R     MOV     DPTR,#pVary
0039 110000      R     ACALL   L?0829
003C 90000000    R     MOV     DPTR,#_VarySlideValue
0040 C9                XCH     A,R1
0041 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1953
0044 90000000    R     MOV     DPTR,#pSet
0048 110000      R     ACALL   L?0829
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 190 

004B 90000000    R     MOV     DPTR,#_SetSlideValue
004F C9                XCH     A,R1
0050 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1954
0053 90000000    R     MOV     DPTR,#pSave
0057 110000      R     ACALL   L?0829
005A 90000000    R     MOV     DPTR,#_SaveSlideValue
005E C9                XCH     A,R1
005F 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1956
0062 90000000    R     MOV     DPTR,#GetSlideValue
0066 110000      R     ACALL   L?0777
0069 F9                MOV     R1,A
006A 110000      E     ACALL   ?C?ICALL390
006D 110000      R     ACALL   L?0997
0070 90000000    R     MOV     DPTR,#last_slide3_value
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1957
0075 22                RET     
             ; FUNCTION _InitSlideCtrl (END)

             ; FUNCTION _InitSlide3Ctrl (BEGIN)
                                           ; SOURCE LINE # 1958
0000 90000000    R     MOV     DPTR,#title_img
0004 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 1959
                                           ; SOURCE LINE # 1960
0007 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 1961
000A 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 1963
000D 7D08              MOV     R5,#08H
000F E4                CLR     A
0010 FF                MOV     R7,A
0011 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 1964
0014 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 1967
0017 90000000    R     MOV     DPTR,#title_img
001B 110000      R     ACALL   L?0829
001E 90000000    R     MOV     DPTR,#slide_title_img
0022 C9                XCH     A,R1
0023 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1968
0026 90000000    R     MOV     DPTR,#pGet
002A 110000      R     ACALL   L?0829
002D 90000000    R     MOV     DPTR,#_GetSlide3Value
0031 C9                XCH     A,R1
0032 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1969
0035 90000000    R     MOV     DPTR,#pVary
0039 110000      R     ACALL   L?0829
003C 90000000    R     MOV     DPTR,#_VarySlide3Value
0040 C9                XCH     A,R1
0041 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1970
0044 90000000    R     MOV     DPTR,#pSet
0048 110000      R     ACALL   L?0829
004B 90000000    R     MOV     DPTR,#_SetSlide3Value
004F C9                XCH     A,R1
0050 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1971
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 191 

0053 90000000    R     MOV     DPTR,#pSave
0057 110000      R     ACALL   L?0829
005A 90000000    R     MOV     DPTR,#_SaveSlide3Value
005E C9                XCH     A,R1
005F 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 1973
0062 90000000    R     MOV     DPTR,#_GetSlide3Value
0066 110000      R     ACALL   L?0777
0069 110000      R     ACALL   L?0873
006C E4                CLR     A
006D FF                MOV     R7,A
006E 110000      E     ACALL   ?C?ICALLX2
0071 90000000    R     MOV     DPTR,#curr_slide3_value
0075 EF                MOV     A,R7
0076 F0                MOVX    @DPTR,A
0077 90000000    R     MOV     DPTR,#last_slide3_value
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1974
007C 90000000    R     MOV     DPTR,#_GetSlide3Value
0080 110000      R     ACALL   L?0777
0083 110000      R     ACALL   L?0873
0086 7F01              MOV     R7,#01H
0088 110000      E     ACALL   ?C?ICALLX2
008B 90000000    R     MOV     DPTR,#curr_slide3_value+01H
008F EF                MOV     A,R7
0090 F0                MOVX    @DPTR,A
0091 90000000    R     MOV     DPTR,#last_slide3_value+01H
0095 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1975
0096 90000000    R     MOV     DPTR,#_GetSlide3Value
009A 110000      R     ACALL   L?0777
009D 110000      R     ACALL   L?0874
00A0 7F02              MOV     R7,#02H
00A2 110000      E     ACALL   ?C?ICALLX2
00A5 90000000    R     MOV     DPTR,#curr_slide3_value+02H
00A9 EF                MOV     A,R7
00AA F0                MOVX    @DPTR,A
00AB 90000000    R     MOV     DPTR,#last_slide3_value+02H
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1976
00B0 22                RET     
             ; FUNCTION _InitSlide3Ctrl (END)

             ; FUNCTION _MenuDrawSlideNeedleImageXY (BEGIN)
                                           ; SOURCE LINE # 1995
0000 90000000    R     MOV     DPTR,#index
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EB                MOV     A,R3
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1996
                                           ; SOURCE LINE # 2000
000C 90000000    R     MOV     DPTR,#header
0010 110000      R     ACALL   L?0854
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2003
0014 90000000    R     MOV     DPTR,#rate
0018 7464              MOV     A,#064H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 192 

                                           ; SOURCE LINE # 2010
001A 110000      R     ACALL   L?0775
001D 2405              ADD     A,#05H
001F 110000      R     ACALL   L?0781
0022 90000000    R     MOV     DPTR,#menu_item
                                           ; SOURCE LINE # 2012
0026 110000      R     ACALL   L?0792
0029 90000000    R     MOV     DPTR,#sx
002D 110000      R     ACALL   L?1012
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2013
0031 90000000    R     MOV     DPTR,#menu_item
0035 110000      R     ACALL   L?0777
0038 2406              ADD     A,#06H
003A 110000      R     ACALL   L?0794
003D 90000000    R     MOV     DPTR,#sy
0041 110000      R     ACALL   L?1012
                                           ; SOURCE LINE # 2016
0044 110000      R     ACALL   L?0775
0047 2403              ADD     A,#03H
0049 110000      R     ACALL   L?0786
004C 90000000    R     MOV     DPTR,#index
0050 110000      R     ACALL   L?0896
0053 110000      R     ACALL   L?1008
0056 110000      R     ACALL   L?0789
0059 2405              ADD     A,#05H
005B 110000      R     ACALL   L?0781
                                           ; SOURCE LINE # 2018
005E 110000      R     ACALL   L?0790
0061 90000000    R     MOV     DPTR,#barsize
0065 110000      R     ACALL   L?1098
                                           ; SOURCE LINE # 2021
0068 110000      R     ACALL   L?0775
006B 2403              ADD     A,#03H
006D 110000      R     ACALL   L?0786
0070 FD                MOV     R5,A
0071 90000000    R     MOV     DPTR,#index
0075 110000      R     ACALL   L?0897
0078 110000      R     ACALL   L?0992
007B 110000      R     ACALL   L?0789
007E 2405              ADD     A,#05H
0080 110000      R     ACALL   L?0781
                                           ; SOURCE LINE # 2023
0083 110000      R     ACALL   L?0790
0086 FF                MOV     R7,A
0087 AEF0              MOV     R6,B
0089 110000      R     ACALL   L?1013
008C 3E                ADDC    A,R6
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2024
008E 90000000    R     MOV     DPTR,#menu_item
0092 110000      R     ACALL   L?0777
0095 2406              ADD     A,#06H
0097 110000      R     ACALL   L?0794
009A FD                MOV     R5,A
009B ACF0              MOV     R4,B
009D 90000000    R     MOV     DPTR,#sy+01H
00A1 E0                MOVX    A,@DPTR
00A2 2D                ADD     A,R5
00A3 F0                MOVX    @DPTR,A
00A4 90000000    R     MOV     DPTR,#sy
00A8 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 193 

00A9 3C                ADDC    A,R4
00AA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2027
00AB C3                CLR     C
00AC 90000000    R     MOV     DPTR,#barsize+01H
00B0 E0                MOVX    A,@DPTR
00B1 9F                SUBB    A,R7
00B2 F0                MOVX    @DPTR,A
00B3 90000000    R     MOV     DPTR,#barsize
00B7 E0                MOVX    A,@DPTR
00B8 9E                SUBB    A,R6
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2030
00BA 90000000    R     MOV     DPTR,#value
00BE E0                MOVX    A,@DPTR
00BF FF                MOV     R7,A
00C0 7E00              MOV     R6,#00H
00C2 7C00              MOV     R4,#00H
00C4 7D64              MOV     R5,#064H
00C6 110000      E     ACALL   ?C?LIMUL
00C9 C007              PUSH    AR7
00CB 90000000    R     MOV     DPTR,#rate
00CF E0                MOVX    A,@DPTR
00D0 FB                MOV     R3,A
00D1 E4                CLR     A
00D2 FA                MOV     R2,A
00D3 F9                MOV     R1,A
00D4 F8                MOV     R0,A
00D5 D007              POP     AR7
00D7 110000      E     ACALL   ?C?ULDIV
00DA A804              MOV     R0,AR4
00DC A905              MOV     R1,AR5
00DE AA06              MOV     R2,AR6
00E0 AB07              MOV     R3,AR7
00E2 90000000    R     MOV     DPTR,#barsize
00E6 E0                MOVX    A,@DPTR
00E7 FE                MOV     R6,A
00E8 A3                INC     DPTR
00E9 E0                MOVX    A,@DPTR
00EA FF                MOV     R7,A
00EB E4                CLR     A
00EC FC                MOV     R4,A
00ED FD                MOV     R5,A
00EE 110000      E     ACALL   ?C?LMUL
00F1 E4                CLR     A
00F2 7B64              MOV     R3,#064H
00F4 FA                MOV     R2,A
00F5 F9                MOV     R1,A
00F6 F8                MOV     R0,A
00F7 110000      E     ACALL   ?C?ULDIV
;---- Variable 'position' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 2032
00FA 110000      R     ACALL   L?1013
00FD 3E                ADDC    A,R6
                                           ; SOURCE LINE # 2035
00FE 110000      R     ACALL   L?0775
0101 2403              ADD     A,#03H
0103 110000      R     ACALL   L?0786
0106 FD                MOV     R5,A
0107 7C00              MOV     R4,#00H
0109 90000000    R     MOV     DPTR,#index
010D 110000      R     ACALL   L?0897
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 194 

0110 EC                MOV     A,R4
0111 35F0              ADDC    A,B
0113 FE                MOV     R6,A
0114 90000000    R     MOV     DPTR,#item
0118 E0                MOVX    A,@DPTR
0119 2F                ADD     A,R7
011A FF                MOV     R7,A
011B EC                MOV     A,R4
011C 3E                ADDC    A,R6
011D 110000      R     ACALL   L?0994
0120 110000      R     ACALL   L?0789
0123 2405              ADD     A,#05H
0125 110000      R     ACALL   L?0781
0128 110000      R     ACALL   L?1093
012B 90000000    R     MOV     DPTR,#menu_item
012F 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 2036
0132 2409              ADD     A,#09H
0134 110000      R     ACALL   L?0781
0137 90000000    R     MOV     DPTR,#image
013B 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 2039
013E 90000000    R     MOV     DPTR,#menu_item
0142 110000      R     ACALL   L?0777
0145 2410              ADD     A,#010H
0147 110000      R     ACALL   L?0786
014A 90000000    R     MOV     DPTR,#sosd_win
014E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2044
014F 90000000    R     MOV     DPTR,#menu_item
0153 A3                INC     DPTR
0154 E0                MOVX    A,@DPTR
0155 FA                MOV     R2,A
0156 A3                INC     DPTR
0157 E0                MOVX    A,@DPTR
0158 2408              ADD     A,#08H
015A 110000      R     ACALL   L?0786
015D B4010D            CJNE    A,#01H,?C0254
                                           ; SOURCE LINE # 2045
0160 90000000    R     MOV     DPTR,#sx+01H
0164 E0                MOVX    A,@DPTR
0165 24EC              ADD     A,#0ECH
0167 110000      R     ACALL   L?1014
016A 34FF              ADDC    A,#0FFH
016C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2046
016D         ?C0254:
                                           ; SOURCE LINE # 2049
016D 90000000    R     MOV     DPTR,#image
0171 110000      R     ACALL   L?0777
0174 F9                MOV     R1,A
0175 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 2053
0178 90000000    R     MOV     DPTR,#header
017C 110000      R     ACALL   L?0777
017F 110000      R     ACALL   L?0863
0182 110000      R     ACALL   L?0957
0185 110000      R     ACALL   L?0898
0188 110000      E     ACALL   _SOsd_SetSpiStartOffset
                                           ; SOURCE LINE # 2054
018B 110000      R     ACALL   L?0898
018E 90000000    R     MOV     DPTR,#header
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 195 

0192 110000      R     ACALL   L?0777
0195 240B              ADD     A,#0BH
0197 110000      R     ACALL   L?0794
019A FD                MOV     R5,A
019B ACF0              MOV     R4,B
019D 110000      R     ACALL   L?1027
01A0 240D              ADD     A,#0DH
01A2 110000      R     ACALL   L?0794
01A5 FB                MOV     R3,A
01A6 AAF0              MOV     R2,B
01A8 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 2055
01AB 110000      R     ACALL   L?0899
01AE 90000000    R     MOV     DPTR,#sx
01B2 E0                MOVX    A,@DPTR
01B3 FC                MOV     R4,A
01B4 A3                INC     DPTR
01B5 E0                MOVX    A,@DPTR
01B6 FD                MOV     R5,A
01B7 90000000    R     MOV     DPTR,#header
01BB 110000      R     ACALL   L?0777
01BE 240B              ADD     A,#0BH
01C0 110000      R     ACALL   L?0794
01C3 110000      R     ACALL   L?0876
01C6 90000000    R     MOV     DPTR,#header
01CA 110000      R     ACALL   L?0777
01CD 240D              ADD     A,#0DH
01CF 110000      R     ACALL   L?0794
01D2 110000      R     ACALL   L?0918
01D5 90000000    R     MOV     DPTR,#sy
01D9 E0                MOVX    A,@DPTR
01DA FA                MOV     R2,A
01DB A3                INC     DPTR
01DC E0                MOVX    A,@DPTR
01DD FB                MOV     R3,A
01DE 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 2056
01E1 90000000    R     MOV     DPTR,#sosd_win
01E5 E0                MOVX    A,@DPTR
01E6 700D              JNZ     ?C0255
                                           ; SOURCE LINE # 2057
01E8 FD                MOV     R5,A
01E9 FC                MOV     R4,A
01EA FF                MOV     R7,A
01EB FE                MOV     R6,A
01EC 110000      E     ACALL   _SOsd_SetWin0ImageOffsetXY
                                           ; SOURCE LINE # 2058
01EF 110000      R     ACALL   L?0951
01F2 110000      E     ACALL   _SOsd_SetWin0Animation
                                           ; SOURCE LINE # 2059
01F5         ?C0255:
                                           ; SOURCE LINE # 2061
01F5 90000000    R     MOV     DPTR,#image
01F9 110000      R     ACALL   L?0777
01FC 2408              ADD     A,#08H
01FE 110000      R     ACALL   L?0786
0201 F4                CPL     A
0202 600A              JZ      ?C0256
                                           ; SOURCE LINE # 2062
0204 110000      R     ACALL   L?0899
0207 7D01              MOV     R5,#01H
0209 110000      E     ACALL   _SOsd_SetPixelAlpha
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 196 

020C 8055              SJMP    ?C0257
020E         ?C0256:
                                           ; SOURCE LINE # 2063
                                           ; SOURCE LINE # 2064
020E 90000000    R     MOV     DPTR,#slide_title_img
0212 110000      R     ACALL   L?0777
0215 110000      R     ACALL   L?0837
0218 7B00        E     MOV     R3,#MBYTE img_slide_trans
021A 7A00        E     MOV     R2,#HIGH img_slide_trans
021C 7900        E     MOV     R1,#LOW img_slide_trans
021E 6400        E     XRL     A,#MBYTE img_slide_trans
0220 700A              JNZ     ?C0688
0222 7400        E     MOV     A,#LOW img_slide_trans
0224 6582              XRL     A,DPL
0226 7004              JNZ     ?C0688
0228 7400        E     MOV     A,#HIGH img_slide_trans
022A 6583              XRL     A,DPH
022C         ?C0688:
022C 702D              JNZ     ?C0258
                                           ; SOURCE LINE # 2065
022E 110000      E     ACALL   OsdGetTrans
0231 AD07              MOV     R5,AR7
0233 110000      R     ACALL   L?0899
0236 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 2067
0239 110000      E     ACALL   OsdGetTrans
023C AD07              MOV     R5,AR7
023E 7F01              MOV     R7,#01H
0240 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 2068
0243 110000      E     ACALL   OsdGetTrans
0246 AD07              MOV     R5,AR7
0248 7F02              MOV     R7,#02H
024A 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 2069
024D 7F01              MOV     R7,#01H
024F 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 2070
0252 7D02              MOV     R5,#02H
0254 7F01              MOV     R7,#01H
0256 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 2071
0259 8008              SJMP    ?C0257
025B         ?C0258:
                                           ; SOURCE LINE # 2073
025B 110000      R     ACALL   L?0899
025E E4                CLR     A
025F FD                MOV     R5,A
0260 110000      E     ACALL   _SOsd_SetGlobalAlpha
                                           ; SOURCE LINE # 2074
0263         ?C0257:
                                           ; SOURCE LINE # 2075
0263 110000      R     ACALL   L?0899
0266 90000000    R     MOV     DPTR,#header
026A 110000      R     ACALL   L?0777
026D 2409              ADD     A,#09H
026F 110000      R     ACALL   L?0786
0272 FD                MOV     R5,A
0273 110000      E     ACALL   _SOsd_SetPixelWidth
                                           ; SOURCE LINE # 2076
0276 110000      R     ACALL   L?0899
0279 90000000    R     MOV     DPTR,#menu_item
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 197 

027D 110000      R     ACALL   L?0777
0280 2411              ADD     A,#011H
0282 110000      R     ACALL   L?0794
0285 FD                MOV     R5,A
0286 ACF0              MOV     R4,B
0288 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 2078
028B 110000      R     ACALL   L?0899
028E 7D01              MOV     R5,#01H
0290 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 2081
0293 7F01              MOV     R7,#01H
0295 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 2083
0298 90000000    R     MOV     DPTR,#header
029C 110000      R     ACALL   L?0777
029F 240A              ADD     A,#0AH
02A1 110000      R     ACALL   L?0786
02A4 FE                MOV     R6,A
02A5 6014              JZ      ?C0261
                                           ; SOURCE LINE # 2084
02A7 110000      R     ACALL   L?0899
02AA 110000      R     ACALL   L?1027
02AD 2409              ADD     A,#09H
02AF 110000      R     ACALL   L?0786
02B2 FD                MOV     R5,A
02B3 AB06              MOV     R3,AR6
02B5 110000      E     ACALL   _SOsd_SetRlc
                                           ; SOURCE LINE # 2085
02B8 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 2086
                                           ; SOURCE LINE # 2087
                                           ; SOURCE LINE # 2093
02BB         ?C0261:
                                           ; SOURCE LINE # 2095
02BB 90000000    R     MOV     DPTR,#menu_item
02BF 110000      R     ACALL   L?0777
02C2 2410              ADD     A,#010H
02C4 110000      R     ACALL   L?0786
02C7 FD                MOV     R5,A
02C8 FF                MOV     R7,A
02C9 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 2098
02CC 90000000    R     MOV     DPTR,#header
02D0 110000      R     ACALL   L?0777
02D3 2408              ADD     A,#08H
02D5 110000      R     ACALL   L?0786
02D8 FD                MOV     R5,A
02D9 C005              PUSH    AR5
02DB 90000000    R     MOV     DPTR,#menu_item
02DF 110000      R     ACALL   L?0777
02E2 2411              ADD     A,#011H
02E4 110000      R     ACALL   L?0794
02E7 FB                MOV     R3,A
02E8 AAF0              MOV     R2,B
02EA C002              PUSH    AR2
02EC C003              PUSH    AR3
02EE 90000000    R     MOV     DPTR,#header
02F2 110000      R     ACALL   L?0777
02F5 240F              ADD     A,#0FH
02F7 110000      R     ACALL   L?0794
02FA 110000      R     ACALL   L?0871
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 198 

02FD F0                MOVX    @DPTR,A
02FE 90000000    R     MOV     DPTR,#header
0302 110000      R     ACALL   L?0845
0305 90000000    R     MOV     DPTR,#image
0309 110000      R     ACALL   L?0777
030C 2408              ADD     A,#08H
030E 110000      R     ACALL   L?0786
0311 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
0315 F0                MOVX    @DPTR,A
0316 110000      R     ACALL   L?0899
0319 D003              POP     AR3
031B D002              POP     AR2
031D D005              POP     AR5
031F 110000      E     ACALL   _SOsd_SetLut
                                           ; SOURCE LINE # 2099
0322 110000      R     ACALL   L?0899
0325 7D01              MOV     R5,#01H
0327 010000      E     AJMP    _SOsd_UpdateLut
             ; FUNCTION _MenuDrawSlideNeedleImageXY (END)

             ; FUNCTION _MenuUpdateSlideNeedleByPosition (BEGIN)
                                           ; SOURCE LINE # 2111
;---- Variable 'x' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 2112
                                           ; SOURCE LINE # 2116
0000 90000000    R     MOV     DPTR,#header
0004 110000      R     ACALL   L?0854
0007 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2123
0008 90000000    R     MOV     DPTR,#rate
000C 7464              MOV     A,#064H
                                           ; SOURCE LINE # 2126
000E 110000      R     ACALL   L?0775
0011 110000      R     ACALL   L?0837
0014 6400        E     XRL     A,#MBYTE menu_slider_page
0016 700A              JNZ     ?C0689
0018 7400        E     MOV     A,#LOW menu_slider_page
001A 6582              XRL     A,DPL
001C 7004              JNZ     ?C0689
001E 7400        E     MOV     A,#HIGH menu_slider_page
0020 6583              XRL     A,DPH
0022         ?C0689:
0022 7002              JNZ     ?C0263
                                           ; SOURCE LINE # 2127
0024 8028              SJMP    ?C0751
0026         ?C0263:
                                           ; SOURCE LINE # 2128
                                           ; SOURCE LINE # 2129
0026 110000      R     ACALL   L?0776
0029 110000      R     ACALL   L?0785
002C FD                MOV     R5,A
002D B40503            CJNE    A,#05H,?C0265
0030 E4                CLR     A
0031         ?C0750:
0031 801B              SJMP    ?C0751
0033         ?C0265:
                                           ; SOURCE LINE # 2130
0033 ED                MOV     A,R5
0034 B40709            CJNE    A,#07H,?C0267
0037 90000000    R     MOV     DPTR,#index
003B 7401              MOV     A,#01H
003D F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 199 

003E 8013              SJMP    ?C0264
0040         ?C0267:
                                           ; SOURCE LINE # 2131
0040 ED                MOV     A,R5
0041 B40909            CJNE    A,#09H,?C0269
0044 90000000    R     MOV     DPTR,#index
0048 7402              MOV     A,#02H
004A F0                MOVX    @DPTR,A
004B 8006              SJMP    ?C0264
004D         ?C0269:
                                           ; SOURCE LINE # 2132
004D E4                CLR     A
004E         ?C0751:
004E 90000000    R     MOV     DPTR,#index
0052 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2133
0053         ?C0264:
                                           ; SOURCE LINE # 2136
0053 110000      R     ACALL   L?0776
0056 2405              ADD     A,#05H
0058 110000      R     ACALL   L?0781
005B 90000000    R     MOV     DPTR,#menu_item
                                           ; SOURCE LINE # 2138
005F 110000      R     ACALL   L?0792
0062 FD                MOV     R5,A
0063 90000000    R     MOV     DPTR,#sx
0067 E5F0              MOV     A,B
0069 F0                MOVX    @DPTR,A
006A A3                INC     DPTR
006B ED                MOV     A,R5
006C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2139
006D 90000000    R     MOV     DPTR,#menu_item
0071 110000      R     ACALL   L?0777
0074 2406              ADD     A,#06H
0076 110000      R     ACALL   L?0794
0079 FD                MOV     R5,A
007A 90000000    R     MOV     DPTR,#sy
007E E5F0              MOV     A,B
0080 F0                MOVX    @DPTR,A
0081 A3                INC     DPTR
0082 ED                MOV     A,R5
0083 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2140
0084 90000000    R     MOV     DPTR,#sx
0088 110000      R     ACALL   L?0988
008B 90000000    R     MOV     DPTR,#position
008F F0                MOVX    @DPTR,A
0090 A3                INC     DPTR
0091 EF                MOV     A,R7
                                           ; SOURCE LINE # 2143
0092 110000      R     ACALL   L?0775
0095 2403              ADD     A,#03H
0097 110000      R     ACALL   L?0786
009A 90000000    R     MOV     DPTR,#index
009E 110000      R     ACALL   L?0896
00A1 110000      R     ACALL   L?1008
00A4 110000      R     ACALL   L?0789
00A7 2405              ADD     A,#05H
00A9 110000      R     ACALL   L?0781
00AC 90000000    R     MOV     DPTR,#menu_item
                                           ; SOURCE LINE # 2145
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 200 

00B0 110000      R     ACALL   L?0791
00B3 90000000    R     MOV     DPTR,#barsize
00B7 110000      R     ACALL   L?1098
                                           ; SOURCE LINE # 2148
00BA 110000      R     ACALL   L?0775
00BD 2403              ADD     A,#03H
00BF 110000      R     ACALL   L?0786
00C2 FD                MOV     R5,A
00C3 90000000    R     MOV     DPTR,#index
00C7 110000      R     ACALL   L?0897
00CA 110000      R     ACALL   L?0992
00CD 110000      R     ACALL   L?0789
00D0 2405              ADD     A,#05H
00D2 110000      R     ACALL   L?0781
00D5 110000      R     ACALL   L?1094
00D8 90000000    R     MOV     DPTR,#menu_item
00DC 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 2149
00DF 2409              ADD     A,#09H
00E1 110000      R     ACALL   L?0781
00E4 90000000    R     MOV     DPTR,#image
00E8 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 2150
00EB 90000000    R     MOV     DPTR,#menu_item
00EF 110000      R     ACALL   L?0777
00F2 110000      R     ACALL   L?0793
00F5 FF                MOV     R7,A
00F6 AEF0              MOV     R6,B
00F8 90000000    R     MOV     DPTR,#sx+01H
00FC E0                MOVX    A,@DPTR
00FD 2F                ADD     A,R7
00FE F0                MOVX    @DPTR,A
00FF 90000000    R     MOV     DPTR,#sx
0103 E0                MOVX    A,@DPTR
0104 3E                ADDC    A,R6
                                           ; SOURCE LINE # 2151
0105 110000      R     ACALL   L?1077
0108 2406              ADD     A,#06H
010A 110000      R     ACALL   L?0794
010D FD                MOV     R5,A
010E ACF0              MOV     R4,B
0110 90000000    R     MOV     DPTR,#sy+01H
0114 E0                MOVX    A,@DPTR
0115 2D                ADD     A,R5
0116 F0                MOVX    @DPTR,A
0117 90000000    R     MOV     DPTR,#sy
011B E0                MOVX    A,@DPTR
011C 3C                ADDC    A,R4
011D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2152
011E C3                CLR     C
011F 90000000    R     MOV     DPTR,#position+01H
0123 E0                MOVX    A,@DPTR
0124 9F                SUBB    A,R7
0125 F0                MOVX    @DPTR,A
0126 90000000    R     MOV     DPTR,#position
012A E0                MOVX    A,@DPTR
012B 9E                SUBB    A,R6
                                           ; SOURCE LINE # 2155
012C 110000      R     ACALL   L?1077
012F 110000      R     ACALL   L?0793
0132 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 201 

0133 AEF0              MOV     R6,B
0135 C3                CLR     C
0136 90000000    R     MOV     DPTR,#barsize+01H
013A E0                MOVX    A,@DPTR
013B 9F                SUBB    A,R7
013C F0                MOVX    @DPTR,A
013D 90000000    R     MOV     DPTR,#barsize
0141 E0                MOVX    A,@DPTR
0142 9E                SUBB    A,R6
0143 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2162
0144 90000000    R     MOV     DPTR,#position
0148 E0                MOVX    A,@DPTR
0149 FE                MOV     R6,A
014A A3                INC     DPTR
014B E0                MOVX    A,@DPTR
014C FF                MOV     R7,A
014D 7C00              MOV     R4,#00H
014F 7D64              MOV     R5,#064H
0151 110000      E     ACALL   ?C?LIMUL
0154 C006              PUSH    AR6
0156 C007              PUSH    AR7
0158 A3                INC     DPTR
0159 E0                MOVX    A,@DPTR
015A FE                MOV     R6,A
015B A3                INC     DPTR
015C E0                MOVX    A,@DPTR
015D FB                MOV     R3,A
015E AA06              MOV     R2,AR6
0160 E4                CLR     A
0161 F9                MOV     R1,A
0162 F8                MOV     R0,A
0163 D007              POP     AR7
0165 D006              POP     AR6
0167 110000      E     ACALL   ?C?ULDIV
016A 90000000    R     MOV     DPTR,#value
016E EF                MOV     A,R7
                                           ; SOURCE LINE # 2165
016F 110000      R     ACALL   L?0775
0172 110000      R     ACALL   L?0837
0175 7900        E     MOV     R1,#LOW menu_slider_page
0177 6400        E     XRL     A,#MBYTE menu_slider_page
0179 700A              JNZ     ?C0690
017B 7400        E     MOV     A,#LOW menu_slider_page
017D 6582              XRL     A,DPL
017F 7004              JNZ     ?C0690
0181 7400        E     MOV     A,#HIGH menu_slider_page
0183 6583              XRL     A,DPH
0185         ?C0690:
0185 90000000    R     MOV     DPTR,#value
0189 7015              JNZ     ?C0271
                                           ; SOURCE LINE # 2166
018B E0                MOVX    A,@DPTR
018C FF                MOV     R7,A
018D 90000000    R     MOV     DPTR,#curr_slide_value
0191 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2167
0192 90000000    R     MOV     DPTR,#_SetSlideValue
0196 110000      R     ACALL   L?0777
0199 110000      R     ACALL   L?0874
019C 110000      R     ACALL   L?0995
                                           ; SOURCE LINE # 2175
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 202 

019F 22                RET     
01A0         ?C0271:
                                           ; SOURCE LINE # 2176
                                           ; SOURCE LINE # 2177
01A0 E0                MOVX    A,@DPTR
01A1 FE                MOV     R6,A
01A2 A3                INC     DPTR
01A3 110000      R     ACALL   L?0812
01A6 EE                MOV     A,R6
01A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2178
01A8 7400        R     MOV     A,#LOW curr_slide3_value
01AA 2F                ADD     A,R7
01AB 110000      R     ACALL   L?0814
01AE 110000      R     ACALL   L?1043
01B1 110000      R     ACALL   L?0777
01B4 110000      R     ACALL   L?0874
01B7 110000      E     ACALL   ?C?ICALLX2
01BA 90000000    R     MOV     DPTR,#index
01BE E0                MOVX    A,@DPTR
01BF 110000      R     ACALL   L?0813
01C2 EF                MOV     A,R7
01C3 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2180
                                           ; SOURCE LINE # 2181
01C4         ?C0273:
01C4 22                RET     
             ; FUNCTION _MenuUpdateSlideNeedleByPosition (END)

             ; FUNCTION _MenuDrawSlideCurrValue (BEGIN)
                                           ; SOURCE LINE # 2199
0000 90000000    R     MOV     DPTR,#value
0004 EC                MOV     A,R4
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
;---- Variable 'index' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2200
                                           ; SOURCE LINE # 2206
0009 E4                CLR     A
000A 90000000    R     MOV     DPTR,#start
                                           ; SOURCE LINE # 2210
000E 110000      R     ACALL   L?0775
0011 2408              ADD     A,#08H
0013 110000      R     ACALL   L?0781
0016 90000000    R     MOV     DPTR,#text_info
001A 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 2211
001D EF                MOV     A,R7
001E 75F00F            MOV     B,#0FH
0021 A4                MUL     AB
0022 FF                MOV     R7,A
0023 90000000    R     MOV     DPTR,#text_info+01H
0027 110000      R     ACALL   L?0916
                                           ; SOURCE LINE # 2215
002A 90000000    R     MOV     DPTR,#value
002E E0                MOVX    A,@DPTR
002F FE                MOV     R6,A
0030 A3                INC     DPTR
0031 E0                MOVX    A,@DPTR
0032 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 203 

0033 110000      R     ACALL   L?1045
0036 110000      E     ACALL   _TWitoa
0039 90000000    R     MOV     DPTR,#n_char
003D EF                MOV     A,R7
003E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2216
003F 110000      R     ACALL   L?1045
0042 90000000    R     MOV     DPTR,#str
0046 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 2219
0049 110000      E     ACALL   ?C?CLDPTR
004C FF                MOV     R7,A
004D 110000      E     ACALL   _IsDigit
0050 EF                MOV     A,R7
0051 703B              JNZ     ?C0274
                                           ; SOURCE LINE # 2221
0053 90000000    R     MOV     DPTR,#text_info
0057 110000      R     ACALL   L?0777
005A 240B              ADD     A,#0BH
005C 110000      R     ACALL   L?0786
005F FD                MOV     R5,A
                                           ; SOURCE LINE # 2222
0060 110000      R     ACALL   L?0920
0063 110000      R     ACALL   L?0794
0066 FF                MOV     R7,A
0067 AEF0              MOV     R6,B
0069 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 2224
006C 90000000    R     MOV     DPTR,#str
0070 110000      R     ACALL   L?0777
0073 F9                MOV     R1,A
0074 110000      E     ACALL   ?C?CLDPTR
0077 110000      R     ACALL   L?0823
007A EF                MOV     A,R7
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2225
007C 90000000    R     MOV     DPTR,#str+01H
0080 E4                CLR     A
0081 75F001            MOV     B,#01H
0084 110000      E     ACALL   ?C?IILDX
                                           ; SOURCE LINE # 2226
0087 90000000    R     MOV     DPTR,#start
008B E0                MOVX    A,@DPTR
008C 04                INC     A
008D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2227
008E         ?C0274:
                                           ; SOURCE LINE # 2229
008E 90000000    R     MOV     DPTR,#text_info
0092 110000      R     ACALL   L?0777
0095 240C              ADD     A,#0CH
0097 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 2232
009A 110000      R     ACALL   L?0920
009D 110000      R     ACALL   L?0794
00A0 FF                MOV     R7,A
00A1 90000000    R     MOV     DPTR,#start
00A5 E0                MOVX    A,@DPTR
00A6 90000000    R     MOV     DPTR,#palette
00AA 110000      R     ACALL   L?1047
00AD 110000      E     ACALL   _FOsdRamSetAddrAttr
00B0         ?C0275:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 204 

                                           ; SOURCE LINE # 2233
00B0 90000000    R     MOV     DPTR,#str
00B4 110000      R     ACALL   L?0777
00B7 F9                MOV     R1,A
00B8 110000      E     ACALL   ?C?CLDPTR
00BB 6018              JZ      ?C0276
                                           ; SOURCE LINE # 2234
00BD 90000000    R     MOV     DPTR,#str
00C1 110000      R     ACALL   L?1026
;---- Variable 'font' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2235
00C4 24D0              ADD     A,#0D0H
00C6 FF                MOV     R7,A
                                           ; SOURCE LINE # 2236
00C7 75F003            MOV     B,#03H
00CA A4                MUL     AB
00CB 2480              ADD     A,#080H
00CD FE                MOV     R6,A
00CE 110000      R     ACALL   L?0824
00D1 EE                MOV     A,R6
00D2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2237
00D3 80DB              SJMP    ?C0275
00D5         ?C0276:
                                           ; SOURCE LINE # 2239
00D5 90000000    R     MOV     DPTR,#text_info
00D9 110000      R     ACALL   L?0777
00DC F9                MOV     R1,A
00DD 110000      E     ACALL   ?C?CLDPTR
00E0 FF                MOV     R7,A
00E1 90000000    R     MOV     DPTR,#n_char
00E5 E0                MOVX    A,@DPTR
00E6 FD                MOV     R5,A
00E7 7B01              MOV     R3,#01H
00E9 010000      E     AJMP    _FOsdWinScreenWH
             ; FUNCTION _MenuDrawSlideCurrValue (END)

             ; FUNCTION proc_slider_bg (BEGIN)
                                           ; SOURCE LINE # 2252
                                           ; SOURCE LINE # 2253
                                           ; SOURCE LINE # 2262
0000 E4                CLR     A
0001 FD                MOV     R5,A
0002 FF                MOV     R7,A
0003 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2263
0006 7D01              MOV     R5,#01H
0008 E4                CLR     A
0009 FF                MOV     R7,A
000A 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2265
000D 110000      R     ACALL   L?0776
0010 110000      R     ACALL   L?0785
0013 6405              XRL     A,#05H
0015 90000000    R     MOV     DPTR,#curr_slide_value
0019 7040              JNZ     ?C0278
                                           ; SOURCE LINE # 2266
001B E0                MOVX    A,@DPTR
001C FD                MOV     R5,A
001D 7B01              MOV     R3,#01H
001F E4                CLR     A
0020 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 205 

0021 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2268
0024 110000      R     ACALL   L?0776
0027 110000      R     ACALL   L?0785
002A C3                CLR     C
002B 9401              SUBB    A,#01H
002D FF                MOV     R7,A
002E E4                CLR     A
002F 9400              SUBB    A,#00H
0031 110000      R     ACALL   L?1009
0034 110000      R     ACALL   L?0789
0037 2405              ADD     A,#05H
0039 110000      R     ACALL   L?0781
;---- Variable 'menu_item' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 2269
003C 110000      R     ACALL   L?0861
003F 2410              ADD     A,#010H
0041 110000      R     ACALL   L?0786
0044 FF                MOV     R7,A
0045 90000000    R     MOV     DPTR,#sosd_win
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2270
004A E4                CLR     A
004B FD                MOV     R5,A
004C 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 2271
004F 90000000    R     MOV     DPTR,#sosd_win
0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 FF                MOV     R7,A
0056 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 2272
0059 8014              SJMP    ?C0279
005B         ?C0278:
                                           ; SOURCE LINE # 2273
                                           ; SOURCE LINE # 2274
005B E0                MOVX    A,@DPTR
005C FD                MOV     R5,A
005D E4                CLR     A
005E FB                MOV     R3,A
005F FF                MOV     R7,A
0060 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2275
0063 110000      R     ACALL   L?0776
0066 110000      R     ACALL   L?0785
0069 FD                MOV     R5,A
006A E4                CLR     A
006B FF                MOV     R7,A
006C 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2276
006F         ?C0279:
                                           ; SOURCE LINE # 2282
006F E4                CLR     A
0070 FD                MOV     R5,A
0071 FF                MOV     R7,A
0072 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 2283
0075 110000      R     ACALL   L?0902
0078 010000      R     AJMP    _MenuDrawSlideCurrValue
             ; FUNCTION proc_slider_bg (END)

             ; FUNCTION proc_slider3_bg (BEGIN)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 206 

                                           ; SOURCE LINE # 2286
                                           ; SOURCE LINE # 2287
                                           ; SOURCE LINE # 2293
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0785
0006 FF                MOV     R7,A
0007 B40508            CJNE    A,#05H,?C0281
000A E4                CLR     A
000B 90000000    R     MOV     DPTR,#index
000F F0                MOVX    @DPTR,A
0010 801D              SJMP    ?C0282
0012         ?C0281:
                                           ; SOURCE LINE # 2294
0012 EF                MOV     A,R7
0013 B40709            CJNE    A,#07H,?C0283
0016 90000000    R     MOV     DPTR,#index
001A 7401              MOV     A,#01H
001C F0                MOVX    @DPTR,A
001D 8010              SJMP    ?C0282
001F         ?C0283:
                                           ; SOURCE LINE # 2295
001F EF                MOV     A,R7
0020 90000000    R     MOV     DPTR,#index
0024 B40905            CJNE    A,#09H,?C0285
0027 7402              MOV     A,#02H
0029 F0                MOVX    @DPTR,A
002A 8003              SJMP    ?C0282
002C         ?C0285:
                                           ; SOURCE LINE # 2296
002C 7403              MOV     A,#03H
002E F0                MOVX    @DPTR,A
002F         ?C0282:
                                           ; SOURCE LINE # 2298
002F 110000      R     ACALL   L?0938
                                           ; SOURCE LINE # 2300
0032 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 2301
0035 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 2302
0038 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 2304
003B E4                CLR     A
003C FD                MOV     R5,A
003D FF                MOV     R7,A
003E 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2305
0041 7D01              MOV     R5,#01H
0043 E4                CLR     A
0044 FF                MOV     R7,A
0045 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2307
0048 E4                CLR     A
0049 90000000    R     MOV     DPTR,#i
004D F0                MOVX    @DPTR,A
004E         ?C0287:
004E 90000000    R     MOV     DPTR,#i
0052 E0                MOVX    A,@DPTR
0053 FF                MOV     R7,A
0054 C3                CLR     C
0055 9403              SUBB    A,#03H
0057 5067              JNC     ?C0288
                                           ; SOURCE LINE # 2308
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 207 

0059 90000000    R     MOV     DPTR,#index
005D E0                MOVX    A,@DPTR
005E 6F                XRL     A,R7
005F 7048              JNZ     ?C0290
                                           ; SOURCE LINE # 2309
0061 A3                INC     DPTR
0062 E0                MOVX    A,@DPTR
0063 110000      R     ACALL   L?0813
0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 7B01              MOV     R3,#01H
006A 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2312
006D 110000      R     ACALL   L?0776
0070 2403              ADD     A,#03H
0072 110000      R     ACALL   L?0786
0075 FD                MOV     R5,A
0076 7C00              MOV     R4,#00H
0078 90000000    R     MOV     DPTR,#index
007C 110000      R     ACALL   L?0897
007F 110000      R     ACALL   L?0993
0082 110000      R     ACALL   L?0789
0085 2405              ADD     A,#05H
0087 110000      R     ACALL   L?0781
;---- Variable 'menu_item' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 2313
008A 110000      R     ACALL   L?0861
008D 2410              ADD     A,#010H
008F 110000      R     ACALL   L?0786
0092 FF                MOV     R7,A
0093 90000000    R     MOV     DPTR,#sosd_win
0097 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2314
0098 E4                CLR     A
0099 FD                MOV     R5,A
009A 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 2315
009D 90000000    R     MOV     DPTR,#sosd_win
00A1 E0                MOVX    A,@DPTR
00A2 FD                MOV     R5,A
00A3 FF                MOV     R7,A
00A4 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 2316
00A7 800E              SJMP    ?C0289
00A9         ?C0290:
                                           ; SOURCE LINE # 2317
                                           ; SOURCE LINE # 2318
00A9 90000000    R     MOV     DPTR,#i
00AD 110000      R     ACALL   L?0812
00B0 E0                MOVX    A,@DPTR
00B1 FD                MOV     R5,A
00B2 E4                CLR     A
00B3 FB                MOV     R3,A
00B4 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2319
                                           ; SOURCE LINE # 2323
00B7         ?C0289:
00B7 90000000    R     MOV     DPTR,#i
00BB E0                MOVX    A,@DPTR
00BC 04                INC     A
00BD F0                MOVX    @DPTR,A
00BE 808E              SJMP    ?C0287
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 208 

00C0         ?C0288:
                                           ; SOURCE LINE # 2324
00C0 90000000    R     MOV     DPTR,#index
00C4 E0                MOVX    A,@DPTR
00C5 B4030C            CJNE    A,#03H,?C0292
                                           ; SOURCE LINE # 2325
00C8 110000      R     ACALL   L?0776
00CB 110000      R     ACALL   L?0785
00CE FD                MOV     R5,A
00CF E4                CLR     A
00D0 FF                MOV     R7,A
00D1 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2326
00D4         ?C0292:
                                           ; SOURCE LINE # 2328
00D4 90000000    R     MOV     DPTR,#UseSOsdHwBuff
00D8 E0                MOVX    A,@DPTR
00D9 6008              JZ      ?C0293
                                           ; SOURCE LINE # 2329
00DB 7F01              MOV     R7,#01H
00DD 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 2330
00E0 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 2331
00E3         ?C0293:
                                           ; SOURCE LINE # 2333
00E3 7D02              MOV     R5,#02H
00E5 E4                CLR     A
00E6 FF                MOV     R7,A
00E7 110000      R     ACALL   _MenuFontOsdItemInitNew
                                           ; SOURCE LINE # 2334
00EA E4                CLR     A
00EB 90000000    R     MOV     DPTR,#i
00EF F0                MOVX    @DPTR,A
00F0         ?C0294:
                                           ; SOURCE LINE # 2335
00F0 90000000    R     MOV     DPTR,#i
00F4 110000      R     ACALL   L?0812
00F7 E0                MOVX    A,@DPTR
00F8 FD                MOV     R5,A
00F9 7C00              MOV     R4,#00H
00FB 110000      R     ACALL   _MenuDrawSlideCurrValue
                                           ; SOURCE LINE # 2337
00FE 90000000    R     MOV     DPTR,#i
0102 E0                MOVX    A,@DPTR
0103 04                INC     A
0104 F0                MOVX    @DPTR,A
0105 E0                MOVX    A,@DPTR
0106 C3                CLR     C
0107 9403              SUBB    A,#03H
0109 40E5              JC      ?C0294
                                           ; SOURCE LINE # 2346
010B         ?C0297:
010B 22                RET     
             ; FUNCTION proc_slider3_bg (END)

             ; FUNCTION proc_slider_ctrl (BEGIN)
                                           ; SOURCE LINE # 2356
                                           ; SOURCE LINE # 2357
                                           ; SOURCE LINE # 2359
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 209 

0006 6400        E     XRL     A,#MBYTE menu_slider_page
0008 700A              JNZ     ?C0691
000A 7400        E     MOV     A,#LOW menu_slider_page
000C 6582              XRL     A,DPL
000E 7004              JNZ     ?C0691
0010 7400        E     MOV     A,#HIGH menu_slider_page
0012 6583              XRL     A,DPH
0014         ?C0691:
0014 7015              JNZ     ?C0298
                                           ; SOURCE LINE # 2360
0016 110000      R     ACALL   L?0776
0019 110000      R     ACALL   L?0785
001C 6405              XRL     A,#05H
001E 704D              JNZ     ?C0300
                                           ; SOURCE LINE # 2361
0020 90000000    R     MOV     DPTR,#curr_slide_value
0024 E0                MOVX    A,@DPTR
0025 FD                MOV     R5,A
0026 E4                CLR     A
0027 FB                MOV     R3,A
0028 FF                MOV     R7,A
                                           ; SOURCE LINE # 2362
0029 803F              SJMP    ?C0752
002B         ?C0298:
                                           ; SOURCE LINE # 2363
                                           ; SOURCE LINE # 2364
002B 110000      R     ACALL   L?0776
002E 110000      R     ACALL   L?0785
0031 FF                MOV     R7,A
0032 B40508            CJNE    A,#05H,?C0301
0035 E4                CLR     A
0036 90000000    R     MOV     DPTR,#index
003A F0                MOVX    @DPTR,A
003B 801D              SJMP    ?C0302
003D         ?C0301:
                                           ; SOURCE LINE # 2365
003D EF                MOV     A,R7
003E B40709            CJNE    A,#07H,?C0303
0041 90000000    R     MOV     DPTR,#index
0045 7401              MOV     A,#01H
0047 F0                MOVX    @DPTR,A
0048 8010              SJMP    ?C0302
004A         ?C0303:
                                           ; SOURCE LINE # 2366
004A EF                MOV     A,R7
004B 90000000    R     MOV     DPTR,#index
004F B40905            CJNE    A,#09H,?C0305
0052 7402              MOV     A,#02H
0054 F0                MOVX    @DPTR,A
0055 8003              SJMP    ?C0302
0057         ?C0305:
                                           ; SOURCE LINE # 2367
0057 7403              MOV     A,#03H
0059 F0                MOVX    @DPTR,A
005A         ?C0302:
                                           ; SOURCE LINE # 2369
005A 90000000    R     MOV     DPTR,#index
005E E0                MOVX    A,@DPTR
005F 6403              XRL     A,#03H
0061 600A              JZ      ?C0300
                                           ; SOURCE LINE # 2370
0063 110000      R     ACALL   L?0812
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 210 

0066 E0                MOVX    A,@DPTR
0067 FD                MOV     R5,A
0068 E4                CLR     A
0069 FB                MOV     R3,A
006A         ?C0752:
006A 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2371
006D         ?C0300:
                                           ; SOURCE LINE # 2374
006D 110000      R     ACALL   L?0776
0070 110000      R     ACALL   L?0837
0073 6400        E     XRL     A,#MBYTE menu_slider3_page
0075 700A              JNZ     ?C0692
0077 7400        E     MOV     A,#LOW menu_slider3_page
0079 6582              XRL     A,DPL
007B 7004              JNZ     ?C0692
007D 7400        E     MOV     A,#HIGH menu_slider3_page
007F 6583              XRL     A,DPH
0081         ?C0692:
                                           ; SOURCE LINE # 2375
0081 110000      R     ACALL   L?0776
0084 110000      R     ACALL   L?0800
0087 7402              MOV     A,#02H
0089 110000      E     ACALL   ?C?CSTPTR
008C         ?C0309:
                                           ; SOURCE LINE # 2376
008C 110000      R     ACALL   L?0776
008F 110000      R     ACALL   L?0785
                                           ; SOURCE LINE # 2377
0092 110000      R     ACALL   L?1031
0095 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_slider_ctrl (END)

             ; FUNCTION proc_slider_ok (BEGIN)
                                           ; SOURCE LINE # 2387
                                           ; SOURCE LINE # 2388
                                           ; SOURCE LINE # 2389
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 2390
0005 E4                CLR     A
0006 FF                MOV     R7,A
0007 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 2392
000A 90000000    R     MOV     DPTR,#slide_title_img
000E 110000      R     ACALL   L?0777
0011 110000      R     ACALL   L?0837
0014 110000      R     ACALL   L?1099
0017 6400        E     XRL     A,#MBYTE img_slide_clock
0019 700A              JNZ     ?C0693
001B 7400        E     MOV     A,#LOW img_slide_clock
001D 6582              XRL     A,DPL
001F 7004              JNZ     ?C0693
0021 7400        E     MOV     A,#HIGH img_slide_clock
0023 6583              XRL     A,DPH
0025         ?C0693:
0025 7009              JNZ     ?C0311
                                           ; SOURCE LINE # 2394
0027 110000      R     ACALL   L?0974
002A 74F8              MOV     A,#0F8H
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2395
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 211 

002D E4                CLR     A
                                           ; SOURCE LINE # 2396
002E 801D              SJMP    ?C0753
0030         ?C0311:
                                           ; SOURCE LINE # 2397
0030 90000000    R     MOV     DPTR,#slide_title_img
0034 110000      R     ACALL   L?0777
0037 110000      R     ACALL   L?0837
003A 110000      R     ACALL   L?1101
003D 6400        E     XRL     A,#MBYTE img_slide_phase
003F 700A              JNZ     ?C0694
0041 7400        E     MOV     A,#LOW img_slide_phase
0043 6582              XRL     A,DPL
0045 7004              JNZ     ?C0694
0047 7400        E     MOV     A,#HIGH img_slide_phase
0049 6583              XRL     A,DPH
004B         ?C0694:
004B 7007              JNZ     ?C0312
                                           ; SOURCE LINE # 2398
004D         ?C0753:
004D FD                MOV     R5,A
004E FC                MOV     R4,A
004F 7F07              MOV     R7,#07H
0051 110000      E     ACALL   _aRGB_SetFilterBandwidth
                                           ; SOURCE LINE # 2399
0054         ?C0312:
                                           ; SOURCE LINE # 2403
0054 110000      R     ACALL   L?0776
0057 110000      R     ACALL   L?0837
005A 7900        E     MOV     R1,#LOW menu_slider3_page
005C 6400        E     XRL     A,#MBYTE menu_slider3_page
005E 700A              JNZ     ?C0695
0060 7400        E     MOV     A,#LOW menu_slider3_page
0062 6582              XRL     A,DPL
0064 7004              JNZ     ?C0695
0066 7400        E     MOV     A,#HIGH menu_slider3_page
0068 6583              XRL     A,DPH
006A         ?C0695:
006A 7035              JNZ     ?C0314
                                           ; SOURCE LINE # 2404
006C 90000000    R     MOV     DPTR,#curr_slide3_value
0070 110000      R     ACALL   L?1103
0073 110000      R     ACALL   L?0777
0076 110000      R     ACALL   L?0874
0079 E4                CLR     A
007A FF                MOV     R7,A
007B 110000      E     ACALL   ?C?ICALLX2
                                           ; SOURCE LINE # 2405
007E 90000000    R     MOV     DPTR,#curr_slide3_value+01H
0082 110000      R     ACALL   L?1103
0085 110000      R     ACALL   L?0777
0088 110000      R     ACALL   L?0874
008B 7F01              MOV     R7,#01H
008D 110000      E     ACALL   ?C?ICALLX2
                                           ; SOURCE LINE # 2406
0090 90000000    R     MOV     DPTR,#curr_slide3_value+02H
0094 110000      R     ACALL   L?1104
0097 110000      R     ACALL   L?0777
009A 110000      R     ACALL   L?0874
009D 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2407
009F 8010              SJMP    ?C0754
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 212 

00A1         ?C0314:
                                           ; SOURCE LINE # 2409
00A1 90000000    R     MOV     DPTR,#curr_slide_value
00A5 E0                MOVX    A,@DPTR
00A6 FF                MOV     R7,A
00A7 90000000    R     MOV     DPTR,#_SaveSlideValue
00AB 110000      R     ACALL   L?0777
00AE 110000      R     ACALL   L?0874
00B1         ?C0754:
00B1 110000      E     ACALL   ?C?ICALLX2
00B4         ?C0315:
                                           ; SOURCE LINE # 2411
00B4 7F01              MOV     R7,#01H
00B6 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 2414
00B9 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 2415
00BC 110000      R     ACALL   L?0776
00BF 110000      R     ACALL   L?0837
00C2 110000      R     ACALL   L?0990
00C5 700A              JNZ     ?C0696
00C7 7400        E     MOV     A,#LOW menu_slider3_page
00C9 6582              XRL     A,DPL
00CB 7004              JNZ     ?C0696
00CD 7400        E     MOV     A,#HIGH menu_slider3_page
00CF 6583              XRL     A,DPH
00D1         ?C0696:
00D1 7004              JNZ     ?C0316
                                           ; SOURCE LINE # 2417
00D3 FF                MOV     R7,A
00D4 110000      E     ACALL   _FOsdSetDefPaletteColor
00D7         ?C0316:
                                           ; SOURCE LINE # 2419
00D7 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2422
00DA 110000      R     ACALL   L?0776
00DD 110000      R     ACALL   L?0779
00E0 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_slider_ok (END)

             ; FUNCTION proc_slider_undo (BEGIN)
                                           ; SOURCE LINE # 2424
                                           ; SOURCE LINE # 2425
                                           ; SOURCE LINE # 2427
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 7900        E     MOV     R1,#LOW menu_slider3_page
0008 6400        E     XRL     A,#MBYTE menu_slider3_page
000A 700A              JNZ     ?C0697
000C 7400        E     MOV     A,#LOW menu_slider3_page
000E 6582              XRL     A,DPL
0010 7004              JNZ     ?C0697
0012 7400        E     MOV     A,#HIGH menu_slider3_page
0014 6583              XRL     A,DPH
0016         ?C0697:
0016 90000000    R     MOV     DPTR,#last_slide3_value
001A 7031              JNZ     ?C0318
                                           ; SOURCE LINE # 2428
001C 110000      R     ACALL   L?1043
001F 110000      R     ACALL   L?0777
0022 110000      R     ACALL   L?0874
0025 E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 213 

0026 FF                MOV     R7,A
0027 110000      E     ACALL   ?C?ICALLX2
                                           ; SOURCE LINE # 2429
002A 90000000    R     MOV     DPTR,#last_slide3_value+01H
002E 110000      R     ACALL   L?1044
0031 110000      R     ACALL   L?0777
0034 110000      R     ACALL   L?0874
0037 7F01              MOV     R7,#01H
0039 110000      E     ACALL   ?C?ICALLX2
                                           ; SOURCE LINE # 2430
003C 90000000    R     MOV     DPTR,#last_slide3_value+02H
0040 110000      R     ACALL   L?1044
0043 110000      R     ACALL   L?0777
0046 110000      R     ACALL   L?0874
0049 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2431
004B 800C              SJMP    ?C0755
004D         ?C0318:
                                           ; SOURCE LINE # 2432
                                           ; SOURCE LINE # 2434
004D E0                MOVX    A,@DPTR
004E FF                MOV     R7,A
004F 90000000    R     MOV     DPTR,#_SetSlideValue
0053 110000      R     ACALL   L?0777
0056 110000      R     ACALL   L?0874
0059         ?C0755:
0059 110000      E     ACALL   ?C?ICALLX2
                                           ; SOURCE LINE # 2435
005C         ?C0319:
                                           ; SOURCE LINE # 2437
005C 90000000    R     MOV     DPTR,#slide_title_img
0060 110000      R     ACALL   L?0777
0063 110000      R     ACALL   L?0837
0066 110000      R     ACALL   L?1099
0069 6400        E     XRL     A,#MBYTE img_slide_clock
006B 700A              JNZ     ?C0698
006D 7400        E     MOV     A,#LOW img_slide_clock
006F 6582              XRL     A,DPL
0071 7004              JNZ     ?C0698
0073 7400        E     MOV     A,#HIGH img_slide_clock
0075 6583              XRL     A,DPH
0077         ?C0698:
0077 7009              JNZ     ?C0320
                                           ; SOURCE LINE # 2438
0079 110000      R     ACALL   L?0974
007C 74F8              MOV     A,#0F8H
007E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2439
007F E4                CLR     A
                                           ; SOURCE LINE # 2441
0080 801D              SJMP    ?C0756
0082         ?C0320:
                                           ; SOURCE LINE # 2442
0082 90000000    R     MOV     DPTR,#slide_title_img
0086 110000      R     ACALL   L?0777
0089 110000      R     ACALL   L?0837
008C 110000      R     ACALL   L?1101
008F 6400        E     XRL     A,#MBYTE img_slide_phase
0091 700A              JNZ     ?C0699
0093 7400        E     MOV     A,#LOW img_slide_phase
0095 6582              XRL     A,DPL
0097 7004              JNZ     ?C0699
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 214 

0099 7400        E     MOV     A,#HIGH img_slide_phase
009B 6583              XRL     A,DPH
009D         ?C0699:
009D 7007              JNZ     ?C0321
                                           ; SOURCE LINE # 2443
009F         ?C0756:
009F FD                MOV     R5,A
00A0 FC                MOV     R4,A
00A1 7F07              MOV     R7,#07H
00A3 110000      E     ACALL   _aRGB_SetFilterBandwidth
                                           ; SOURCE LINE # 2444
00A6         ?C0321:
                                           ; SOURCE LINE # 2447
00A6 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 2448
00A9 110000      R     ACALL   L?0776
00AC 110000      R     ACALL   L?0837
00AF 110000      R     ACALL   L?0991
00B2 700A              JNZ     ?C0700
00B4 7400        E     MOV     A,#LOW menu_slider3_page
00B6 6582              XRL     A,DPL
00B8 7004              JNZ     ?C0700
00BA 7400        E     MOV     A,#HIGH menu_slider3_page
00BC 6583              XRL     A,DPH
00BE         ?C0700:
00BE 7004              JNZ     ?C0323
                                           ; SOURCE LINE # 2450
00C0 FF                MOV     R7,A
00C1 110000      E     ACALL   _FOsdSetDefPaletteColor
00C4         ?C0323:
                                           ; SOURCE LINE # 2452
00C4 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2454
00C7 110000      R     ACALL   L?0776
00CA 110000      R     ACALL   L?0779
00CD 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_slider_undo (END)

             ; FUNCTION proc_slider_left (BEGIN)
                                           ; SOURCE LINE # 2464
                                           ; SOURCE LINE # 2465
                                           ; SOURCE LINE # 2487
0000 90000000    R     MOV     DPTR,#curr_slide_value
0004 E0                MOVX    A,@DPTR
0005 601F              JZ      ?C0326
                                           ; SOURCE LINE # 2488
0007 14                DEC     A
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2489
0009 E0                MOVX    A,@DPTR
000A FF                MOV     R7,A
000B 90000000    R     MOV     DPTR,#_VarySlideValue
000F 110000      R     ACALL   L?0777
0012 110000      R     ACALL   L?0874
0015 110000      R     ACALL   L?0995
0018 FD                MOV     R5,A
                                           ; SOURCE LINE # 2494
0019 7B01              MOV     R3,#01H
001B E4                CLR     A
001C FF                MOV     R7,A
001D 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2495
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 215 

0020 110000      R     ACALL   L?0903
0023 110000      R     ACALL   _MenuDrawSlideCurrValue
                                           ; SOURCE LINE # 2496
                                           ; SOURCE LINE # 2497
0026         ?C0326:
0026 22                RET     
             ; FUNCTION proc_slider_left (END)

             ; FUNCTION proc_slider3_left (BEGIN)
                                           ; SOURCE LINE # 2499
                                           ; SOURCE LINE # 2500
                                           ; SOURCE LINE # 2503
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0785
0006 FF                MOV     R7,A
0007 B40502            CJNE    A,#05H,?C0327
000A 801A              SJMP    ?C0757
000C         ?C0327:
                                           ; SOURCE LINE # 2504
000C EF                MOV     A,R7
000D B40709            CJNE    A,#07H,?C0329
0010 90000000    R     MOV     DPTR,#index
0014 7401              MOV     A,#01H
0016 F0                MOVX    @DPTR,A
0017 8013              SJMP    ?C0328
0019         ?C0329:
                                           ; SOURCE LINE # 2505
0019 EF                MOV     A,R7
001A B40909            CJNE    A,#09H,?C0331
001D 90000000    R     MOV     DPTR,#index
0021 7402              MOV     A,#02H
0023 F0                MOVX    @DPTR,A
0024 8006              SJMP    ?C0328
0026         ?C0331:
                                           ; SOURCE LINE # 2506
0026         ?C0757:
0026 E4                CLR     A
0027 90000000    R     MOV     DPTR,#index
002B F0                MOVX    @DPTR,A
002C         ?C0328:
                                           ; SOURCE LINE # 2509
002C 90000000    R     MOV     DPTR,#index
0030 E0                MOVX    A,@DPTR
0031 FE                MOV     R6,A
0032 110000      R     ACALL   L?0813
0035 E0                MOVX    A,@DPTR
0036 6039              JZ      ?C0334
                                           ; SOURCE LINE # 2510
0038 110000      R     ACALL   L?0810
003B E0                MOVX    A,@DPTR
003C 14                DEC     A
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2511
003E 7400        R     MOV     A,#LOW curr_slide3_value
0040 2E                ADD     A,R6
0041 110000      R     ACALL   L?0814
0044 E0                MOVX    A,@DPTR
0045 FD                MOV     R5,A
0046 90000000    R     MOV     DPTR,#_VarySlide3Value
004A 110000      R     ACALL   L?0777
004D 110000      R     ACALL   L?0874
0050 110000      E     ACALL   ?C?ICALLX2
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 216 

0053 AE07              MOV     R6,AR7
0055 110000      R     ACALL   L?0810
0058 EE                MOV     A,R6
0059 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2514
005A 7400        R     MOV     A,#LOW curr_slide3_value
005C 2F                ADD     A,R7
005D 110000      R     ACALL   L?0814
0060 E0                MOVX    A,@DPTR
0061 FD                MOV     R5,A
0062 7B01              MOV     R3,#01H
0064 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2515
0067 110000      R     ACALL   L?0811
006A E0                MOVX    A,@DPTR
006B FD                MOV     R5,A
006C 7C00              MOV     R4,#00H
006E 110000      R     ACALL   _MenuDrawSlideCurrValue
                                           ; SOURCE LINE # 2516
                                           ; SOURCE LINE # 2517
0071         ?C0334:
0071 22                RET     
             ; FUNCTION proc_slider3_left (END)

             ; FUNCTION proc_slider_left_tsc (BEGIN)
                                           ; SOURCE LINE # 2518
                                           ; SOURCE LINE # 2519
                                           ; SOURCE LINE # 2520
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 6400        E     XRL     A,#MBYTE menu_slider3_page
0008 700A              JNZ     ?C0701
000A 7400        E     MOV     A,#LOW menu_slider3_page
000C 6582              XRL     A,DPL
000E 7004              JNZ     ?C0701
0010 7400        E     MOV     A,#HIGH menu_slider3_page
0012 6583              XRL     A,DPH
0014         ?C0701:
0014 90000000    R     MOV     DPTR,#curr_menu
0018 7020              JNZ     ?C0335
                                           ; SOURCE LINE # 2522
001A 110000      R     ACALL   L?0777
001D 110000      R     ACALL   L?0785
0020 FF                MOV     R7,A
0021 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 2524
0024 110000      R     ACALL   L?0776
0027 2402              ADD     A,#02H
0029 110000      R     ACALL   L?0786
002C FF                MOV     R7,A
002D 110000      R     ACALL   L?0789
0030 110000      R     ACALL   L?0800
0033 EF                MOV     A,R7
                                           ; SOURCE LINE # 2525
0034 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 2527
0037 010000      R     AJMP    proc_slider3_left
                                           ; SOURCE LINE # 2528
003A         ?C0335:
                                           ; SOURCE LINE # 2529
                                           ; SOURCE LINE # 2531
003A 110000      R     ACALL   L?0777
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 217 

003D 110000      R     ACALL   L?0785
0040 FF                MOV     R7,A
0041 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 2533
0044 110000      R     ACALL   L?0776
0047 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 2534
004A 110000      R     ACALL   L?0838
                                           ; SOURCE LINE # 2536
004D 110000      R     ACALL   proc_slider_left
                                           ; SOURCE LINE # 2537
                                           ; SOURCE LINE # 2538
0050         ?C0337:
0050 22                RET     
             ; FUNCTION proc_slider_left_tsc (END)

             ; FUNCTION proc_slider_right (BEGIN)
                                           ; SOURCE LINE # 2549
                                           ; SOURCE LINE # 2550
                                           ; SOURCE LINE # 2564
0000 90000000    R     MOV     DPTR,#curr_slide_value
0004 E0                MOVX    A,@DPTR
0005 C3                CLR     C
0006 9464              SUBB    A,#064H
0008 5020              JNC     ?C0339
                                           ; SOURCE LINE # 2565
000A E0                MOVX    A,@DPTR
000B 04                INC     A
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2566
000D E0                MOVX    A,@DPTR
000E FF                MOV     R7,A
000F 90000000    R     MOV     DPTR,#_VarySlideValue
0013 110000      R     ACALL   L?0777
0016 110000      R     ACALL   L?0874
0019 110000      R     ACALL   L?0996
001C FD                MOV     R5,A
                                           ; SOURCE LINE # 2569
001D 7B01              MOV     R3,#01H
001F E4                CLR     A
0020 FF                MOV     R7,A
0021 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2570
0024 110000      R     ACALL   L?0903
0027 110000      R     ACALL   _MenuDrawSlideCurrValue
                                           ; SOURCE LINE # 2571
                                           ; SOURCE LINE # 2572
002A         ?C0339:
002A 22                RET     
             ; FUNCTION proc_slider_right (END)

             ; FUNCTION proc_slider3_right (BEGIN)
                                           ; SOURCE LINE # 2573
                                           ; SOURCE LINE # 2574
                                           ; SOURCE LINE # 2577
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0785
0006 FF                MOV     R7,A
0007 B40508            CJNE    A,#05H,?C0340
000A E4                CLR     A
000B 90000000    R     MOV     DPTR,#index
000F F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 218 

0010 8019              SJMP    ?C0341
0012         ?C0340:
                                           ; SOURCE LINE # 2578
0012 EF                MOV     A,R7
0013 B40709            CJNE    A,#07H,?C0342
0016 90000000    R     MOV     DPTR,#index
001A 7401              MOV     A,#01H
001C F0                MOVX    @DPTR,A
001D 800C              SJMP    ?C0341
001F         ?C0342:
                                           ; SOURCE LINE # 2579
001F EF                MOV     A,R7
0020 6409              XRL     A,#09H
0022 705B              JNZ     ?C0346
0024 90000000    R     MOV     DPTR,#index
0028 7402              MOV     A,#02H
002A F0                MOVX    @DPTR,A
002B         ?C0341:
                                           ; SOURCE LINE # 2582
002B 90000000    R     MOV     DPTR,#index
002F E0                MOVX    A,@DPTR
0030 FE                MOV     R6,A
0031 110000      R     ACALL   L?0813
0034 E0                MOVX    A,@DPTR
0035 C3                CLR     C
0036 9464              SUBB    A,#064H
0038 5045              JNC     ?C0346
                                           ; SOURCE LINE # 2583
003A 90000000    R     MOV     DPTR,#index
003E 110000      R     ACALL   L?0812
0041 E0                MOVX    A,@DPTR
0042 04                INC     A
0043 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2584
0044 7400        R     MOV     A,#LOW curr_slide3_value
0046 2E                ADD     A,R6
0047 110000      R     ACALL   L?0814
004A E0                MOVX    A,@DPTR
004B FD                MOV     R5,A
004C 90000000    R     MOV     DPTR,#_VarySlide3Value
0050 110000      R     ACALL   L?0777
0053 110000      R     ACALL   L?0874
0056 110000      E     ACALL   ?C?ICALLX2
0059 AE07              MOV     R6,AR7
005B 90000000    R     MOV     DPTR,#index
005F 110000      R     ACALL   L?0812
0062 EE                MOV     A,R6
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2587
0064 7400        R     MOV     A,#LOW curr_slide3_value
0066 2F                ADD     A,R7
0067 110000      R     ACALL   L?0814
006A E0                MOVX    A,@DPTR
006B FD                MOV     R5,A
006C 7B01              MOV     R3,#01H
006E 110000      R     ACALL   _MenuDrawSlideNeedleImageXY
                                           ; SOURCE LINE # 2588
0071 90000000    R     MOV     DPTR,#index
0075 110000      R     ACALL   L?0812
0078 E0                MOVX    A,@DPTR
0079 FD                MOV     R5,A
007A 7C00              MOV     R4,#00H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 219 

007C 110000      R     ACALL   _MenuDrawSlideCurrValue
                                           ; SOURCE LINE # 2589
                                           ; SOURCE LINE # 2590
007F         ?C0346:
007F 22                RET     
             ; FUNCTION proc_slider3_right (END)

             ; FUNCTION proc_slider_right_tsc (BEGIN)
                                           ; SOURCE LINE # 2591
                                           ; SOURCE LINE # 2592
                                           ; SOURCE LINE # 2593
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 6400        E     XRL     A,#MBYTE menu_slider3_page
0008 700A              JNZ     ?C0702
000A 7400        E     MOV     A,#LOW menu_slider3_page
000C 6582              XRL     A,DPL
000E 7004              JNZ     ?C0702
0010 7400        E     MOV     A,#HIGH menu_slider3_page
0012 6583              XRL     A,DPH
0014         ?C0702:
0014 90000000    R     MOV     DPTR,#curr_menu
0018 7020              JNZ     ?C0348
                                           ; SOURCE LINE # 2595
001A 110000      R     ACALL   L?0777
001D 110000      R     ACALL   L?0785
0020 FF                MOV     R7,A
0021 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 2597
0024 110000      R     ACALL   L?0776
0027 2402              ADD     A,#02H
0029 110000      R     ACALL   L?0786
002C FF                MOV     R7,A
002D 110000      R     ACALL   L?0789
0030 110000      R     ACALL   L?0800
0033 EF                MOV     A,R7
                                           ; SOURCE LINE # 2598
0034 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 2600
0037 010000      R     AJMP    proc_slider3_right
                                           ; SOURCE LINE # 2601
003A         ?C0348:
                                           ; SOURCE LINE # 2602
                                           ; SOURCE LINE # 2604
003A 110000      R     ACALL   L?0777
003D 110000      R     ACALL   L?0785
0040 FF                MOV     R7,A
0041 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 2606
0044 110000      R     ACALL   L?0776
0047 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 2607
004A 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 2609
004D 110000      R     ACALL   proc_slider_right
                                           ; SOURCE LINE # 2610
                                           ; SOURCE LINE # 2611
0050         ?C0350:
0050 22                RET     
             ; FUNCTION proc_slider_right_tsc (END)

             ; FUNCTION MenuIsSlideMode (BEGIN)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 220 

                                           ; SOURCE LINE # 2634
                                           ; SOURCE LINE # 2635
                                           ; SOURCE LINE # 2636
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 6400        E     XRL     A,#MBYTE menu_slider3_page
0008 700A              JNZ     ?C0703
000A 7400        E     MOV     A,#LOW menu_slider3_page
000C 6582              XRL     A,DPL
000E 7004              JNZ     ?C0703
0010 7400        E     MOV     A,#HIGH menu_slider3_page
0012 6583              XRL     A,DPH
0014         ?C0703:
0014 7003              JNZ     ?C0351
                                           ; SOURCE LINE # 2637
0016 7F03              MOV     R7,#03H
0018 22                RET     
                                           ; SOURCE LINE # 2638
0019         ?C0351:
                                           ; SOURCE LINE # 2639
0019 110000      R     ACALL   L?0776
001C 110000      R     ACALL   L?0837
001F 6400        E     XRL     A,#MBYTE menu_slider_page
0021 700A              JNZ     ?C0704
0023 7400        E     MOV     A,#LOW menu_slider_page
0025 6582              XRL     A,DPL
0027 7004              JNZ     ?C0704
0029 7400        E     MOV     A,#HIGH menu_slider_page
002B 6583              XRL     A,DPH
002D         ?C0704:
002D 7F00              MOV     R7,#00H
002F 7002              JNZ     ?C0353
                                           ; SOURCE LINE # 2640
0031 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2641
0033         ?C0353:
                                           ; SOURCE LINE # 2643
                                           ; SOURCE LINE # 2644
0033         ?C0352:
0033 22                RET     
             ; FUNCTION MenuIsSlideMode (END)

             ; FUNCTION proc_position_bg (BEGIN)
                                           ; SOURCE LINE # 2665
                                           ; SOURCE LINE # 2666
                                           ; SOURCE LINE # 2668
0000 110000      R     ACALL   proc_menu_bg
                                           ; SOURCE LINE # 2678
0003 E4                CLR     A
0004 FD                MOV     R5,A
0005 FF                MOV     R7,A
0006 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 2679
0009 E4                CLR     A
000A FD                MOV     R5,A
000B 7F01              MOV     R7,#01H
000D 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 2680
0010 110000      R     ACALL   proc_position_H_digit
                                           ; SOURCE LINE # 2681
0013 010000      R     AJMP    proc_position_V_digit
             ; FUNCTION proc_position_bg (END)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 221 


             ; FUNCTION proc_position_box (BEGIN)
                                           ; SOURCE LINE # 2683
                                           ; SOURCE LINE # 2684
                                           ; SOURCE LINE # 2686
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0800
0006 7401              MOV     A,#01H
0008 110000      E     ACALL   ?C?CSTPTR
000B 110000      R     ACALL   L?0776
000E 110000      R     ACALL   L?0843
0011 7401              MOV     A,#01H
0013 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 2687
0016 110000      R     ACALL   L?0776
0019 110000      R     ACALL   L?0785
001C 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0020 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2688
0021 110000      R     ACALL   L?0789
0024 2402              ADD     A,#02H
0026 110000      R     ACALL   L?0786
0029 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2690
002E E4                CLR     A
002F FD                MOV     R5,A
0030 FF                MOV     R7,A
0031 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2691
0034 7D04              MOV     R5,#04H
0036 E4                CLR     A
0037 FF                MOV     R7,A
0038 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2692
003B 110000      R     ACALL   L?0776
003E 110000      R     ACALL   L?0785
0041 FD                MOV     R5,A
0042 E4                CLR     A
0043 FF                MOV     R7,A
0044 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_position_box (END)

             ; FUNCTION proc_position_ok (BEGIN)
                                           ; SOURCE LINE # 2694
                                           ; SOURCE LINE # 2695
                                           ; SOURCE LINE # 2699
0000 110000      E     ACALL   ChangeRGBPosH
                                           ; SOURCE LINE # 2700
0003 110000      E     ACALL   ChangeRGBPosV
                                           ; SOURCE LINE # 2706
0006 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 2708
0009 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2710
000C 110000      R     ACALL   L?0776
000F 110000      R     ACALL   L?0779
0012 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_position_ok (END)

             ; FUNCTION proc_position_undo (BEGIN)
                                           ; SOURCE LINE # 2712
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 222 

                                           ; SOURCE LINE # 2713
                                           ; SOURCE LINE # 2719
0000 110000      E     ACALL   PCRestoreH
                                           ; SOURCE LINE # 2720
0003 110000      E     ACALL   PCRestoreV
                                           ; SOURCE LINE # 2723
0006 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 2725
0009 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2727
000C 110000      R     ACALL   L?0776
000F 110000      R     ACALL   L?0779
0012 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_position_undo (END)

             ; FUNCTION _proc_position_tsc (BEGIN)
                                           ; SOURCE LINE # 2742
0000 90000000    R     MOV     DPTR,#key
0004 EF                MOV     A,R7
                                           ; SOURCE LINE # 2743
                                           ; SOURCE LINE # 2744
0005 110000      R     ACALL   L?0775
0008 110000      R     ACALL   L?0785
000B FF                MOV     R7,A
000C 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 2745
000F 110000      R     ACALL   L?0776
0012 110000      R     ACALL   L?0800
0015 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2746
                                           ; SOURCE LINE # 2747
0017 110000      R     ACALL   L?0773
001A 2402              ADD     A,#02H
001C 110000      R     ACALL   L?0786
001F 6403              XRL     A,#03H
0021 601C              JZ      ?C0358
                                           ; SOURCE LINE # 2748
0023 7F04              MOV     R7,#04H
0025 110000      R     ACALL   _MenuTurnOffCurrImage
                                           ; SOURCE LINE # 2749
0028 110000      R     ACALL   L?0776
002B 110000      R     ACALL   L?0843
002E 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2750
0030 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 2751
0033 110000      R     ACALL   L?0775
0036 110000      R     ACALL   L?0785
0039 FD                MOV     R5,A
003A E4                CLR     A
003B FF                MOV     R7,A
003C 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 2752
003F         ?C0358:
                                           ; SOURCE LINE # 2753
003F 90000000    R     MOV     DPTR,#key
0043 E0                MOVX    A,@DPTR
0044 FF                MOV     R7,A
0045 010000      R     AJMP    _MenuKeyInput_position_page
             ; FUNCTION _proc_position_tsc (END)

             ; FUNCTION proc_position_left_tsc (BEGIN)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 223 

                                           ; SOURCE LINE # 2756
                                           ; SOURCE LINE # 2757
                                           ; SOURCE LINE # 2758
0000 7F04              MOV     R7,#04H
0002 010000      R     AJMP    _proc_position_tsc
             ; FUNCTION proc_position_left_tsc (END)

             ; FUNCTION proc_position_right_tsc (BEGIN)
                                           ; SOURCE LINE # 2760
                                           ; SOURCE LINE # 2761
                                           ; SOURCE LINE # 2762
0000 7F05              MOV     R7,#05H
0002 010000      R     AJMP    _proc_position_tsc
             ; FUNCTION proc_position_right_tsc (END)

             ; FUNCTION proc_position_up_tsc (BEGIN)
                                           ; SOURCE LINE # 2764
                                           ; SOURCE LINE # 2765
                                           ; SOURCE LINE # 2766
0000 7F02              MOV     R7,#02H
0002 010000      R     AJMP    _proc_position_tsc
             ; FUNCTION proc_position_up_tsc (END)

             ; FUNCTION proc_position_down_tsc (BEGIN)
                                           ; SOURCE LINE # 2768
                                           ; SOURCE LINE # 2769
                                           ; SOURCE LINE # 2770
0000 7F03              MOV     R7,#03H
0002 010000      R     AJMP    _proc_position_tsc
             ; FUNCTION proc_position_down_tsc (END)

             ; FUNCTION proc_position_H_digit (BEGIN)
                                           ; SOURCE LINE # 2773
                                           ; SOURCE LINE # 2774
                                           ; SOURCE LINE # 2777
0000 110000      E     ACALL   GetRGBPosH
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2780
0003 EF                MOV     A,R7
0004 FD                MOV     R5,A
0005 7C00              MOV     R4,#00H
0007 E4                CLR     A
0008 FF                MOV     R7,A
0009 010000      R     AJMP    _MenuDrawSlideCurrValue
             ; FUNCTION proc_position_H_digit (END)

             ; FUNCTION proc_position_V_digit (BEGIN)
                                           ; SOURCE LINE # 2787
                                           ; SOURCE LINE # 2788
                                           ; SOURCE LINE # 2791
0000 110000      E     ACALL   GetRGBPosV
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2793
0003 EF                MOV     A,R7
0004 FD                MOV     R5,A
0005 7C00              MOV     R4,#00H
0007 7F01              MOV     R7,#01H
0009 010000      R     AJMP    _MenuDrawSlideCurrValue
             ; FUNCTION proc_position_V_digit (END)

             ; FUNCTION proc_autoadj_bg (BEGIN)
                                           ; SOURCE LINE # 2820
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 224 

                                           ; SOURCE LINE # 2821
                                           ; SOURCE LINE # 2823
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_autoadj_bg (END)

             ; FUNCTION proc_autoadj_ok (BEGIN)
                                           ; SOURCE LINE # 2829
                                           ; SOURCE LINE # 2830
                                           ; SOURCE LINE # 2833
0000 110000      E     ACALL   PCResetCurrEEPROMMode
                                           ; SOURCE LINE # 2836
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0800
0009 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2837
                                           ; SOURCE LINE # 2838
000B 110000      R     ACALL   L?0773
000E 2405              ADD     A,#05H
0010 110000      R     ACALL   L?0781
0013 E9                MOV     A,R1
0014 2446              ADD     A,#046H
0016 110000      R     ACALL   L?0781
0019 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 2842
001C 110000      E     ACALL   CheckAndSetPC
                                           ; SOURCE LINE # 2846
001F 7F01              MOV     R7,#01H
0021 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 2847
0024 E4                CLR     A
0025 FD                MOV     R5,A
0026 FF                MOV     R7,A
0027 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 2848
002A E4                CLR     A
002B FD                MOV     R5,A
002C FF                MOV     R7,A
002D 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 2851
0030 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2853
0033 110000      R     ACALL   L?0776
0036 110000      R     ACALL   L?0779
0039 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_autoadj_ok (END)

             ; FUNCTION proc_autoadj_cancel (BEGIN)
                                           ; SOURCE LINE # 2855
                                           ; SOURCE LINE # 2856
                                           ; SOURCE LINE # 2857
0000 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2859
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0779
0009 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_autoadj_cancel (END)

             ; FUNCTION proc_autocolor_bg (BEGIN)
                                           ; SOURCE LINE # 2862
                                           ; SOURCE LINE # 2863
                                           ; SOURCE LINE # 2864
0000 010000      R     AJMP    proc_menu_bg
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 225 

             ; FUNCTION proc_autocolor_bg (END)

             ; FUNCTION proc_autocolor_ok (BEGIN)
                                           ; SOURCE LINE # 2866
                                           ; SOURCE LINE # 2867
                                           ; SOURCE LINE # 2869
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0800
0006 7403              MOV     A,#03H
                                           ; SOURCE LINE # 2870
                                           ; SOURCE LINE # 2871
0008 110000      R     ACALL   L?0773
000B 2405              ADD     A,#05H
000D 110000      R     ACALL   L?0781
0010 E9                MOV     A,R1
0011 2446              ADD     A,#046H
0013 110000      R     ACALL   L?0781
0016 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 2875
0019 110000      E     ACALL   AutoTuneColor
                                           ; SOURCE LINE # 2879
001C 7F01              MOV     R7,#01H
001E 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 2880
0021 E4                CLR     A
0022 FD                MOV     R5,A
0023 FF                MOV     R7,A
0024 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 2881
0027 E4                CLR     A
0028 FD                MOV     R5,A
0029 FF                MOV     R7,A
002A 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 2885
002D 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2887
0030 110000      R     ACALL   L?0776
0033 110000      R     ACALL   L?0779
0036 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_autocolor_ok (END)

             ; FUNCTION proc_autocolor_cancel (BEGIN)
                                           ; SOURCE LINE # 2889
                                           ; SOURCE LINE # 2890
                                           ; SOURCE LINE # 2891
0000 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2893
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0779
0009 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_autocolor_cancel (END)

             ; FUNCTION proc_restore_bg (BEGIN)
                                           ; SOURCE LINE # 2910
                                           ; SOURCE LINE # 2911
                                           ; SOURCE LINE # 2912
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_restore_bg (END)

             ; FUNCTION proc_restore_ok (BEGIN)
                                           ; SOURCE LINE # 2915
                                           ; SOURCE LINE # 2916
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 226 

                                           ; SOURCE LINE # 2920
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0900
                                           ; SOURCE LINE # 2923
0006 110000      E     ACALL   ClearBasicEE
                                           ; SOURCE LINE # 2929
0009 110000      R     ACALL   L?1015
000C 110000      E     ACALL   _SaveInputMainEE
                                           ; SOURCE LINE # 2935
000F 110000      R     ACALL   L?1015
0012 110000      E     ACALL   _SetImage
                                           ; SOURCE LINE # 2937
0015 110000      E     ACALL   GetAspectModeEE
0018 110000      E     ACALL   _SetAspectHW
                                           ; SOURCE LINE # 2938
001B 7FA3              MOV     R7,#0A3H
001D 7E00              MOV     R6,#00H
001F 110000      E     ACALL   _E3P_Read
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2939
0022 EF                MOV     A,R7
0023 6007              JZ      ?C0373
                                           ; SOURCE LINE # 2940
0025 110000      R     ACALL   L?0847
0028 E0                MOVX    A,@DPTR
0029 4480              ORL     A,#080H
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2941
002C         ?C0373:
                                           ; SOURCE LINE # 2942
002C 7FA2              MOV     R7,#0A2H
002E 7E00              MOV     R6,#00H
0030 110000      E     ACALL   _E3P_Read
0033 110000      E     ACALL   _OsdSetTime
                                           ; SOURCE LINE # 2943
0036 7FA1              MOV     R7,#0A1H
0038 7E00              MOV     R6,#00H
003A 110000      E     ACALL   _E3P_Read
003D 110000      E     ACALL   _OsdSetTransparent
                                           ; SOURCE LINE # 2944
0040 7FA4              MOV     R7,#0A4H
0042 7E00              MOV     R6,#00H
0044 110000      E     ACALL   _E3P_Read
0047 110000      E     ACALL   _BackLightSetRate
                                           ; SOURCE LINE # 2946
004A 110000      E     ACALL   ReadCalibDataFromEE
                                           ; SOURCE LINE # 2949
004D 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2951
0050 110000      R     ACALL   L?0776
0053 110000      R     ACALL   L?0779
0056 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_restore_ok (END)

             ; FUNCTION proc_restore_undo (BEGIN)
                                           ; SOURCE LINE # 2953
                                           ; SOURCE LINE # 2954
                                           ; SOURCE LINE # 2955
0000 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2957
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0779
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 227 

0009 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_restore_undo (END)

             ; FUNCTION proc_info_bg (BEGIN)
                                           ; SOURCE LINE # 2975
                                           ; SOURCE LINE # 2976
                                           ; SOURCE LINE # 2978
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_info_bg (END)

             ; FUNCTION proc_info_ok (BEGIN)
                                           ; SOURCE LINE # 2988
                                           ; SOURCE LINE # 2989
                                           ; SOURCE LINE # 2991
0000 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 2993
0003 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 2995
0006 110000      R     ACALL   L?0776
0009 110000      R     ACALL   L?0779
000C 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_info_ok (END)

             ; FUNCTION proc_flip_bg (BEGIN)
                                           ; SOURCE LINE # 3013
                                           ; SOURCE LINE # 3014
                                           ; SOURCE LINE # 3015
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_flip_bg (END)

             ; FUNCTION proc_flip_ok (BEGIN)
                                           ; SOURCE LINE # 3017
                                           ; SOURCE LINE # 3018
                                           ; SOURCE LINE # 3021
0000 110000      R     ACALL   L?0847
0003 E0                MOVX    A,@DPTR
0004 90000000    R     MOV     DPTR,#value
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3022
0009 E0                MOVX    A,@DPTR
000A 30E70E            JNB     ACC.7,?C0379
                                           ; SOURCE LINE # 3023
000D 547F              ANL     A,#07FH
000F 110000      R     ACALL   L?0846
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3024
0014 E4                CLR     A
0015 FD                MOV     R5,A
0016 7FA3              MOV     R7,#0A3H
0018 FE                MOV     R6,A
                                           ; SOURCE LINE # 3025
0019 8012              SJMP    ?C0758
001B         ?C0379:
                                           ; SOURCE LINE # 3026
                                           ; SOURCE LINE # 3027
001B 90000000    R     MOV     DPTR,#value
001F E0                MOVX    A,@DPTR
0020 4480              ORL     A,#080H
0022 110000      R     ACALL   L?0846
0025 EF                MOV     A,R7
0026 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 228 

                                           ; SOURCE LINE # 3028
0027 7D01              MOV     R5,#01H
0029 7FA3              MOV     R7,#0A3H
002B 7E00              MOV     R6,#00H
002D         ?C0758:
002D 110000      E     ACALL   _E3P_Write
                                           ; SOURCE LINE # 3029
0030         ?C0380:
                                           ; SOURCE LINE # 3030
0030 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 3032
0033 110000      R     ACALL   L?0776
0036 110000      R     ACALL   L?0779
0039 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_flip_ok (END)

             ; FUNCTION proc_flip_undo (BEGIN)
                                           ; SOURCE LINE # 3034
                                           ; SOURCE LINE # 3035
                                           ; SOURCE LINE # 3036
0000 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 3038
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0779
0009 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_flip_undo (END)

             ; FUNCTION proc_disp_resolution_bg (BEGIN)
                                           ; SOURCE LINE # 3042
                                           ; SOURCE LINE # 3043
                                           ; SOURCE LINE # 3044
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_disp_resolution_bg (END)

             ; FUNCTION proc_disp_resolution_ok (BEGIN)
                                           ; SOURCE LINE # 3046
                                           ; SOURCE LINE # 3047
                                           ; SOURCE LINE # 3049
0000 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 3051
0003 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 3053
0006 110000      R     ACALL   L?0776
0009 110000      R     ACALL   L?0779
000C 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_disp_resolution_ok (END)

             ; FUNCTION proc_dvi_mode_bg (BEGIN)
                                           ; SOURCE LINE # 3069
                                           ; SOURCE LINE # 3070
                                           ; SOURCE LINE # 3071
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_dvi_mode_bg (END)

             ; FUNCTION proc_dvi_mode_24bit (BEGIN)
                                           ; SOURCE LINE # 3073
                                           ; SOURCE LINE # 3074
                                           ; SOURCE LINE # 3075
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7403              MOV     A,#03H
                                           ; SOURCE LINE # 3076
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 229 

0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3077
                                           ; SOURCE LINE # 3078
                                           ; SOURCE LINE # 3079
000B 110000      R     ACALL   L?0771
000E 110000      R     ACALL   L?0779
0011 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_dvi_mode_24bit (END)

             ; FUNCTION proc_dvi_mode_16bit (BEGIN)
                                           ; SOURCE LINE # 3081
                                           ; SOURCE LINE # 3082
                                           ; SOURCE LINE # 3083
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7404              MOV     A,#04H
                                           ; SOURCE LINE # 3084
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3085
                                           ; SOURCE LINE # 3086
                                           ; SOURCE LINE # 3087
000B 110000      R     ACALL   L?0771
000E 110000      R     ACALL   L?0779
0011 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_dvi_mode_16bit (END)

             ; FUNCTION proc_dvi_mode_ok (BEGIN)
                                           ; SOURCE LINE # 3089
                                           ; SOURCE LINE # 3090
                                           ; SOURCE LINE # 3091
0000 110000      R     ACALL   L?0776
0003 2402              ADD     A,#02H
0005 110000      R     ACALL   L?0786
0008 7F01              MOV     R7,#01H
000A B40302            CJNE    A,#03H,?C0388
000D 7F00              MOV     R7,#00H
000F         ?C0388:
000F         ?C0389:
000F 110000      E     ACALL   _SaveDviModeEE
                                           ; SOURCE LINE # 3092
0012 010000      R     AJMP    proc_return_icon
             ; FUNCTION proc_dvi_mode_ok (END)

             ; FUNCTION proc_dvi_mode_cancel (BEGIN)
                                           ; SOURCE LINE # 3094
                                           ; SOURCE LINE # 3095
                                           ; SOURCE LINE # 3096
0000 010000      R     AJMP    proc_return_icon
             ; FUNCTION proc_dvi_mode_cancel (END)

             ; FUNCTION proc_hdmi_mode_bg (BEGIN)
                                           ; SOURCE LINE # 3099
                                           ; SOURCE LINE # 3100
                                           ; SOURCE LINE # 3101
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_hdmi_mode_bg (END)

             ; FUNCTION proc_hdmi_mode_pc (BEGIN)
                                           ; SOURCE LINE # 3103
                                           ; SOURCE LINE # 3104
                                           ; SOURCE LINE # 3105
0000 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 230 

0003 110000      R     ACALL   L?0843
0006 7403              MOV     A,#03H
                                           ; SOURCE LINE # 3106
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3107
000B 110000      R     ACALL   L?0775
000E 110000      R     ACALL   L?0800
0011 7401              MOV     A,#01H
                                           ; SOURCE LINE # 3108
0013 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 3109
0016 7F05              MOV     R7,#05H
0018 110000      E     ACALL   _SetImage
                                           ; SOURCE LINE # 3110
001B 110000      R     ACALL   L?0776
001E 110000      R     ACALL   L?0779
0021 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_hdmi_mode_pc (END)

             ; FUNCTION proc_hdmi_mode_tv (BEGIN)
                                           ; SOURCE LINE # 3112
                                           ; SOURCE LINE # 3113
                                           ; SOURCE LINE # 3114
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7404              MOV     A,#04H
                                           ; SOURCE LINE # 3115
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3116
000B 110000      R     ACALL   L?0775
000E 110000      R     ACALL   L?0800
0011 7401              MOV     A,#01H
                                           ; SOURCE LINE # 3117
0013 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 3118
0016 7F06              MOV     R7,#06H
0018 110000      E     ACALL   _SetImage
                                           ; SOURCE LINE # 3119
001B 110000      R     ACALL   L?0776
001E 110000      R     ACALL   L?0779
0021 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_hdmi_mode_tv (END)

             ; FUNCTION proc_hdmi_mode_ok (BEGIN)
                                           ; SOURCE LINE # 3121
                                           ; SOURCE LINE # 3122
                                           ; SOURCE LINE # 3125
0000 110000      R     ACALL   L?0776
0003 2402              ADD     A,#02H
0005 110000      R     ACALL   L?0786
0008 7F01              MOV     R7,#01H
000A B40302            CJNE    A,#03H,?C0395
000D 7F00              MOV     R7,#00H
000F         ?C0395:
000F         ?C0396:
000F 90000000    R     MOV     DPTR,#hdmi_mode
0013 EF                MOV     A,R7
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3126
0015 110000      E     ACALL   GetHdmiModeEE
0018 AE07              MOV     R6,AR7
001A 90000000    R     MOV     DPTR,#hdmi_mode
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 231 

001E E0                MOVX    A,@DPTR
001F FF                MOV     R7,A
0020 6E                XRL     A,R6
0021 6003              JZ      ?C0397
                                           ; SOURCE LINE # 3127
0023 110000      E     ACALL   _SaveHdmiModeEE
0026         ?C0397:
                                           ; SOURCE LINE # 3128
0026 110000      R     ACALL   L?0776
0029 2402              ADD     A,#02H
002B 110000      R     ACALL   L?0786
002E FF                MOV     R7,A
002F 90000000    R     MOV     DPTR,#cancel_recover_value
0033 E0                MOVX    A,@DPTR
0034 6F                XRL     A,R7
0035 601C              JZ      ?C0398
                                           ; SOURCE LINE # 3129
0037 EF                MOV     A,R7
0038 90000000    R     MOV     DPTR,#MenuInputMain
003C B40305            CJNE    A,#03H,?C0399
                                           ; SOURCE LINE # 3130
003F 7405              MOV     A,#05H
0041 F0                MOVX    @DPTR,A
0042 8003              SJMP    ?C0400
0044         ?C0399:
                                           ; SOURCE LINE # 3132
0044 7406              MOV     A,#06H
0046 F0                MOVX    @DPTR,A
0047         ?C0400:
                                           ; SOURCE LINE # 3133
0047 110000      R     ACALL   L?1016
004A 110000      E     ACALL   _SetInputMain
                                           ; SOURCE LINE # 3134
004D 110000      R     ACALL   L?1016
0050 110000      E     ACALL   _SaveInputMainEE
                                           ; SOURCE LINE # 3135
0053         ?C0398:
                                           ; SOURCE LINE # 3136
0053 010000      R     AJMP    proc_return_icon
             ; FUNCTION proc_hdmi_mode_ok (END)

             ; FUNCTION proc_hdmi_mode_cancel (BEGIN)
                                           ; SOURCE LINE # 3138
                                           ; SOURCE LINE # 3139
                                           ; SOURCE LINE # 3141
0000 110000      R     ACALL   L?0776
0003 2405              ADD     A,#05H
0005 110000      R     ACALL   L?0781
0008 90000000    R     MOV     DPTR,#cancel_recover_value
000C 110000      R     ACALL   L?0833
000F 110000      R     ACALL   L?0780
0012 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 3143
0015 010000      R     AJMP    proc_return_icon
             ; FUNCTION proc_hdmi_mode_cancel (END)

             ; FUNCTION proc_aspect_bg (BEGIN)
                                           ; SOURCE LINE # 3161
                                           ; SOURCE LINE # 3162
                                           ; SOURCE LINE # 3163
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_aspect_bg (END)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 232 


             ; FUNCTION proc_aspect_normal (BEGIN)
                                           ; SOURCE LINE # 3165
                                           ; SOURCE LINE # 3166
                                           ; SOURCE LINE # 3167
                                           ; SOURCE LINE # 3168
                                           ; SOURCE LINE # 3169
0000 110000      R     ACALL   L?0772
0003 110000      R     ACALL   L?0843
0006 7403              MOV     A,#03H
                                           ; SOURCE LINE # 3170
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3173
000B 110000      R     ACALL   L?0775
000E 110000      R     ACALL   L?0785
0011 FD                MOV     R5,A
0012 E4                CLR     A
0013 FF                MOV     R7,A
0014 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3174
0017 110000      R     ACALL   L?0776
001A 2404              ADD     A,#04H
001C 110000      R     ACALL   L?0786
001F FF                MOV     R7,A
0020 110000      R     ACALL   L?0789
0023 2402              ADD     A,#02H
0025 110000      R     ACALL   L?0786
0028 2F                ADD     A,R7
0029 FD                MOV     R5,A
002A E4                CLR     A
002B FF                MOV     R7,A
002C 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3176
002F 110000      R     ACALL   L?0776
0032 2403              ADD     A,#03H
0034 110000      R     ACALL   L?0786
0037 FF                MOV     R7,A
0038 110000      R     ACALL   L?0789
003B 2402              ADD     A,#02H
003D 110000      R     ACALL   L?0786
0040 C3                CLR     C
0041 9F                SUBB    A,R7
0042 FF                MOV     R7,A
0043 010000      E     AJMP    _SetAspectHW
             ; FUNCTION proc_aspect_normal (END)

             ; FUNCTION proc_aspect_zoom (BEGIN)
                                           ; SOURCE LINE # 3178
                                           ; SOURCE LINE # 3179
                                           ; SOURCE LINE # 3180
                                           ; SOURCE LINE # 3181
                                           ; SOURCE LINE # 3182
0000 110000      R     ACALL   L?0772
0003 110000      R     ACALL   L?0843
0006 7404              MOV     A,#04H
                                           ; SOURCE LINE # 3183
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3186
000B 110000      R     ACALL   L?0775
000E 110000      R     ACALL   L?0785
0011 FD                MOV     R5,A
0012 E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 233 

0013 FF                MOV     R7,A
0014 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3187
0017 110000      R     ACALL   L?0776
001A 2404              ADD     A,#04H
001C 110000      R     ACALL   L?0786
001F FF                MOV     R7,A
0020 110000      R     ACALL   L?0789
0023 2402              ADD     A,#02H
0025 110000      R     ACALL   L?0786
0028 2F                ADD     A,R7
0029 FD                MOV     R5,A
002A E4                CLR     A
002B FF                MOV     R7,A
002C 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3189
002F 110000      R     ACALL   L?0776
0032 2403              ADD     A,#03H
0034 110000      R     ACALL   L?0786
0037 FF                MOV     R7,A
0038 110000      R     ACALL   L?0789
003B 2402              ADD     A,#02H
003D 110000      R     ACALL   L?0786
0040 C3                CLR     C
0041 9F                SUBB    A,R7
0042 FF                MOV     R7,A
0043 010000      E     AJMP    _SetAspectHW
             ; FUNCTION proc_aspect_zoom (END)

             ; FUNCTION proc_aspect_full (BEGIN)
                                           ; SOURCE LINE # 3191
                                           ; SOURCE LINE # 3192
                                           ; SOURCE LINE # 3193
                                           ; SOURCE LINE # 3194
                                           ; SOURCE LINE # 3195
0000 110000      R     ACALL   L?0772
                                           ; SOURCE LINE # 3196
0003 110000      R     ACALL   L?0815
                                           ; SOURCE LINE # 3199
0006 110000      R     ACALL   L?0775
0009 110000      R     ACALL   L?0785
000C FD                MOV     R5,A
000D E4                CLR     A
000E FF                MOV     R7,A
000F 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3200
0012 110000      R     ACALL   L?0776
0015 2404              ADD     A,#04H
0017 110000      R     ACALL   L?0786
001A FF                MOV     R7,A
001B 110000      R     ACALL   L?0789
001E 2402              ADD     A,#02H
0020 110000      R     ACALL   L?0786
0023 2F                ADD     A,R7
0024 FD                MOV     R5,A
0025 E4                CLR     A
0026 FF                MOV     R7,A
0027 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3202
002A 110000      R     ACALL   L?0776
002D 2403              ADD     A,#03H
002F 110000      R     ACALL   L?0786
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 234 

0032 FF                MOV     R7,A
0033 110000      R     ACALL   L?0789
0036 2402              ADD     A,#02H
0038 110000      R     ACALL   L?0786
003B C3                CLR     C
003C 9F                SUBB    A,R7
003D FF                MOV     R7,A
003E 010000      E     AJMP    _SetAspectHW
             ; FUNCTION proc_aspect_full (END)

             ; FUNCTION proc_aspect_pano (BEGIN)
                                           ; SOURCE LINE # 3204
                                           ; SOURCE LINE # 3205
                                           ; SOURCE LINE # 3206
                                           ; SOURCE LINE # 3207
                                           ; SOURCE LINE # 3208
0000 110000      R     ACALL   L?0772
0003 110000      R     ACALL   L?0843
0006 7406              MOV     A,#06H
                                           ; SOURCE LINE # 3209
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3212
000B 110000      R     ACALL   L?0775
000E 110000      R     ACALL   L?0785
0011 FD                MOV     R5,A
0012 E4                CLR     A
0013 FF                MOV     R7,A
0014 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3213
0017 110000      R     ACALL   L?0776
001A 2404              ADD     A,#04H
001C 110000      R     ACALL   L?0786
001F FF                MOV     R7,A
0020 110000      R     ACALL   L?0789
0023 2402              ADD     A,#02H
0025 110000      R     ACALL   L?0786
0028 2F                ADD     A,R7
0029 FD                MOV     R5,A
002A E4                CLR     A
002B FF                MOV     R7,A
002C 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3215
002F 110000      R     ACALL   L?0776
0032 2403              ADD     A,#03H
0034 110000      R     ACALL   L?0786
0037 FF                MOV     R7,A
0038 110000      R     ACALL   L?0789
003B 2402              ADD     A,#02H
003D 110000      R     ACALL   L?0786
0040 C3                CLR     C
0041 9F                SUBB    A,R7
0042 FF                MOV     R7,A
0043 010000      E     AJMP    _SetAspectHW
             ; FUNCTION proc_aspect_pano (END)

             ; FUNCTION proc_aspect_ok (BEGIN)
                                           ; SOURCE LINE # 3217
                                           ; SOURCE LINE # 3218
                                           ; SOURCE LINE # 3219
0000 110000      R     ACALL   L?0776
0003 2402              ADD     A,#02H
0005 110000      R     ACALL   L?0786
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 235 

0008 FF                MOV     R7,A
0009 90000000    R     MOV     DPTR,#cancel_recover_value
000D E0                MOVX    A,@DPTR
000E 6F                XRL     A,R7
000F 6073              JZ      ?C0408
                                           ; SOURCE LINE # 3221
0011 110000      R     ACALL   L?0789
0014 2403              ADD     A,#03H
0016 110000      R     ACALL   L?0786
0019 FE                MOV     R6,A
001A C3                CLR     C
001B EF                MOV     A,R7
001C 9E                SUBB    A,R6
001D FF                MOV     R7,A
001E 110000      E     ACALL   _SaveAspectModeEE
                                           ; SOURCE LINE # 3223
0021 110000      E     ACALL   GetInputMain
0024 110000      R     ACALL   L?0900
                                           ; SOURCE LINE # 3226
0027 7FFF              MOV     R7,#0FFH
0029 110000      E     ACALL   _SetInputMain
                                           ; SOURCE LINE # 3227
002C E4                CLR     A
002D FF                MOV     R7,A
002E 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3229
0031 90000000    R     MOV     DPTR,#MenuInputMain
0035 E0                MOVX    A,@DPTR
0036 B40900            CJNE    A,#09H,?C0705
0039         ?C0705:
0039 5044              JNC     ?C0409
003B 90000000    R     MOV     DPTR,#?C0706
003F F8                MOV     R0,A
0040 28                ADD     A,R0
0041 28                ADD     A,R0
0042 73                JMP     @A+DPTR
0043         ?C0706:
0043 010000      R     AJMP    ?C0410
0046 010000      R     AJMP    ?C0411
0049 010000      R     AJMP    ?C0412
004C 010000      R     AJMP    ?C0413
004F 010000      R     AJMP    ?C0409
0052 010000      R     AJMP    ?C0416
0055 010000      R     AJMP    ?C0416
0058 010000      R     AJMP    ?C0417
005B 010000      R     AJMP    ?C0414
                                           ; SOURCE LINE # 3230
005E         ?C0410:
005E 110000      E     ACALL   ChangeCVBS
0061 801C              SJMP    ?C0409
                                           ; SOURCE LINE # 3231
0063         ?C0411:
0063 110000      E     ACALL   ChangeSVIDEO
0066 8017              SJMP    ?C0409
                                           ; SOURCE LINE # 3233
0068         ?C0412:
0068 110000      E     ACALL   ChangeComponent
006B 8012              SJMP    ?C0409
                                           ; SOURCE LINE # 3236
006D         ?C0413:
006D 110000      E     ACALL   ChangePC
0070 800D              SJMP    ?C0409
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 236 

                                           ; SOURCE LINE # 3239
0072         ?C0414:
0072 110000      E     ACALL   ChangeLVDSRx
0075 8008              SJMP    ?C0409
                                           ; SOURCE LINE # 3241
                                           ; SOURCE LINE # 3242
0077         ?C0416:
0077 110000      E     ACALL   ChangeHDMI
007A 8003              SJMP    ?C0409
                                           ; SOURCE LINE # 3244
007C         ?C0417:
007C 110000      E     ACALL   ChangeBT656Loop
                                           ; SOURCE LINE # 3246
007F         ?C0409:
                                           ; SOURCE LINE # 3250
007F 7F01              MOV     R7,#01H
0081 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3251
0084         ?C0408:
                                           ; SOURCE LINE # 3252
0084 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 3254
0087 110000      R     ACALL   L?0776
008A 110000      R     ACALL   L?0779
008D 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_aspect_ok (END)

             ; FUNCTION proc_aspect_cancel (BEGIN)
                                           ; SOURCE LINE # 3256
                                           ; SOURCE LINE # 3257
                                           ; SOURCE LINE # 3259
0000 110000      R     ACALL   L?0776
0003 2405              ADD     A,#05H
0005 110000      R     ACALL   L?0781
0008 90000000    R     MOV     DPTR,#cancel_recover_value
000C 110000      R     ACALL   L?0833
000F 110000      R     ACALL   L?0780
0012 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 3261
0015 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 3263
0018 110000      R     ACALL   L?0776
001B 110000      R     ACALL   L?0779
001E 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_aspect_cancel (END)

             ; FUNCTION proc_menu_list_return (BEGIN)
                                           ; SOURCE LINE # 3277
                                           ; SOURCE LINE # 3278
                                           ; SOURCE LINE # 3279
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 110000      R     ACALL   L?1089
0009 6400        E     XRL     A,#MBYTE menu_slider_page
000B 700A              JNZ     ?C0707
000D 7400        E     MOV     A,#LOW menu_slider_page
000F 6582              XRL     A,DPL
0011 7004              JNZ     ?C0707
0013 7400        E     MOV     A,#HIGH menu_slider_page
0015 6583              XRL     A,DPH
0017         ?C0707:
0017 6017              JZ      ?C0421
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 237 

0019 110000      R     ACALL   L?0776
001C 110000      R     ACALL   L?0837
001F 110000      R     ACALL   L?0991
0022 700A              JNZ     ?C0708
0024 7400        E     MOV     A,#LOW menu_slider3_page
0026 6582              XRL     A,DPL
0028 7004              JNZ     ?C0708
002A 7400        E     MOV     A,#HIGH menu_slider3_page
002C 6583              XRL     A,DPH
002E         ?C0708:
002E 7003              JNZ     ?C0420
0030         ?C0421:
                                           ; SOURCE LINE # 3280
0030 010000      R     AJMP    proc_slider_undo
                                           ; SOURCE LINE # 3281
0033         ?C0420:
                                           ; SOURCE LINE # 3282
0033 110000      R     ACALL   L?0776
0036 110000      R     ACALL   L?0837
0039 110000      R     ACALL   L?1091
003C 6400        E     XRL     A,#MBYTE menu_position_page
003E 700A              JNZ     ?C0709
0040 7400        E     MOV     A,#LOW menu_position_page
0042 6582              XRL     A,DPL
0044 7004              JNZ     ?C0709
0046 7400        E     MOV     A,#HIGH menu_position_page
0048 6583              XRL     A,DPH
004A         ?C0709:
004A 7003              JNZ     ?C0423
                                           ; SOURCE LINE # 3283
004C 010000      R     AJMP    proc_position_undo
                                           ; SOURCE LINE # 3284
004F         ?C0423:
                                           ; SOURCE LINE # 3285
004F 110000      R     ACALL   L?0776
0052 110000      R     ACALL   L?0837
0055 7B00        E     MOV     R3,#MBYTE menu_autoadj_page
0057 7A00        E     MOV     R2,#HIGH menu_autoadj_page
0059 7900        E     MOV     R1,#LOW menu_autoadj_page
005B 6400        E     XRL     A,#MBYTE menu_autoadj_page
005D 700A              JNZ     ?C0710
005F 7400        E     MOV     A,#LOW menu_autoadj_page
0061 6582              XRL     A,DPL
0063 7004              JNZ     ?C0710
0065 7400        E     MOV     A,#HIGH menu_autoadj_page
0067 6583              XRL     A,DPH
0069         ?C0710:
0069 7003              JNZ     ?C0425
                                           ; SOURCE LINE # 3286
006B 010000      R     AJMP    proc_autoadj_cancel
                                           ; SOURCE LINE # 3287
006E         ?C0425:
                                           ; SOURCE LINE # 3288
006E 110000      R     ACALL   L?0776
0071 110000      R     ACALL   L?0837
0074 7B00        E     MOV     R3,#MBYTE menu_autocolor_page
0076 7A00        E     MOV     R2,#HIGH menu_autocolor_page
0078 7900        E     MOV     R1,#LOW menu_autocolor_page
007A 6400        E     XRL     A,#MBYTE menu_autocolor_page
007C 700A              JNZ     ?C0711
007E 7400        E     MOV     A,#LOW menu_autocolor_page
0080 6582              XRL     A,DPL
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 238 

0082 7004              JNZ     ?C0711
0084 7400        E     MOV     A,#HIGH menu_autocolor_page
0086 6583              XRL     A,DPH
0088         ?C0711:
0088 7003              JNZ     ?C0427
                                           ; SOURCE LINE # 3289
008A 010000      R     AJMP    proc_autocolor_cancel
                                           ; SOURCE LINE # 3290
008D         ?C0427:
                                           ; SOURCE LINE # 3291
008D 110000      R     ACALL   L?0776
0090 110000      R     ACALL   L?0837
0093 7B00        E     MOV     R3,#MBYTE menu_sys_info_page
0095 7A00        E     MOV     R2,#HIGH menu_sys_info_page
0097 7900        E     MOV     R1,#LOW menu_sys_info_page
0099 6400        E     XRL     A,#MBYTE menu_sys_info_page
009B 700A              JNZ     ?C0712
009D 7400        E     MOV     A,#LOW menu_sys_info_page
009F 6582              XRL     A,DPL
00A1 7004              JNZ     ?C0712
00A3 7400        E     MOV     A,#HIGH menu_sys_info_page
00A5 6583              XRL     A,DPH
00A7         ?C0712:
00A7 7003              JNZ     ?C0429
                                           ; SOURCE LINE # 3292
00A9 010000      R     AJMP    proc_info_ok
                                           ; SOURCE LINE # 3293
00AC         ?C0429:
                                           ; SOURCE LINE # 3294
00AC 110000      R     ACALL   L?0776
00AF 110000      R     ACALL   L?0837
00B2 7B00        E     MOV     R3,#MBYTE menu_disp_resolution_page
00B4 7A00        E     MOV     R2,#HIGH menu_disp_resolution_page
00B6 7900        E     MOV     R1,#LOW menu_disp_resolution_page
00B8 6400        E     XRL     A,#MBYTE menu_disp_resolution_page
00BA 700A              JNZ     ?C0713
00BC 7400        E     MOV     A,#LOW menu_disp_resolution_page
00BE 6582              XRL     A,DPL
00C0 7004              JNZ     ?C0713
00C2 7400        E     MOV     A,#HIGH menu_disp_resolution_page
00C4 6583              XRL     A,DPH
00C6         ?C0713:
00C6 7003              JNZ     ?C0431
                                           ; SOURCE LINE # 3295
00C8 010000      R     AJMP    proc_disp_resolution_ok
                                           ; SOURCE LINE # 3296
00CB         ?C0431:
                                           ; SOURCE LINE # 3297
                                           ; SOURCE LINE # 3298
00CB 110000      R     ACALL   proc_return_icon
                                           ; SOURCE LINE # 3299
                                           ; SOURCE LINE # 3300
00CE         ?C0433:
00CE 22                RET     
             ; FUNCTION proc_menu_list_return (END)

             ; FUNCTION proc_yuv_list_bg (BEGIN)
                                           ; SOURCE LINE # 3321
                                           ; SOURCE LINE # 3322
                                           ; SOURCE LINE # 3323
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_yuv_list_bg (END)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 239 


             ; FUNCTION proc_yuv_list_bright (BEGIN)
                                           ; SOURCE LINE # 3326
                                           ; SOURCE LINE # 3327
                                           ; SOURCE LINE # 3328
                                           ; SOURCE LINE # 3330
0000 110000      R     ACALL   L?0818
                                           ; SOURCE LINE # 3331
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3332
                                           ; SOURCE LINE # 3333
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3334
000E 110000      R     ACALL   L?0815
                                           ; SOURCE LINE # 3335
0011 110000      R     ACALL   L?0878
0014 7400        E     MOV     A,#HIGH ImgAdjGetBrightnessY
0016 F0                MOVX    @DPTR,A
0017 7400        E     MOV     A,#LOW ImgAdjGetBrightnessY
0019 110000      R     ACALL   L?1058
001C 7400        E     MOV     A,#HIGH _ImgAdjSetBrightnessY
001E F0                MOVX    @DPTR,A
001F 7400        E     MOV     A,#LOW _ImgAdjSetBrightnessY
0021 110000      R     ACALL   L?1060
0024 7400        E     MOV     A,#HIGH _ImgAdjSetBrightnessY
0026 110000      R     ACALL   L?0887
0029 7400        E     MOV     A,#MBYTE ImgAdjChangeBrightnessY
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        E     MOV     A,#HIGH ImgAdjChangeBrightnessY
002F F0                MOVX    @DPTR,A
0030 7400        E     MOV     A,#LOW ImgAdjChangeBrightnessY
0032 110000      R     ACALL   L?1032
0035 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3341
0038 110000      R     ACALL   L?0776
003B 110000      R     ACALL   L?0779
003E 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_yuv_list_bright (END)

             ; FUNCTION proc_yuv_list_contrast (BEGIN)
                                           ; SOURCE LINE # 3343
                                           ; SOURCE LINE # 3344
                                           ; SOURCE LINE # 3345
                                           ; SOURCE LINE # 3347
0000 110000      R     ACALL   L?0818
                                           ; SOURCE LINE # 3348
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3349
                                           ; SOURCE LINE # 3350
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3351
000E 110000      R     ACALL   L?0816
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3352
0012 7400        E     MOV     A,#MBYTE ImgAdjGetContrastY
0014 110000      R     ACALL   L?0880
0017 7400        E     MOV     A,#HIGH ImgAdjGetContrastY
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 240 

0019 F0                MOVX    @DPTR,A
001A 7400        E     MOV     A,#LOW ImgAdjGetContrastY
001C 110000      R     ACALL   L?1062
001F 7400        E     MOV     A,#HIGH _ImgAdjSetContrastY
0021 F0                MOVX    @DPTR,A
0022 7400        E     MOV     A,#LOW _ImgAdjSetContrastY
0024 110000      R     ACALL   L?1064
0027 7400        E     MOV     A,#HIGH _ImgAdjSetContrastY
0029 110000      R     ACALL   L?0887
002C 7400        E     MOV     A,#MBYTE ImgAdjChangeContrastY
002E F0                MOVX    @DPTR,A
002F A3                INC     DPTR
0030 7400        E     MOV     A,#HIGH ImgAdjChangeContrastY
0032 F0                MOVX    @DPTR,A
0033 7400        E     MOV     A,#LOW ImgAdjChangeContrastY
0035 110000      R     ACALL   L?1034
0038 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3358
003B 110000      R     ACALL   L?0776
003E 110000      R     ACALL   L?0779
0041 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_yuv_list_contrast (END)

             ; FUNCTION proc_yuv_list_hue (BEGIN)
                                           ; SOURCE LINE # 3360
                                           ; SOURCE LINE # 3361
                                           ; SOURCE LINE # 3362
                                           ; SOURCE LINE # 3364
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3365
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3366
0009 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 3367
000C 7400        E     MOV     A,#MBYTE ImgAdjGetHUE
000E 110000      R     ACALL   L?0923
0011 7400        E     MOV     A,#HIGH ImgAdjGetHUE
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 7400        E     MOV     A,#LOW ImgAdjGetHUE
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 7400        E     MOV     A,#MBYTE _ImgAdjVaryHUE
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D 7400        E     MOV     A,#HIGH _ImgAdjVaryHUE
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 7400        E     MOV     A,#LOW _ImgAdjVaryHUE
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 7400        E     MOV     A,#MBYTE _ImgAdjSetHUE
0027 F0                MOVX    @DPTR,A
0028 A3                INC     DPTR
0029 7400        E     MOV     A,#HIGH _ImgAdjSetHUE
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        E     MOV     A,#LOW _ImgAdjSetHUE
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 7400        E     MOV     A,#MBYTE ImgAdjChangeHUE
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 241 

0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 7400        E     MOV     A,#HIGH ImgAdjChangeHUE
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7400        E     MOV     A,#LOW ImgAdjChangeHUE
003B F0                MOVX    @DPTR,A
003C 7B00        E     MOV     R3,#MBYTE img_slide_hue
003E 7A00        E     MOV     R2,#HIGH img_slide_hue
0040 7900        E     MOV     R1,#LOW img_slide_hue
0042 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3372
0045 110000      R     ACALL   L?0776
0048 110000      R     ACALL   L?0779
004B 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_yuv_list_hue (END)

             ; FUNCTION proc_yuv_list_saturate (BEGIN)
                                           ; SOURCE LINE # 3375
                                           ; SOURCE LINE # 3376
                                           ; SOURCE LINE # 3377
                                           ; SOURCE LINE # 3379
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3380
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3381
0009 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 3382
000C 7400        E     MOV     A,#MBYTE ImgAdjGetSaturation
000E 110000      R     ACALL   L?0976
0011 7400        E     MOV     A,#HIGH ImgAdjGetSaturation
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 7400        E     MOV     A,#LOW ImgAdjGetSaturation
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 7400        E     MOV     A,#MBYTE _ImgAdjSetSaturation
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D 7400        E     MOV     A,#HIGH _ImgAdjSetSaturation
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 7400        E     MOV     A,#LOW _ImgAdjSetSaturation
0023 F0                MOVX    @DPTR,A
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 7400        E     MOV     A,#MBYTE _ImgAdjSetSaturation
0028 F0                MOVX    @DPTR,A
0029 7400        E     MOV     A,#HIGH _ImgAdjSetSaturation
002B 110000      R     ACALL   L?0910
002E 7400        E     MOV     A,#MBYTE ImgAdjChangeSaturation
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 7400        E     MOV     A,#HIGH ImgAdjChangeSaturation
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 7400        E     MOV     A,#LOW ImgAdjChangeSaturation
0038 F0                MOVX    @DPTR,A
0039 7B00        E     MOV     R3,#MBYTE img_slide_saturate
003B 7A00        E     MOV     R2,#HIGH img_slide_saturate
003D 7900        E     MOV     R1,#LOW img_slide_saturate
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 242 

003F 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3388
0042 110000      R     ACALL   L?0776
0045 110000      R     ACALL   L?0779
0048 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_yuv_list_saturate (END)

             ; FUNCTION proc_yuv_list_sharp (BEGIN)
                                           ; SOURCE LINE # 3390
                                           ; SOURCE LINE # 3391
                                           ; SOURCE LINE # 3392
                                           ; SOURCE LINE # 3394
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3395
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3396
0009 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 3397
000C 7400        E     MOV     A,#MBYTE ImgAdjGetSharpness
000E 110000      R     ACALL   L?0976
0011 7400        E     MOV     A,#HIGH ImgAdjGetSharpness
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 7400        E     MOV     A,#LOW ImgAdjGetSharpness
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 7400        E     MOV     A,#MBYTE _ImgAdjSetSharpness
001B F0                MOVX    @DPTR,A
001C A3                INC     DPTR
001D 7400        E     MOV     A,#HIGH _ImgAdjSetSharpness
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 7400        E     MOV     A,#LOW _ImgAdjSetSharpness
0023 F0                MOVX    @DPTR,A
0024 F9                MOV     R1,A
0025 A3                INC     DPTR
0026 7400        E     MOV     A,#MBYTE _ImgAdjSetSharpness
0028 F0                MOVX    @DPTR,A
0029 7400        E     MOV     A,#HIGH _ImgAdjSetSharpness
002B 110000      R     ACALL   L?0910
002E 7400        E     MOV     A,#MBYTE ImgAdjChangeSharpness
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 7400        E     MOV     A,#HIGH ImgAdjChangeSharpness
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 7400        E     MOV     A,#LOW ImgAdjChangeSharpness
0038 F0                MOVX    @DPTR,A
0039 7B00        E     MOV     R3,#MBYTE img_slide_sharp
003B 7A00        E     MOV     R2,#HIGH img_slide_sharp
003D 7900        E     MOV     R1,#LOW img_slide_sharp
003F 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3403
0042 110000      R     ACALL   L?0776
0045 110000      R     ACALL   L?0779
0048 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_yuv_list_sharp (END)

             ; FUNCTION proc_rgb_list_bg (BEGIN)
                                           ; SOURCE LINE # 3420
                                           ; SOURCE LINE # 3421
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 243 

                                           ; SOURCE LINE # 3422
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_rgb_list_bg (END)

             ; FUNCTION proc_rgb_list_bright (BEGIN)
                                           ; SOURCE LINE # 3425
                                           ; SOURCE LINE # 3426
                                           ; SOURCE LINE # 3427
                                           ; SOURCE LINE # 3429
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3430
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3431
                                           ; SOURCE LINE # 3432
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3433
000E 110000      R     ACALL   L?0816
                                           ; SOURCE LINE # 3434
0011 110000      R     ACALL   L?0878
0014 7400        E     MOV     A,#HIGH ImgAdjGetBrightnessY
0016 F0                MOVX    @DPTR,A
0017 7400        E     MOV     A,#LOW ImgAdjGetBrightnessY
0019 110000      R     ACALL   L?1058
001C 7400        E     MOV     A,#HIGH _ImgAdjSetBrightnessY
001E F0                MOVX    @DPTR,A
001F 7400        E     MOV     A,#LOW _ImgAdjSetBrightnessY
0021 110000      R     ACALL   L?1060
0024 7400        E     MOV     A,#HIGH _ImgAdjSetBrightnessY
0026 110000      R     ACALL   L?0944
0029 7400        E     MOV     A,#MBYTE ImgAdjChangeBrightnessY
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        E     MOV     A,#HIGH ImgAdjChangeBrightnessY
002F F0                MOVX    @DPTR,A
0030 7400        E     MOV     A,#LOW ImgAdjChangeBrightnessY
0032 110000      R     ACALL   L?1032
0035 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3439
0038 110000      R     ACALL   L?0776
003B 110000      R     ACALL   L?0779
003E 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_rgb_list_bright (END)

             ; FUNCTION proc_rgb_list_contrast (BEGIN)
                                           ; SOURCE LINE # 3441
                                           ; SOURCE LINE # 3442
                                           ; SOURCE LINE # 3443
                                           ; SOURCE LINE # 3445
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3446
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3447
                                           ; SOURCE LINE # 3448
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3449
000E 110000      R     ACALL   L?0816
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3450
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 244 

0012 110000      R     ACALL   L?0922
0015 7400        E     MOV     A,#HIGH ImgAdjGetContrastY
0017 F0                MOVX    @DPTR,A
0018 7400        E     MOV     A,#LOW ImgAdjGetContrastY
001A 110000      R     ACALL   L?1062
001D 7400        E     MOV     A,#HIGH _ImgAdjSetContrastY
001F F0                MOVX    @DPTR,A
0020 7400        E     MOV     A,#LOW _ImgAdjSetContrastY
0022 110000      R     ACALL   L?1064
0025 7400        E     MOV     A,#HIGH _ImgAdjSetContrastY
0027 110000      R     ACALL   L?0944
002A 7400        E     MOV     A,#MBYTE ImgAdjChangeContrastY
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E 7400        E     MOV     A,#HIGH ImgAdjChangeContrastY
0030 F0                MOVX    @DPTR,A
0031 7400        E     MOV     A,#LOW ImgAdjChangeContrastY
0033 110000      R     ACALL   L?1034
0036 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3455
0039 110000      R     ACALL   L?0776
003C 110000      R     ACALL   L?0779
003F 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_rgb_list_contrast (END)

             ; FUNCTION proc_rgb_list_color (BEGIN)
                                           ; SOURCE LINE # 3457
                                           ; SOURCE LINE # 3458
                                           ; SOURCE LINE # 3459
                                           ; SOURCE LINE # 3461
                                           ; SOURCE LINE # 3462
0000 110000      R     ACALL   L?0798
0003 7405              MOV     A,#05H
0005 110000      E     ACALL   ?C?CSTPTR
0008 110000      R     ACALL   L?0776
000B 110000      R     ACALL   L?0843
000E 7405              MOV     A,#05H
0010 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 3463
0013 110000      R     ACALL   L?0776
0016 110000      R     ACALL   L?0785
0019 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3464
001E 110000      R     ACALL   L?0789
0021 2402              ADD     A,#02H
0023 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 3465
0026 110000      R     ACALL   L?1036
0029 7400        E     MOV     A,#HIGH _ImgAdjGetContrastRGB
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        E     MOV     A,#LOW _ImgAdjGetContrastRGB
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 7400        E     MOV     A,#MBYTE _ImgAdjSetContrastRGB
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 7400        E     MOV     A,#HIGH _ImgAdjSetContrastRGB
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7400        E     MOV     A,#LOW _ImgAdjSetContrastRGB
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 245 

003B F0                MOVX    @DPTR,A
003C F9                MOV     R1,A
003D A3                INC     DPTR
003E 7400        E     MOV     A,#MBYTE _ImgAdjSetContrastRGB
0040 F0                MOVX    @DPTR,A
0041 7400        E     MOV     A,#HIGH _ImgAdjSetContrastRGB
0043 110000      R     ACALL   L?0977
0046 7400        E     MOV     A,#MBYTE _ImgAdjChangeContrastRGB
0048 F0                MOVX    @DPTR,A
0049 A3                INC     DPTR
004A 7400        E     MOV     A,#HIGH _ImgAdjChangeContrastRGB
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E 7400        E     MOV     A,#LOW _ImgAdjChangeContrastRGB
0050 F0                MOVX    @DPTR,A
0051 7B00        E     MOV     R3,#MBYTE img_slide_rgb
0053 7A00        E     MOV     R2,#HIGH img_slide_rgb
0055 7900        E     MOV     R1,#LOW img_slide_rgb
0057 110000      R     ACALL   _InitSlide3Ctrl
                                           ; SOURCE LINE # 3470
005A 110000      R     ACALL   L?0776
005D 110000      R     ACALL   L?0779
0060 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_rgb_list_color (END)

             ; FUNCTION proc_apc_list_bg (BEGIN)
                                           ; SOURCE LINE # 3494
                                           ; SOURCE LINE # 3495
                                           ; SOURCE LINE # 3496
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_apc_list_bg (END)

             ; FUNCTION proc_apc_list_bright (BEGIN)
                                           ; SOURCE LINE # 3499
                                           ; SOURCE LINE # 3500
                                           ; SOURCE LINE # 3501
                                           ; SOURCE LINE # 3503
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3504
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3505
0009 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 3506
000C 110000      R     ACALL   L?0879
000F 7400        E     MOV     A,#HIGH ImgAdjGetBrightnessY
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 7400        E     MOV     A,#LOW ImgAdjGetBrightnessY
0015 110000      R     ACALL   L?1059
0018 7400        E     MOV     A,#HIGH _ImgAdjSetBrightnessY
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C 7400        E     MOV     A,#LOW _ImgAdjSetBrightnessY
001E 110000      R     ACALL   L?1061
0021 7400        E     MOV     A,#HIGH _ImgAdjSetBrightnessY
0023 110000      R     ACALL   L?0977
0026 7400        E     MOV     A,#MBYTE ImgAdjChangeBrightnessY
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A 7400        E     MOV     A,#HIGH ImgAdjChangeBrightnessY
002C F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 246 

002D A3                INC     DPTR
002E 7400        E     MOV     A,#LOW ImgAdjChangeBrightnessY
0030 110000      R     ACALL   L?1033
0033 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3512
0036 110000      R     ACALL   L?0776
0039 110000      R     ACALL   L?0779
003C 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_bright (END)

             ; FUNCTION proc_apc_list_contrast (BEGIN)
                                           ; SOURCE LINE # 3514
                                           ; SOURCE LINE # 3515
                                           ; SOURCE LINE # 3516
                                           ; SOURCE LINE # 3518
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3519
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3520
0009 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 3521
000C 110000      R     ACALL   L?0922
000F 7400        E     MOV     A,#HIGH ImgAdjGetContrastY
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 7400        E     MOV     A,#LOW ImgAdjGetContrastY
0015 110000      R     ACALL   L?1063
0018 7400        E     MOV     A,#HIGH _ImgAdjSetContrastY
001A F0                MOVX    @DPTR,A
001B A3                INC     DPTR
001C 7400        E     MOV     A,#LOW _ImgAdjSetContrastY
001E 110000      R     ACALL   L?1065
0021 7400        E     MOV     A,#HIGH _ImgAdjSetContrastY
0023 110000      R     ACALL   L?1017
0026 7400        E     MOV     A,#MBYTE ImgAdjChangeContrastY
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A 7400        E     MOV     A,#HIGH ImgAdjChangeContrastY
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E 7400        E     MOV     A,#LOW ImgAdjChangeContrastY
0030 110000      R     ACALL   L?1035
0033 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3527
0036 110000      R     ACALL   L?0776
0039 110000      R     ACALL   L?0779
003C 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_contrast (END)

             ; FUNCTION proc_apc_list_color (BEGIN)
                                           ; SOURCE LINE # 3530
                                           ; SOURCE LINE # 3531
                                           ; SOURCE LINE # 3532
                                           ; SOURCE LINE # 3534
                                           ; SOURCE LINE # 3535
0000 110000      R     ACALL   L?0798
0003 7405              MOV     A,#05H
0005 110000      E     ACALL   ?C?CSTPTR
0008 110000      R     ACALL   L?0776
000B 110000      R     ACALL   L?0843
000E 7405              MOV     A,#05H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 247 

0010 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 3536
0013 110000      R     ACALL   L?0776
0016 110000      R     ACALL   L?0785
0019 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3537
001E 110000      R     ACALL   L?0789
0021 2402              ADD     A,#02H
0023 110000      R     ACALL   L?0786
                                           ; SOURCE LINE # 3538
0026 110000      R     ACALL   L?1036
0029 7400        E     MOV     A,#HIGH _ImgAdjGetContrastRGB
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        E     MOV     A,#LOW _ImgAdjGetContrastRGB
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 7400        E     MOV     A,#MBYTE _ImgAdjSetContrastRGB
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 7400        E     MOV     A,#HIGH _ImgAdjSetContrastRGB
0037 F0                MOVX    @DPTR,A
0038 A3                INC     DPTR
0039 7400        E     MOV     A,#LOW _ImgAdjSetContrastRGB
003B F0                MOVX    @DPTR,A
003C F9                MOV     R1,A
003D A3                INC     DPTR
003E 7400        E     MOV     A,#MBYTE _ImgAdjSetContrastRGB
0040 F0                MOVX    @DPTR,A
0041 7400        E     MOV     A,#HIGH _ImgAdjSetContrastRGB
0043 110000      R     ACALL   L?1017
0046 7400        E     MOV     A,#MBYTE _ImgAdjChangeContrastRGB
0048 F0                MOVX    @DPTR,A
0049 A3                INC     DPTR
004A 7400        E     MOV     A,#HIGH _ImgAdjChangeContrastRGB
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E 7400        E     MOV     A,#LOW _ImgAdjChangeContrastRGB
0050 F0                MOVX    @DPTR,A
0051 7B00        E     MOV     R3,#MBYTE img_slide_rgb
0053 7A00        E     MOV     R2,#HIGH img_slide_rgb
0055 7900        E     MOV     R1,#LOW img_slide_rgb
0057 110000      R     ACALL   _InitSlide3Ctrl
                                           ; SOURCE LINE # 3544
005A 110000      R     ACALL   L?0776
005D 110000      R     ACALL   L?0779
0060 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_color (END)

             ; FUNCTION proc_apc_list_position (BEGIN)
                                           ; SOURCE LINE # 3547
                                           ; SOURCE LINE # 3548
                                           ; SOURCE LINE # 3549
0000 110000      R     ACALL   push_menu_stack_level
                                           ; SOURCE LINE # 3551
0003 110000      R     ACALL   L?1092
                                           ; SOURCE LINE # 3552
0006 110000      R     ACALL   L?0799
0009 7403              MOV     A,#03H
000B 110000      E     ACALL   ?C?CSTPTR
000E 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 248 

0011 110000      R     ACALL   L?0843
0014 7403              MOV     A,#03H
0016 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 3553
0019 110000      R     ACALL   L?0776
001C 110000      R     ACALL   L?0785
001F 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3554
0024 110000      R     ACALL   L?0789
0027 2402              ADD     A,#02H
0029 110000      R     ACALL   L?0786
002C 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3556
0031 110000      R     ACALL   L?0789
0034 110000      R     ACALL   L?0779
0037 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_position (END)

             ; FUNCTION proc_apc_list_phase (BEGIN)
                                           ; SOURCE LINE # 3558
                                           ; SOURCE LINE # 3559
                                           ; SOURCE LINE # 3560
0000 110000      R     ACALL   push_menu_stack_level
                                           ; SOURCE LINE # 3561
0003 E4                CLR     A
0004 FD                MOV     R5,A
0005 FC                MOV     R4,A
0006 FF                MOV     R7,A
0007 110000      E     ACALL   _aRGB_SetFilterBandwidth
                                           ; SOURCE LINE # 3563
000A 110000      R     ACALL   L?0820
                                           ; SOURCE LINE # 3564
000D 110000      R     ACALL   L?0775
0010 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3565
0013 110000      R     ACALL   L?0839
                                           ; SOURCE LINE # 3567
0016 7400        E     MOV     A,#MBYTE GetaRGB_Phase
0018 110000      R     ACALL   L?1018
001B 7400        E     MOV     A,#HIGH GetaRGB_Phase
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F 7400        E     MOV     A,#LOW GetaRGB_Phase
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 7400        E     MOV     A,#MBYTE _VaryaRGB_Phase
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 7400        E     MOV     A,#HIGH _VaryaRGB_Phase
0029 F0                MOVX    @DPTR,A
002A A3                INC     DPTR
002B 7400        E     MOV     A,#LOW _VaryaRGB_Phase
002D F0                MOVX    @DPTR,A
002E A3                INC     DPTR
002F 7400        E     MOV     A,#MBYTE _SetaRGB_Phase
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 7400        E     MOV     A,#HIGH _SetaRGB_Phase
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 249 

0037 7400        E     MOV     A,#LOW _SetaRGB_Phase
0039 F0                MOVX    @DPTR,A
003A A3                INC     DPTR
003B 7400        E     MOV     A,#MBYTE ChangeaRGB_Phase
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 7400        E     MOV     A,#HIGH ChangeaRGB_Phase
0041 F0                MOVX    @DPTR,A
0042 A3                INC     DPTR
0043 7400        E     MOV     A,#LOW ChangeaRGB_Phase
0045 F0                MOVX    @DPTR,A
0046 110000      R     ACALL   L?1102
0049 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3573
004C 110000      R     ACALL   L?0776
004F 110000      R     ACALL   L?0779
0052 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_phase (END)

             ; FUNCTION proc_apc_list_clock (BEGIN)
                                           ; SOURCE LINE # 3576
                                           ; SOURCE LINE # 3577
                                           ; SOURCE LINE # 3578
0000 110000      R     ACALL   push_menu_stack_level
                                           ; SOURCE LINE # 3580
0003 110000      R     ACALL   L?0975
0006 74FE              MOV     A,#0FEH
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3581
0009 E4                CLR     A
000A FD                MOV     R5,A
000B FC                MOV     R4,A
000C FF                MOV     R7,A
000D 110000      E     ACALL   _aRGB_SetFilterBandwidth
                                           ; SOURCE LINE # 3584
0010 110000      R     ACALL   L?1090
                                           ; SOURCE LINE # 3585
0013 110000      R     ACALL   L?0799
0016 7405              MOV     A,#05H
0018 110000      E     ACALL   ?C?CSTPTR
001B 110000      R     ACALL   L?0776
001E 110000      R     ACALL   L?0843
0021 7405              MOV     A,#05H
0023 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 3586
0026 110000      R     ACALL   L?0776
0029 110000      R     ACALL   L?0785
002C 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3587
0031 110000      R     ACALL   L?0789
0034 2402              ADD     A,#02H
0036 110000      R     ACALL   L?0786
0039 90000000    R     MOV     DPTR,#curr_menu_watchdog_select
003D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3589
003E 7400        E     MOV     A,#MBYTE GetaRGB_Clock
0040 110000      R     ACALL   L?1018
0043 7400        E     MOV     A,#HIGH GetaRGB_Clock
0045 F0                MOVX    @DPTR,A
0046 A3                INC     DPTR
0047 7400        E     MOV     A,#LOW GetaRGB_Clock
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 250 

0049 F0                MOVX    @DPTR,A
004A A3                INC     DPTR
004B 7400        E     MOV     A,#MBYTE _SetaRGB_Clock
004D F0                MOVX    @DPTR,A
004E A3                INC     DPTR
004F 7400        E     MOV     A,#HIGH _SetaRGB_Clock
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 7400        E     MOV     A,#LOW _SetaRGB_Clock
0055 F0                MOVX    @DPTR,A
0056 F9                MOV     R1,A
0057 A3                INC     DPTR
0058 7400        E     MOV     A,#MBYTE _SetaRGB_Clock
005A F0                MOVX    @DPTR,A
005B 7400        E     MOV     A,#HIGH _SetaRGB_Clock
005D 110000      R     ACALL   L?1105
0060 7400        E     MOV     A,#MBYTE ChangeaRGB_Clock
0062 F0                MOVX    @DPTR,A
0063 A3                INC     DPTR
0064 7400        E     MOV     A,#HIGH ChangeaRGB_Clock
0066 F0                MOVX    @DPTR,A
0067 A3                INC     DPTR
0068 7400        E     MOV     A,#LOW ChangeaRGB_Clock
006A F0                MOVX    @DPTR,A
006B 110000      R     ACALL   L?1100
006E 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3595
0071 110000      R     ACALL   L?0776
0074 110000      R     ACALL   L?0779
0077 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_clock (END)

             ; FUNCTION proc_apc_list_autoadj (BEGIN)
                                           ; SOURCE LINE # 3599
                                           ; SOURCE LINE # 3600
                                           ; SOURCE LINE # 3601
                                           ; SOURCE LINE # 3603
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_autoadj_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_autoadj_page
0009 F0                MOVX    @DPTR,A
000A 7400        E     MOV     A,#LOW menu_autoadj_page
                                           ; SOURCE LINE # 3604
                                           ; SOURCE LINE # 3605
                                           ; SOURCE LINE # 3606
000C 110000      R     ACALL   L?0770
000F 110000      R     ACALL   L?0779
0012 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_autoadj (END)

             ; FUNCTION proc_apc_list_autocolor (BEGIN)
                                           ; SOURCE LINE # 3609
                                           ; SOURCE LINE # 3610
                                           ; SOURCE LINE # 3611
                                           ; SOURCE LINE # 3613
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_autocolor_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_autocolor_page
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 251 

0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_autocolor_page
                                           ; SOURCE LINE # 3614
                                           ; SOURCE LINE # 3615
                                           ; SOURCE LINE # 3616
000D 110000      R     ACALL   L?0771
0010 110000      R     ACALL   L?0779
0013 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_apc_list_autocolor (END)

             ; FUNCTION proc_hdmi_list_bg (BEGIN)
                                           ; SOURCE LINE # 3633
                                           ; SOURCE LINE # 3634
                                           ; SOURCE LINE # 3635
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_hdmi_list_bg (END)

             ; FUNCTION proc_hdmi_list_mode (BEGIN)
                                           ; SOURCE LINE # 3637
                                           ; SOURCE LINE # 3638
                                           ; SOURCE LINE # 3639
                                           ; SOURCE LINE # 3641
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_hdmi_mode_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_hdmi_mode_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_hdmi_mode_page
                                           ; SOURCE LINE # 3642
000D 110000      R     ACALL   L?0775
0010 2403              ADD     A,#03H
0012 110000      R     ACALL   L?0786
0015 FF                MOV     R7,A
0016 90000000    R     MOV     DPTR,#MenuInputMain
001A E0                MOVX    A,@DPTR
001B C3                CLR     C
001C 9405              SUBB    A,#05H
001E 2F                ADD     A,R7
001F FF                MOV     R7,A
0020 110000      R     ACALL   L?0789
0023 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 3643
0026 110000      R     ACALL   L?0964
0029 FF                MOV     R7,A
                                           ; SOURCE LINE # 3644
002A 110000      R     ACALL   L?0774
002D 110000      R     ACALL   L?0843
0030 EF                MOV     A,R7
                                           ; SOURCE LINE # 3645
0031 110000      R     ACALL   L?0817
0034 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3646
0035 90000000    R     MOV     DPTR,#cancel_recover_value
                                           ; SOURCE LINE # 3647
0039 110000      R     ACALL   L?0775
003C 110000      R     ACALL   L?0779
003F 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_hdmi_list_mode (END)

C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 252 

             ; FUNCTION proc_hdmi_list_setting (BEGIN)
                                           ; SOURCE LINE # 3649
                                           ; SOURCE LINE # 3650
                                           ; SOURCE LINE # 3651
0000 110000      R     ACALL   push_menu_stack_level
                                           ; SOURCE LINE # 3655
0003 90000000    R     MOV     DPTR,#MenuInputMain
0007 E0                MOVX    A,@DPTR
0008 90000000    R     MOV     DPTR,#curr_menu
000C B4050D            CJNE    A,#05H,?C0455
000F 7400        E     MOV     A,#MBYTE menu_rgb_list_page
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 7400        E     MOV     A,#HIGH menu_rgb_list_page
0015 F0                MOVX    @DPTR,A
0016 A3                INC     DPTR
0017 7400        E     MOV     A,#LOW menu_rgb_list_page
0019 F0                MOVX    @DPTR,A
001A 8003              SJMP    ?C0456
001C         ?C0455:
                                           ; SOURCE LINE # 3656
001C 110000      R     ACALL   L?1066
001F         ?C0456:
                                           ; SOURCE LINE # 3658
001F 110000      R     ACALL   L?0776
0022 2403              ADD     A,#03H
0024 110000      R     ACALL   L?0786
0027 FF                MOV     R7,A
0028 110000      R     ACALL   L?0789
002B 110000      R     ACALL   L?0800
002E EF                MOV     A,R7
                                           ; SOURCE LINE # 3659
                                           ; SOURCE LINE # 3661
002F 110000      R     ACALL   L?0773
0032 110000      R     ACALL   L?0779
0035 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_hdmi_list_setting (END)

             ; FUNCTION proc_osd_bg (BEGIN)
                                           ; SOURCE LINE # 3733
                                           ; SOURCE LINE # 3734
                                           ; SOURCE LINE # 3735
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_osd_bg (END)

             ; FUNCTION proc_osd_time (BEGIN)
                                           ; SOURCE LINE # 3739
                                           ; SOURCE LINE # 3740
                                           ; SOURCE LINE # 3741
                                           ; SOURCE LINE # 3743
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3744
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3745
                                           ; SOURCE LINE # 3746
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3747
000E 110000      R     ACALL   L?0816
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3750
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 253 

0012 7400        E     MOV     A,#MBYTE OsdGetTime
0014 110000      R     ACALL   L?1106
0017 7400        E     MOV     A,#HIGH OsdGetTime
0019 F0                MOVX    @DPTR,A
001A A3                INC     DPTR
001B 7400        E     MOV     A,#LOW OsdGetTime
001D F0                MOVX    @DPTR,A
001E A3                INC     DPTR
001F 7400        E     MOV     A,#MBYTE _OsdVaryTime
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 7400        E     MOV     A,#HIGH _OsdVaryTime
0025 F0                MOVX    @DPTR,A
0026 A3                INC     DPTR
0027 7400        E     MOV     A,#LOW _OsdVaryTime
0029 F0                MOVX    @DPTR,A
002A A3                INC     DPTR
002B 7400        E     MOV     A,#MBYTE _OsdSetTime
002D F0                MOVX    @DPTR,A
002E A3                INC     DPTR
002F 7400        E     MOV     A,#HIGH _OsdSetTime
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 7400        E     MOV     A,#LOW _OsdSetTime
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 7400        E     MOV     A,#MBYTE OsdChangeTime
0039 F0                MOVX    @DPTR,A
003A A3                INC     DPTR
003B 7400        E     MOV     A,#HIGH OsdChangeTime
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 7400        E     MOV     A,#LOW OsdChangeTime
0041 F0                MOVX    @DPTR,A
0042 7B00        E     MOV     R3,#MBYTE img_slide_timer
0044 7A00        E     MOV     R2,#HIGH img_slide_timer
0046 7900        E     MOV     R1,#LOW img_slide_timer
0048 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3752
004B 110000      R     ACALL   L?0776
004E 110000      R     ACALL   L?0779
0051 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_osd_time (END)

             ; FUNCTION proc_osd_trans (BEGIN)
                                           ; SOURCE LINE # 3754
                                           ; SOURCE LINE # 3755
                                           ; SOURCE LINE # 3756
                                           ; SOURCE LINE # 3758
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 3759
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3760
                                           ; SOURCE LINE # 3761
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3762
000E 110000      R     ACALL   L?0816
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3768
0012 7FA1              MOV     R7,#0A1H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 254 

0014 7E00              MOV     R6,#00H
0016 110000      E     ACALL   _E3P_Read
0019 110000      E     ACALL   _OsdSetTransparent
                                           ; SOURCE LINE # 3769
001C 7400        E     MOV     A,#MBYTE OsdGetTransparent
001E 110000      R     ACALL   L?1106
0021 7400        E     MOV     A,#HIGH OsdGetTransparent
0023 F0                MOVX    @DPTR,A
0024 A3                INC     DPTR
0025 7400        E     MOV     A,#LOW OsdGetTransparent
0027 F0                MOVX    @DPTR,A
0028 A3                INC     DPTR
0029 7400        E     MOV     A,#MBYTE _OsdSetTransparent
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 7400        E     MOV     A,#HIGH _OsdSetTransparent
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 7400        E     MOV     A,#LOW _OsdSetTransparent
0033 F0                MOVX    @DPTR,A
0034 F9                MOV     R1,A
0035 A3                INC     DPTR
0036 7400        E     MOV     A,#MBYTE _OsdSetTransparent
0038 F0                MOVX    @DPTR,A
0039 7400        E     MOV     A,#HIGH _OsdSetTransparent
003B 110000      R     ACALL   L?1105
003E 7400        E     MOV     A,#MBYTE OsdChangeTransparent
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 7400        E     MOV     A,#HIGH OsdChangeTransparent
0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 7400        E     MOV     A,#LOW OsdChangeTransparent
0048 F0                MOVX    @DPTR,A
0049 7B00        E     MOV     R3,#MBYTE img_slide_trans
004B 7A00        E     MOV     R2,#HIGH img_slide_trans
004D 7900        E     MOV     R1,#LOW img_slide_trans
004F 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 3771
0052 110000      R     ACALL   L?0776
0055 110000      R     ACALL   L?0779
0058 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_osd_trans (END)

             ; FUNCTION proc_main_bg (BEGIN)
                                           ; SOURCE LINE # 3798
                                           ; SOURCE LINE # 3799
                                           ; SOURCE LINE # 3800
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_main_bg (END)

             ; FUNCTION proc_main_input (BEGIN)
                                           ; SOURCE LINE # 3804
                                           ; SOURCE LINE # 3805
                                           ; SOURCE LINE # 3806
                                           ; SOURCE LINE # 3807
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_input_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_input_page
0009 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 255 

000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_input_page
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3809
000E 110000      E     ACALL   GetInputMain
0011 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 3810
0014 B40900            CJNE    A,#09H,?C0714
0017         ?C0714:
0017 5061              JNC     ?C0471
0019 90000000    R     MOV     DPTR,#?C0715
001D F8                MOV     R0,A
001E 28                ADD     A,R0
001F 28                ADD     A,R0
0020 73                JMP     @A+DPTR
0021         ?C0715:
0021 010000      R     AJMP    ?C0463
0024 010000      R     AJMP    ?C0464
0027 010000      R     AJMP    ?C0465
002A 010000      R     AJMP    ?C0466
002D 010000      R     AJMP    ?C0471
0030 010000      R     AJMP    ?C0469
0033 010000      R     AJMP    ?C0469
0036 010000      R     AJMP    ?C0470
0039 010000      R     AJMP    ?C0467
                                           ; SOURCE LINE # 3811
003C         ?C0463:
003C 803C              SJMP    ?C0759
                                           ; SOURCE LINE # 3812
003E         ?C0464:
003E 110000      R     ACALL   L?0776
0041 110000      R     ACALL   L?0800
0044 7406              MOV     A,#06H
0046 803A              SJMP    ?C0765
                                           ; SOURCE LINE # 3813
0048         ?C0465:
0048 110000      R     ACALL   L?0776
004B 110000      R     ACALL   L?0800
004E 7407              MOV     A,#07H
0050         ?C0760:
0050 8030              SJMP    ?C0765
                                           ; SOURCE LINE # 3814
0052         ?C0466:
0052 110000      R     ACALL   L?0776
0055 110000      R     ACALL   L?0800
0058 7408              MOV     A,#08H
005A         ?C0761:
005A 8026              SJMP    ?C0765
                                           ; SOURCE LINE # 3815
005C         ?C0467:
005C 110000      R     ACALL   L?0776
005F 110000      R     ACALL   L?0800
0062 7409              MOV     A,#09H
0064         ?C0762:
0064 801C              SJMP    ?C0765
                                           ; SOURCE LINE # 3816
                                           ; SOURCE LINE # 3817
0066         ?C0469:
0066 110000      R     ACALL   L?0776
0069 110000      R     ACALL   L?0800
006C 740A              MOV     A,#0AH
006E         ?C0763:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 256 

006E 8012              SJMP    ?C0765
                                           ; SOURCE LINE # 3818
0070         ?C0470:
0070 110000      R     ACALL   L?0776
0073 110000      R     ACALL   L?0800
0076 740B              MOV     A,#0BH
0078         ?C0764:
0078 8008              SJMP    ?C0765
                                           ; SOURCE LINE # 3819
007A         ?C0471:
007A         ?C0759:
007A 110000      R     ACALL   L?0776
007D 110000      R     ACALL   L?0800
0080 7405              MOV     A,#05H
0082         ?C0765:
0082 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 3820
0085         ?C0462:
                                           ; SOURCE LINE # 3821
0085 110000      R     ACALL   L?0776
0088 110000      R     ACALL   L?0785
008B FF                MOV     R7,A
008C 90000000    R     MOV     DPTR,#curr_menu_watchdog_focus
0090 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 3822
0091 110000      R     ACALL   L?0789
0094 110000      R     ACALL   L?0843
0097 EF                MOV     A,R7
                                           ; SOURCE LINE # 3823
0098 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 3825
009B 110000      R     ACALL   L?0775
009E 110000      R     ACALL   L?0779
00A1 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_main_input (END)

             ; FUNCTION proc_main_audio (BEGIN)
                                           ; SOURCE LINE # 3828
                                           ; SOURCE LINE # 3829
                                           ; SOURCE LINE # 3830
                                           ; SOURCE LINE # 3831
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_audio_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_audio_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_audio_page
                                           ; SOURCE LINE # 3832
                                           ; SOURCE LINE # 3833
                                           ; SOURCE LINE # 3834
000D 110000      R     ACALL   L?0771
0010 110000      R     ACALL   L?0779
0013 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_main_audio (END)

             ; FUNCTION proc_main_system (BEGIN)
                                           ; SOURCE LINE # 3837
                                           ; SOURCE LINE # 3838
                                           ; SOURCE LINE # 3839
                                           ; SOURCE LINE # 3840
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 257 

0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_system_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_system_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_system_page
                                           ; SOURCE LINE # 3842
000D 110000      R     ACALL   L?0775
0010 110000      R     ACALL   L?0800
0013 7405              MOV     A,#05H
                                           ; SOURCE LINE # 3843
                                           ; SOURCE LINE # 3844
0015 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 3845
0018 110000      R     ACALL   L?0816
                                           ; SOURCE LINE # 3846
001B 110000      R     ACALL   L?0775
001E 110000      R     ACALL   L?0779
0021 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_main_system (END)

             ; FUNCTION proc_main_gps (BEGIN)
                                           ; SOURCE LINE # 3849
                                           ; SOURCE LINE # 3850
                                           ; SOURCE LINE # 3851
                                           ; SOURCE LINE # 3852
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_gps_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_gps_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_gps_page
                                           ; SOURCE LINE # 3853
                                           ; SOURCE LINE # 3854
                                           ; SOURCE LINE # 3855
000D 110000      R     ACALL   L?0771
0010 110000      R     ACALL   L?0779
0013 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_main_gps (END)

             ; FUNCTION proc_main_phone (BEGIN)
                                           ; SOURCE LINE # 3858
                                           ; SOURCE LINE # 3859
                                           ; SOURCE LINE # 3860
                                           ; SOURCE LINE # 3861
                                           ; SOURCE LINE # 3862
                                           ; SOURCE LINE # 3863
                                           ; SOURCE LINE # 3864
0000 110000      R     ACALL   L?0769
0003 110000      R     ACALL   L?0779
0006 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_main_phone (END)

             ; FUNCTION proc_main_info (BEGIN)
                                           ; SOURCE LINE # 3867
                                           ; SOURCE LINE # 3868
                                           ; SOURCE LINE # 3869
                                           ; SOURCE LINE # 3870
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 258 

0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_carinfo_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_carinfo_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_carinfo_page
                                           ; SOURCE LINE # 3871
                                           ; SOURCE LINE # 3872
                                           ; SOURCE LINE # 3873
000D 110000      R     ACALL   L?0771
0010 110000      R     ACALL   L?0779
0013 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_main_info (END)

             ; FUNCTION proc_input_bg (BEGIN)
                                           ; SOURCE LINE # 3894
                                           ; SOURCE LINE # 3895
                                           ; SOURCE LINE # 3902
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_input_bg (END)

             ; FUNCTION proc_input_cvbs (BEGIN)
                                           ; SOURCE LINE # 3916
                                           ; SOURCE LINE # 3917
                                           ; SOURCE LINE # 3918
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 3919
0006 600E              JZ      ?C0479
                                           ; SOURCE LINE # 3922
0008 E4                CLR     A
0009 FF                MOV     R7,A
000A 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3925
000D 110000      E     ACALL   ChangeCVBS
                                           ; SOURCE LINE # 3930
0010 110000      R     ACALL   L?0911
0013 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3931
0016         ?C0479:
                                           ; SOURCE LINE # 3933
0016 110000      R     ACALL   L?0776
0019 110000      R     ACALL   L?0785
001C FF                MOV     R7,A
001D 110000      R     ACALL   L?0789
0020 110000      R     ACALL   L?0843
                                           ; SOURCE LINE # 3934
0023 110000      R     ACALL   L?0868
                                           ; SOURCE LINE # 3935
0026 110000      R     ACALL   L?0775
0029 2404              ADD     A,#04H
002B 110000      R     ACALL   L?0786
002E 2F                ADD     A,R7
002F FD                MOV     R5,A
0030 E4                CLR     A
0031 FF                MOV     R7,A
0032 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3940
0035 110000      R     ACALL   L?0776
0038 110000      R     ACALL   L?0785
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 259 

003B FD                MOV     R5,A
003C E4                CLR     A
003D FF                MOV     R7,A
003E 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_cvbs (END)

             ; FUNCTION proc_input_svideo (BEGIN)
                                           ; SOURCE LINE # 3943
                                           ; SOURCE LINE # 3944
                                           ; SOURCE LINE # 3945
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 3946
0006 6401              XRL     A,#01H
0008 600E              JZ      ?C0481
                                           ; SOURCE LINE # 3949
000A E4                CLR     A
000B FF                MOV     R7,A
000C 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3952
000F 110000      E     ACALL   ChangeSVIDEO
                                           ; SOURCE LINE # 3957
0012 110000      R     ACALL   L?0911
0015 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3958
0018         ?C0481:
                                           ; SOURCE LINE # 3960
0018 110000      R     ACALL   L?0776
001B 110000      R     ACALL   L?0785
001E FF                MOV     R7,A
001F 110000      R     ACALL   L?0789
0022 110000      R     ACALL   L?0843
                                           ; SOURCE LINE # 3961
0025 110000      R     ACALL   L?0868
                                           ; SOURCE LINE # 3962
0028 110000      R     ACALL   L?0775
002B 2404              ADD     A,#04H
002D 110000      R     ACALL   L?0786
0030 2F                ADD     A,R7
0031 FD                MOV     R5,A
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3966
0037 110000      R     ACALL   L?0776
003A 110000      R     ACALL   L?0785
003D FD                MOV     R5,A
003E E4                CLR     A
003F FF                MOV     R7,A
0040 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_svideo (END)

             ; FUNCTION proc_input_ypbpr (BEGIN)
                                           ; SOURCE LINE # 3969
                                           ; SOURCE LINE # 3970
                                           ; SOURCE LINE # 3971
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 3972
0006 6402              XRL     A,#02H
0008 600E              JZ      ?C0483
                                           ; SOURCE LINE # 3975
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 260 

000A E4                CLR     A
000B FF                MOV     R7,A
000C 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3979
000F 110000      E     ACALL   ChangeComponent
                                           ; SOURCE LINE # 3987
0012 110000      R     ACALL   L?0912
0015 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 3988
0018         ?C0483:
                                           ; SOURCE LINE # 3990
0018 110000      R     ACALL   L?0776
001B 110000      R     ACALL   L?0785
001E FF                MOV     R7,A
001F 110000      R     ACALL   L?0789
0022 110000      R     ACALL   L?0843
                                           ; SOURCE LINE # 3991
0025 110000      R     ACALL   L?0869
                                           ; SOURCE LINE # 3992
0028 110000      R     ACALL   L?0775
002B 2404              ADD     A,#04H
002D 110000      R     ACALL   L?0786
0030 2F                ADD     A,R7
0031 FD                MOV     R5,A
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 3996
0037 110000      R     ACALL   L?0776
003A 110000      R     ACALL   L?0785
003D FD                MOV     R5,A
003E E4                CLR     A
003F FF                MOV     R7,A
0040 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_ypbpr (END)

             ; FUNCTION proc_input_pc (BEGIN)
                                           ; SOURCE LINE # 3999
                                           ; SOURCE LINE # 4000
                                           ; SOURCE LINE # 4001
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 4002
0006 6403              XRL     A,#03H
0008 600E              JZ      ?C0485
                                           ; SOURCE LINE # 4005
000A E4                CLR     A
000B FF                MOV     R7,A
000C 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4009
000F 110000      E     ACALL   ChangePC
                                           ; SOURCE LINE # 4016
0012 110000      R     ACALL   L?0912
0015 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4017
0018         ?C0485:
                                           ; SOURCE LINE # 4019
0018 110000      R     ACALL   L?0776
001B 110000      R     ACALL   L?0785
001E FF                MOV     R7,A
001F 110000      R     ACALL   L?0789
0022 110000      R     ACALL   L?0843
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 261 

                                           ; SOURCE LINE # 4020
0025 110000      R     ACALL   L?0869
                                           ; SOURCE LINE # 4021
0028 110000      R     ACALL   L?0775
002B 2404              ADD     A,#04H
002D 110000      R     ACALL   L?0786
0030 2F                ADD     A,R7
0031 FD                MOV     R5,A
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 4025
0037 110000      R     ACALL   L?0776
003A 110000      R     ACALL   L?0785
003D FD                MOV     R5,A
003E E4                CLR     A
003F FF                MOV     R7,A
0040 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_pc (END)

             ; FUNCTION proc_input_lvds (BEGIN)
                                           ; SOURCE LINE # 4056
                                           ; SOURCE LINE # 4057
                                           ; SOURCE LINE # 4058
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 4059
0006 6408              XRL     A,#08H
0008 600E              JZ      ?C0487
                                           ; SOURCE LINE # 4062
000A E4                CLR     A
000B FF                MOV     R7,A
000C 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4066
000F 110000      E     ACALL   ChangeLVDSRx
                                           ; SOURCE LINE # 4071
0012 110000      R     ACALL   L?0912
0015 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4072
0018         ?C0487:
                                           ; SOURCE LINE # 4074
0018 110000      R     ACALL   L?0776
001B 110000      R     ACALL   L?0785
001E FF                MOV     R7,A
001F 110000      R     ACALL   L?0789
0022 110000      R     ACALL   L?0843
                                           ; SOURCE LINE # 4075
0025 110000      R     ACALL   L?0869
                                           ; SOURCE LINE # 4076
0028 110000      R     ACALL   L?0775
002B 2404              ADD     A,#04H
002D 110000      R     ACALL   L?0786
0030 2F                ADD     A,R7
0031 FD                MOV     R5,A
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 4080
0037 110000      R     ACALL   L?0776
003A 110000      R     ACALL   L?0785
003D FD                MOV     R5,A
003E E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 262 

003F FF                MOV     R7,A
0040 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_lvds (END)

             ; FUNCTION proc_input_hdmi (BEGIN)
                                           ; SOURCE LINE # 4085
                                           ; SOURCE LINE # 4086
                                           ; SOURCE LINE # 4087
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 4088
0006 6405              XRL     A,#05H
0008 6013              JZ      ?C0489
000A E0                MOVX    A,@DPTR
000B 6406              XRL     A,#06H
000D 600E              JZ      ?C0489
                                           ; SOURCE LINE # 4092
000F E4                CLR     A
0010 FF                MOV     R7,A
0011 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4095
0014 110000      E     ACALL   ChangeHDMI
                                           ; SOURCE LINE # 4100
0017 110000      R     ACALL   L?0912
001A 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4101
001D         ?C0489:
                                           ; SOURCE LINE # 4103
001D 110000      R     ACALL   L?0776
0020 110000      R     ACALL   L?0785
0023 FF                MOV     R7,A
0024 110000      R     ACALL   L?0789
0027 110000      R     ACALL   L?0843
                                           ; SOURCE LINE # 4104
002A 110000      R     ACALL   L?0869
                                           ; SOURCE LINE # 4105
002D 110000      R     ACALL   L?0775
0030 2404              ADD     A,#04H
0032 110000      R     ACALL   L?0786
0035 2F                ADD     A,R7
0036 FD                MOV     R5,A
0037 E4                CLR     A
0038 FF                MOV     R7,A
0039 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 4109
003C 110000      R     ACALL   L?0776
003F 110000      R     ACALL   L?0785
0042 FD                MOV     R5,A
0043 E4                CLR     A
0044 FF                MOV     R7,A
0045 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_hdmi (END)

             ; FUNCTION proc_input_bt656 (BEGIN)
                                           ; SOURCE LINE # 4112
                                           ; SOURCE LINE # 4113
                                           ; SOURCE LINE # 4115
0000 110000      E     ACALL   GetInputMain
0003 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 4116
0006 6407              XRL     A,#07H
0008 600E              JZ      ?C0491
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 263 

                                           ; SOURCE LINE # 4118
000A E4                CLR     A
000B FF                MOV     R7,A
000C 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4122
000F 110000      E     ACALL   ChangeBT656Loop
                                           ; SOURCE LINE # 4127
0012 110000      R     ACALL   L?0912
0015 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4128
0018         ?C0491:
                                           ; SOURCE LINE # 4130
0018 110000      R     ACALL   L?0776
001B 110000      R     ACALL   L?0785
001E FF                MOV     R7,A
001F 110000      R     ACALL   L?0789
0022 110000      R     ACALL   L?0843
                                           ; SOURCE LINE # 4131
0025 110000      R     ACALL   L?0869
                                           ; SOURCE LINE # 4132
0028 110000      R     ACALL   L?0775
002B 2404              ADD     A,#04H
002D 110000      R     ACALL   L?0786
0030 2F                ADD     A,R7
0031 FD                MOV     R5,A
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 4136
0037 110000      R     ACALL   L?0776
003A 110000      R     ACALL   L?0785
003D FD                MOV     R5,A
003E E4                CLR     A
003F FF                MOV     R7,A
0040 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_input_bt656 (END)

             ; FUNCTION proc_input_setting (BEGIN)
                                           ; SOURCE LINE # 4141
                                           ; SOURCE LINE # 4142
                                           ; SOURCE LINE # 4143
0000 110000      R     ACALL   push_menu_stack_level
                                           ; SOURCE LINE # 4145
0003 110000      E     ACALL   GetInputMain
0006 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 4146
0009 BF030E            CJNE    R7,#03H,?C0493
                                           ; SOURCE LINE # 4147
000C 7400        E     MOV     A,#MBYTE menu_apc_list_page
000E 110000      R     ACALL   L?1019
0011 7400        E     MOV     A,#HIGH menu_apc_list_page
0013 F0                MOVX    @DPTR,A
0014 A3                INC     DPTR
0015 7400        E     MOV     A,#LOW menu_apc_list_page
0017 F0                MOVX    @DPTR,A
0018 8035              SJMP    ?C0494
001A         ?C0493:
                                           ; SOURCE LINE # 4148
001A 110000      R     ACALL   L?1016
001D B4040E            CJNE    A,#04H,?C0495
                                           ; SOURCE LINE # 4149
0020 7400        E     MOV     A,#MBYTE menu_rgb_list_page
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 264 

0022 110000      R     ACALL   L?1019
0025 7400        E     MOV     A,#HIGH menu_rgb_list_page
0027 F0                MOVX    @DPTR,A
0028 A3                INC     DPTR
0029 7400        E     MOV     A,#LOW menu_rgb_list_page
002B F0                MOVX    @DPTR,A
002C 8021              SJMP    ?C0494
002E         ?C0495:
                                           ; SOURCE LINE # 4150
002E EF                MOV     A,R7
002F 6405              XRL     A,#05H
0031 6004              JZ      ?C0498
0033 EF                MOV     A,R7
0034 B40611            CJNE    A,#06H,?C0497
0037         ?C0498:
                                           ; SOURCE LINE # 4151
0037 90000000    R     MOV     DPTR,#curr_menu
003B 7400        E     MOV     A,#MBYTE menu_hdmi_list_page
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 7400        E     MOV     A,#HIGH menu_hdmi_list_page
0041 F0                MOVX    @DPTR,A
0042 A3                INC     DPTR
0043 7400        E     MOV     A,#LOW menu_hdmi_list_page
0045 F0                MOVX    @DPTR,A
0046 8007              SJMP    ?C0494
0048         ?C0497:
                                           ; SOURCE LINE # 4153
0048 90000000    R     MOV     DPTR,#curr_menu
004C 110000      R     ACALL   L?1066
004F         ?C0494:
                                           ; SOURCE LINE # 4155
004F 110000      R     ACALL   L?0776
0052 2403              ADD     A,#03H
0054 110000      R     ACALL   L?0786
0057 FF                MOV     R7,A
0058 110000      R     ACALL   L?0789
005B 110000      R     ACALL   L?0800
005E EF                MOV     A,R7
                                           ; SOURCE LINE # 4156
                                           ; SOURCE LINE # 4158
005F 110000      R     ACALL   L?0773
0062 110000      R     ACALL   L?0779
0065 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_input_setting (END)

             ; FUNCTION proc_audio_bg (BEGIN)
                                           ; SOURCE LINE # 4177
                                           ; SOURCE LINE # 4178
                                           ; SOURCE LINE # 4179
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_audio_bg (END)

             ; FUNCTION proc_system_bg (BEGIN)
                                           ; SOURCE LINE # 4190
                                           ; SOURCE LINE # 4191
                                           ; SOURCE LINE # 4193
0000 90000000    R     MOV     DPTR,#touch_not_detected
0004 7401              MOV     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4195
0007 110000      R     ACALL   proc_menu_bg
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 265 

                                           ; SOURCE LINE # 4198
000A 90000000    R     MOV     DPTR,#touch_not_detected
000E E0                MOVX    A,@DPTR
000F 6007              JZ      ?C0503
                                           ; SOURCE LINE # 4203
0011 7D04              MOV     R5,#04H
0013 7F07              MOV     R7,#07H
0015 110000      R     ACALL   _MenuDrawDeactivatedItemImage
                                           ; SOURCE LINE # 4204
                                           ; SOURCE LINE # 4205
0018         ?C0503:
0018 22                RET     
             ; FUNCTION proc_system_bg (END)

             ; FUNCTION proc_system_touch (BEGIN)
                                           ; SOURCE LINE # 4207
                                           ; SOURCE LINE # 4208
                                           ; SOURCE LINE # 4210
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7404              MOV     A,#04H
                                           ; SOURCE LINE # 4211
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 4212
                                           ; SOURCE LINE # 4215
000B 110000      R     ACALL   L?0857
000E 110000      R     ACALL   L?1078
                                           ; SOURCE LINE # 4216
0011 110000      R     ACALL   L?0775
0014 2403              ADD     A,#03H
0016 110000      R     ACALL   L?0786
0019 FF                MOV     R7,A
001A 110000      R     ACALL   L?0789
001D 110000      R     ACALL   L?0800
0020 EF                MOV     A,R7
                                           ; SOURCE LINE # 4217
                                           ; SOURCE LINE # 4218
0021 110000      R     ACALL   L?0773
0024 110000      R     ACALL   L?0779
0027 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_system_touch (END)

             ; FUNCTION proc_system_display (BEGIN)
                                           ; SOURCE LINE # 4222
                                           ; SOURCE LINE # 4223
                                           ; SOURCE LINE # 4224
0000 110000      R     ACALL   L?0776
                                           ; SOURCE LINE # 4225
0003 110000      R     ACALL   L?0816
                                           ; SOURCE LINE # 4226
                                           ; SOURCE LINE # 4228
0006 110000      R     ACALL   L?0857
0009 7400        E     MOV     A,#MBYTE menu_display_page
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D 7400        E     MOV     A,#HIGH menu_display_page
000F F0                MOVX    @DPTR,A
0010 A3                INC     DPTR
0011 7400        E     MOV     A,#LOW menu_display_page
                                           ; SOURCE LINE # 4229
0013 110000      R     ACALL   L?0775
0016 2403              ADD     A,#03H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 266 

0018 110000      R     ACALL   L?0786
001B FF                MOV     R7,A
001C 110000      R     ACALL   L?0789
001F 110000      R     ACALL   L?0800
0022 EF                MOV     A,R7
                                           ; SOURCE LINE # 4230
                                           ; SOURCE LINE # 4231
0023 110000      R     ACALL   L?0773
0026 110000      R     ACALL   L?0779
0029 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_system_display (END)

             ; FUNCTION proc_system_btooth (BEGIN)
                                           ; SOURCE LINE # 4233
                                           ; SOURCE LINE # 4234
                                           ; SOURCE LINE # 4235
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7406              MOV     A,#06H
                                           ; SOURCE LINE # 4236
0008 110000      R     ACALL   L?0817
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4237
                                           ; SOURCE LINE # 4240
                                           ; SOURCE LINE # 4241
                                           ; SOURCE LINE # 4242
                                           ; SOURCE LINE # 4243
000C 110000      R     ACALL   L?0769
000F 110000      R     ACALL   L?0779
0012 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_system_btooth (END)

             ; FUNCTION proc_system_restore (BEGIN)
                                           ; SOURCE LINE # 4245
                                           ; SOURCE LINE # 4246
                                           ; SOURCE LINE # 4247
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7407              MOV     A,#07H
                                           ; SOURCE LINE # 4248
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 4249
                                           ; SOURCE LINE # 4251
000B 110000      R     ACALL   L?0858
000E 7400        E     MOV     A,#MBYTE menu_restore_page
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 7400        E     MOV     A,#HIGH menu_restore_page
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 7400        E     MOV     A,#LOW menu_restore_page
                                           ; SOURCE LINE # 4252
                                           ; SOURCE LINE # 4253
                                           ; SOURCE LINE # 4254
0018 110000      R     ACALL   L?0771
001B 110000      R     ACALL   L?0779
001E 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_system_restore (END)

             ; FUNCTION proc_system_info (BEGIN)
                                           ; SOURCE LINE # 4256
                                           ; SOURCE LINE # 4257
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 267 

                                           ; SOURCE LINE # 4260
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0843
0006 7408              MOV     A,#08H
                                           ; SOURCE LINE # 4261
0008 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 4262
                                           ; SOURCE LINE # 4264
000B 110000      R     ACALL   L?0858
000E 7400        E     MOV     A,#MBYTE menu_sys_info_page
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 7400        E     MOV     A,#HIGH menu_sys_info_page
0014 F0                MOVX    @DPTR,A
0015 A3                INC     DPTR
0016 7400        E     MOV     A,#LOW menu_sys_info_page
                                           ; SOURCE LINE # 4265
                                           ; SOURCE LINE # 4266
                                           ; SOURCE LINE # 4267
0018 110000      R     ACALL   L?0771
001B 110000      R     ACALL   L?0779
001E 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 4269
0021 7D01              MOV     R5,#01H
0023 E4                CLR     A
0024 FF                MOV     R7,A
0025 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 4270
0028 7D01              MOV     R5,#01H
002A 7F01              MOV     R7,#01H
002C 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 4274
002F 7B00        R     MOV     R3,#MBYTE ?SC_123
0031 7A00        R     MOV     R2,#HIGH ?SC_123
0033 7900        R     MOV     R1,#LOW ?SC_123
0035 E4                CLR     A
0036 FF                MOV     R7,A
0037 110000      R     ACALL   _MenuFontOsdItemString
                                           ; SOURCE LINE # 4276
003A 110000      R     ACALL   L?1048
003D E4                CLR     A
003E FF                MOV     R7,A
003F 110000      E     ACALL   _TWhtos
                                           ; SOURCE LINE # 4277
0042 90000000    E     MOV     DPTR,#?_TWstrcat?BYTE+03H
0046 7400        R     MOV     A,#MBYTE ?SC_127
0048 F0                MOVX    @DPTR,A
0049 A3                INC     DPTR
004A 7400        R     MOV     A,#HIGH ?SC_127
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E 7400        R     MOV     A,#LOW ?SC_127
0050 F0                MOVX    @DPTR,A
0051 110000      R     ACALL   L?1048
0054 110000      E     ACALL   _TWstrcat
                                           ; SOURCE LINE # 4278
0057 110000      R     ACALL   L?1046
005A 7F44              MOV     R7,#044H
005C 110000      E     ACALL   _TWhtos
                                           ; SOURCE LINE # 4279
005F 110000      R     ACALL   L?1020
0062 110000      R     ACALL   L?1049
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 268 

0065 110000      E     ACALL   _TWstrcat
                                           ; SOURCE LINE # 4280
0068 110000      R     ACALL   L?1049
006B 7F01              MOV     R7,#01H
006D 010000      R     AJMP    _MenuFontOsdItemString
             ; FUNCTION proc_system_info (END)

             ; FUNCTION MenuIsSystemPage (BEGIN)
                                           ; SOURCE LINE # 4284
                                           ; SOURCE LINE # 4285
                                           ; SOURCE LINE # 4286
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 6400        E     XRL     A,#MBYTE menu_system_page
0008 700A              JNZ     ?C0716
000A 7400        E     MOV     A,#LOW menu_system_page
000C 6582              XRL     A,DPL
000E 7004              JNZ     ?C0716
0010 7400        E     MOV     A,#HIGH menu_system_page
0012 6583              XRL     A,DPH
0014         ?C0716:
0014 7F00              MOV     R7,#00H
0016 7002              JNZ     ?C0509
0018 7F01              MOV     R7,#01H
001A         ?C0509:
                                           ; SOURCE LINE # 4287
                                           ; SOURCE LINE # 4288
001A         ?C0510:
001A 22                RET     
             ; FUNCTION MenuIsSystemPage (END)

             ; FUNCTION proc_gps_bg (BEGIN)
                                           ; SOURCE LINE # 4299
                                           ; SOURCE LINE # 4300
                                           ; SOURCE LINE # 4301
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_gps_bg (END)

             ; FUNCTION proc_phone_bg (BEGIN)
                                           ; SOURCE LINE # 4316
                                           ; SOURCE LINE # 4317
                                           ; SOURCE LINE # 4319
0000 110000      R     ACALL   L?0776
0003 2408              ADD     A,#08H
0005 110000      R     ACALL   L?0781
0008 90000000    R     MOV     DPTR,#text_info
000C 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 4321
000F 110000      R     ACALL   proc_menu_bg
                                           ; SOURCE LINE # 4322
0012 E4                CLR     A
0013 FD                MOV     R5,A
0014 FF                MOV     R7,A
0015 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 4323
0018 E4                CLR     A
0019 FD                MOV     R5,A
001A 7F01              MOV     R7,#01H
001C 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 4325
001F 7B00        R     MOV     R3,#MBYTE ?SC_129
0021 7A00        R     MOV     R2,#HIGH ?SC_129
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 269 

0023 7900        R     MOV     R1,#LOW ?SC_129
0025 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4326
0028 E4                CLR     A
0029 90000000    R     MOV     DPTR,#phone_start
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4327
002E 90000000    R     MOV     DPTR,#i
0032 F0                MOVX    @DPTR,A
0033         ?C0512:
0033 90000000    R     MOV     DPTR,#text_info
0037 110000      R     ACALL   L?0777
003A 2408              ADD     A,#08H
003C 110000      R     ACALL   L?0786
003F FF                MOV     R7,A
0040 90000000    R     MOV     DPTR,#i
0044 E0                MOVX    A,@DPTR
0045 C3                CLR     C
0046 9F                SUBB    A,R7
0047 5032              JNC     ?C0513
                                           ; SOURCE LINE # 4328
0049 E4                CLR     A
004A A3                INC     DPTR
004B F0                MOVX    @DPTR,A
004C         ?C0515:
004C 90000000    R     MOV     DPTR,#text_info
0050 110000      R     ACALL   L?0777
0053 2407              ADD     A,#07H
0055 110000      R     ACALL   L?0786
0058 FF                MOV     R7,A
0059 90000000    R     MOV     DPTR,#j
005D E0                MOVX    A,@DPTR
005E C3                CLR     C
005F 9F                SUBB    A,R7
0060 5010              JNC     ?C0514
                                           ; SOURCE LINE # 4329
0062 E4                CLR     A
0063 FD                MOV     R5,A
0064 7F20              MOV     R7,#020H
0066 110000      R     ACALL   _proc_phone_digit
0069 90000000    R     MOV     DPTR,#j
006D E0                MOVX    A,@DPTR
006E 04                INC     A
006F F0                MOVX    @DPTR,A
0070 80DA              SJMP    ?C0515
0072         ?C0514:
0072 90000000    R     MOV     DPTR,#i
0076 E0                MOVX    A,@DPTR
0077 04                INC     A
0078 F0                MOVX    @DPTR,A
0079 80B8              SJMP    ?C0512
007B         ?C0513:
                                           ; SOURCE LINE # 4330
007B E4                CLR     A
007C 90000000    R     MOV     DPTR,#phone_start
0080 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4331
0081 FF                MOV     R7,A
0082 010000      R     AJMP    _proc_phone_cursor
             ; FUNCTION proc_phone_bg (END)

             ; FUNCTION proc_phone_return (BEGIN)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 270 

                                           ; SOURCE LINE # 4333
                                           ; SOURCE LINE # 4334
                                           ; SOURCE LINE # 4336
0000 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 4337
0003 010000      R     AJMP    proc_return_icon
             ; FUNCTION proc_phone_return (END)

             ; FUNCTION _proc_phone_cursor (BEGIN)
                                           ; SOURCE LINE # 4340
0000 90000000    R     MOV     DPTR,#start
0004 EF                MOV     A,R7
                                           ; SOURCE LINE # 4341
                                           ; SOURCE LINE # 4343
0005 110000      R     ACALL   L?0775
0008 2408              ADD     A,#08H
000A 110000      R     ACALL   L?0781
000D 90000000    R     MOV     DPTR,#text_info
0011 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 4345
0014 90000000    R     MOV     DPTR,#ch
0018 745F              MOV     A,#05FH
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4346
001B 7F01              MOV     R7,#01H
001D 110000      E     ACALL   _FOsdBlinkOnOff
                                           ; SOURCE LINE # 4347
0020 90000000    R     MOV     DPTR,#text_info
0024 110000      R     ACALL   L?0777
0027 2401              ADD     A,#01H
0029 110000      R     ACALL   L?0794
002C FF                MOV     R7,A
002D 90000000    R     MOV     DPTR,#start
0031 E0                MOVX    A,@DPTR
0032 90000000    R     MOV     DPTR,#text_info
0036 110000      R     ACALL   L?0867
0039 240B              ADD     A,#0BH
003B 110000      R     ACALL   L?0786
003E FD                MOV     R5,A
003F 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 4348
0042 90000000    R     MOV     DPTR,#ch
0046 110000      R     ACALL   L?0822
0049 EF                MOV     A,R7
004A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4349
004B E4                CLR     A
004C FF                MOV     R7,A
004D 010000      E     AJMP    _FOsdBlinkOnOff
             ; FUNCTION _proc_phone_cursor (END)

             ; FUNCTION _proc_phone_digit (BEGIN)
                                           ; SOURCE LINE # 4352
0000 90000000    R     MOV     DPTR,#fCursor
0004 ED                MOV     A,R5
0005 F0                MOVX    @DPTR,A
0006 90000000    R     MOV     DPTR,#ch
000A EF                MOV     A,R7
                                           ; SOURCE LINE # 4353
                                           ; SOURCE LINE # 4355
000B 110000      R     ACALL   L?0775
000E 2408              ADD     A,#08H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 271 

0010 110000      R     ACALL   L?0781
0013 90000000    R     MOV     DPTR,#text_info
0017 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 4359
001A 110000      E     ACALL   _IsDigit
001D EF                MOV     A,R7
001E 6038              JZ      ?C0521
                                           ; SOURCE LINE # 4360
0020 90000000    R     MOV     DPTR,#text_info
0024 110000      R     ACALL   L?0777
0027 240C              ADD     A,#0CH
0029 110000      R     ACALL   L?0786
002C 90000000    R     MOV     DPTR,#palette
0030 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4361
0031 A3                INC     DPTR
0032 110000      R     ACALL   L?0921
0035 110000      R     ACALL   L?0794
0038 FF                MOV     R7,A
0039 90000000    R     MOV     DPTR,#phone_start
003D E0                MOVX    A,@DPTR
003E 90000000    R     MOV     DPTR,#palette
0042 110000      R     ACALL   L?1047
0045 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 4362
0048 90000000    R     MOV     DPTR,#ch
004C E0                MOVX    A,@DPTR
004D C3                CLR     C
004E 9430              SUBB    A,#030H
0050 75F003            MOV     B,#03H
0053 A4                MUL     AB
0054 2480              ADD     A,#080H
                                           ; SOURCE LINE # 4363
                                           ; SOURCE LINE # 4364
0056 807D              SJMP    ?C0766
0058         ?C0521:
                                           ; SOURCE LINE # 4365
                                           ; SOURCE LINE # 4366
0058 90000000    R     MOV     DPTR,#text_info
005C 110000      R     ACALL   L?0777
005F 240B              ADD     A,#0BH
0061 110000      R     ACALL   L?0786
0064 90000000    R     MOV     DPTR,#palette
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4367
0069 90000000    R     MOV     DPTR,#ch
006D E0                MOVX    A,@DPTR
006E 640B              XRL     A,#0BH
0070 7046              JNZ     ?C0523
                                           ; SOURCE LINE # 4368
0072 7420              MOV     A,#020H
0074 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4369
0075 90000000    R     MOV     DPTR,#text_info
0079 110000      R     ACALL   L?0921
007C 110000      R     ACALL   L?0794
007F 110000      R     ACALL   L?0865
0082 240B              ADD     A,#0BH
0084 110000      R     ACALL   L?0786
0087 FD                MOV     R5,A
0088 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 4370
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 272 

008B 110000      R     ACALL   L?0821
008E EF                MOV     A,R7
008F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4371
0090 90000000    R     MOV     DPTR,#phone_start
0094 E0                MOVX    A,@DPTR
0095 6002              JZ      ?C0524
                                           ; SOURCE LINE # 4372
0097 14                DEC     A
0098 F0                MOVX    @DPTR,A
0099         ?C0524:
                                           ; SOURCE LINE # 4373
0099 90000000    R     MOV     DPTR,#text_info
009D 110000      R     ACALL   L?0777
00A0 2401              ADD     A,#01H
00A2 110000      R     ACALL   L?0794
00A5 110000      R     ACALL   L?0865
00A8 240B              ADD     A,#0BH
00AA 110000      R     ACALL   L?0786
00AD FD                MOV     R5,A
00AE 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 4374
00B1 110000      R     ACALL   L?0821
00B4 EF                MOV     A,R7
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4375
00B6 8029              SJMP    ?C0522
00B8         ?C0523:
                                           ; SOURCE LINE # 4376
                                           ; SOURCE LINE # 4377
00B8 90000000    R     MOV     DPTR,#text_info
00BC 110000      R     ACALL   L?0777
00BF 2401              ADD     A,#01H
00C1 110000      R     ACALL   L?0794
00C4 110000      R     ACALL   L?0866
00C7 240B              ADD     A,#0BH
00C9 110000      R     ACALL   L?0786
00CC FD                MOV     R5,A
00CD 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 4378
00D0 90000000    R     MOV     DPTR,#ch
00D4 E0                MOVX    A,@DPTR
00D5         ?C0766:
00D5 110000      R     ACALL   L?0823
00D8 EF                MOV     A,R7
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4379
00DA 90000000    R     MOV     DPTR,#phone_start
00DE E0                MOVX    A,@DPTR
00DF 04                INC     A
00E0 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4380
                                           ; SOURCE LINE # 4381
00E1         ?C0522:
                                           ; SOURCE LINE # 4382
00E1 90000000    R     MOV     DPTR,#fCursor
00E5 E0                MOVX    A,@DPTR
00E6 6009              JZ      ?C0526
                                           ; SOURCE LINE # 4383
00E8 90000000    R     MOV     DPTR,#phone_start
00EC E0                MOVX    A,@DPTR
00ED FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 273 

00EE 110000      R     ACALL   _proc_phone_cursor
00F1         ?C0526:
                                           ; SOURCE LINE # 4386
00F1 90000000    R     MOV     DPTR,#phone_start
00F5 E0                MOVX    A,@DPTR
00F6 C3                CLR     C
00F7 941E              SUBB    A,#01EH
00F9 4003              JC      ?C0528
                                           ; SOURCE LINE # 4387
00FB 741E              MOV     A,#01EH
00FD F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4389
00FE         ?C0528:
00FE 22                RET     
             ; FUNCTION _proc_phone_digit (END)

             ; FUNCTION _proc_phone_string (BEGIN)
                                           ; SOURCE LINE # 4390
0000 90000000    R     MOV     DPTR,#str
0004 110000      R     ACALL   L?1056
                                           ; SOURCE LINE # 4391
                                           ; SOURCE LINE # 4395
0007 110000      R     ACALL   L?0775
000A 2408              ADD     A,#08H
000C 110000      R     ACALL   L?0781
000F 90000000    R     MOV     DPTR,#text_info
0013 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 4396
0016 90000000    R     MOV     DPTR,#text_info+01H
001A E4                CLR     A
001B 75F00F            MOV     B,#0FH
001E 110000      E     ACALL   ?C?IILDX
                                           ; SOURCE LINE # 4398
0021 90000000    R     MOV     DPTR,#text_info
0025 110000      R     ACALL   L?0777
0028 240B              ADD     A,#0BH
002A 110000      R     ACALL   L?0786
002D FD                MOV     R5,A
002E 90000000    R     MOV     DPTR,#palette
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4399
0033 A3                INC     DPTR
0034 110000      R     ACALL   L?0921
0037 110000      R     ACALL   L?0794
003A FF                MOV     R7,A
003B AEF0              MOV     R6,B
003D 110000      E     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 4400
;---- Variable 'index' assigned to Register 'R7' ----
0040 E4                CLR     A
0041 FF                MOV     R7,A
0042         ?C0529:
                                           ; SOURCE LINE # 4401
0042 90000000    R     MOV     DPTR,#str
0046 110000      R     ACALL   L?0777
0049 F9                MOV     R1,A
004A 110000      E     ACALL   ?C?CLDPTR
004D FE                MOV     R6,A
004E 6013              JZ      ?C0530
                                           ; SOURCE LINE # 4402
0050 110000      R     ACALL   L?0824
0053 EE                MOV     A,R6
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 274 

0054 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4403
0055 90000000    R     MOV     DPTR,#str+01H
0059 E4                CLR     A
005A 75F001            MOV     B,#01H
005D 110000      E     ACALL   ?C?IILDX
                                           ; SOURCE LINE # 4404
0060 0F                INC     R7
                                           ; SOURCE LINE # 4405
0061 80DF              SJMP    ?C0529
0063         ?C0530:
                                           ; SOURCE LINE # 4406
;---- Variable 'i' assigned to Register 'R7' ----
0063         ?C0531:
0063 90000000    R     MOV     DPTR,#text_info
0067 110000      R     ACALL   L?0777
006A 2407              ADD     A,#07H
006C 110000      R     ACALL   L?0786
006F FE                MOV     R6,A
0070 EF                MOV     A,R7
0071 C3                CLR     C
0072 9E                SUBB    A,R6
0073 5008              JNC     ?C0534
                                           ; SOURCE LINE # 4407
0075 110000      R     ACALL   L?0824
0078 E4                CLR     A
0079 F0                MOVX    @DPTR,A
007A 0F                INC     R7
007B 80E6              SJMP    ?C0531
                                           ; SOURCE LINE # 4408
007D         ?C0534:
007D 22                RET     
             ; FUNCTION _proc_phone_string (END)

             ; FUNCTION proc_phone_1 (BEGIN)
                                           ; SOURCE LINE # 4411
                                           ; SOURCE LINE # 4412
                                           ; SOURCE LINE # 4413
0000 7D01              MOV     R5,#01H
0002 7F31              MOV     R7,#031H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4414
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_1 (END)

             ; FUNCTION proc_phone_2 (BEGIN)
                                           ; SOURCE LINE # 4416
                                           ; SOURCE LINE # 4417
                                           ; SOURCE LINE # 4418
0000 7D01              MOV     R5,#01H
0002 7F32              MOV     R7,#032H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4419
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 275 

000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_2 (END)

             ; FUNCTION proc_phone_3 (BEGIN)
                                           ; SOURCE LINE # 4421
                                           ; SOURCE LINE # 4422
                                           ; SOURCE LINE # 4423
0000 7D01              MOV     R5,#01H
0002 7F33              MOV     R7,#033H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4424
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_3 (END)

             ; FUNCTION proc_phone_4 (BEGIN)
                                           ; SOURCE LINE # 4426
                                           ; SOURCE LINE # 4427
                                           ; SOURCE LINE # 4428
0000 7D01              MOV     R5,#01H
0002 7F34              MOV     R7,#034H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4429
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_4 (END)

             ; FUNCTION proc_phone_5 (BEGIN)
                                           ; SOURCE LINE # 4431
                                           ; SOURCE LINE # 4432
                                           ; SOURCE LINE # 4433
0000 7D01              MOV     R5,#01H
0002 7F35              MOV     R7,#035H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4434
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_5 (END)

             ; FUNCTION proc_phone_6 (BEGIN)
                                           ; SOURCE LINE # 4436
                                           ; SOURCE LINE # 4437
                                           ; SOURCE LINE # 4438
0000 7D01              MOV     R5,#01H
0002 7F36              MOV     R7,#036H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4439
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 276 

000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_6 (END)

             ; FUNCTION proc_phone_7 (BEGIN)
                                           ; SOURCE LINE # 4441
                                           ; SOURCE LINE # 4442
                                           ; SOURCE LINE # 4443
0000 7D01              MOV     R5,#01H
0002 7F37              MOV     R7,#037H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4444
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_7 (END)

             ; FUNCTION proc_phone_8 (BEGIN)
                                           ; SOURCE LINE # 4446
                                           ; SOURCE LINE # 4447
                                           ; SOURCE LINE # 4448
0000 7D01              MOV     R5,#01H
0002 7F38              MOV     R7,#038H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4449
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_8 (END)

             ; FUNCTION proc_phone_9 (BEGIN)
                                           ; SOURCE LINE # 4451
                                           ; SOURCE LINE # 4452
                                           ; SOURCE LINE # 4453
0000 7D01              MOV     R5,#01H
0002 7F39              MOV     R7,#039H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4454
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_9 (END)

             ; FUNCTION proc_phone_star (BEGIN)
                                           ; SOURCE LINE # 4456
                                           ; SOURCE LINE # 4457
                                           ; SOURCE LINE # 4458
0000 7D01              MOV     R5,#01H
0002 7F2A              MOV     R7,#02AH
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4459
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 277 

0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_star (END)

             ; FUNCTION proc_phone_0 (BEGIN)
                                           ; SOURCE LINE # 4461
                                           ; SOURCE LINE # 4462
                                           ; SOURCE LINE # 4463
0000 7D01              MOV     R5,#01H
0002 7F30              MOV     R7,#030H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4464
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_0 (END)

             ; FUNCTION proc_phone_sharp (BEGIN)
                                           ; SOURCE LINE # 4466
                                           ; SOURCE LINE # 4467
                                           ; SOURCE LINE # 4468
0000 7D01              MOV     R5,#01H
0002 7F23              MOV     R7,#023H
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4469
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_sharp (END)

             ; FUNCTION proc_phone_dial (BEGIN)
                                           ; SOURCE LINE # 4471
                                           ; SOURCE LINE # 4472
                                           ; SOURCE LINE # 4473
0000 7B00        R     MOV     R3,#MBYTE ?SC_131
0002 7A00        R     MOV     R2,#HIGH ?SC_131
0004 7900        R     MOV     R1,#LOW ?SC_131
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4474
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_dial (END)

             ; FUNCTION proc_phone_up (BEGIN)
                                           ; SOURCE LINE # 4476
                                           ; SOURCE LINE # 4477
                                           ; SOURCE LINE # 4478
0000 7B00        R     MOV     R3,#MBYTE ?SC_139
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 278 

0002 7A00        R     MOV     R2,#HIGH ?SC_139
0004 7900        R     MOV     R1,#LOW ?SC_139
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4479
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_up (END)

             ; FUNCTION proc_phone_down (BEGIN)
                                           ; SOURCE LINE # 4481
                                           ; SOURCE LINE # 4482
                                           ; SOURCE LINE # 4483
0000 7B00        R     MOV     R3,#MBYTE ?SC_142
0002 7A00        R     MOV     R2,#HIGH ?SC_142
0004 7900        R     MOV     R1,#LOW ?SC_142
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4484
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_down (END)

             ; FUNCTION proc_phone_check (BEGIN)
                                           ; SOURCE LINE # 4486
                                           ; SOURCE LINE # 4487
                                           ; SOURCE LINE # 4488
0000 7D01              MOV     R5,#01H
0002 7F0B              MOV     R7,#0BH
0004 110000      R     ACALL   _proc_phone_digit
                                           ; SOURCE LINE # 4489
0007 110000      R     ACALL   L?0776
000A 110000      R     ACALL   L?0785
000D FD                MOV     R5,A
000E E4                CLR     A
000F FF                MOV     R7,A
0010 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_check (END)

             ; FUNCTION proc_phone_left (BEGIN)
                                           ; SOURCE LINE # 4491
                                           ; SOURCE LINE # 4492
                                           ; SOURCE LINE # 4493
0000 7B00        R     MOV     R3,#MBYTE ?SC_147
0002 7A00        R     MOV     R2,#HIGH ?SC_147
0004 7900        R     MOV     R1,#LOW ?SC_147
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4494
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_left (END)

C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 279 

             ; FUNCTION proc_phone_right (BEGIN)
                                           ; SOURCE LINE # 4496
                                           ; SOURCE LINE # 4497
                                           ; SOURCE LINE # 4498
0000 7B00        R     MOV     R3,#MBYTE ?SC_152
0002 7A00        R     MOV     R2,#HIGH ?SC_152
0004 7900        R     MOV     R1,#LOW ?SC_152
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4499
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_right (END)

             ; FUNCTION proc_phone_help (BEGIN)
                                           ; SOURCE LINE # 4501
                                           ; SOURCE LINE # 4502
                                           ; SOURCE LINE # 4503
0000 7B00        R     MOV     R3,#MBYTE ?SC_158
0002 7A00        R     MOV     R2,#HIGH ?SC_158
0004 7900        R     MOV     R1,#LOW ?SC_158
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4504
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_help (END)

             ; FUNCTION proc_phone_dir (BEGIN)
                                           ; SOURCE LINE # 4506
                                           ; SOURCE LINE # 4507
                                           ; SOURCE LINE # 4508
0000 7B00        R     MOV     R3,#MBYTE ?SC_163
0002 7A00        R     MOV     R2,#HIGH ?SC_163
0004 7900        R     MOV     R1,#LOW ?SC_163
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4509
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_dir (END)

             ; FUNCTION proc_phone_set (BEGIN)
                                           ; SOURCE LINE # 4511
                                           ; SOURCE LINE # 4512
                                           ; SOURCE LINE # 4513
0000 7B00        R     MOV     R3,#MBYTE ?SC_173
0002 7A00        R     MOV     R2,#HIGH ?SC_173
0004 7900        R     MOV     R1,#LOW ?SC_173
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4514
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 280 

000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_set (END)

             ; FUNCTION proc_phone_msg (BEGIN)
                                           ; SOURCE LINE # 4516
                                           ; SOURCE LINE # 4517
                                           ; SOURCE LINE # 4518
0000 7B00        R     MOV     R3,#MBYTE ?SC_182
0002 7A00        R     MOV     R2,#HIGH ?SC_182
0004 7900        R     MOV     R1,#LOW ?SC_182
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4519
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_msg (END)

             ; FUNCTION proc_phone_menu (BEGIN)
                                           ; SOURCE LINE # 4521
                                           ; SOURCE LINE # 4522
                                           ; SOURCE LINE # 4523
0000 7B00        R     MOV     R3,#MBYTE ?SC_191
0002 7A00        R     MOV     R2,#HIGH ?SC_191
0004 7900        R     MOV     R1,#LOW ?SC_191
0006 110000      R     ACALL   _proc_phone_string
                                           ; SOURCE LINE # 4524
0009 110000      R     ACALL   L?0776
000C 110000      R     ACALL   L?0785
000F FD                MOV     R5,A
0010 E4                CLR     A
0011 FF                MOV     R7,A
0012 010000      R     AJMP    _MenuDrawCurrImage
             ; FUNCTION proc_phone_menu (END)

             ; FUNCTION proc_carinfo_bg (BEGIN)
                                           ; SOURCE LINE # 4536
                                           ; SOURCE LINE # 4537
                                           ; SOURCE LINE # 4538
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_carinfo_bg (END)

             ; FUNCTION proc_demo_bg (BEGIN)
                                           ; SOURCE LINE # 4548
                                           ; SOURCE LINE # 4549
                                           ; SOURCE LINE # 4550
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_demo_bg (END)

             ; FUNCTION proc_grid_demo_start (BEGIN)
                                           ; SOURCE LINE # 4553
                                           ; SOURCE LINE # 4554
                                           ; SOURCE LINE # 4555
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4556
0005 E4                CLR     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 281 

0006 FD                MOV     R5,A
0007 7F08              MOV     R7,#08H
0009 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 4557
000C 7D08              MOV     R5,#08H
000E 7F08              MOV     R7,#08H
0010 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 4560
0013 110000      R     ACALL   MenuEnd
                                           ; SOURCE LINE # 4562
0016 110000      E     ACALL   MovingGridInit
                                           ; SOURCE LINE # 4564
0019 110000      E     ACALL   MovingGridTask_init
                                           ; SOURCE LINE # 4567
001C 110000      R     ACALL   L?1003
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4568
0020 22                RET     
             ; FUNCTION proc_grid_demo_start (END)

             ; FUNCTION proc_rose_demo_start (BEGIN)
                                           ; SOURCE LINE # 4579
                                           ; SOURCE LINE # 4580
                                           ; SOURCE LINE # 4581
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4582
0005 110000      R     ACALL   MenuEnd
                                           ; SOURCE LINE # 4584
0008 7F01              MOV     R7,#01H
000A 110000      E     ACALL   _SpiOsdWinHWOffAll
                                           ; SOURCE LINE # 4586
000D 110000      E     ACALL   RoseDemo
                                           ; SOURCE LINE # 4589
0010 110000      R     ACALL   L?1004
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4590
0014 22                RET     
             ; FUNCTION proc_rose_demo_start (END)

             ; FUNCTION proc_FPalette_demo_start (BEGIN)
                                           ; SOURCE LINE # 4592
                                           ; SOURCE LINE # 4593
                                           ; SOURCE LINE # 4594
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4595
0005 110000      R     ACALL   MenuEnd
                                           ; SOURCE LINE # 4597
0008 010000      E     AJMP    DumpFontOsdPalette
             ; FUNCTION proc_FPalette_demo_start (END)

             ; FUNCTION proc_SOsd_demo1_start (BEGIN)
                                           ; SOURCE LINE # 4600
                                           ; SOURCE LINE # 4601
                                           ; SOURCE LINE # 4602
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4603
0005 110000      R     ACALL   MenuEnd
                                           ; SOURCE LINE # 4605
0008 010000      R     AJMP    SOsdDemo1
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 282 

             ; FUNCTION proc_SOsd_demo1_start (END)

             ; FUNCTION proc_SOsd_demo2_start (BEGIN)
                                           ; SOURCE LINE # 4608
                                           ; SOURCE LINE # 4609
                                           ; SOURCE LINE # 4610
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4611
0005 110000      R     ACALL   MenuEnd
                                           ; SOURCE LINE # 4613
0008 010000      R     AJMP    SOsdDemo2
             ; FUNCTION proc_SOsd_demo2_start (END)

             ; FUNCTION proc_wait_menu_start (BEGIN)
                                           ; SOURCE LINE # 4623
                                           ; SOURCE LINE # 4624
                                           ; SOURCE LINE # 4627
0000 90000000    R     MOV     DPTR,#header
0004 110000      R     ACALL   L?0854
                                           ; SOURCE LINE # 4631
0007 110000      R     ACALL   L?0775
000A 110000      R     ACALL   L?0785
000D FF                MOV     R7,A
;---- Variable 'item' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 4632
000E 110000      R     ACALL   L?0789
0011 2405              ADD     A,#05H
0013 110000      R     ACALL   L?0781
0016 EF                MOV     A,R7
0017 110000      R     ACALL   L?0834
001A 90000000    R     MOV     DPTR,#menu_item
001E 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 4633
0021 A3                INC     DPTR
0022 7400        E     MOV     A,#MBYTE img_wait
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 7400        E     MOV     A,#HIGH img_wait
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A 7400        E     MOV     A,#LOW img_wait
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4635
002D 7F01              MOV     R7,#01H
002F 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 4637
0032 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 4640
0035 90000000    R     MOV     DPTR,#image
0039 110000      R     ACALL   L?0777
003C F9                MOV     R1,A
003D 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 4641
0040 90000000    R     MOV     DPTR,#header
0044 110000      R     ACALL   L?0777
0047 240D              ADD     A,#0DH
0049 110000      R     ACALL   L?0794
004C FF                MOV     R7,A
004D AEF0              MOV     R6,B
004F 7C00              MOV     R4,#00H
0051 7D0A              MOV     R5,#0AH
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 283 

0053 110000      E     ACALL   ?C?UIDIV
0056 90000000    R     MOV     DPTR,#dy
005A EE                MOV     A,R6
005B F0                MOVX    @DPTR,A
005C A3                INC     DPTR
005D EF                MOV     A,R7
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4642
005F 90000000    R     MOV     DPTR,#header
0063 A3                INC     DPTR
0064 E0                MOVX    A,@DPTR
0065 FA                MOV     R2,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 110000      R     ACALL   L?0863
006B 110000      R     ACALL   L?0957
006E E4                CLR     A
006F FF                MOV     R7,A
0070 110000      E     ACALL   _SOsd_SetSpiStartOffset
                                           ; SOURCE LINE # 4643
0073 90000000    R     MOV     DPTR,#header
0077 110000      R     ACALL   L?0777
007A 240B              ADD     A,#0BH
007C 110000      R     ACALL   L?0794
007F FD                MOV     R5,A
0080 ACF0              MOV     R4,B
0082 90000000    R     MOV     DPTR,#dy
0086 E0                MOVX    A,@DPTR
0087 FA                MOV     R2,A
0088 A3                INC     DPTR
0089 E0                MOVX    A,@DPTR
008A FB                MOV     R3,A
008B E4                CLR     A
008C FF                MOV     R7,A
008D 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 4645
0090 90000000    R     MOV     DPTR,#header
0094 110000      R     ACALL   L?0777
0097 240B              ADD     A,#0BH
0099 110000      R     ACALL   L?0794
009C FF                MOV     R7,A
009D C3                CLR     C
009E 7420              MOV     A,#020H
00A0 9F                SUBB    A,R7
00A1 FF                MOV     R7,A
00A2 7403              MOV     A,#03H
00A4 95F0              SUBB    A,B
00A6 C3                CLR     C
00A7 13                RRC     A
00A8 FC                MOV     R4,A
00A9 EF                MOV     A,R7
00AA 13                RRC     A
00AB 90000000    R     MOV     DPTR,#dy
00AF 110000      R     ACALL   L?0804
00B2 C3                CLR     C
00B3 74E0              MOV     A,#0E0H
00B5 9F                SUBB    A,R7
00B6 FF                MOV     R7,A
00B7 7401              MOV     A,#01H
00B9 9E                SUBB    A,R6
00BA C3                CLR     C
00BB 13                RRC     A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 284 

00BC FA                MOV     R2,A
00BD EF                MOV     A,R7
00BE 13                RRC     A
00BF FB                MOV     R3,A
00C0 C002              PUSH    AR2
00C2 C003              PUSH    AR3
00C4 90000000    R     MOV     DPTR,#header
00C8 110000      R     ACALL   L?0777
00CB 240B              ADD     A,#0BH
00CD 110000      R     ACALL   L?0794
00D0 FF                MOV     R7,A
00D1 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
00D5 E5F0              MOV     A,B
00D7 F0                MOVX    @DPTR,A
00D8 A3                INC     DPTR
00D9 EF                MOV     A,R7
00DA F0                MOVX    @DPTR,A
00DB 90000000    R     MOV     DPTR,#dy
00DF A3                INC     DPTR
00E0 E0                MOVX    A,@DPTR
00E1 FF                MOV     R7,A
00E2 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
00E6 EE                MOV     A,R6
00E7 F0                MOVX    @DPTR,A
00E8 A3                INC     DPTR
00E9 EF                MOV     A,R7
00EA F0                MOVX    @DPTR,A
00EB D003              POP     AR3
00ED D002              POP     AR2
00EF E4                CLR     A
00F0 FF                MOV     R7,A
00F1 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 4649
00F4 E4                CLR     A
00F5 FD                MOV     R5,A
00F6 FC                MOV     R4,A
00F7 FF                MOV     R7,A
00F8 FE                MOV     R6,A
00F9 110000      E     ACALL   _SOsd_SetWin0ImageOffsetXY
                                           ; SOURCE LINE # 4650
00FC 90000000    E     MOV     DPTR,#?_SOsd_SetWin0Animation?BYTE+03H
0100 7403              MOV     A,#03H
0102 F0                MOVX    @DPTR,A
0103 7B09              MOV     R3,#09H
0105 E4                CLR     A
0106 FD                MOV     R5,A
0107 7F02              MOV     R7,#02H
0109 110000      E     ACALL   _SOsd_SetWin0Animation
                                           ; SOURCE LINE # 4654
010C 7D01              MOV     R5,#01H
010E E4                CLR     A
010F FF                MOV     R7,A
0110 110000      E     ACALL   _SOsd_SetPixelAlpha
                                           ; SOURCE LINE # 4655
0113 90000000    R     MOV     DPTR,#header
0117 110000      R     ACALL   L?0777
011A 2409              ADD     A,#09H
011C 110000      R     ACALL   L?0786
011F FD                MOV     R5,A
0120 E4                CLR     A
0121 FF                MOV     R7,A
0122 110000      E     ACALL   _SOsd_SetPixelWidth
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 285 

                                           ; SOURCE LINE # 4656
0125 90000000    R     MOV     DPTR,#menu_item
0129 110000      R     ACALL   L?0777
012C 2411              ADD     A,#011H
012E 110000      R     ACALL   L?0794
0131 FD                MOV     R5,A
0132 ACF0              MOV     R4,B
0134 E4                CLR     A
0135 FF                MOV     R7,A
0136 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 4658
0139 7D01              MOV     R5,#01H
013B E4                CLR     A
013C FF                MOV     R7,A
013D 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 4661
0140 7F01              MOV     R7,#01H
0142 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4663
0145 90000000    R     MOV     DPTR,#header
0149 110000      R     ACALL   L?0777
014C 2408              ADD     A,#08H
014E 110000      R     ACALL   L?0786
0151 FD                MOV     R5,A
0152 C005              PUSH    AR5
0154 90000000    R     MOV     DPTR,#menu_item
0158 110000      R     ACALL   L?0777
015B 2411              ADD     A,#011H
015D 110000      R     ACALL   L?0794
0160 FB                MOV     R3,A
0161 AAF0              MOV     R2,B
0163 C002              PUSH    AR2
0165 C003              PUSH    AR3
0167 90000000    R     MOV     DPTR,#header
016B 110000      R     ACALL   L?0777
016E 240F              ADD     A,#0FH
0170 110000      R     ACALL   L?0794
0173 110000      R     ACALL   L?0871
0176 F0                MOVX    @DPTR,A
0177 90000000    R     MOV     DPTR,#header
017B 110000      R     ACALL   L?0845
017E 90000000    R     MOV     DPTR,#image
0182 110000      R     ACALL   L?0777
0185 2408              ADD     A,#08H
0187 110000      R     ACALL   L?0786
018A 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
018E F0                MOVX    @DPTR,A
018F D003              POP     AR3
0191 D002              POP     AR2
0193 D005              POP     AR5
0195 E4                CLR     A
0196 FF                MOV     R7,A
0197 110000      E     ACALL   _SOsd_SetLut
                                           ; SOURCE LINE # 4664
019A 7D01              MOV     R5,#01H
019C E4                CLR     A
019D FF                MOV     R7,A
019E 110000      E     ACALL   _SOsd_UpdateLut
                                           ; SOURCE LINE # 4666
01A1 E4                CLR     A
01A2 FD                MOV     R5,A
01A3 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 286 

01A4 010000      E     AJMP    _SOsd_UpdateReg
             ; FUNCTION proc_wait_menu_start (END)

             ; FUNCTION proc_wait_demo_start (BEGIN)
                                           ; SOURCE LINE # 4670
                                           ; SOURCE LINE # 4671
                                           ; SOURCE LINE # 4672
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 4673
0005 110000      R     ACALL   MenuEnd
                                           ; SOURCE LINE # 4674
0008 010000      R     AJMP    proc_wait_menu_start
             ; FUNCTION proc_wait_demo_start (END)

             ; FUNCTION proc_touch_bg (BEGIN)
                                           ; SOURCE LINE # 4688
                                           ; SOURCE LINE # 4689
                                           ; SOURCE LINE # 4690
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_touch_bg (END)

             ; FUNCTION proc_touch_bg_end (BEGIN)
                                           ; SOURCE LINE # 4692
                                           ; SOURCE LINE # 4693
                                           ; SOURCE LINE # 4694
0000 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 4695
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0779
0009 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_touch_bg_end (END)

             ; FUNCTION proc_touch_button1 (BEGIN)
                                           ; SOURCE LINE # 4701
                                           ; SOURCE LINE # 4702
                                           ; SOURCE LINE # 4706
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 4707
0006 110000      R     ACALL   L?0913
                                           ; SOURCE LINE # 4708
0009 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_touch_button1 (END)

             ; FUNCTION proc_touch_button2 (BEGIN)
                                           ; SOURCE LINE # 4711
                                           ; SOURCE LINE # 4712
                                           ; SOURCE LINE # 4714
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 4715
0006 110000      R     ACALL   L?0913
                                           ; SOURCE LINE # 4716
0009 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_touch_button2 (END)

             ; FUNCTION proc_touch_button3 (BEGIN)
                                           ; SOURCE LINE # 4719
                                           ; SOURCE LINE # 4720
                                           ; SOURCE LINE # 4722
0000 110000      R     ACALL   L?0776
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 287 

0003 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 4723
0006 110000      R     ACALL   L?0914
                                           ; SOURCE LINE # 4724
0009 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_touch_button3 (END)

             ; FUNCTION proc_touch_button4 (BEGIN)
                                           ; SOURCE LINE # 4728
                                           ; SOURCE LINE # 4729
                                           ; SOURCE LINE # 4731
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 4732
0006 110000      R     ACALL   L?0914
                                           ; SOURCE LINE # 4733
0009 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_touch_button4 (END)

             ; FUNCTION proc_touch_button5 (BEGIN)
                                           ; SOURCE LINE # 4736
                                           ; SOURCE LINE # 4737
                                           ; SOURCE LINE # 4738
0000 110000      R     ACALL   L?0938
                                           ; SOURCE LINE # 4740
0003 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 4741
0006 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 4742
0009 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 4748
000C 7D01              MOV     R5,#01H
000E E4                CLR     A
000F FF                MOV     R7,A
0010 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 4750
0013 110000      R     ACALL   L?0776
0016 110000      R     ACALL   L?0800
0019 7402              MOV     A,#02H
                                           ; SOURCE LINE # 4751
001B 110000      R     ACALL   L?0840
                                           ; SOURCE LINE # 4752
001E FD                MOV     R5,A
001F E4                CLR     A
0020 FF                MOV     R7,A
0021 110000      R     ACALL   _MenuDrawCurrImage
                                           ; SOURCE LINE # 4754
0024 90000000    R     MOV     DPTR,#UseSOsdHwBuff
0028 E0                MOVX    A,@DPTR
0029 6008              JZ      ?C0574
                                           ; SOURCE LINE # 4755
002B 7F01              MOV     R7,#01H
002D 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 4756
0030 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 4757
                                           ; SOURCE LINE # 4759
0033         ?C0574:
0033 22                RET     
             ; FUNCTION proc_touch_button5 (END)

             ; FUNCTION proc_touch_calib_end (BEGIN)
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 288 

                                           ; SOURCE LINE # 4761
                                           ; SOURCE LINE # 4762
                                           ; SOURCE LINE # 4768
0000 110000      R     ACALL   pop_menu_stack_level
                                           ; SOURCE LINE # 4769
0003 110000      R     ACALL   L?0776
0006 110000      R     ACALL   L?0779
0009 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_touch_calib_end (END)

             ; FUNCTION proc_touch_ok (BEGIN)
                                           ; SOURCE LINE # 4773
                                           ; SOURCE LINE # 4774
                                           ; SOURCE LINE # 4786
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _SaveCalibDataToEE
                                           ; SOURCE LINE # 4793
0005 010000      R     AJMP    proc_touch_calib_end
             ; FUNCTION proc_touch_ok (END)

             ; FUNCTION proc_touch_cancel (BEGIN)
                                           ; SOURCE LINE # 4797
                                           ; SOURCE LINE # 4798
                                           ; SOURCE LINE # 4810
0000 010000      R     AJMP    proc_touch_calib_end
             ; FUNCTION proc_touch_cancel (END)

             ; FUNCTION MenuIsTouchCalibMode (BEGIN)
                                           ; SOURCE LINE # 4816
                                           ; SOURCE LINE # 4817
                                           ; SOURCE LINE # 4818
0000 110000      R     ACALL   L?0776
0003 110000      R     ACALL   L?0837
0006 6400        E     XRL     A,#MBYTE menu_touch_page
0008 700A              JNZ     ?C0717
000A 7400        E     MOV     A,#LOW menu_touch_page
000C 6582              XRL     A,DPL
000E 7004              JNZ     ?C0717
0010 7400        E     MOV     A,#HIGH menu_touch_page
0012 6583              XRL     A,DPH
0014         ?C0717:
0014 701E              JNZ     ?C0578
                                           ; SOURCE LINE # 4819
0016 110000      R     ACALL   L?0776
0019 110000      R     ACALL   L?0783
001C FE                MOV     R6,A
001D C3                CLR     C
001E 9F                SUBB    A,R7
001F 4013              JC      ?C0578
0021 EF                MOV     A,R7
0022 2405              ADD     A,#05H
0024 110000      R     ACALL   L?0941
0027 500B              JNC     ?C0578
                                           ; SOURCE LINE # 4820
0029 110000      R     ACALL   L?0789
002C 110000      R     ACALL   L?0783
002F C3                CLR     C
0030 9F                SUBB    A,R7
0031 04                INC     A
0032 FF                MOV     R7,A
0033 22                RET     
                                           ; SOURCE LINE # 4822
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 289 

0034         ?C0578:
                                           ; SOURCE LINE # 4823
0034 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 4824
0036         ?C0580:
0036 22                RET     
             ; FUNCTION MenuIsTouchCalibMode (END)

             ; FUNCTION MenuTouchCalibStart (BEGIN)
                                           ; SOURCE LINE # 4828
                                           ; SOURCE LINE # 4829
                                           ; SOURCE LINE # 4832
0000 E4                CLR     A
0001 FF                MOV     R7,A
0002 110000      E     ACALL   _SaveCalibDataToEE
                                           ; SOURCE LINE # 4835
                                           ; SOURCE LINE # 4836
0005 110000      R     ACALL   L?0859
0008 110000      R     ACALL   L?1078
                                           ; SOURCE LINE # 4837
000B 110000      R     ACALL   L?0775
000E 2403              ADD     A,#03H
0010 110000      R     ACALL   L?0786
0013 FF                MOV     R7,A
0014 110000      R     ACALL   L?0789
0017 110000      R     ACALL   L?0800
001A EF                MOV     A,R7
                                           ; SOURCE LINE # 4838
                                           ; SOURCE LINE # 4839
001B 110000      R     ACALL   L?0773
001E 110000      R     ACALL   L?0843
0021 EF                MOV     A,R7
                                           ; SOURCE LINE # 4840
0022 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 4843
0025 110000      R     ACALL   L?0775
0028 110000      R     ACALL   L?0779
002B 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION MenuTouchCalibStart (END)

             ; FUNCTION proc_display_bg (BEGIN)
                                           ; SOURCE LINE # 4856
                                           ; SOURCE LINE # 4857
                                           ; SOURCE LINE # 4858
0000 010000      R     AJMP    proc_menu_bg
             ; FUNCTION proc_display_bg (END)

             ; FUNCTION proc_display_aspect (BEGIN)
                                           ; SOURCE LINE # 4860
                                           ; SOURCE LINE # 4861
                                           ; SOURCE LINE # 4862
                                           ; SOURCE LINE # 4864
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_aspect_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_aspect_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_aspect_page
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4865
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 290 

000E 110000      E     ACALL   GetAspectModeEE
0011 EF                MOV     A,R7
0012 2403              ADD     A,#03H
0014 FF                MOV     R7,A
0015 110000      R     ACALL   L?0776
0018 110000      R     ACALL   L?0800
                                           ; SOURCE LINE # 4866
001B 110000      R     ACALL   L?0964
001E FF                MOV     R7,A
                                           ; SOURCE LINE # 4867
001F 110000      R     ACALL   L?0774
0022 110000      R     ACALL   L?0843
0025 EF                MOV     A,R7
                                           ; SOURCE LINE # 4868
0026 110000      R     ACALL   L?0817
0029 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4869
002A 90000000    R     MOV     DPTR,#cancel_recover_value
                                           ; SOURCE LINE # 4870
002E 110000      R     ACALL   L?0775
0031 110000      R     ACALL   L?0779
0034 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_display_aspect (END)

             ; FUNCTION proc_display_osd (BEGIN)
                                           ; SOURCE LINE # 4873
                                           ; SOURCE LINE # 4874
                                           ; SOURCE LINE # 4875
                                           ; SOURCE LINE # 4877
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_osd_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_osd_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_osd_page
                                           ; SOURCE LINE # 4878
000D 110000      R     ACALL   L?0775
0010 2403              ADD     A,#03H
0012 110000      R     ACALL   L?0786
0015 FF                MOV     R7,A
0016 110000      R     ACALL   L?0789
0019 110000      R     ACALL   L?0800
001C EF                MOV     A,R7
                                           ; SOURCE LINE # 4879
                                           ; SOURCE LINE # 4880
001D 110000      R     ACALL   L?0773
0020 110000      R     ACALL   L?0779
0023 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_display_osd (END)

             ; FUNCTION proc_display_flip (BEGIN)
                                           ; SOURCE LINE # 4882
                                           ; SOURCE LINE # 4883
                                           ; SOURCE LINE # 4884
                                           ; SOURCE LINE # 4886
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_mirror_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_mirror_page
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 291 

0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_mirror_page
                                           ; SOURCE LINE # 4887
                                           ; SOURCE LINE # 4888
                                           ; SOURCE LINE # 4889
000D 110000      R     ACALL   L?0771
0010 110000      R     ACALL   L?0779
0013 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_display_flip (END)

             ; FUNCTION proc_display_backlight (BEGIN)
                                           ; SOURCE LINE # 4891
                                           ; SOURCE LINE # 4892
                                           ; SOURCE LINE # 4893
                                           ; SOURCE LINE # 4895
0000 110000      R     ACALL   L?0819
                                           ; SOURCE LINE # 4896
0003 110000      R     ACALL   L?0775
0006 110000      R     ACALL   L?0800
0009 7405              MOV     A,#05H
                                           ; SOURCE LINE # 4897
                                           ; SOURCE LINE # 4898
000B 110000      R     ACALL   L?0773
                                           ; SOURCE LINE # 4899
000E 110000      R     ACALL   L?0816
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 4900
0012 90000000    R     MOV     DPTR,#?_InitSlideCtrl?BYTE+03H
0016 7400        E     MOV     A,#MBYTE BackLightGetRate
0018 F0                MOVX    @DPTR,A
0019 A3                INC     DPTR
001A 7400        E     MOV     A,#HIGH BackLightGetRate
001C F0                MOVX    @DPTR,A
001D A3                INC     DPTR
001E 7400        E     MOV     A,#LOW BackLightGetRate
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 7400        E     MOV     A,#MBYTE _BackLightSetRate
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 7400        E     MOV     A,#HIGH _BackLightSetRate
0028 F0                MOVX    @DPTR,A
0029 A3                INC     DPTR
002A 7400        E     MOV     A,#LOW _BackLightSetRate
002C F0                MOVX    @DPTR,A
002D F9                MOV     R1,A
002E A3                INC     DPTR
002F 7400        E     MOV     A,#MBYTE _BackLightSetRate
0031 F0                MOVX    @DPTR,A
0032 A3                INC     DPTR
0033 7400        E     MOV     A,#HIGH _BackLightSetRate
0035 F0                MOVX    @DPTR,A
0036 A3                INC     DPTR
0037 E9                MOV     A,R1
0038 F0                MOVX    @DPTR,A
0039 A3                INC     DPTR
003A 7400        E     MOV     A,#MBYTE BackLightChangeRate
003C F0                MOVX    @DPTR,A
003D A3                INC     DPTR
003E 7400        E     MOV     A,#HIGH BackLightChangeRate
0040 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 292 

0041 A3                INC     DPTR
0042 7400        E     MOV     A,#LOW BackLightChangeRate
0044 F0                MOVX    @DPTR,A
0045 7B00        E     MOV     R3,#MBYTE img_slide_backlight
0047 7A00        E     MOV     R2,#HIGH img_slide_backlight
0049 7900        E     MOV     R1,#LOW img_slide_backlight
004B 110000      R     ACALL   _InitSlideCtrl
                                           ; SOURCE LINE # 4906
004E 110000      R     ACALL   L?0776
0051 110000      R     ACALL   L?0779
0054 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION proc_display_backlight (END)

             ; FUNCTION proc_display_resolution (BEGIN)
                                           ; SOURCE LINE # 4909
                                           ; SOURCE LINE # 4910
                                           ; SOURCE LINE # 4914
                                           ; SOURCE LINE # 4949
0000 110000      R     ACALL   L?0859
0003 7400        E     MOV     A,#MBYTE menu_disp_resolution_page
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        E     MOV     A,#HIGH menu_disp_resolution_page
0009 F0                MOVX    @DPTR,A
000A A3                INC     DPTR
000B 7400        E     MOV     A,#LOW menu_disp_resolution_page
                                           ; SOURCE LINE # 4950
                                           ; SOURCE LINE # 4951
                                           ; SOURCE LINE # 4953
000D 110000      R     ACALL   L?0771
0010 110000      R     ACALL   L?0779
0013 110000      E     ACALL   ?C?ICALL390
                                           ; SOURCE LINE # 4955
0016 7D01              MOV     R5,#01H
0018 E4                CLR     A
0019 FF                MOV     R7,A
001A 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 4956
001D 7D01              MOV     R5,#01H
001F 7F01              MOV     R7,#01H
0021 110000      R     ACALL   _MenuFontOsdItemInit
                                           ; SOURCE LINE # 4962
0024 110000      R     ACALL   L?1011
0027 110000      R     ACALL   L?0848
002A E0                MOVX    A,@DPTR
002B 30E208            JNB     ACC.2,?C0587
                                           ; SOURCE LINE # 4964
002E 7B00        R     MOV     R3,#MBYTE ?SC_196
0030 7A00        R     MOV     R2,#HIGH ?SC_196
0032 7900        R     MOV     R1,#LOW ?SC_196
                                           ; SOURCE LINE # 4965
0034 8006              SJMP    ?C0767
0036         ?C0587:
                                           ; SOURCE LINE # 4966
                                           ; SOURCE LINE # 4976
0036 7B00        E     MOV     R3,#MBYTE FOsdMsgBuff
0038 7A00        E     MOV     R2,#HIGH FOsdMsgBuff
003A 7900        E     MOV     R1,#LOW FOsdMsgBuff
003C         ?C0767:
003C E4                CLR     A
003D FF                MOV     R7,A
003E 110000      R     ACALL   _MenuFontOsdItemString
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 293 

                                           ; SOURCE LINE # 4979
0041         ?C0588:
                                           ; SOURCE LINE # 4980
0041 110000      R     ACALL   L?1050
0044 7F20              MOV     R7,#020H
0046 7E03              MOV     R6,#03H
0048 110000      E     ACALL   _TWitoa
                                           ; SOURCE LINE # 4981
004B 90000000    E     MOV     DPTR,#?_TWstrcat?BYTE+03H
004F 7400        R     MOV     A,#MBYTE ?SC_200
0051 F0                MOVX    @DPTR,A
0052 A3                INC     DPTR
0053 7400        R     MOV     A,#HIGH ?SC_200
0055 F0                MOVX    @DPTR,A
0056 A3                INC     DPTR
0057 7400        R     MOV     A,#LOW ?SC_200
0059 F0                MOVX    @DPTR,A
005A 110000      R     ACALL   L?1050
005D 110000      E     ACALL   _TWstrcat
                                           ; SOURCE LINE # 4982
0060 110000      R     ACALL   L?1046
0063 7FE0              MOV     R7,#0E0H
0065 7E01              MOV     R6,#01H
0067 110000      E     ACALL   _TWitoa
                                           ; SOURCE LINE # 4983
006A 110000      R     ACALL   L?1020
006D 110000      R     ACALL   L?1051
0070 110000      E     ACALL   _TWstrcat
                                           ; SOURCE LINE # 4984
0073 110000      R     ACALL   L?1051
0076 7F01              MOV     R7,#01H
0078 010000      R     AJMP    _MenuFontOsdItemString
             ; FUNCTION proc_display_resolution (END)

             ; FUNCTION MenuStart (BEGIN)
                                           ; SOURCE LINE # 5051
                                           ; SOURCE LINE # 5052
                                           ; SOURCE LINE # 5055
0000 90000000    R     MOV     DPTR,#menu_on
0004 7401              MOV     A,#01H
                                           ; SOURCE LINE # 5056
0006 110000      R     ACALL   L?1073
                                           ; SOURCE LINE # 5057
0009 90000000    R     MOV     DPTR,#UseSOsdHwBuff
000D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5060
000E 110000      E     ACALL   TaskNoSignal_getCmd
0011 EF                MOV     A,R7
0012 6005              JZ      ?C0590
                                           ; SOURCE LINE # 5061
0014 E4                CLR     A
0015 FF                MOV     R7,A
0016 110000      E     ACALL   _TaskNoSignal_setCmd
                                           ; SOURCE LINE # 5062
0019         ?C0590:
                                           ; SOURCE LINE # 5065
0019 90000000    R     MOV     DPTR,#NoSignalLogoShow
001D E0                MOVX    A,@DPTR
001E 6003              JZ      ?C0591
                                           ; SOURCE LINE # 5066
0020 110000      R     ACALL   RemoveLogo
0023         ?C0591:
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 294 

                                           ; SOURCE LINE # 5069
0023 110000      E     ACALL   SOsd_init
                                           ; SOURCE LINE # 5072
0026 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5073
0029 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5076
002C 110000      E     ACALL   SpiOsdSetDeValue
                                           ; SOURCE LINE # 5077
002F 110000      E     ACALL   FOsdSetDeValue
                                           ; SOURCE LINE # 5080
0032 E4                CLR     A
0033 FF                MOV     R7,A
0034 110000      E     ACALL   _SpiOsdWinHWOffAll
                                           ; SOURCE LINE # 5083
0037 110000      E     ACALL   FontOsdInit
                                           ; SOURCE LINE # 5086
003A E4                CLR     A
003B 90000000    R     MOV     DPTR,#menu_level
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5097
0040 90000000    R     MOV     DPTR,#osd_lang
0044 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5100
0045 7F01              MOV     R7,#01H
0047 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 5101
004A 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 5102
004D E4                CLR     A
004E FD                MOV     R5,A
004F 7F01              MOV     R7,#01H
0051 110000      E     ACALL   _SOsd_SetSpiStartBit
                                           ; SOURCE LINE # 5103
0054 E4                CLR     A
0055 FD                MOV     R5,A
0056 FC                MOV     R4,A
0057 7F01              MOV     R7,#01H
0059 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 5108
005C 90000000    R     MOV     DPTR,#curr_menu
0060 7400        E     MOV     A,#MBYTE menu_main_page
0062 F0                MOVX    @DPTR,A
0063 A3                INC     DPTR
0064 7400        E     MOV     A,#HIGH menu_main_page
0066 F0                MOVX    @DPTR,A
0067 A3                INC     DPTR
0068 7400        E     MOV     A,#LOW menu_main_page
                                           ; SOURCE LINE # 5109
006A 110000      R     ACALL   L?0775
006D 110000      R     ACALL   L?0800
0070 7403              MOV     A,#03H
                                           ; SOURCE LINE # 5110
                                           ; SOURCE LINE # 5111
0072 110000      R     ACALL   L?0773
0075 110000      R     ACALL   L?0843
0078 7403              MOV     A,#03H
                                           ; SOURCE LINE # 5112
007A 110000      R     ACALL   L?0817
                                           ; SOURCE LINE # 5115
007D 110000      R     ACALL   L?0775
0080 110000      R     ACALL   L?0779
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 295 

0083 010000      E     AJMP    ?C?ICALL390
             ; FUNCTION MenuStart (END)

             ; FUNCTION MenuEnd (BEGIN)
                                           ; SOURCE LINE # 5125
                                           ; SOURCE LINE # 5126
                                           ; SOURCE LINE # 5133
0000 7F01              MOV     R7,#01H
0002 110000      E     ACALL   _SpiOsdWinHWOffAll
                                           ; SOURCE LINE # 5134
0005 E4                CLR     A
0006 FF                MOV     R7,A
0007 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 5135
000A 110000      E     ACALL   FOsdWinOffAll
                                           ; SOURCE LINE # 5140
000D 110000      E     ACALL   E3P_Clean
                                           ; SOURCE LINE # 5143
0010 E4                CLR     A
0011 90000000    R     MOV     DPTR,#menu_on
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5144
0016 90000000    R     MOV     DPTR,#menu_level
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5146
001B 110000      E     ACALL   GetInputMain
001E 110000      R     ACALL   L?0901
                                           ; SOURCE LINE # 5149
0021 110000      E     ACALL   FontOsdInit
                                           ; SOURCE LINE # 5150
0024 110000      E     ACALL   FOsdSetDeValue
                                           ; SOURCE LINE # 5157
0027 110000      R     ACALL   L?0986
002A F582              MOV     DPL,A
002C E4                CLR     A
002D 3500        E     ADDC    A,regTW88
002F F583              MOV     DPH,A
0031 759300      E     MOV     DPX,#?C?XDATASEG
0034 E0                MOVX    A,@DPTR
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 5158
0035 30E00A            JNB     ACC.0,?C0593
                                           ; SOURCE LINE # 5159
0038 7F02              MOV     R7,#02H
003A 110000      E     ACALL   _FOsdIndexMsgPrint
                                           ; SOURCE LINE # 5160
003D 7F01              MOV     R7,#01H
003F 110000      E     ACALL   _TaskNoSignal_setCmd
                                           ; SOURCE LINE # 5161
0042         ?C0593:
                                           ; SOURCE LINE # 5162
                                           ; SOURCE LINE # 5163
                                           ; SOURCE LINE # 5166
                                           ; SOURCE LINE # 5167
0042         ?C0594:
                                           ; SOURCE LINE # 5170
0042 110000      R     ACALL   L?0847
0045 E0                MOVX    A,@DPTR
0046 54FD              ANL     A,#0FDH
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5194
0049 22                RET     
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 296 

             ; FUNCTION MenuEnd (END)

             ; FUNCTION _SliderShow_Set (BEGIN)
                                           ; SOURCE LINE # 5223
0000 90000000    R     MOV     DPTR,#image
0004 110000      R     ACALL   L?0806
0007 90000000    R     MOV     DPTR,#win
000B EF                MOV     A,R7
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5224
                                           ; SOURCE LINE # 5225
000D 90000000    R     MOV     DPTR,#header
0011 110000      R     ACALL   L?0854
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5229
0015 E4                CLR     A
0016 90000000    R     MOV     DPTR,#sx
                                           ; SOURCE LINE # 5230
001A 110000      R     ACALL   L?1029
                                           ; SOURCE LINE # 5231
001D 90000000    R     MOV     DPTR,#lut_loc
0021 F0                MOVX    @DPTR,A
0022 A3                INC     DPTR
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5233
0024 90000000    R     MOV     DPTR,#SliderHeader
0028 BF0105            CJNE    R7,#01H,?C0597
002B 110000      R     ACALL   L?1067
002E 8003              SJMP    ?C0598
0030         ?C0597:
                                           ; SOURCE LINE # 5234
0030 110000      R     ACALL   L?1068
0033         ?C0598:
                                           ; SOURCE LINE # 5237
0033 90000000    R     MOV     DPTR,#image
0037 110000      R     ACALL   L?0777
003A F9                MOV     R1,A
003B 110000      R     ACALL   _MenuPrepareImageHeader
                                           ; SOURCE LINE # 5238
003E 90000000    R     MOV     DPTR,#header
0042 110000      R     ACALL   L?0777
0045 110000      R     ACALL   L?0863
0048 90000000    R     MOV     DPTR,#SliderHeader
004C 110000      R     ACALL   L?0777
004F 110000      R     ACALL   L?1038
0052 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 5240
0055 90000000    R     MOV     DPTR,#header
0059 110000      R     ACALL   L?0777
005C 110000      R     ACALL   L?0863
005F 110000      R     ACALL   L?0957
0062 110000      R     ACALL   L?0954
0065 110000      E     ACALL   _SOsd_SetSpiStartOffset
                                           ; SOURCE LINE # 5241
0068 110000      R     ACALL   L?0954
006B 90000000    R     MOV     DPTR,#header
006F 110000      R     ACALL   L?0777
0072 240B              ADD     A,#0BH
0074 110000      R     ACALL   L?0794
0077 FD                MOV     R5,A
0078 ACF0              MOV     R4,B
007A 110000      R     ACALL   L?0932
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 297 

007D 240D              ADD     A,#0DH
007F 110000      R     ACALL   L?0794
0082 FB                MOV     R3,A
0083 AAF0              MOV     R2,B
0085 110000      E     ACALL   _SOsd_SetImageWidthHeight
                                           ; SOURCE LINE # 5242
0088 110000      R     ACALL   L?0955
008B 90000000    R     MOV     DPTR,#sx
008F E0                MOVX    A,@DPTR
0090 FC                MOV     R4,A
0091 A3                INC     DPTR
0092 E0                MOVX    A,@DPTR
0093 FD                MOV     R5,A
0094 90000000    R     MOV     DPTR,#header
0098 110000      R     ACALL   L?0777
009B 240B              ADD     A,#0BH
009D 110000      R     ACALL   L?0794
00A0 110000      R     ACALL   L?0876
00A3 90000000    R     MOV     DPTR,#header
00A7 110000      R     ACALL   L?0777
00AA 240D              ADD     A,#0DH
00AC 110000      R     ACALL   L?0794
00AF 110000      R     ACALL   L?0918
00B2 90000000    R     MOV     DPTR,#sy
00B6 E0                MOVX    A,@DPTR
00B7 FA                MOV     R2,A
00B8 A3                INC     DPTR
00B9 E0                MOVX    A,@DPTR
00BA FB                MOV     R3,A
00BB 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 5243
00BE 90000000    R     MOV     DPTR,#win
00C2 E0                MOVX    A,@DPTR
00C3 700D              JNZ     ?C0599
                                           ; SOURCE LINE # 5244
00C5 FD                MOV     R5,A
00C6 FC                MOV     R4,A
00C7 FF                MOV     R7,A
00C8 FE                MOV     R6,A
00C9 110000      E     ACALL   _SOsd_SetWin0ImageOffsetXY
                                           ; SOURCE LINE # 5245
00CC 110000      R     ACALL   L?0951
00CF 110000      E     ACALL   _SOsd_SetWin0Animation
                                           ; SOURCE LINE # 5246
00D2         ?C0599:
                                           ; SOURCE LINE # 5247
00D2 90000000    R     MOV     DPTR,#image
00D6 110000      R     ACALL   L?0777
00D9 2408              ADD     A,#08H
00DB 110000      R     ACALL   L?0786
00DE F4                CPL     A
00DF 90000000    R     MOV     DPTR,#win
00E3 6009              JZ      ?C0600
                                           ; SOURCE LINE # 5248
00E5 E0                MOVX    A,@DPTR
00E6 FF                MOV     R7,A
00E7 7D01              MOV     R5,#01H
00E9 110000      E     ACALL   _SOsd_SetPixelAlpha
00EC 8007              SJMP    ?C0601
00EE         ?C0600:
                                           ; SOURCE LINE # 5250
00EE E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 298 

00EF FF                MOV     R7,A
00F0 E4                CLR     A
00F1 FD                MOV     R5,A
00F2 110000      E     ACALL   _SOsd_SetGlobalAlpha
00F5         ?C0601:
                                           ; SOURCE LINE # 5252
00F5 110000      R     ACALL   L?0955
00F8 90000000    R     MOV     DPTR,#header
00FC 110000      R     ACALL   L?0777
00FF 2409              ADD     A,#09H
0101 110000      R     ACALL   L?0786
0104 FD                MOV     R5,A
0105 110000      E     ACALL   _SOsd_SetPixelWidth
                                           ; SOURCE LINE # 5253
0108 110000      R     ACALL   L?0955
010B 90000000    R     MOV     DPTR,#lut_loc
010F E0                MOVX    A,@DPTR
0110 FC                MOV     R4,A
0111 A3                INC     DPTR
0112 E0                MOVX    A,@DPTR
0113 FD                MOV     R5,A
0114 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 5255
0117 110000      R     ACALL   L?0955
011A 7D01              MOV     R5,#01H
011C 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 5258
011F 90000000    R     MOV     DPTR,#header
0123 110000      R     ACALL   L?0777
0126 240A              ADD     A,#0AH
0128 110000      R     ACALL   L?0786
012B FE                MOV     R6,A
012C 6011              JZ      ?C0602
                                           ; SOURCE LINE # 5259
012E 110000      R     ACALL   L?0955
0131 110000      R     ACALL   L?0932
0134 2409              ADD     A,#09H
0136 110000      R     ACALL   L?0786
0139 FD                MOV     R5,A
013A AB06              MOV     R3,AR6
013C 110000      E     ACALL   _SOsd_SetRlc
013F         ?C0602:
                                           ; SOURCE LINE # 5260
013F 90000000    R     MOV     DPTR,#header
0143 110000      R     ACALL   L?0777
0146 2408              ADD     A,#08H
0148 110000      R     ACALL   L?0786
014B FD                MOV     R5,A
014C C005              PUSH    AR5
014E 110000      R     ACALL   L?0933
0151 240F              ADD     A,#0FH
0153 110000      R     ACALL   L?0794
0156 110000      R     ACALL   L?0871
0159 F0                MOVX    @DPTR,A
015A 90000000    R     MOV     DPTR,#header
015E 110000      R     ACALL   L?0845
0161 90000000    R     MOV     DPTR,#image
0165 110000      R     ACALL   L?0777
0168 2408              ADD     A,#08H
016A 110000      R     ACALL   L?0786
016D 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
0171 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 299 

0172 90000000    R     MOV     DPTR,#lut_loc
0176 E0                MOVX    A,@DPTR
0177 FA                MOV     R2,A
0178 A3                INC     DPTR
0179 E0                MOVX    A,@DPTR
017A FB                MOV     R3,A
017B 110000      R     ACALL   L?0955
017E D005              POP     AR5
0180 010000      E     AJMP    _SOsd_SetLut
             ; FUNCTION _SliderShow_Set (END)

             ; FUNCTION _SliderShow_Show (BEGIN)
                                           ; SOURCE LINE # 5271
0000 90000000    R     MOV     DPTR,#direction
0004 ED                MOV     A,R5
0005 F0                MOVX    @DPTR,A
;---- Variable 'effect' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 5272
                                           ; SOURCE LINE # 5273
0006 A3                INC     DPTR
0007 110000      R     ACALL   L?1067
                                           ; SOURCE LINE # 5274
000A A3                INC     DPTR
000B 110000      R     ACALL   L?1068
                                           ; SOURCE LINE # 5277
000E 90000000    R     MOV     DPTR,#win_back
0012 7401              MOV     A,#01H
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5278
0015 A3                INC     DPTR
0016 7403              MOV     A,#03H
0018 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5284
0019 90000000    R     MOV     DPTR,#bTemp
001D EF                MOV     A,R7
001E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5286
001F E4                CLR     A
0020 90000000    R     MOV     DPTR,#sy
0024 F0                MOVX    @DPTR,A
0025 A3                INC     DPTR
0026 F0                MOVX    @DPTR,A
0027 90000000    R     MOV     DPTR,#sx
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5287
002E 90000000    R     MOV     DPTR,#dx
0032 7404              MOV     A,#04H
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 E4                CLR     A
                                           ; SOURCE LINE # 5288
0037 110000      R     ACALL   L?1107
                                           ; SOURCE LINE # 5290
003A EF                MOV     A,R7
003B 6401              XRL     A,#01H
003D 6003              JZ      $ + 5H
003F 010000      R     AJMP    ?C0604
                                           ; SOURCE LINE # 5293
0042 90000000    R     MOV     DPTR,#direction
0046 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 300 

0047 6405              XRL     A,#05H
0049 703A              JNZ     ?C0605
                                           ; SOURCE LINE # 5294
004B 110000      R     ACALL   L?0930
004E         ?C0606:
004E 110000      R     ACALL   L?1021
0051 4003              JC      $ + 5H
0053 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5297
0056 110000      R     ACALL   L?1069
0059 110000      R     ACALL   L?0828
005C 2F                ADD     A,R7
005D FF                MOV     R7,A
005E EA                MOV     A,R2
005F 3E                ADDC    A,R6
0060 110000      R     ACALL   L?0895
0063 FC                MOV     R4,A
0064 110000      R     ACALL   L?0957
0067 110000      R     ACALL   L?1071
006A 110000      E     ACALL   _SOsd_SetSpiStartOffset
                                           ; SOURCE LINE # 5298
006D 90000000    R     MOV     DPTR,#i
0071 110000      R     ACALL   L?0849
0074 110000      R     ACALL   L?1070
                                           ; SOURCE LINE # 5300
0077 110000      R     ACALL   L?1072
007A 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 5301
                                           ; SOURCE LINE # 5303
                                           ; SOURCE LINE # 5304
                                           ; SOURCE LINE # 5306
                                           ; SOURCE LINE # 5307
007D 110000      R     ACALL   L?0809
0080 110000      R     ACALL   L?0888
0083 80C9              SJMP    ?C0606
                                           ; SOURCE LINE # 5308
0085         ?C0605:
                                           ; SOURCE LINE # 5309
0085 90000000    R     MOV     DPTR,#direction
0089 E0                MOVX    A,@DPTR
008A 6404              XRL     A,#04H
008C 702B              JNZ     ?C0610
                                           ; SOURCE LINE # 5310
008E 110000      R     ACALL   L?0930
0091         ?C0611:
0091 110000      R     ACALL   L?1022
0094 4003              JC      $ + 5H
0096 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5312
0099 90000000    R     MOV     DPTR,#back_header_table+04H
009D 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 5313
00A0 110000      R     ACALL   L?0808
00A3 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 5315
00A6 110000      R     ACALL   L?0826
00A9 2F                ADD     A,R7
00AA FF                MOV     R7,A
00AB EA                MOV     A,R2
00AC 3E                ADDC    A,R6
00AD 110000      R     ACALL   L?0895
00B0 FC                MOV     R4,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 301 

                                           ; SOURCE LINE # 5316
                                           ; SOURCE LINE # 5318
                                           ; SOURCE LINE # 5319
                                           ; SOURCE LINE # 5322
                                           ; SOURCE LINE # 5323
00B1 110000      R     ACALL   L?0795
00B4 110000      R     ACALL   L?0888
00B7 80D8              SJMP    ?C0611
                                           ; SOURCE LINE # 5324
00B9         ?C0610:
                                           ; SOURCE LINE # 5325
00B9 90000000    R     MOV     DPTR,#direction
00BD E0                MOVX    A,@DPTR
00BE 6403              XRL     A,#03H
00C0 7037              JNZ     ?C0615
                                           ; SOURCE LINE # 5326
00C2 110000      R     ACALL   L?0931
00C5         ?C0616:
00C5 110000      R     ACALL   L?0891
00C8 4003              JC      $ + 5H
00CA 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5327
                                           ; SOURCE LINE # 5328
                                           ; SOURCE LINE # 5329
00CD 110000      R     ACALL   L?0801
00D0 90000000    R     MOV     DPTR,#back_header_table+04H
00D4 110000      R     ACALL   L?0828
00D7 110000      R     ACALL   L?0945
                                           ; SOURCE LINE # 5330
                                           ; SOURCE LINE # 5332
                                           ; SOURCE LINE # 5333
00DA 110000      R     ACALL   L?0796
00DD 110000      R     ACALL   L?1023
00E0 E4                CLR     A
00E1 FC                MOV     R4,A
00E2 FD                MOV     R5,A
00E3 110000      E     ACALL   ?C?LMUL
00E6 90000000    R     MOV     DPTR,#dTemp
00EA 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 5334
00ED 90000000    R     MOV     DPTR,#front_header_table+04H
00F1 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 5335
                                           ; SOURCE LINE # 5337
                                           ; SOURCE LINE # 5338
                                           ; SOURCE LINE # 5341
                                           ; SOURCE LINE # 5342
00F4 110000      R     ACALL   L?0830
00F7 80CC              SJMP    ?C0616
                                           ; SOURCE LINE # 5343
00F9         ?C0615:
                                           ; SOURCE LINE # 5344
00F9 90000000    R     MOV     DPTR,#direction
00FD E0                MOVX    A,@DPTR
00FE 6402              XRL     A,#02H
0100 6003              JZ      $ + 5H
0102 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5345
0105 110000      R     ACALL   L?0931
0108         ?C0621:
0108 110000      R     ACALL   L?0891
010B 4003              JC      $ + 5H
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 302 

010D 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5349
0110 90000000    R     MOV     DPTR,#back_header_table+04H
0114 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 5350
0117 110000      R     ACALL   L?0841
011A 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 5351
011D E4                CLR     A
011E FF                MOV     R7,A
011F 7E04              MOV     R6,#04H
0121 FD                MOV     R5,A
0122 FC                MOV     R4,A
0123 90000000    R     MOV     DPTR,#dTemp
0127 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 5352
012A 90000000    R     MOV     DPTR,#dTemp
012E 110000      R     ACALL   L?0828
0131 FB                MOV     R3,A
0132 90000000    R     MOV     DPTR,#i
0136 E0                MOVX    A,@DPTR
0137 FE                MOV     R6,A
0138 A3                INC     DPTR
0139 E0                MOVX    A,@DPTR
013A FF                MOV     R7,A
013B 110000      R     ACALL   L?1023
                                           ; SOURCE LINE # 5353
013E 110000      R     ACALL   L?0802
0141 110000      R     ACALL   L?0827
0144 110000      R     ACALL   L?0945
                                           ; SOURCE LINE # 5354
                                           ; SOURCE LINE # 5356
                                           ; SOURCE LINE # 5357
                                           ; SOURCE LINE # 5360
                                           ; SOURCE LINE # 5361
0147 110000      R     ACALL   L?0797
014A 240A              ADD     A,#0AH
014C 110000      R     ACALL   L?0890
014F 80B7              SJMP    ?C0621
                                           ; SOURCE LINE # 5362
                                           ; SOURCE LINE # 5363
0151         ?C0604:
                                           ; SOURCE LINE # 5364
                                           ; SOURCE LINE # 5367
0151 90000000    R     MOV     DPTR,#direction
0155 E0                MOVX    A,@DPTR
0156 6405              XRL     A,#05H
0158 7027              JNZ     ?C0625
                                           ; SOURCE LINE # 5368
015A 110000      R     ACALL   L?0931
015D         ?C0626:
015D 110000      R     ACALL   L?1022
0160 4003              JC      $ + 5H
0162 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5369
0165 110000      R     ACALL   L?0849
0168 110000      R     ACALL   L?1070
016B 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 5371
016E 110000      R     ACALL   L?0826
0171 2F                ADD     A,R7
0172 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 303 

0173 EA                MOV     A,R2
0174 3E                ADDC    A,R6
0175 110000      R     ACALL   L?0895
0178 FC                MOV     R4,A
                                           ; SOURCE LINE # 5372
                                           ; SOURCE LINE # 5374
                                           ; SOURCE LINE # 5375
                                           ; SOURCE LINE # 5378
                                           ; SOURCE LINE # 5379
0179 110000      R     ACALL   L?0809
017C 110000      R     ACALL   L?0889
017F 80DC              SJMP    ?C0626
                                           ; SOURCE LINE # 5380
0181         ?C0625:
                                           ; SOURCE LINE # 5381
0181 90000000    R     MOV     DPTR,#direction
0185 E0                MOVX    A,@DPTR
0186 6404              XRL     A,#04H
0188 702A              JNZ     ?C0630
                                           ; SOURCE LINE # 5382
018A 110000      R     ACALL   L?0931
018D         ?C0631:
018D 110000      R     ACALL   L?1021
0190 4003              JC      $ + 5H
0192 010000      R     AJMP    ?C0644
                                           ; SOURCE LINE # 5383
0195 110000      R     ACALL   L?1069
0198 110000      R     ACALL   L?0828
019B 2F                ADD     A,R7
019C FF                MOV     R7,A
019D EA                MOV     A,R2
019E 3E                ADDC    A,R6
019F 110000      R     ACALL   L?0895
01A2 FC                MOV     R4,A
                                           ; SOURCE LINE # 5384
01A3 110000      R     ACALL   L?0808
                                           ; SOURCE LINE # 5386
01A6 110000      R     ACALL   L?1072
01A9 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 5387
                                           ; SOURCE LINE # 5389
                                           ; SOURCE LINE # 5390
                                           ; SOURCE LINE # 5393
                                           ; SOURCE LINE # 5394
01AC 110000      R     ACALL   L?0795
01AF 110000      R     ACALL   L?0889
01B2 80D9              SJMP    ?C0631
                                           ; SOURCE LINE # 5395
01B4         ?C0630:
                                           ; SOURCE LINE # 5396
01B4 90000000    R     MOV     DPTR,#direction
01B8 E0                MOVX    A,@DPTR
01B9 6403              XRL     A,#03H
01BB 7023              JNZ     ?C0635
                                           ; SOURCE LINE # 5397
01BD 110000      R     ACALL   L?0931
01C0         ?C0636:
01C0 110000      R     ACALL   L?0892
01C3 5050              JNC     ?C0644
                                           ; SOURCE LINE # 5398
01C5 90000000    R     MOV     DPTR,#back_header_table+04H
01C9 110000      R     ACALL   L?0803
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 304 

                                           ; SOURCE LINE # 5399
                                           ; SOURCE LINE # 5401
                                           ; SOURCE LINE # 5402
01CC 110000      R     ACALL   L?0796
01CF 110000      R     ACALL   L?1024
                                           ; SOURCE LINE # 5403
01D2 110000      R     ACALL   L?0802
01D5 110000      R     ACALL   L?0827
01D8 110000      R     ACALL   L?0946
                                           ; SOURCE LINE # 5404
                                           ; SOURCE LINE # 5406
                                           ; SOURCE LINE # 5407
                                           ; SOURCE LINE # 5410
                                           ; SOURCE LINE # 5411
01DB 110000      R     ACALL   L?0830
01DE 80E0              SJMP    ?C0636
                                           ; SOURCE LINE # 5412
01E0         ?C0635:
                                           ; SOURCE LINE # 5413
01E0 90000000    R     MOV     DPTR,#direction
01E4 E0                MOVX    A,@DPTR
01E5 6402              XRL     A,#02H
01E7 702C              JNZ     ?C0644
                                           ; SOURCE LINE # 5414
01E9 110000      R     ACALL   L?0931
01EC         ?C0641:
01EC 110000      R     ACALL   L?0892
01EF 5024              JNC     ?C0644
                                           ; SOURCE LINE # 5415
                                           ; SOURCE LINE # 5416
                                           ; SOURCE LINE # 5417
01F1 110000      R     ACALL   L?0801
01F4 90000000    R     MOV     DPTR,#back_header_table+04H
01F8 110000      R     ACALL   L?0828
01FB 110000      R     ACALL   L?0946
                                           ; SOURCE LINE # 5418
01FE 110000      R     ACALL   L?0841
0201 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 5420
0204 90000000    R     MOV     DPTR,#front_header_table+04H
0208 110000      R     ACALL   L?0803
                                           ; SOURCE LINE # 5421
                                           ; SOURCE LINE # 5423
                                           ; SOURCE LINE # 5424
                                           ; SOURCE LINE # 5427
                                           ; SOURCE LINE # 5428
020B 110000      R     ACALL   L?0797
020E 240A              ADD     A,#0AH
0210 110000      R     ACALL   L?0890
0213 80D7              SJMP    ?C0641
                                           ; SOURCE LINE # 5429
                                           ; SOURCE LINE # 5430
                                           ; SOURCE LINE # 5431
0215         ?C0644:
0215 22                RET     
0216         L?0795:
0216 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
021A 110000      E     ACALL   ?C?LSTXDATA
021D 90000000    R     MOV     DPTR,#win_front
0221 E0                MOVX    A,@DPTR
0222 FF                MOV     R7,A
0223 110000      E     ACALL   _SOsd_SetSpiStartOffset
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 305 

0226 90000000    R     MOV     DPTR,#i
022A E0                MOVX    A,@DPTR
022B FE                MOV     R6,A
022C A3                INC     DPTR
022D E0                MOVX    A,@DPTR
022E FF                MOV     R7,A
022F C3                CLR     C
0230 E4                CLR     A
0231 9F                SUBB    A,R7
0232 FF                MOV     R7,A
0233 7404              MOV     A,#04H
0235 9E                SUBB    A,R6
0236 FE                MOV     R6,A
0237 90000000    R     MOV     DPTR,#sx+01H
023B E0                MOVX    A,@DPTR
023C 2F                ADD     A,R7
023D FD                MOV     R5,A
023E 90000000    R     MOV     DPTR,#sx
0242 E0                MOVX    A,@DPTR
0243 3E                ADDC    A,R6
0244 FC                MOV     R4,A
0245 90000000    R     MOV     DPTR,#sy
0249 E0                MOVX    A,@DPTR
024A FA                MOV     R2,A
024B A3                INC     DPTR
024C E0                MOVX    A,@DPTR
024D FB                MOV     R3,A
024E 90000000    R     MOV     DPTR,#i
0252 E0                MOVX    A,@DPTR
0253 FF                MOV     R7,A
0254 A3                INC     DPTR
0255 E0                MOVX    A,@DPTR
0256 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
025A CF                XCH     A,R7
025B F0                MOVX    @DPTR,A
025C A3                INC     DPTR
025D EF                MOV     A,R7
025E F0                MOVX    @DPTR,A
025F 90000000    R     MOV     DPTR,#dy
0263 E0                MOVX    A,@DPTR
0264 FF                MOV     R7,A
0265 A3                INC     DPTR
0266 E0                MOVX    A,@DPTR
0267 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
026B CF                XCH     A,R7
026C F0                MOVX    @DPTR,A
026D A3                INC     DPTR
026E EF                MOV     A,R7
026F F0                MOVX    @DPTR,A
0270 90000000    R     MOV     DPTR,#win_front
0274 E0                MOVX    A,@DPTR
0275 FF                MOV     R7,A
0276 110000      E     ACALL   _SOsd_SetScreen
0279 7F01              MOV     R7,#01H
027B 110000      E     ACALL   _WaitVBlank
027E 90000000    R     MOV     DPTR,#win_back
0282 E0                MOVX    A,@DPTR
0283 FF                MOV     R7,A
0284 A3                INC     DPTR
0285 E0                MOVX    A,@DPTR
0286 FD                MOV     R5,A
0287 110000      E     ACALL   _SOsd_UpdateReg
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 306 

028A 7F0A              MOV     R7,#0AH
028C 7E00              MOV     R6,#00H
028E 110000      E     ACALL   _delay1ms
0291 90000000    R     MOV     DPTR,#i+01H
0295 E0                MOVX    A,@DPTR
0296 22                RET     
0297         L?0796:
0297 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
029B 110000      E     ACALL   ?C?LSTXDATA
029E 90000000    R     MOV     DPTR,#win_back
02A2 E0                MOVX    A,@DPTR
02A3 FF                MOV     R7,A
02A4 110000      E     ACALL   _SOsd_SetSpiStartOffset
02A7 90000000    R     MOV     DPTR,#sx
02AB E0                MOVX    A,@DPTR
02AC FC                MOV     R4,A
02AD A3                INC     DPTR
02AE E0                MOVX    A,@DPTR
02AF FD                MOV     R5,A
02B0 90000000    R     MOV     DPTR,#i
02B4 E0                MOVX    A,@DPTR
02B5 FE                MOV     R6,A
02B6 A3                INC     DPTR
02B7 E0                MOVX    A,@DPTR
02B8 FF                MOV     R7,A
02B9 90000000    R     MOV     DPTR,#sy
02BD E0                MOVX    A,@DPTR
02BE FA                MOV     R2,A
02BF A3                INC     DPTR
02C0 E0                MOVX    A,@DPTR
02C1 2F                ADD     A,R7
02C2 FB                MOV     R3,A
02C3 EA                MOV     A,R2
02C4 3E                ADDC    A,R6
02C5 FA                MOV     R2,A
02C6 A3                INC     DPTR
02C7 E0                MOVX    A,@DPTR
02C8 FF                MOV     R7,A
02C9 A3                INC     DPTR
02CA E0                MOVX    A,@DPTR
02CB 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
02CF CF                XCH     A,R7
02D0 F0                MOVX    @DPTR,A
02D1 A3                INC     DPTR
02D2 EF                MOV     A,R7
02D3 F0                MOVX    @DPTR,A
02D4 90000000    R     MOV     DPTR,#i
02D8 A3                INC     DPTR
02D9 E0                MOVX    A,@DPTR
02DA FF                MOV     R7,A
02DB 90000000    R     MOV     DPTR,#dy
02DF E0                MOVX    A,@DPTR
02E0 F8                MOV     R0,A
02E1 A3                INC     DPTR
02E2 E0                MOVX    A,@DPTR
02E3 C3                CLR     C
02E4 9F                SUBB    A,R7
02E5 FF                MOV     R7,A
02E6 E8                MOV     A,R0
02E7 9E                SUBB    A,R6
02E8 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
02EC F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 307 

02ED A3                INC     DPTR
02EE EF                MOV     A,R7
02EF F0                MOVX    @DPTR,A
02F0 90000000    R     MOV     DPTR,#win_back
02F4 E0                MOVX    A,@DPTR
02F5 FF                MOV     R7,A
02F6 110000      E     ACALL   _SOsd_SetScreen
02F9 E4                CLR     A
02FA FF                MOV     R7,A
02FB 7E04              MOV     R6,#04H
02FD FD                MOV     R5,A
02FE FC                MOV     R4,A
02FF 90000000    R     MOV     DPTR,#dTemp
0303 110000      E     ACALL   ?C?LSTXDATA
0306 90000000    R     MOV     DPTR,#dTemp
030A E0                MOVX    A,@DPTR
030B F8                MOV     R0,A
030C A3                INC     DPTR
030D E0                MOVX    A,@DPTR
030E F9                MOV     R1,A
030F A3                INC     DPTR
0310 E0                MOVX    A,@DPTR
0311 FA                MOV     R2,A
0312 A3                INC     DPTR
0313 E0                MOVX    A,@DPTR
0314 FB                MOV     R3,A
0315 90000000    R     MOV     DPTR,#i
0319 E0                MOVX    A,@DPTR
031A FE                MOV     R6,A
031B A3                INC     DPTR
031C E0                MOVX    A,@DPTR
031D FF                MOV     R7,A
031E 22                RET     
031F         L?0797:
031F 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
0323 110000      E     ACALL   ?C?LSTXDATA
0326 90000000    R     MOV     DPTR,#win_front
032A E0                MOVX    A,@DPTR
032B FF                MOV     R7,A
032C 110000      E     ACALL   _SOsd_SetSpiStartOffset
032F 90000000    R     MOV     DPTR,#sx
0333 E0                MOVX    A,@DPTR
0334 FC                MOV     R4,A
0335 A3                INC     DPTR
0336 E0                MOVX    A,@DPTR
0337 FD                MOV     R5,A
0338 90000000    R     MOV     DPTR,#i
033C E0                MOVX    A,@DPTR
033D FE                MOV     R6,A
033E A3                INC     DPTR
033F E0                MOVX    A,@DPTR
0340 FF                MOV     R7,A
0341 C3                CLR     C
0342 7458              MOV     A,#058H
0344 9F                SUBB    A,R7
0345 FB                MOV     R3,A
0346 7402              MOV     A,#02H
0348 9E                SUBB    A,R6
0349 FA                MOV     R2,A
034A 90000000    R     MOV     DPTR,#dx
034E E0                MOVX    A,@DPTR
034F FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 308 

0350 A3                INC     DPTR
0351 E0                MOVX    A,@DPTR
0352 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
0356 CF                XCH     A,R7
0357 F0                MOVX    @DPTR,A
0358 A3                INC     DPTR
0359 EF                MOV     A,R7
035A F0                MOVX    @DPTR,A
035B 90000000    R     MOV     DPTR,#i
035F A3                INC     DPTR
0360 E0                MOVX    A,@DPTR
0361 FF                MOV     R7,A
0362 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
0366 EE                MOV     A,R6
0367 F0                MOVX    @DPTR,A
0368 A3                INC     DPTR
0369 EF                MOV     A,R7
036A F0                MOVX    @DPTR,A
036B 90000000    R     MOV     DPTR,#win_front
036F E0                MOVX    A,@DPTR
0370 FF                MOV     R7,A
0371 110000      E     ACALL   _SOsd_SetScreen
0374 7F01              MOV     R7,#01H
0376 110000      E     ACALL   _WaitVBlank
0379 90000000    R     MOV     DPTR,#win_back
037D E0                MOVX    A,@DPTR
037E FF                MOV     R7,A
037F A3                INC     DPTR
0380 E0                MOVX    A,@DPTR
0381 FD                MOV     R5,A
0382 110000      E     ACALL   _SOsd_UpdateReg
0385 7F0A              MOV     R7,#0AH
0387 7E00              MOV     R6,#00H
0389 110000      E     ACALL   _delay1ms
038C 90000000    R     MOV     DPTR,#i+01H
0390 E0                MOVX    A,@DPTR
0391 22                RET     
0392         L?0808:
0392 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
0396 110000      E     ACALL   ?C?LSTXDATA
0399 90000000    R     MOV     DPTR,#win_back
039D E0                MOVX    A,@DPTR
039E FF                MOV     R7,A
039F 110000      E     ACALL   _SOsd_SetSpiStartOffset
03A2 90000000    R     MOV     DPTR,#sx
03A6 E0                MOVX    A,@DPTR
03A7 FC                MOV     R4,A
03A8 A3                INC     DPTR
03A9 E0                MOVX    A,@DPTR
03AA FD                MOV     R5,A
03AB A3                INC     DPTR
03AC E0                MOVX    A,@DPTR
03AD FA                MOV     R2,A
03AE A3                INC     DPTR
03AF E0                MOVX    A,@DPTR
03B0 FB                MOV     R3,A
03B1 90000000    R     MOV     DPTR,#i
03B5 E0                MOVX    A,@DPTR
03B6 FE                MOV     R6,A
03B7 A3                INC     DPTR
03B8 E0                MOVX    A,@DPTR
03B9 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 309 

03BA 90000000    R     MOV     DPTR,#dx
03BE E0                MOVX    A,@DPTR
03BF F8                MOV     R0,A
03C0 A3                INC     DPTR
03C1 E0                MOVX    A,@DPTR
03C2 C3                CLR     C
03C3 9F                SUBB    A,R7
03C4 FF                MOV     R7,A
03C5 E8                MOV     A,R0
03C6 9E                SUBB    A,R6
03C7 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
03CB F0                MOVX    @DPTR,A
03CC A3                INC     DPTR
03CD EF                MOV     A,R7
03CE F0                MOVX    @DPTR,A
03CF 90000000    R     MOV     DPTR,#dy
03D3 E0                MOVX    A,@DPTR
03D4 FF                MOV     R7,A
03D5 A3                INC     DPTR
03D6 E0                MOVX    A,@DPTR
03D7 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
03DB CF                XCH     A,R7
03DC F0                MOVX    @DPTR,A
03DD A3                INC     DPTR
03DE EF                MOV     A,R7
03DF F0                MOVX    @DPTR,A
03E0 90000000    R     MOV     DPTR,#win_back
03E4 E0                MOVX    A,@DPTR
03E5 FF                MOV     R7,A
03E6 22                RET     
03E7         L?0809:
03E7 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
03EB 110000      E     ACALL   ?C?LSTXDATA
03EE 90000000    R     MOV     DPTR,#win_front
03F2 E0                MOVX    A,@DPTR
03F3 FF                MOV     R7,A
03F4 110000      E     ACALL   _SOsd_SetSpiStartOffset
03F7 90000000    R     MOV     DPTR,#sx
03FB E0                MOVX    A,@DPTR
03FC FC                MOV     R4,A
03FD A3                INC     DPTR
03FE E0                MOVX    A,@DPTR
03FF FD                MOV     R5,A
0400 A3                INC     DPTR
0401 E0                MOVX    A,@DPTR
0402 FA                MOV     R2,A
0403 A3                INC     DPTR
0404 E0                MOVX    A,@DPTR
0405 FB                MOV     R3,A
0406 90000000    R     MOV     DPTR,#i
040A E0                MOVX    A,@DPTR
040B FF                MOV     R7,A
040C A3                INC     DPTR
040D E0                MOVX    A,@DPTR
040E 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
0412 CF                XCH     A,R7
0413 F0                MOVX    @DPTR,A
0414 A3                INC     DPTR
0415 EF                MOV     A,R7
0416 F0                MOVX    @DPTR,A
0417 90000000    R     MOV     DPTR,#dy
041B E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 310 

041C FF                MOV     R7,A
041D A3                INC     DPTR
041E E0                MOVX    A,@DPTR
041F 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
0423 CF                XCH     A,R7
0424 F0                MOVX    @DPTR,A
0425 A3                INC     DPTR
0426 EF                MOV     A,R7
0427 F0                MOVX    @DPTR,A
0428 90000000    R     MOV     DPTR,#win_front
042C E0                MOVX    A,@DPTR
042D FF                MOV     R7,A
042E 110000      E     ACALL   _SOsd_SetScreen
0431 7F01              MOV     R7,#01H
0433 110000      E     ACALL   _WaitVBlank
0436 90000000    R     MOV     DPTR,#win_back
043A E0                MOVX    A,@DPTR
043B FF                MOV     R7,A
043C A3                INC     DPTR
043D E0                MOVX    A,@DPTR
043E FD                MOV     R5,A
043F 110000      E     ACALL   _SOsd_UpdateReg
0442 7F0A              MOV     R7,#0AH
0444 7E00              MOV     R6,#00H
0446 110000      E     ACALL   _delay1ms
0449 90000000    R     MOV     DPTR,#i+01H
044D E0                MOVX    A,@DPTR
044E 22                RET     
044F         L?0830:
044F 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
0453 110000      E     ACALL   ?C?LSTXDATA
0456 90000000    R     MOV     DPTR,#win_front
045A E0                MOVX    A,@DPTR
045B FF                MOV     R7,A
045C 110000      E     ACALL   _SOsd_SetSpiStartOffset
045F 90000000    R     MOV     DPTR,#sx
0463 E0                MOVX    A,@DPTR
0464 FC                MOV     R4,A
0465 A3                INC     DPTR
0466 E0                MOVX    A,@DPTR
0467 FD                MOV     R5,A
0468 A3                INC     DPTR
0469 E0                MOVX    A,@DPTR
046A FA                MOV     R2,A
046B A3                INC     DPTR
046C E0                MOVX    A,@DPTR
046D FB                MOV     R3,A
046E A3                INC     DPTR
046F E0                MOVX    A,@DPTR
0470 FF                MOV     R7,A
0471 A3                INC     DPTR
0472 E0                MOVX    A,@DPTR
0473 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
0477 CF                XCH     A,R7
0478 F0                MOVX    @DPTR,A
0479 A3                INC     DPTR
047A EF                MOV     A,R7
047B F0                MOVX    @DPTR,A
047C 90000000    R     MOV     DPTR,#i
0480 E0                MOVX    A,@DPTR
0481 FF                MOV     R7,A
0482 A3                INC     DPTR
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 311 

0483 E0                MOVX    A,@DPTR
0484 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
0488 CF                XCH     A,R7
0489 F0                MOVX    @DPTR,A
048A A3                INC     DPTR
048B EF                MOV     A,R7
048C F0                MOVX    @DPTR,A
048D 90000000    R     MOV     DPTR,#win_front
0491 E0                MOVX    A,@DPTR
0492 FF                MOV     R7,A
0493 110000      E     ACALL   _SOsd_SetScreen
0496 7F01              MOV     R7,#01H
0498 110000      E     ACALL   _WaitVBlank
049B 90000000    R     MOV     DPTR,#win_back
049F E0                MOVX    A,@DPTR
04A0 FF                MOV     R7,A
04A1 A3                INC     DPTR
04A2 E0                MOVX    A,@DPTR
04A3 FD                MOV     R5,A
04A4 110000      E     ACALL   _SOsd_UpdateReg
04A7 7F0A              MOV     R7,#0AH
04A9 7E00              MOV     R6,#00H
04AB 110000      E     ACALL   _delay1ms
04AE 90000000    R     MOV     DPTR,#i+01H
04B2 E0                MOVX    A,@DPTR
04B3 240A              ADD     A,#0AH
04B5 F0                MOVX    @DPTR,A
04B6 90000000    R     MOV     DPTR,#i
04BA E0                MOVX    A,@DPTR
04BB 3400              ADDC    A,#00H
04BD F0                MOVX    @DPTR,A
04BE 22                RET     
04BF         L?0841:
04BF 90000000    E     MOV     DPTR,#?_SOsd_SetSpiStartOffset?BYTE+01H
04C3 110000      E     ACALL   ?C?LSTXDATA
04C6 90000000    R     MOV     DPTR,#win_back
04CA E0                MOVX    A,@DPTR
04CB FF                MOV     R7,A
04CC 110000      E     ACALL   _SOsd_SetSpiStartOffset
04CF 90000000    R     MOV     DPTR,#sx
04D3 E0                MOVX    A,@DPTR
04D4 FC                MOV     R4,A
04D5 A3                INC     DPTR
04D6 E0                MOVX    A,@DPTR
04D7 FD                MOV     R5,A
04D8 A3                INC     DPTR
04D9 E0                MOVX    A,@DPTR
04DA FA                MOV     R2,A
04DB A3                INC     DPTR
04DC E0                MOVX    A,@DPTR
04DD FB                MOV     R3,A
04DE A3                INC     DPTR
04DF E0                MOVX    A,@DPTR
04E0 FF                MOV     R7,A
04E1 A3                INC     DPTR
04E2 E0                MOVX    A,@DPTR
04E3 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
04E7 CF                XCH     A,R7
04E8 F0                MOVX    @DPTR,A
04E9 A3                INC     DPTR
04EA EF                MOV     A,R7
04EB F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 312 

04EC 90000000    R     MOV     DPTR,#i
04F0 E0                MOVX    A,@DPTR
04F1 FE                MOV     R6,A
04F2 A3                INC     DPTR
04F3 E0                MOVX    A,@DPTR
04F4 FF                MOV     R7,A
04F5 90000000    R     MOV     DPTR,#dy
04F9 E0                MOVX    A,@DPTR
04FA F8                MOV     R0,A
04FB A3                INC     DPTR
04FC E0                MOVX    A,@DPTR
04FD C3                CLR     C
04FE 9F                SUBB    A,R7
04FF FF                MOV     R7,A
0500 E8                MOV     A,R0
0501 9E                SUBB    A,R6
0502 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+07H
0506 F0                MOVX    @DPTR,A
0507 A3                INC     DPTR
0508 EF                MOV     A,R7
0509 F0                MOVX    @DPTR,A
050A 90000000    R     MOV     DPTR,#win_back
050E E0                MOVX    A,@DPTR
050F FF                MOV     R7,A
0510 22                RET     
0511         L?1072:
0511 110000      E     ACALL   _SOsd_SetScreen
0514 90000000    R     MOV     DPTR,#front_header_table+04H
0518 22                RET     
             ; FUNCTION _SliderShow_Show (END)

             ; FUNCTION SOsdDemo1 (BEGIN)
                                           ; SOURCE LINE # 5438
                                           ; SOURCE LINE # 5439
                                           ; SOURCE LINE # 5440
0000 90000000    R     MOV     DPTR,#winno
0004 7401              MOV     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5441
0007 E4                CLR     A
0008 A3                INC     DPTR
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5443
000A 90000000    R     MOV     DPTR,#win_back
000E 04                INC     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5447
0010 E4                CLR     A
0011 90000000    E     MOV     DPTR,#CpuTouchPressed
0015 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5448
0016 90000000    E     MOV     DPTR,#CpuTouchChanged
001A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5451
001B 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5452
001E 110000      E     ACALL   SpiOsdSetDeValue
                                           ; SOURCE LINE # 5453
0021 110000      E     ACALL   FOsdSetDeValue
                                           ; SOURCE LINE # 5454
0024 E4                CLR     A
0025 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 313 

0026 110000      E     ACALL   _SpiOsdWinHWOffAll
                                           ; SOURCE LINE # 5457
0029 7F01              MOV     R7,#01H
002B 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 5459
002E 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5460
0031 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 5461
0034 E4                CLR     A
0035 FD                MOV     R5,A
0036 7F01              MOV     R7,#01H
0038 110000      E     ACALL   _SOsd_SetSpiStartBit
                                           ; SOURCE LINE # 5462
003B E4                CLR     A
003C FD                MOV     R5,A
003D FC                MOV     R4,A
003E 7F01              MOV     R7,#01H
0040 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 5463
0043 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5464
0046 7D08              MOV     R5,#08H
0048 E4                CLR     A
0049 FF                MOV     R7,A
004A 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 5466
004D E4                CLR     A
004E 90000000    R     MOV     DPTR,#i
0052 F0                MOVX    @DPTR,A
0053         ?C0645:
                                           ; SOURCE LINE # 5467
0053 90000000    R     MOV     DPTR,#i
0057 75F00F            MOV     B,#0FH
                                           ; SOURCE LINE # 5468
005A 110000      R     ACALL   L?0936
                                           ; SOURCE LINE # 5470
005D 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 5471
0060 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5472
0063 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5477
0066 90000000    R     MOV     DPTR,#i
006A E0                MOVX    A,@DPTR
006B 2412              ADD     A,#012H
006D FF                MOV     R7,A
006E 110000      E     ACALL   _MonSOsdImg_Get_ImgeItem
;---- Variable 'image0' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 5478
0071 90000000    R     MOV     DPTR,#win_back
0075 110000      R     ACALL   L?0983
0078 110000      R     ACALL   _SliderShow_Set
                                           ; SOURCE LINE # 5480
007B 7F01              MOV     R7,#01H
007D 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 5481
0080 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 5483
0083 FF                MOV     R7,A
0084 110000      E     ACALL   _CheckHumanInputs
0087 EF                MOV     A,R7
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 314 

0088 7017              JNZ     ?C0650
                                           ; SOURCE LINE # 5484
008A         ?C0648:
                                           ; SOURCE LINE # 5485
                                           ; SOURCE LINE # 5486
008A 110000      R     ACALL   L?0965
                                           ; SOURCE LINE # 5487
                                           ; SOURCE LINE # 5488
008D 110000      R     ACALL   L?0965
                                           ; SOURCE LINE # 5489
0090 E4                CLR     A
0091 FF                MOV     R7,A
0092 110000      E     ACALL   _CheckHumanInputs
0095 EF                MOV     A,R7
0096 7009              JNZ     ?C0650
                                           ; SOURCE LINE # 5490
0098         ?C0649:
                                           ; SOURCE LINE # 5491
0098         ?C0647:
0098 90000000    R     MOV     DPTR,#i
009C E0                MOVX    A,@DPTR
009D 04                INC     A
009E F0                MOVX    @DPTR,A
009F 80B2              SJMP    ?C0645
                                           ; SOURCE LINE # 5492
00A1         ?C0650:
00A1 22                RET     
00A2         L?0965:
00A2 7FF4              MOV     R7,#0F4H
00A4 7E01              MOV     R6,#01H
00A6 110000      E     ACALL   _delay1ms
00A9 7FF4              MOV     R7,#0F4H
00AB 7E01              MOV     R6,#01H
00AD 110000      E     ACALL   _delay1ms
00B0 22                RET     
             ; FUNCTION SOsdDemo1 (END)

             ; FUNCTION SOsdDemo2 (BEGIN)
                                           ; SOURCE LINE # 5516
                                           ; SOURCE LINE # 5517
                                           ; SOURCE LINE # 5518
0000 E4                CLR     A
0001 90000000    R     MOV     DPTR,#lut
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5522
0006 90000000    R     MOV     DPTR,#win_back
000A 04                INC     A
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5523
000C A3                INC     DPTR
000D 7403              MOV     A,#03H
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5529
0010 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5530
0013 110000      E     ACALL   SpiOsdSetDeValue
                                           ; SOURCE LINE # 5531
0016 110000      E     ACALL   FOsdSetDeValue
                                           ; SOURCE LINE # 5532
0019 E4                CLR     A
001A FF                MOV     R7,A
001B 110000      E     ACALL   _SpiOsdWinHWOffAll
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 315 

                                           ; SOURCE LINE # 5535
001E 7F01              MOV     R7,#01H
0020 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 5536
0023 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5537
0026 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 5538
0029 E4                CLR     A
002A FD                MOV     R5,A
002B 7F01              MOV     R7,#01H
002D 110000      E     ACALL   _SOsd_SetSpiStartBit
                                           ; SOURCE LINE # 5539
0030 E4                CLR     A
0031 FD                MOV     R5,A
0032 FC                MOV     R4,A
0033 7F01              MOV     R7,#01H
0035 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 5540
0038 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5541
003B 7D08              MOV     R5,#08H
003D E4                CLR     A
003E FF                MOV     R7,A
003F 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 5543
0042 E4                CLR     A
0043 90000000    R     MOV     DPTR,#i
0047 F0                MOVX    @DPTR,A
0048         ?C0651:
                                           ; SOURCE LINE # 5544
0048 90000000    R     MOV     DPTR,#i
004C E0                MOVX    A,@DPTR
004D 5407              ANL     A,#07H
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5545
0050 E0                MOVX    A,@DPTR
0051 75F004            MOV     B,#04H
0054 A4                MUL     AB
0055 2400        R     ADD     A,#LOW sosd_demo2_table
0057 F9                MOV     R1,A
0058 7400        R     MOV     A,#HIGH sosd_demo2_table
005A 35F0              ADDC    A,B
005C FA                MOV     R2,A
005D 90000000    R     MOV     DPTR,#pDemoTable
0061 7400        R     MOV     A,#MBYTE sosd_demo2_table
0063 110000      R     ACALL   L?0807
                                           ; SOURCE LINE # 5547
0066 110000      R     ACALL   L?0938
                                           ; SOURCE LINE # 5549
0069 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 5550
006C 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5551
006F 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5558
0072 90000000    R     MOV     DPTR,#pDemoTable
0076 110000      R     ACALL   L?0777
0079 F9                MOV     R1,A
007A 110000      E     ACALL   ?C?CLDPTR
007D FF                MOV     R7,A
007E 110000      E     ACALL   _MonSOsdImg_Get_ImgeItem
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 316 

0081 90000000    R     MOV     DPTR,#image0
0085 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 5559
0088 90000000    R     MOV     DPTR,#pDemoTable
008C 110000      R     ACALL   L?0777
008F 110000      R     ACALL   L?0785
0092 FF                MOV     R7,A
0093 110000      E     ACALL   _MonSOsdImg_Get_ImgeItem
0096 90000000    R     MOV     DPTR,#image1
009A 110000      R     ACALL   L?0806
                                           ; SOURCE LINE # 5561
009D A3                INC     DPTR
009E E0                MOVX    A,@DPTR
009F FF                MOV     R7,A
00A0 90000000    R     MOV     DPTR,#image0
00A4 110000      R     ACALL   L?0777
00A7 F9                MOV     R1,A
00A8 110000      R     ACALL   L?0984
                                           ; SOURCE LINE # 5562
00AB 110000      R     ACALL   L?1111
00AE 90000000    R     MOV     DPTR,#image1
00B2 110000      R     ACALL   L?0777
00B5 F9                MOV     R1,A
00B6 110000      R     ACALL   L?0984
                                           ; SOURCE LINE # 5564
00B9 110000      R     ACALL   L?1111
00BC E4                CLR     A
00BD 90000000    E     MOV     DPTR,#?_SOsd_SetScreen?BYTE+05H
00C1 F0                MOVX    @DPTR,A
00C2 A3                INC     DPTR
00C3 110000      R     ACALL   L?1107
00C6 E4                CLR     A
00C7 FB                MOV     R3,A
00C8 FA                MOV     R2,A
00C9 FD                MOV     R5,A
00CA FC                MOV     R4,A
00CB 110000      E     ACALL   _SOsd_SetScreen
                                           ; SOURCE LINE # 5567
00CE 7F01              MOV     R7,#01H
00D0 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 5568
00D3 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 5571
00D6 90000000    R     MOV     DPTR,#pDemoTable
00DA 110000      R     ACALL   L?0777
00DD 2402              ADD     A,#02H
00DF 110000      R     ACALL   L?0786
00E2 FF                MOV     R7,A
00E3 90000000    R     MOV     DPTR,#pDemoTable
00E7 A3                INC     DPTR
00E8 E0                MOVX    A,@DPTR
00E9 FA                MOV     R2,A
00EA A3                INC     DPTR
00EB E0                MOVX    A,@DPTR
00EC 2403              ADD     A,#03H
00EE 110000      R     ACALL   L?0786
00F1 FD                MOV     R5,A
00F2 110000      R     ACALL   _SliderShow_Show
                                           ; SOURCE LINE # 5573
00F5 E4                CLR     A
00F6 FF                MOV     R7,A
00F7 110000      E     ACALL   _CheckHumanInputs
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 317 

00FA EF                MOV     A,R7
00FB 7018              JNZ     ?C0656
                                           ; SOURCE LINE # 5574
00FD         ?C0654:
                                           ; SOURCE LINE # 5575
                                           ; SOURCE LINE # 5576
00FD 110000      R     ACALL   L?0966
                                           ; SOURCE LINE # 5577
                                           ; SOURCE LINE # 5578
0100 110000      R     ACALL   L?0966
                                           ; SOURCE LINE # 5579
0103 E4                CLR     A
0104 FF                MOV     R7,A
0105 110000      E     ACALL   _CheckHumanInputs
0108 EF                MOV     A,R7
0109 700A              JNZ     ?C0656
                                           ; SOURCE LINE # 5580
010B         ?C0655:
                                           ; SOURCE LINE # 5581
010B         ?C0653:
010B 90000000    R     MOV     DPTR,#i
010F E0                MOVX    A,@DPTR
0110 04                INC     A
0111 F0                MOVX    @DPTR,A
0112 010000      R     AJMP    ?C0651
                                           ; SOURCE LINE # 5582
0115         ?C0656:
0115 22                RET     
0116         L?0966:
0116 7FF4              MOV     R7,#0F4H
0118 7E01              MOV     R6,#01H
011A 110000      E     ACALL   _delay1ms
011D 7FF4              MOV     R7,#0F4H
011F 7E01              MOV     R6,#01H
0121 110000      E     ACALL   _delay1ms
0124 22                RET     
0125         L?1111:
0125 110000      R     ACALL   _SliderShow_Set
0128 90000000    R     MOV     DPTR,#win_front
012C E0                MOVX    A,@DPTR
012D FF                MOV     R7,A
012E 22                RET     
             ; FUNCTION SOsdDemo2 (END)

             ; FUNCTION SOsdDemo3 (BEGIN)
                                           ; SOURCE LINE # 5592
                                           ; SOURCE LINE # 5593
                                           ; SOURCE LINE # 5594
0000 90000000    R     MOV     DPTR,#winno
0004 7401              MOV     A,#01H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5595
0007 E4                CLR     A
0008 A3                INC     DPTR
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5597
000A 90000000    R     MOV     DPTR,#win_back
000E 04                INC     A
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5601
0010 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5602
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 318 

0013 110000      E     ACALL   SpiOsdSetDeValue
                                           ; SOURCE LINE # 5603
0016 110000      E     ACALL   FOsdSetDeValue
                                           ; SOURCE LINE # 5604
0019 E4                CLR     A
001A FF                MOV     R7,A
001B 110000      E     ACALL   _SpiOsdWinHWOffAll
                                           ; SOURCE LINE # 5607
001E 7F01              MOV     R7,#01H
0020 110000      E     ACALL   _SpiOsdEnable
                                           ; SOURCE LINE # 5609
0023 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5610
0026 110000      E     ACALL   SOsd_UpdateRlc
                                           ; SOURCE LINE # 5611
0029 E4                CLR     A
002A FD                MOV     R5,A
002B 7F01              MOV     R7,#01H
002D 110000      E     ACALL   _SOsd_SetSpiStartBit
                                           ; SOURCE LINE # 5612
0030 E4                CLR     A
0031 FD                MOV     R5,A
0032 FC                MOV     R4,A
0033 7F01              MOV     R7,#01H
0035 110000      E     ACALL   _SOsd_SetLutOffset
                                           ; SOURCE LINE # 5614
0038 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5615
003B 7D08              MOV     R5,#08H
003D E4                CLR     A
003E FF                MOV     R7,A
003F 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 5618
0042 110000      R     ACALL   L?1011
0045 110000      R     ACALL   L?0848
0048 E0                MOVX    A,@DPTR
0049 90000000    R     MOV     DPTR,#bTemp
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5619
004E E0                MOVX    A,@DPTR
004F 4407              ORL     A,#07H
0051 110000      R     ACALL   L?1010
0054 110000      R     ACALL   L?0848
0057 EF                MOV     A,R7
0058 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5620
0059 7D5A              MOV     R5,#05AH
005B 7C03              MOV     R4,#03H
005D 7FDE              MOV     R7,#0DEH
005F 7E06              MOV     R6,#06H
0061 110000      E     ACALL   _ScalerWriteFreerunTotal
                                           ; SOURCE LINE # 5622
0064 E4                CLR     A
0065 90000000    R     MOV     DPTR,#i
0069 F0                MOVX    @DPTR,A
006A         ?C0657:
                                           ; SOURCE LINE # 5623
006A 90000000    R     MOV     DPTR,#i
006E 75F005            MOV     B,#05H
                                           ; SOURCE LINE # 5624
0071 110000      R     ACALL   L?0936
                                           ; SOURCE LINE # 5626
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 319 

0074 110000      E     ACALL   SOsd_CleanLut
                                           ; SOURCE LINE # 5627
0077 110000      E     ACALL   SOsd_CleanRlc
                                           ; SOURCE LINE # 5628
007A 110000      E     ACALL   SOsd_CleanReg
                                           ; SOURCE LINE # 5633
007D 90000000    R     MOV     DPTR,#i
0081 E0                MOVX    A,@DPTR
0082 2422              ADD     A,#022H
0084 FF                MOV     R7,A
0085 110000      E     ACALL   _MonSOsdImg_Get_ImgeItem
;---- Variable 'image0' assigned to Register 'R1/R2/R3' ----
                                           ; SOURCE LINE # 5634
0088 90000000    R     MOV     DPTR,#win_back
008C 110000      R     ACALL   L?0983
008F 110000      R     ACALL   _SliderShow_Set
                                           ; SOURCE LINE # 5636
0092 7F01              MOV     R7,#01H
0094 110000      E     ACALL   _SOsd_show
                                           ; SOURCE LINE # 5637
0097 110000      R     ACALL   L?0943
                                           ; SOURCE LINE # 5639
009A FF                MOV     R7,A
009B 110000      E     ACALL   _CheckHumanInputs
009E EF                MOV     A,R7
009F 7017              JNZ     ?C0658
                                           ; SOURCE LINE # 5640
00A1         ?C0660:
                                           ; SOURCE LINE # 5641
                                           ; SOURCE LINE # 5642
00A1 110000      R     ACALL   L?0967
                                           ; SOURCE LINE # 5643
                                           ; SOURCE LINE # 5644
00A4 110000      R     ACALL   L?0967
                                           ; SOURCE LINE # 5645
00A7 E4                CLR     A
00A8 FF                MOV     R7,A
00A9 110000      E     ACALL   _CheckHumanInputs
00AC EF                MOV     A,R7
00AD 7009              JNZ     ?C0658
                                           ; SOURCE LINE # 5646
00AF         ?C0661:
                                           ; SOURCE LINE # 5647
00AF         ?C0659:
00AF 90000000    R     MOV     DPTR,#i
00B3 E0                MOVX    A,@DPTR
00B4 04                INC     A
00B5 F0                MOVX    @DPTR,A
00B6 80B2              SJMP    ?C0657
00B8         ?C0658:
                                           ; SOURCE LINE # 5648
00B8 90000000    R     MOV     DPTR,#win_back
00BC E0                MOVX    A,@DPTR
00BD FF                MOV     R7,A
00BE E4                CLR     A
00BF FD                MOV     R5,A
00C0 110000      E     ACALL   _SOsd_Enable
                                           ; SOURCE LINE # 5649
00C3 90000000    R     MOV     DPTR,#win_back
00C7 E0                MOVX    A,@DPTR
00C8 FD                MOV     R5,A
00C9 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   SOSDMENU                                                          07/18/2018 10:44:48 PAGE 320 

00CA 110000      E     ACALL   _SOsd_UpdateReg
                                           ; SOURCE LINE # 5650
00CD 90000000    R     MOV     DPTR,#bTemp
00D1 E0                MOVX    A,@DPTR
00D2 110000      R     ACALL   L?1010
00D5 110000      R     ACALL   L?0848
00D8 EF                MOV     A,R7
00D9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 5651
00DA 22                RET     
00DB         L?0967:
00DB 7FF4              MOV     R7,#0F4H
00DD 7E01              MOV     R6,#01H
00DF 110000      E     ACALL   _delay1ms
00E2 7FF4              MOV     R7,#0F4H
00E4 7E01              MOV     R6,#01H
00E6 110000      E     ACALL   _delay1ms
00E9 22                RET     
             ; FUNCTION SOsdDemo3 (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =  21309    ----
   CONSTANT SIZE    =    234    ----
   XDATA SIZE       =    138     351
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  1 WARNING(S),  0 ERROR(S)
