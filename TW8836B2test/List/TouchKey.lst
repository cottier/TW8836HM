C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE TOUCHKEY
OBJECT MODULE PLACED IN .\Output\TouchKey.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source36\TouchKey.c LARGE OMF2 ROM(D512K) OPTIMIZE(9,SPEED) REGFILE(.\Ou
                    -tput\TW8836B_EVB11.ORC) BROWSE INCDIR(SiI-SW;SiI-SW\HAL;SiI-SW\DEBUG;SiI-SW\CEC;.\Source36\LIB) DEFINE(EVB_11,nullFn=//)
                    - DEBUG CODE PRINT(.\List\TouchKey.lst) TABS(2) OBJECT(.\Output\TouchKey.obj)

line level    source

   1          /**
   2           * @file
   3           * TouchKey.c 
   4           * @author Brian Kang
   5           * @version 1.0
   6           * @section LICENSE
   7           *  Copyright (C) 2011~2012 Intersil Corporation
   8           * @section DESCRIPTION
   9           *  Touch and Keypad
  10          */
  11          /*
  12          Disclaimer: THIS INFORMATION IS PROVIDED 'AS-IS' FOR EVALUATION PURPOSES ONLY.  
  13          INTERSIL CORPORATION AND ITS SUBSIDIARIES ('INTERSIL') DISCLAIM ALL WARRANTIES, 
  14          INCLUDING WITHOUT LIMITATION FITNESS FOR A PARTICULAR PURPOSE AND MERCHANTABILITY.  
  15          Intersil provides evaluation platforms to help our customers to develop products. 
  16          However, factors beyond Intersil's control could significantly affect Intersil 
  17          product performance. 
  18          It remains the customers' responsibility to verify the actual system performance.
  19          */
  20          //*****************************************************************************
  21          //
  22          //  ADC(or AUX)
  23          //  KeyPad
  24          //  Touch
  25          
  26          #include "Config.h"
  27          #include "reg.h"
  28          #include "typedefs.h"
  29          #include "TW8836.h"
  30          
  31          #include "Global.h"
  32          #include "CPU.h"
  33          #include "Printf.h"
  34          #include "util.h"
  35          #include "Monitor.h"
  36          
  37          #include "I2C.h"
  38          #include "spi.h"
  39          
  40          #include "SOsd.h"
  41          #include "FOsd.h"
  42          #include "TouchKey.h"
  43          #include "EEPROM.h"
  44          //#include "SOsdMenu.h"
  45          
  46          #ifdef DEBUG_TOUCH_SW
                #define TscPrintf Printf
                #define TscPuts   Puts  
                #define dTscPrintf  dPrintf
                #define dTscPuts  dPuts 
              #else
  52            #define TscPrintf nullFn
  53            #define TscPuts   nullFn  
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 2   

  54            #define dTscPrintf  nullFn
  55            #define dTscPuts  nullFn  
  56          #endif
  57          
  58          #define ADC_MODE_X    0
  59          #define ADC_MODE_Z1   1
  60          #define ADC_MODE_Z2   2
  61          #define ADC_MODE_Y    3
  62          #define ADC_MODE_AUX0 4
  63          #define ADC_MODE_AUX1 5
  64          #define ADC_MODE_AUX2 6
  65          #define ADC_MODE_AUX3 7
  66          
  67          
  68          WORD  OldPosX, OldPosY;
  69          BYTE  TouchStatus, LastTouchStatus;
  70          DWORD veloX, veloY;
  71          
  72          DWORD TscTimeStart, TscTimeEnd, TscTimeLastEnd;
  73          BYTE TscHwReady=0;
  74          
  75          
  76          //#define MOVE_MIN  20
  77          #define TSC_MOVE_MIN_THRESHOLD    10    //5:NG
  78          #define TSC_LONGCLICK_THRESHOLD   1000  //10sec
  79          #define TSC_DCLICK_THRESHOLD    100   //1sec
  80          #define TSC_PRESS_RECOVER_THRESHOLD 100   //1sec
  81          #define TSC_Z_THRESHOLD       220
  82          #define TSC_MOVED_THRESHOLD     50    //500msec
  83          
  84          
  85          #define   RES_X 800
  86          #define   RES_Y 480
  87          
  88          BYTE  TouchStatus;
  89          WORD  TouchX, TouchY, TouchZ1, TouchZ2;
  90          WORD  PosX, PosY, StartX, StartY;
  91          WORD  TouchLeft = 200;   TouchRight = 3900; 
  92          WORD  TouchTop = 3600; TouchBottom = 340;  
  93          WORD  TouchCenterX = 2100; TouchCenterY = 2000;
  94          bit   TouchAuto = 0, TraceAuto = 0;
  95          bit   tsc_debug = 0;
  96          
  97          bit   TouchPressedOld=0;
  98          BYTE  TouchChangedOld=0;
  99          
 100          
 101          
 102          static void TscUpdateStatus(BYTE TscStat);
 103          static void SetLastTouchStatus( BYTE ts );
 104          
 105          
 106          //=============================================================================
 107          //    AUX 
 108          //=============================================================================
 109          
 110          //internal
 111          #ifdef SUPPORT_DIPSW
              WORD GetAUX( BYTE channel )
              {
                WORD  ADC;
                BYTE  page;
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 3   

                                        //BKTODO: use 0x02, div8
                WriteTW88(REG0B4, 0x03 );           // clock sel div16
              #if 0
                WriteTW88(REG0B0, 0x0c + channel );       // write Start, erase Ready,
                delay1ms(1);
                WriteTW88(REG0B0, 0x24 + channel );       // write Start, erase Ready,
                while (( ReadTW88(REG0B0 ) & 8 ) != 8 ) ;
                ADC = ( ReadTW88(REG0B2 ) << 4 ) + ReadTW88(REG0B3 ) ;
                //dPrintf( "\n\rAUX Value: %d", ADC );
              #else
                ADC = _TscGetAdcDataOutput(0x40+ channel);
              #endif
                return ( ADC );
              }
              #endif
 131          
 132          //internal
 133          //#ifdef SUPPORT_ANALOG_SENSOR_NEED_VERIFY
 134          //BYTE GetAUXBYTE( BYTE channel )
 135          //{
 136          //  BYTE  ADC;
 137          //  WORD  wADC;
 138          //  BYTE  page;
 139          //
 140          //  WriteTW88(REG0B4, 0x03 );           // clock sel div16
 141          //  wADC = _TscGetAdcDataOutput(0x40+ channel);
 142          //  ADC = (wADC >> 4);  //only MSB 8 bits[11:4]
 143          //  return ( ADC );
 144          //}
 145          //#endif
 146          
 147          #if 0
              WORD GetAuxWord(BYTE mode)
              {...}
              #endif
 151          
 152          //=============================================================================
 153          //DIP
 154          //=============================================================================
 155          #ifdef SUPPORT_DIPSW
              // code WORD DIP_MEASURE[] = { 0, 282, 525, 745, 891, 1056, 1223, 1369, 1454, 1574, 1680, 1781, 1851, 1936
             -, 2014, 2094 }; real measure
              code WORD DIP_MEASURE[] = { 141, 403, 635, 818, 973, 1138, 1302, 1414, 1514, 1630, 1731, 1815, 1980, 2050 
             -};
              
              BYTE  DipSW( void )
              {
                WORD  i;
                BYTE  j;
              
                i = GetAUX( 1 );
              
                j = 0;
                for ( j=0; j<15; j++ ) {
                  if ( i < DIP_MEASURE[j] ) return (j);
                }
                return ( 15 );
              }
              #endif
 173          
 174          //===========================================
 175          // KeyPad
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 4   

 176          //===========================================
 177          bit     RepeatKey, KeyReady;
 178          DATA BYTE   Key;
 179          
 180          DATA BYTE keytic;
 181          
 182          #define KEYPAD_INPUT  3
 183          
 184          //#ifdef SUPPORT_ANALOG_SENSOR
 185          
 186          
 187          //#define KEY_RIGHT     1
 188          //#define KEY_UP      2
 189          //#define KEY_MENU      3
 190          //#define KEY_DOWN      4
 191          //#define KEY_LEFT      5
 192          //#define KEY_INPUT       6
 193          
 194          // key sampleing values
 195          //  key name    average     range
 196          //  ----------  ------- -----------
 197          //  input key:  0x0200  0x100~0x2FF
 198          //  menu key: 0x0400  0x300~0x4FF
 199          //  up key:   0x0600  0x500~0x6FF
 200          //  down key: 0x0800  0x700~0x9FF
 201          //  right key:  0x0A00  0x900~0xAFF
 202          //  left key:   0x0C00  0xB00~0xCFF
 203          //------------------------------
 204          BYTE  KeyPadMap[] = { 0, KEY_INPUT, KEY_MENU, KEY_UP, KEY_DOWN, KEY_RIGHT, KEY_LEFT, 0 };
 205          /**
 206          * read keypad value
 207          */
 208          BYTE ReadKeyPad( void ) 
 209          {
 210   1        WORD  i, j;
 211   1        WORD  min, max;
 212   1        BYTE  temp;
 213   1        WORD  key_in;
 214   1      
 215   1        i = CpuAUX3;
 216   1        temp = CpuAUX3_Changed;
 217   1        if ( i<100 ) return (0);
 218   1      
 219   1        key_in = i;
 220   1      
 221   1        min = i; max = i;
 222   1        for ( j=0; j<9; j++ ) {
 223   2          while ( temp == CpuAUX3_Changed ) ;       // wait new measurement
 224   2          temp = CpuAUX3_Changed;
 225   2          i = CpuAUX3;
 226   2          if ( i<100 ) return (0);
 227   2          key_in += i;
 228   2          if ( i < min ) min = i;
 229   2          else if ( i > max ) max = i;
 230   2        }
 231   1        key_in -= min;
 232   1        key_in -= max;
 233   1      
 234   1        key_in /= 8;      // divided by 8 for averaging
 235   1        temp = (key_in >> 8);
 236   1      
 237   1      
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 5   

 238   1        //dPrintf("\r\nKeyIn ADC Value is: 0x%4x, last: 0x%04x", (WORD)key_in, i );
 239   1        temp++;
 240   1        temp /= 2;
 241   1        return (KeyPadMap[temp]);
 242   1      }
 243          //#endif
 244          
 245          
 246          /**
 247          * get keypad input
 248          *
 249          * extern 
 250          * Key: keep pressed key value.
 251          * keytic: key tic counter
 252          * KeyReady
 253          * RepeatKey
 254          */
 255          BYTE GetKey(BYTE repeat)
 256          {
 257   1      BYTE  i;
 258   1      //#ifdef SUPPORT_ANALOG_SENSOR
 259   1        i = repeat;
 260   1        i = ReadKeyPad();
 261   1        if ( i == 0 ) {
 262   2          RepeatKey = 0;
 263   2          Key = 0;
 264   2          KeyReady = 0;
 265   2          keytic = 0;
 266   2          return (0);
 267   2        }
 268   1        if ( Key == 0 ) {     // first pressed?
 269   2          Key = i;
 270   2          keytic++;
 271   2          return (i);
 272   2        }
 273   1        else if ( i != Key) {   //diff key value when Key has a value.    
 274   2          RepeatKey = 0;
 275   2          KeyReady = 0;
 276   2          keytic = 0;
 277   2          return (0);
 278   2        }
 279   1        else {            // same key pressed check for repeat function
 280   2          keytic++;
 281   2          if ( keytic < 20 ) {
 282   3            return (0);
 283   3          }
 284   2          else {
 285   3            RepeatKey = 1;
 286   3            KeyReady = 1;
 287   3            keytic = 18;
 288   3            return (i);
 289   3          }
 290   2        }
 291   1      //#else
 292   1      //  i = repeat;
 293   1      //  keytic = 0;
 294   1      //  return 0;
 295   1      //#endif
 296   1      }
 297          
 298          
 299          //===========================================
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 6   

 300          // TOUCH
 301          //===========================================
 302          
 303          
 304          #ifdef SUPPORT_TOUCH
 305             //extern
 306          //  TraceAuto
 307          //  TouchAuto
 308          /**
 309          * set TouchAuto flag. only for test
 310          */
 311          void SetTouchAuto( BYTE on )
 312          {
 313   1        TraceAuto = 0;
 314   1        if ( on )
 315   1          TouchAuto = 1;
 316   1        else
 317   1          TouchAuto = 0;
 318   1      }
 319          /**
 320          * set traceauto flag. only for test
 321          */
 322          void SetTraceAuto( BYTE on )
 323          {
 324   1        TouchAuto = 0;
 325   1        if ( on )
 326   1          TraceAuto = 1;
 327   1        else
 328   1          TraceAuto = 0;
 329   1      }
 330          #endif
 331          
 332          
 333          
 334          /*
 335              +-----------------+---------------------+
 336                | 0(80x48)        |        1(720x48)    |
 337              |         |           |
 338              +--------------4(400x240)---------------+
 339              |         |           |
 340                |  3(80x432)      |        2(720x432)   |
 341                +-----------------+---------------------+
 342          */
 343          
 344          #define TSC_ZONE_TOPLEFT    0
 345          #define TSC_ZONE_TOPRIGHT   1
 346          #define TSC_ZONE_BOTTOMRIGHT  2
 347          #define TSC_ZONE_BOTTOMLEFT   3
 348          #define TSC_ZONE_CENTER     4
 349          
 350          #if (PANEL_H==1024 && PANEL_V==600)
                 WORD CalibDataX[]=     { 102,  922,  922,  102, 512  };
                 WORD CalibDataY[]=     { 60,   60,   540,  540, 300  };
              #else
 354             WORD CalibDataX[]=     { 80,   720,  720,  80,  400  };
 355             WORD CalibDataY[]=     { 48,   48,   432,  432, 240  };
 356          #endif
 357          
 358          code WORD Def_TouchCalibX[] = { 478,  3583, 3580, 496, 2029 };
 359          code WORD Def_TouchCalibY[] = { 3432, 3421, 593,  604, 2008 };
 360             WORD TouchCalibX[] =   { 478,  3583, 3580, 496, 2029 };
 361             WORD TouchCalibY[] =   { 3432, 3421, 593,  604, 2008 };
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 7   

 362             WORD Temp_TouchCalibX[]= { 478,  3583, 3580, 496, 2029 };
 363             WORD Temp_TouchCalibY[]= { 3432, 3421, 593,  604, 2008 };
 364          
 365          //=============================================================================
 366          //    _TscGetScreenPos 
 367          //    ScrrenPosX = (TouchX - CalibDataX[4]) / (CalibData[n] - CalibDataX[4]) / (TouchCalibX[n] - TouchCalibX
             -[4])
 368          //=============================================================================
 369          #ifdef SUPPORT_TOUCH
 370          /**
 371          * update PosX,PosY.
 372          *
 373          * input
 374          * TouchX,TouchY
 375          * output
 376          * PosX,PosY
 377          */
 378          void _TscGetScreenPos( void )
 379          {
 380   1        DWORD calcX, calcY;
 381   1      
 382   1        if ( TouchX < TouchCalibX[4] ) {        // center of 
 383   2          if ( TouchY > TouchCalibY[4] ) {
 384   3            // GetZone0;
 385   3            //calc = (TouchCalibX[4] - TouchX) / (TouchCalibX[4] - TouchCalibX[0]) / (CalibDataX[4] - CalibDataX[0]
             -);
 386   3            calcX = TouchCalibX[4] - TouchX;
 387   3            calcX *= (DWORD)( CalibDataX[4] - CalibDataX[0] );
 388   3            calcX /= (DWORD)( TouchCalibX[4] - TouchCalibX[0] );
 389   3            if ( calcX >= CalibDataX[4] ) PosX = 0;
 390   3            else              PosX = CalibDataX[4] - calcX;
 391   3      
 392   3            calcY = TouchY - TouchCalibY[4];
 393   3            calcY *= ( CalibDataY[4] - CalibDataY[0] );
 394   3            calcY /= ( TouchCalibY[0] - TouchCalibY[4] );
 395   3            if ( calcY >= CalibDataY[4] ) PosY = 0;
 396   3            else              PosY = CalibDataY[4] - calcY;
 397   3          }
 398   2          else {
 399   3            //GetZone3
 400   3            //calc = (TouchCalibX[4] - TouchX) / (TouchCalibX[4] - TouchCalibX[3]) / (CalibDataX[4] - CalibDataX[3]
             -);
 401   3            calcX = TouchCalibX[4] - TouchX;
 402   3            calcX *= (DWORD)( CalibDataX[4] - CalibDataX[3] );
 403   3            calcX /= (DWORD)( TouchCalibX[4] - TouchCalibX[3] );
 404   3            if ( calcX >= CalibDataX[4] ) PosX = 0;
 405   3            else              PosX = CalibDataX[4] - calcX;
 406   3      
 407   3            calcY = TouchCalibY[4] - TouchY;
 408   3            calcY *= (DWORD)( CalibDataY[3] - CalibDataY[4] );
 409   3            calcY /= (DWORD)( TouchCalibY[4] - TouchCalibY[3] );
 410   3            if ( calcY >= CalibDataY[4] ) PosY = RES_Y - 1;
 411   3            else              PosY = CalibDataY[4] + calcY;
 412   3          }
 413   2        }
 414   1        else {   
 415   2          if ( TouchY > TouchCalibY[4] )  {
 416   3            //GetZone1
 417   3            calcX = TouchX - TouchCalibX[4];
 418   3            calcX *= ( CalibDataX[1] - CalibDataX[4] );
 419   3            calcX /= ( TouchCalibX[1] - TouchCalibX[4] );
 420   3            if ( calcX >= CalibDataX[4] ) PosX = RES_X - 1;
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 8   

 421   3            else              PosX = CalibDataX[4] + calcX;
 422   3      
 423   3            calcY = TouchY - TouchCalibY[4];
 424   3            calcY *= ( CalibDataY[4] - CalibDataY[1] );
 425   3            calcY /= ( TouchCalibY[1] - TouchCalibY[4] );
 426   3            if ( calcY >= CalibDataY[4] ) PosY = 0;
 427   3            else              PosY = CalibDataY[4] - calcY;
 428   3          }
 429   2          else  {
 430   3            //GetZone2
 431   3            calcX = TouchX - TouchCalibX[4];
 432   3            calcX *= ( CalibDataX[2] - CalibDataX[4] );
 433   3            calcX /= ( TouchCalibX[2] - TouchCalibX[4] );
 434   3            if ( calcX >= CalibDataX[4] ) PosX = RES_X - 1;
 435   3            else              PosX = CalibDataX[4] + calcX;
 436   3      
 437   3            calcY = TouchCalibY[4] - TouchY;
 438   3            calcY *= ( CalibDataY[2] - CalibDataY[4] );
 439   3            calcY /= ( TouchCalibY[4] - TouchCalibY[2] );
 440   3            if ( calcY >= CalibDataY[4] ) PosY = RES_Y - 1;
 441   3            else              PosY = CalibDataY[4] + calcY;
 442   3          }
 443   2        }
 444   1        //dPrintf("\n\r_TscGetScreenPos XY:%dx%d from Touch XY:%dx%d",PosX,PosY, TouchX, TouchY); //WORD
 445   1      }
 446          #endif
 447          
 448          //=============================================================================
 449          //   
 450          //=============================================================================
 451          /**
 452          * init Touch
 453          */
 454          void InitAuxADC( void )
 455          {
 456   1      #ifdef SUPPORT_TOUCH
 457   1        BYTE val;
 458   1      #endif
 459   1        dPuts("\n\rInitTouch");
 460   1      
 461   1      #ifdef SUPPORT_TOUCH
 462   1        TscTimeStart = TscTimeEnd = TscTimeLastEnd = 0;;
 463   1      
 464   1        //read CalibDataX[] and CalibDataY[] from EEPROM.
 465   1        ReadCalibDataFromEE();
 466   1      
 467   1      
 468   1        CpuTouchStep = 0;
 469   1        WriteTW88(REG0B0, 0x02 );       //power up. with Z2 measure
 470   1        WriteTW88(REG0B1, 0xF8 );       //TODO:Touch Ready & Touch Pen is not implemented yet.
 471   1                            // 
 472   1      
 473   1        //--------------------------------------------
 474   1        //Check connector
 475   1        WriteTW88(REG0B4, 0x02 ); 
 476   1        WriteTW88(REG0B0, 0x20 | ReadTW88(REG0B0) );  //need a start command
 477   1        delay1ms(1);  //need more than 1CLK cycle.
 478   1        val = ReadTW88(REG0B2);
 479   1        if( val < 0x80  ) {
 480   2          dPrintf("--FAIL.%bx",val);
 481   2          // do not power down. Still you need a keypad.
 482   2          TscHwReady = 0;
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 9   

 483   2        }
 484   1        else {
 485   2          dPrintf("--OK.%bx",val);
 486   2          TscHwReady = 1;
 487   2        }
 488   1        WriteTW88(REG0B0, ~0x20 & ReadTW88(REG0B0) );
 489   1      
 490   1      
 491   1      
 492   1      #if 1 //120323 Touch Spec. can support from div8~64 : 4MHz~320K.
 493   1        WriteTW88(REG0B4, 0x0A );       // div 8, rsel=10k, continuous sensing mode
 494   1      #else
                WriteTW88(REG0B4, 0x0C );       // div 32, rsel=10k, continuous sensing mode
              #endif
 497   1      
 498   1      
 499   1        SFRB_EINT6 = 0;
 500   1        CpuTouchPressed = 0;
 501   1      
 502   1        SFR_TL1 = SFR_TH1;
 503   1        CpuTouchSkipCount = 0;
 504   1        SFRB_ET1 = 1;
 505   1      
 506   1      
 507   1        SetTouchStatus(TOUCHEND);
 508   1        SetLastTouchStatus(TOUCHEND);
 509   1      #else
                dPuts("-removed");
              #endif
 512   1      }
 513          
 514          
 515          //return
 516          //  success: if need an Action
 517          #ifdef SUPPORT_TOUCH
 518          /**
 519          * get Touch2
 520          */
 521          BYTE GetTouch2(void)
 522          {
 523   1        BYTE ret;
 524   1        short movX,movY;
 525   1        BYTE TC;     //Touch change counter
 526   1        bit  TP;     //pressed status
 527   1        DWORD dt_start,dt_end;
 528   1        DWORD TscTimeCurr;
 529   1        BYTE new_status;
 530   1      
 531   1        //update value 
 532   1        SFRB_ET1 = 0;
 533   1        TC = CpuTouchChanged;
 534   1        TP = CpuTouchPressed;
 535   1        TouchX = CpuTouchX;
 536   1        TouchY = CpuTouchY;
 537   1        SFRB_ET1 = 1;
 538   1      
 539   1      #if 0
                if(CpuTouchSkipCount)
                  Printf("\n\rCpuTouchSkipCount:%d", CpuTouchSkipCount);
                //Printf("\n\rGetTouch2() TC:%bx TP:%bx step:%bx ",TC, TP ? 1:0, CpuTouchStep);
                if(TP) {
                  Printf("\n\rTP:%dx%d", TouchX,TouchY);
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 10  

                }
                //else {
                //  Printf(" %02bx%01bx", ReadTW88(REG0B2), ReadTW88(REG0B3) & 0x0F);
                //  //#define ReadTscData(TscData) TscData = ReadTW88(REG0B2); TscData <<= 4; TscData += ReadTW88(REG0B3) 
                //
                //}
              #endif
 552   1      
 553   1        if ( TouchChangedOld == TC ) {
 554   2              //BKTODO: Use SFRB_ET0=0 and SFRB_ET0=1;
 555   2          if(TouchStatus==TOUCHMOVED && ((TscTimeEnd + TSC_MOVED_THRESHOLD) < SystemClock)) {     //500msec delay
 556   3            dTscPrintf("\n\rTouch TOUCHMOVED Action dt:%ld", SystemClock - TscTimeEnd);
 557   3            return 1;     
 558   3          }
 559   2          return 0;     // no measurement
 560   2        }
 561   1      
 562   1        ret = 0;
 563   1        SFRB_ET0=0;
 564   1          TscTimeCurr = SystemClock;
 565   1          SFRB_ET0=1;
 566   1      
 567   1        if(TouchPressedOld) {
 568   2          if(TP) {
 569   3      //-----------
 570   3      LABEL_TP11: /* Pressed=>Pressed */
 571   3      //-----------
 572   3            new_status = TSC_PRESS; 
 573   3            _TscGetScreenPos();
 574   3            //--------------------
 575   3            //_TscGetDirection();
 576   3            //--------------------
 577   3            movX = PosX - OldPosX;
 578   3            movY = PosY - OldPosY;
 579   3            if(TWabsShort(movX) <= TSC_MOVE_MIN_THRESHOLD) {
 580   4              if(TouchStatus >= TOUCHMOVE)
 581   4                new_status |= TSC_MOVE; 
 582   4            }
 583   3            else {
 584   4              new_status |= TSC_MOVE;
 585   4              if(movX > 0) new_status |= TSC_MOVEXPLUS; //right
 586   4              else         new_status |= TSC_MOVEX;   //left
 587   4            }
 588   3            if(TWabsShort(movY) <= TSC_MOVE_MIN_THRESHOLD) {
 589   4              if(TouchStatus >= TOUCHMOVE)
 590   4                new_status |= TSC_MOVE; 
 591   4            }
 592   3            else {
 593   4              new_status |= TSC_MOVE;
 594   4              if(movY > 0) new_status |= TSC_MOVEYPLUS; //down
 595   4              else         new_status |= TSC_MOVEY;   //up
 596   4            }
 597   3            if(TouchStatus == new_status) {
 598   4              dTscPrintf("\n\rTSC keep Stat:%bx", TouchStatus);
 599   4            }
 600   3            else {
 601   4              //PrintTouchStatusParam(new_status);
 602   4              //PrintTouchStatus(0,new_status);
 603   4              TscUpdateStatus(new_status);
 604   4            }
 605   3            dTscPrintf(" xypos=%dx%d",PosX, PosY);
 606   3            dTscPrintf(" z:%d(0x%x-0x%x)",CpuZ2-CpuZ1,CpuZ2,CpuZ1);
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 11  

 607   3      
 608   3            if(new_status & (TSC_MOVEX | TSC_MOVEY)) { //move X or Y
 609   4              OldPosX = PosX;
 610   4              OldPosY = PosY;
 611   4            }
 612   3            //...
 613   3            ret = 1;
 614   3          }
 615   2          else {
 616   3      //-----------
 617   3      //LABEL_TP10: /*Press=>Detached */
 618   3      //-----------
 619   3            //NOTE:update TscTimeEnd
 620   3      
 621   3            dt_start = TscTimeCurr - TscTimeStart;  //pressed position(previous)
 622   3            dt_end   = TscTimeCurr - TscTimeEnd;  //detached position(previous)
 623   3      
 624   3      
 625   3            if(LastTouchStatus>=TOUCHMOVE) {
 626   4              //PrintTouchStatus(1, TOUCHMOVED);
 627   4              TscUpdateStatus(TOUCHMOVED);
 628   4              ret=0;
 629   4            }
 630   3            else if(dt_start > TSC_LONGCLICK_THRESHOLD) { //more then 10sec
 631   4              //PrintTouchStatus(1, TOUCHLONGCLICK);
 632   4              TscUpdateStatus(TOUCHLONGCLICK);
 633   4              ret = 1;
 634   4            }
 635   3            else if(dt_end < TSC_DCLICK_THRESHOLD) {
 636   4              if(TouchStatus >= TOUCHMOVE) {
 637   5                //PrintTouchStatus(1, TOUCHMOVED);
 638   5                TscUpdateStatus(TOUCHMOVED);   dTscPuts("(DCLK->MOVED)");
 639   5                ret = 0;
 640   5              }
 641   4              else { 
 642   5                //PrintTouchStatus(1, TOUCHDOUBLECLICK);
 643   5                TscUpdateStatus(TOUCHDOUBLECLICK);
 644   5                ret = 1;
 645   5              }
 646   4            }
 647   3            else {
 648   4              if(TouchStatus >= TOUCHMOVE) {
 649   5                //PrintTouchStatus(1, TOUCHMOVED);
 650   5                TscUpdateStatus(TOUCHMOVED);   dTscPuts("(CLK->MOVED)");
 651   5                ret = 0;
 652   5              }
 653   4              else {
 654   5                //PrintTouchStatus(1, TOUCHCLICK); 
 655   5                TscUpdateStatus(TOUCHCLICK);
 656   5                ret = 1;
 657   5              }
 658   4            }
 659   3            dTscPrintf(" xypos=%dx%d",PosX, PosY);
 660   3            dTscPrintf(" z:%d(0x%x-0x%x)",CpuZ2-CpuZ1,CpuZ2);
 661   3            dTscPrintf(" dt_start:%ld dt_end:%ld",dt_start,dt_end);
 662   3      
 663   3            if(TouchStatus == TOUCHMOVED) {
 664   4              movX = OldPosX - StartX;
 665   4              movX = TWabsShort(movX);
 666   4              movY = OldPosY - StartY;
 667   4              movY = TWabsShort(movY);
 668   4      
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 12  

 669   4              veloX = 1000;
 670   4              veloX *= movX;
 671   4              veloX /= dt_start;
 672   4              veloY = 1000;
 673   4              veloY *= movY;
 674   4              veloY /= dt_start;
 675   4              dTscPrintf(" Velocity X:%ld Y:%ld", veloX,veloY );
 676   4            }
 677   3            TscTimeEnd = TscTimeCurr;
 678   3          }
 679   2        }
 680   1        else {
 681   2          if(TP) {
 682   3      //-----------
 683   3      //LABEL_TP01: /*Detached=>Pressed.*/
 684   3      //-----------
 685   3            //NOTE:update TscTimeStart. StartX,StartY
 686   3            dt_end   = TscTimeCurr - TscTimeEnd;  //detached position(previous)
 687   3      
 688   3            if(TouchStatus==TOUCHMOVED) {
 689   4              //if TP0_MOVED, TouchStatus=TOUCHMOVE and then goto LABEL_TP11.
 690   4              //Touch is pressed before TSC_MOVED_THRESHOLD. It will ignore the previous unpress state.
 691   4              //PrintTouchStatus(1,TOUCHMOVE); dTscPuts(" RECOVER1 ");
 692   4              TscUpdateStatus(TOUCHMOVE);
 693   4              goto LABEL_TP11;
 694   4            }
 695   3            else if(LastTouchStatus==TOUCHMOVED && dt_end < TSC_PRESS_RECOVER_THRESHOLD) {   //assume TouchStatus==T
             -OUCHEND
 696   4              //PrintTouchStatus(1,TOUCHMOVE); dTscPuts(" RECOVER2 ");
 697   4              TscUpdateStatus(TOUCHMOVE);
 698   4              goto LABEL_TP11;
 699   4            }
 700   3            else {
 701   4              //PrintTouchStatus(1,TOUCHPRESS);
 702   4              TscUpdateStatus(TOUCHPRESS);
 703   4              _TscGetScreenPos();
 704   4              OldPosX = StartX = PosX;
 705   4              OldPosY = StartY = PosY;
 706   4              TscTimeLastEnd = TscTimeEnd; //NOTE
 707   4              TscTimeStart = TscTimeCurr;
 708   4              dTscPrintf(" xypos=%dx%d",PosX, PosY);
 709   4              dTscPrintf(" z:%d(0x%x-0x%x)",CpuZ2-CpuZ1,CpuZ2); 
 710   4            }
 711   3            ret = 1;
 712   3          }
 713   2          else {
 714   3      //-----------
 715   3      //LABEL_TP00: /*Deteched=>Deteched */
 716   3      //-----------
 717   3            //something happen.But, ignore.
 718   3            //dTscPrintf("\n\rTouch TC:%bd dt_start:%ld dt_end:%ld",
 719   3            //  TC > TouchChangedOld ? TC-TouchChangedOld : 0x100 - TC + TouchChangedOld), dt_start,dt_end);
 720   3          }
 721   2        }
 722   1        TouchChangedOld = TC;
 723   1        TouchPressedOld = TP;
 724   1      
 725   1        return ret;
 726   1      }
 727          #endif
 728          
 729          //=============================================================================
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 13  

 730          //    TraceTouch 
 731          //=============================================================================
 732          #ifdef DEBUG_TOUCH_SW
              
              /**
              * trace Touch. only for debug
              */
              void TraceTouch( void )
              {
                bit TouchPressedOld;
              
                SFRB_ET1 = 0;
                TouchPressedOld = CpuTouchPressed;
                TouchX = CpuTouchX;
                TouchY = CpuTouchY;
                SFRB_ET1 = 1;
              
                //CheckTouch();
              
                if ( TouchPressedOld ) {      // before it pressed with start
                  if ( CpuTouchPressed ) {
                    _TscGetScreenPos();
                    FOsdWinScreenXY( 0, PosX, PosY);
                    FOsdWinScreenWH( 0, 1, 1 );
                  }
                  else {
                    //Prompt();
                  }
                }
                else {
                  if ( CpuTouchPressed ) {
                    _TscGetScreenPos();
                    FOsdWinScreenXY( 0, PosX, PosY);
                    FOsdWinScreenWH( 0, 1, 1 );
                  }
                  else {
                  }
                }
              }
              #endif
 770          
 771          
 772          
 773          //=============================================================================
 774          //    Print Status 
 775          //=============================================================================
 776          /**
 777          * print TouchStatus
 778          */
 779          #ifdef DEBUG_TOUCH_SW
              void PrintTouchStatusParam(BYTE TscStatus)
              {
                dPuts("\n\r");
                dPuts("TSC ");
                if(TscStatus & 0x80) {
                  dPuts("PRESS ");
                  if(TscStatus & 0x40) {
                    dPuts("MOVE ");
                    if(TscStatus & 0x02) {
                      if( TscStatus & 0x01) dPuts("DN ");
                      else                    dPuts("UP ");
                    } 
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 14  

                    if(TscStatus & 0x08) {
                      if( TscStatus & 0x04) dPuts("RIGHT ");
                      else                    dPuts("LEFT ");
                    } 
                  }
                }
                else {
                  if(TscStatus & 0x40) {
                    dPuts("MOVED ");
                    if(TscStatus & 0x02) {
                      if( TscStatus & 0x01) dPuts("DN ");
                      else                    dPuts("UP ");
                    } 
                    if(TscStatus & 0x08) {
                      if( TscStatus & 0x04) dPuts("RIGHT ");
                      else                    dPuts("LEFT ");
                    } 
                  } 
                  else {
                    switch(TscStatus & 0x07) {
                    case 0: dPuts("END "); break;
                    case 1: dPuts("CLK "); break;
                    case 2: dPuts("DCLK "); break;
                    case 4: dPuts("LONGCLK "); break;
                    default: dPrintf("unknown:%bx ",TscStatus); break;
                    }
                  }
                }
              }
              #endif
 822          /**
 823          * print touch status
 824          */
 825          #ifdef DEBUG_TOUCH_SW
              void PrintTouchStatus(BYTE new, BYTE NewTscStatus)
              {
                if(new) dPuts("TSC stat:");
                dPrintf("%bx=>%bx=>%bx \n", LastTouchStatus,TouchStatus,NewTscStatus);
              }
              #endif
 832          
 833          
 834          
 835          //=============================================================================
 836          //    WaitTouchButtonUp 
 837          //=============================================================================
 838          #ifdef SUPPORT_TOUCH
 839          /**
 840          * wait until touch is detached
 841          */
 842          void WaitTouchButtonUp( void )
 843          {
 844   1        dPuts("WaitTouchButtonUp start");
 845   1        do {
 846   2          GetTouch2();
 847   2          delay1ms(10);
 848   2        } while (( TouchStatus != TOUCHCLICK ) 
 849   1              && ( TouchStatus != TOUCHDOUBLECLICK ) 
 850   1            && ( TouchStatus != TOUCHLONGCLICK )
 851   1            && ( TouchStatus != TOUCHMOVED )
 852   1            && ( TouchStatus != TOUCHEND ));
 853   1        dPuts("===>END\n");
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 15  

 854   1      }
 855          #endif
 856          //=============================================================================
 857          //    SetTouchStatus 
 858          //    SetTouchStatus 
 859          //=============================================================================
 860          #ifdef SUPPORT_TOUCH
 861          /**
 862          * set TouchStatus
 863          */
 864          void SetTouchStatus( BYTE ts )
 865          {
 866   1        dTscPrintf("SetTouchStatus(%bx)\n",ts);
 867   1        if(TouchStatus != ts) {
 868   2          LastTouchStatus = TouchStatus;
 869   2          TouchStatus = ts;
 870   2        }
 871   1      }
 872          /**
 873          * update Touch Status
 874          */
 875          static void TscUpdateStatus(BYTE TscStat)
 876          {
 877   1        //dTscPrintf("Touch Stat:%bx->%bx->%bx\n",LastTouchStatus,TouchStatus,TscStat);  
 878   1        if(TouchStatus != TscStat) {
 879   2          LastTouchStatus = TouchStatus;
 880   2          TouchStatus = TscStat;  
 881   2        }
 882   1      }
 883          /**
 884          * set Last Touch Status
 885          */
 886          static void SetLastTouchStatus( BYTE ts )
 887          {
 888   1        dTscPrintf("SetLastTouchStatus(%bd)\n",ts);
 889   1        LastTouchStatus = ts;
 890   1      }
 891          #endif
 892          //=============================================================================
 893          //    CalibTouch 
 894          //=============================================================================
 895          
 896          //@param
 897          // flag   
 898          //  0:update TouchCalibX/TouchCalibY from Default
 899          //  1:update TouchCalibX/TouchCalibY from temp
 900          //  other:normal.  
 901          #ifdef SUPPORT_TOUCH
 902          /**
 903          * save the calibrated touch data to EEPROM
 904          */
 905          void SaveCalibDataToEE(BYTE flag)
 906          {
 907   1        BYTE i;
 908   1        WORD value;
 909   1      
 910   1        if(flag==0) {
 911   2          for(i=0; i < 5; i++) {
 912   3            TouchCalibX[i] = Def_TouchCalibX[i];
 913   3            TouchCalibY[i] = Def_TouchCalibY[i];
 914   3          }
 915   2        }
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 16  

 916   1        else if(flag==1) {
 917   2          for(i=0; i < 5; i++) {
 918   3            TouchCalibX[i] = Temp_TouchCalibX[i];
 919   3            TouchCalibY[i] = Temp_TouchCalibY[i];
 920   3          }
 921   2        }
 922   1      
 923   1        for(i=0; i < 5; i++) {
 924   2          value = TouchCalibX[i];
 925   2          EE_Write( EEP_TOUCH_CALIB_X + i*2, value >> 8);
 926   2          EE_Write( EEP_TOUCH_CALIB_X + i*2+1, (BYTE)value);
 927   2        }
 928   1        for(i=0; i < 5; i++) {
 929   2          value = TouchCalibY[i];
 930   2          EE_Write( EEP_TOUCH_CALIB_Y + i*2, value >> 8);
 931   2          EE_Write( EEP_TOUCH_CALIB_Y + i*2+1, (BYTE)value);
 932   2        }
 933   1      }
 934          /**
 935          * read calibrated touch data from EEPROM
 936          */
 937          void ReadCalibDataFromEE(void)
 938          {
 939   1        BYTE i;
 940   1        WORD value;
 941   1      
 942   1        for(i=0; i < 5; i++) {
 943   2          value = (BYTE)EE_Read( EEP_TOUCH_CALIB_X + i*2);
 944   2          value <<= 8;
 945   2          value |= (BYTE)EE_Read( EEP_TOUCH_CALIB_X + i*2+1);
 946   2          TouchCalibX[i] = value;
 947   2        }
 948   1        for(i=0; i < 5; i++) {
 949   2          value = (BYTE)EE_Read( EEP_TOUCH_CALIB_Y + i*2);
 950   2          value <<= 8;
 951   2          value |= (BYTE)EE_Read( EEP_TOUCH_CALIB_Y + i*2+1);
 952   2          TouchCalibY[i] = value;
 953   2        }
 954   1      }
 955          #endif
 956          
 957          #ifdef DEBUG_TOUCH_SW
              /**
              * print Calibrated data
              */
              void PrintCalibData(void)
              {
                BYTE i;
                WORD value;
                Puts("\n\rPrintCalibData");
                Puts("\n\rdefault:");
                for(i=0; i < 5; i++) {
                  Printf("%dx%d\t",Def_TouchCalibX[i],Def_TouchCalibY[i]);
                }
                Puts("\n\rcurrent:");
                for(i=0; i < 5; i++) {
                  Printf("%dx%d\t",TouchCalibX[i],TouchCalibY[i]);
                }
                Puts("\n\reeprom :");
                for(i=0; i < 5; i++) {
                  //Printf("%dx%d\t",TouchCalibX[i],TouchCalibY[i]);
                  value = (BYTE)EE_Read( EEP_TOUCH_CALIB_X + i*2);
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 17  

                  value <<= 8;
                  value |= (BYTE)EE_Read( EEP_TOUCH_CALIB_X + i*2+1);
                  Printf("%dx",value);
                  value = (BYTE)EE_Read( EEP_TOUCH_CALIB_Y + i*2);
                  value <<= 8;
                  value |= (BYTE)EE_Read( EEP_TOUCH_CALIB_Y + i*2+1);
                  Printf("%d\t",value);
                }
              }
              #endif
 988          
 989          
 990          
 991          #ifdef SUPPORT_TOUCH
 992          /**
 993          * calibrate Touch
 994          */
 995          void CalibTouch( BYTE n )
 996          {
 997   1        bit TouchPressedOld;
 998   1        DWORD CalibX, CalibY;
 999   1        WORD  count;
1000   1      
1001   1        dTscPrintf("CalibTouch(%bd)",n);
1002   1      
1003   1        GetTouch2();
1004   1      
1005   1        TouchPressedOld = CpuTouchPressed;
1006   1        CalibX = 0;
1007   1        CalibY = 0;
1008   1        count = 0;
1009   1        
1010   1        while (count < 100 /*32768*/) {
1011   2          if ( TouchChangedOld == CpuTouchChanged ) continue;
1012   2          TouchPressedOld = CpuTouchPressed;
1013   2          GetTouch2();
1014   2      
1015   2          if ( TouchPressedOld ) {      // before it pressed with start
1016   3            if ( CpuTouchPressed ) {
1017   4              CalibX += TouchX;
1018   4              CalibY += TouchY;
1019   4              count++;
1020   4            }
1021   3            else {
1022   4              TouchPressedOld = CpuTouchPressed;
1023   4              dTscPrintf("Touch End: %d, %d\n", TouchX, TouchY );
1024   4              break;
1025   4            }
1026   3          }
1027   2          else {
1028   3            if ( CpuTouchPressed ) {
1029   4              dTscPrintf("Touch Start with: %d, %d\n", TouchX, TouchY );
1030   4              TouchPressedOld = CpuTouchPressed;
1031   4            }
1032   3            else {
1033   4            }
1034   3          }
1035   2        }
1036   1        CalibX /= (DWORD)count;
1037   1        CalibY /= (DWORD)count;
1038   1        dTscPrintf("Calibration data %bd: (%d, %d) --> (%ld, %ld)", n, TouchCalibX[n], TouchCalibY[n], CalibX, Ca
             -libY );
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 18  

1039   1        Temp_TouchCalibX[n] = CalibX;
1040   1        Temp_TouchCalibY[n] = CalibY;
1041   1      
1042   1        dTscPrintf("====>END\n");
1043   1      
1044   1        //BKTODO: Save CalibDataX[n] and CalibDataY[n] to EEPROM
1045   1      }
1046          #endif
1047          
1048          //=============================================================================
1049          //    TouchDump : for checking Touch ADC character 
1050          //=============================================================================
1051          #ifdef SUPPORT_TOUCH
1052          void TouchDump( void )
1053          {
1054   1      }
1055          #endif
1056          
1057          
1058          
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 19  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0096 (BEGIN)
0000         L?0151:
0000         L?0152:
0000 110000      E     ACALL   ?C?ULDIV
0003 90000000    R     MOV     DPTR,#calcX
0007 110000      E     ACALL   ?C?LSTXDATA
000A 90000000    R     MOV     DPTR,#CalibDataX+08H
000E E0                MOVX    A,@DPTR
000F FE                MOV     R6,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 FF                MOV     R7,A
0013 E4                CLR     A
0014 FC                MOV     R4,A
0015 FD                MOV     R5,A
0016         L?0153:
0016 90000000    R     MOV     DPTR,#calcX
001A         L?0154:
001A E0                MOVX    A,@DPTR
001B F8                MOV     R0,A
001C A3                INC     DPTR
001D E0                MOVX    A,@DPTR
001E F9                MOV     R1,A
001F A3                INC     DPTR
0020 E0                MOVX    A,@DPTR
0021 FA                MOV     R2,A
0022 A3                INC     DPTR
0023 E0                MOVX    A,@DPTR
0024 FB                MOV     R3,A
0025 22                RET     
0026         L?0155:
0026 E0                MOVX    A,@DPTR
0027 FE                MOV     R6,A
0028 A3                INC     DPTR
0029 E0                MOVX    A,@DPTR
002A FF                MOV     R7,A
002B C3                CLR     C
002C 90000000    R     MOV     DPTR,#CalibDataX+09H
0030 E0                MOVX    A,@DPTR
0031 90000000    R     MOV     DPTR,#CalibDataX+08H
0035         L?0156:
0035 9F                SUBB    A,R7
0036 FF                MOV     R7,A
0037         L?0157:
0037 E0                MOVX    A,@DPTR
0038 9E                SUBB    A,R6
0039 FE                MOV     R6,A
003A E4                CLR     A
003B FC                MOV     R4,A
003C FD                MOV     R5,A
003D 110000      E     ACALL   ?C?LMUL
0040 90000000    R     MOV     DPTR,#calcX
0044 110000      E     ACALL   ?C?LSTXDATA
0047 90000000    R     MOV     DPTR,#calcX
004B         L?0158:
004B E0                MOVX    A,@DPTR
004C FC                MOV     R4,A
004D A3                INC     DPTR
004E E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 20  

004F FD                MOV     R5,A
0050         L?0159:
0050 A3                INC     DPTR
0051 E0                MOVX    A,@DPTR
0052 FE                MOV     R6,A
0053 A3                INC     DPTR
0054 E0                MOVX    A,@DPTR
0055 FF                MOV     R7,A
0056 22                RET     
0057         L?0160:
0057 90000000    R     MOV     DPTR,#TouchCalibY+08H
005B E0                MOVX    A,@DPTR
005C FE                MOV     R6,A
005D A3                INC     DPTR
005E E0                MOVX    A,@DPTR
005F FF                MOV     R7,A
0060 C3                CLR     C
0061 90000000    R     MOV     DPTR,#TouchY+01H
0065 E0                MOVX    A,@DPTR
0066 90000000    R     MOV     DPTR,#TouchY
006A         L?0161:
006A 9F                SUBB    A,R7
006B FF                MOV     R7,A
006C         L?0162:
006C E0                MOVX    A,@DPTR
006D 90000000    R     MOV     DPTR,#calcY
0071         L?0163:
0071 9E                SUBB    A,R6
0072 FE                MOV     R6,A
0073 E4                CLR     A
0074 FC                MOV     R4,A
0075 FD                MOV     R5,A
0076 010000      E     AJMP    ?C?LSTXDATA
0079         L?0164:
0079         L?0165:
0079 90000000    R     MOV     DPTR,#TouchCalibX+08H
007D         L?0166:
007D E0                MOVX    A,@DPTR
007E FE                MOV     R6,A
007F A3                INC     DPTR
0080 E0                MOVX    A,@DPTR
0081 FF                MOV     R7,A
0082 C3                CLR     C
0083 22                RET     
0084         L?0167:
0084 90000000    R     MOV     DPTR,#CalibDataY+09H
0088 E0                MOVX    A,@DPTR
0089 90000000    R     MOV     DPTR,#CalibDataY+08H
008D         L?0168:
008D 9F                SUBB    A,R7
008E FF                MOV     R7,A
008F         L?0169:
008F E0                MOVX    A,@DPTR
0090 9E                SUBB    A,R6
0091 FE                MOV     R6,A
0092 E4                CLR     A
0093 FC                MOV     R4,A
0094 FD                MOV     R5,A
0095 110000      E     ACALL   ?C?LMUL
0098         L?0170:
0098 90000000    R     MOV     DPTR,#calcY
009C 010000      E     AJMP    ?C?LSTXDATA
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 21  

009F         L?0171:
009F 90000000    R     MOV     DPTR,#TouchCalibX+09H
00A3 E0                MOVX    A,@DPTR
00A4 90000000    R     MOV     DPTR,#TouchCalibX+08H
00A8         L?0172:
00A8 9F                SUBB    A,R7
00A9 FF                MOV     R7,A
00AA         L?0173:
00AA E0                MOVX    A,@DPTR
00AB 9E                SUBB    A,R6
00AC AB07              MOV     R3,AR7
00AE FA                MOV     R2,A
00AF E4                CLR     A
00B0 F9                MOV     R1,A
00B1 F8                MOV     R0,A
00B2 22                RET     
00B3         L?0174:
00B3         L?0175:
00B3 759300      E     MOV     DPX,#?C?XDATASEG
00B6 E500        E     MOV     A,regTW88+01H
00B8 24B0              ADD     A,#0B0H
00BA         L?0176:
00BA F582              MOV     DPL,A
00BC E4                CLR     A
00BD 3500        E     ADDC    A,regTW88
00BF F583              MOV     DPH,A
00C1 759300      E     MOV     DPX,#?C?XDATASEG
00C4 22                RET     
00C5         L?0178:
00C5         L?0179:
00C5 90000000    R     MOV     DPTR,#TscTimeCurr
00C9 E0                MOVX    A,@DPTR
00CA FC                MOV     R4,A
00CB A3                INC     DPTR
00CC E0                MOVX    A,@DPTR
00CD FD                MOV     R5,A
00CE A3                INC     DPTR
00CF E0                MOVX    A,@DPTR
00D0 FE                MOV     R6,A
00D1 A3                INC     DPTR
00D2 E0                MOVX    A,@DPTR
00D3 C3                CLR     C
00D4 9B                SUBB    A,R3
00D5 FF                MOV     R7,A
00D6 EE                MOV     A,R6
00D7 9A                SUBB    A,R2
00D8 FE                MOV     R6,A
00D9 ED                MOV     A,R5
00DA 99                SUBB    A,R1
00DB FD                MOV     R5,A
00DC EC                MOV     A,R4
00DD 98                SUBB    A,R0
00DE FC                MOV     R4,A
00DF 22                RET     
00E0         L?0180:
00E0 25E0              ADD     A,ACC
00E2 2400        R     ADD     A,#LOW TouchCalibX
00E4 F582              MOV     DPL,A
00E6 E4                CLR     A
00E7 3400        R     ADDC    A,#HIGH TouchCalibX
00E9         L?0181:
00E9 F583              MOV     DPH,A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 22  

00EB 759300      E     MOV     DPX,#?C?XDATASEG
00EE EC                MOV     A,R4
00EF F0                MOVX    @DPTR,A
00F0 A3                INC     DPTR
00F1 ED                MOV     A,R5
00F2 F0                MOVX    @DPTR,A
00F3 90000000    R     MOV     DPTR,#i
00F7 E0                MOVX    A,@DPTR
00F8 22                RET     
00F9         L?0182:
00F9         L?0183:
00F9 90000000    R     MOV     DPTR,#CalibDataY+08H
00FD E0                MOVX    A,@DPTR
00FE FE                MOV     R6,A
00FF A3                INC     DPTR
0100 E0                MOVX    A,@DPTR
0101 FF                MOV     R7,A
0102 E4                CLR     A
0103 FC                MOV     R4,A
0104 FD                MOV     R5,A
0105 90000000    R     MOV     DPTR,#calcY
0109 22                RET     
010A         L?0186:
010A C3                CLR     C
010B 90000000    R     MOV     DPTR,#CalibDataX+09H
010F E0                MOVX    A,@DPTR
0110 9F                SUBB    A,R7
0111 FF                MOV     R7,A
0112 90000000    R     MOV     DPTR,#CalibDataX+08H
0116 E0                MOVX    A,@DPTR
0117 9E                SUBB    A,R6
0118         L?0187:
0118 90000000    R     MOV     DPTR,#PosX
011C F0                MOVX    @DPTR,A
011D A3                INC     DPTR
011E 22                RET     
011F         L?0188:
011F 90000000    R     MOV     DPTR,#TouchX+01H
0123 E0                MOVX    A,@DPTR
0124 9F                SUBB    A,R7
0125 FF                MOV     R7,A
0126 90000000    R     MOV     DPTR,#TouchX
012A E0                MOVX    A,@DPTR
012B 9E                SUBB    A,R6
012C         L?0189:
012C FE                MOV     R6,A
012D E4                CLR     A
012E FC                MOV     R4,A
012F FD                MOV     R5,A
0130 90000000    R     MOV     DPTR,#calcX
0134 010000      E     AJMP    ?C?LSTXDATA
0137         L?0190:
0137 E4                CLR     A
0138 FF                MOV     R7,A
0139 FE                MOV     R6,A
013A FD                MOV     R5,A
013B FC                MOV     R4,A
013C 010000      E     AJMP    ?C?LSTXDATA
013F         L?0191:
013F FF                MOV     R7,A
0140 E4                CLR     A
0141 FC                MOV     R4,A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 23  

0142 FD                MOV     R5,A
0143 EB                MOV     A,R3
0144 2F                ADD     A,R7
0145 FF                MOV     R7,A
0146 EA                MOV     A,R2
0147 3E                ADDC    A,R6
0148 FE                MOV     R6,A
0149 ED                MOV     A,R5
014A 39                ADDC    A,R1
014B FD                MOV     R5,A
014C EC                MOV     A,R4
014D 38                ADDC    A,R0
014E FC                MOV     R4,A
014F 010000      E     AJMP    ?C?LSTXDATA
0152         L?0192:
0152         L?0193:
0152 F583              MOV     DPH,A
0154 759300      E     MOV     DPX,#?C?XDATASEG
0157 EE                MOV     A,R6
0158 F0                MOVX    @DPTR,A
0159 A3                INC     DPTR
015A EF                MOV     A,R7
015B F0                MOVX    @DPTR,A
015C 22                RET     
015D         L?0194:
015D F583              MOV     DPH,A
015F 759300      E     MOV     DPX,#?C?XDATASEG
0162 E0                MOVX    A,@DPTR
0163 FD                MOV     R5,A
0164 A3                INC     DPTR
0165 E0                MOVX    A,@DPTR
0166 90000000    R     MOV     DPTR,#value
016A CD                XCH     A,R5
016B F0                MOVX    @DPTR,A
016C A3                INC     DPTR
016D ED                MOV     A,R5
016E F0                MOVX    @DPTR,A
016F EF                MOV     A,R7
0170 75F002            MOV     B,#02H
0173 A4                MUL     AB
0174 22                RET     
0175         L?0196:
0175         L?0197:
0175 25E0              ADD     A,ACC
0177 2400        R     ADD     A,#LOW TouchCalibY
0179 F582              MOV     DPL,A
017B E4                CLR     A
017C 3400        R     ADDC    A,#HIGH TouchCalibY
017E 22                RET     
017F         L?0198:
017F         L?0199:
017F 90000000    R     MOV     DPTR,#TouchCalibY+09H
0183 E0                MOVX    A,@DPTR
0184 9F                SUBB    A,R7
0185 FF                MOV     R7,A
0186 90000000    R     MOV     DPTR,#TouchCalibY+08H
018A 22                RET     
018B         L?0200:
018B         L?0201:
018B 90000000    R     MOV     DPTR,#TouchStatus
018F E0                MOVX    A,@DPTR
0190 C3                CLR     C
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 24  

0191 94C0              SUBB    A,#0C0H
0193 22                RET     
0194         L?0202:
0194         L?0203:
0194 90000000    R     MOV     DPTR,#new_status
0198 E0                MOVX    A,@DPTR
0199 4440              ORL     A,#040H
019B F0                MOVX    @DPTR,A
019C 22                RET     
019D         L?0204:
019D E4                CLR     A
019E 7FE8              MOV     R7,#0E8H
01A0 7E03              MOV     R6,#03H
01A2 FD                MOV     R5,A
01A3 FC                MOV     R4,A
01A4 010000      E     AJMP    ?C?LSTXDATA
01A7         L?0205:
01A7 E4                CLR     A
01A8 FF                MOV     R7,A
01A9 FE                MOV     R6,A
01AA FD                MOV     R5,A
01AB FC                MOV     R4,A
01AC 010000      E     AJMP    ?C?LSTXDATA
01AF         L?0206:
01AF         L?0207:
01AF 90000000    E     MOV     DPTR,#CpuTouchPressed
01B3 E0                MOVX    A,@DPTR
01B4 24FF              ADD     A,#0FFH
01B6 22                RET     
01B7         L?0208:
01B7 E0                MOVX    A,@DPTR
01B8 FE                MOV     R6,A
01B9 A3                INC     DPTR
01BA E0                MOVX    A,@DPTR
01BB FF                MOV     R7,A
01BC EE                MOV     A,R6
01BD 33                RLC     A
01BE 95E0              SUBB    A,ACC
01C0 FD                MOV     R5,A
01C1 FC                MOV     R4,A
01C2 010000      E     AJMP    ?C?LMUL
01C5         L?0209:
01C5 90000000    R     MOV     DPTR,#CalibDataX+09H
01C9 E0                MOVX    A,@DPTR
01CA 2F                ADD     A,R7
01CB FF                MOV     R7,A
01CC 90000000    R     MOV     DPTR,#CalibDataX+08H
01D0 E0                MOVX    A,@DPTR
01D1 3E                ADDC    A,R6
01D2 22                RET     
01D3         L?0210:
01D3 90000000    R     MOV     DPTR,#OldPosX
01D7 F0                MOVX    @DPTR,A
01D8 A3                INC     DPTR
01D9 EF                MOV     A,R7
01DA F0                MOVX    @DPTR,A
01DB 90000000    R     MOV     DPTR,#PosY
01DF E0                MOVX    A,@DPTR
01E0 22                RET     
01E1         L?0211:
01E1 F583              MOV     DPH,A
01E3 759300      E     MOV     DPX,#?C?CODESEG
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 25  

01E6 E4                CLR     A
01E7 93                MOVC    A,@A+DPTR
01E8 FC                MOV     R4,A
01E9 7401              MOV     A,#01H
01EB 93                MOVC    A,@A+DPTR
01EC FD                MOV     R5,A
01ED EE                MOV     A,R6
01EE 22                RET     
01EF         L?0212:
01EF 90000000    R     MOV     DPTR,#TouchY+01H
01F3 E0                MOVX    A,@DPTR
01F4 9F                SUBB    A,R7
01F5 90000000    R     MOV     DPTR,#TouchY
01F9 E0                MOVX    A,@DPTR
01FA 9E                SUBB    A,R6
01FB 22                RET     
01FC         L?0213:
01FC 9400              SUBB    A,#00H
01FE E0                MOVX    A,@DPTR
01FF 6480              XRL     A,#080H
0201 9480              SUBB    A,#080H
0203 90000000    R     MOV     DPTR,#new_status
0207 E0                MOVX    A,@DPTR
0208 22                RET     
0209         L?0214:
0209 90000000    R     MOV     DPTR,#LastTouchStatus
020D EE                MOV     A,R6
020E F0                MOVX    @DPTR,A
020F 90000000    R     MOV     DPTR,#TouchStatus
0213 EF                MOV     A,R7
0214 F0                MOVX    @DPTR,A
0215 22                RET     
0216         L?0216:
0216 90000000    R     MOV     DPTR,#PosX
021A 7403              MOV     A,#03H
021C F0                MOVX    @DPTR,A
021D A3                INC     DPTR
021E 741F              MOV     A,#01FH
0220 F0                MOVX    @DPTR,A
0221 22                RET     
0222         L?0217:
0222 90000000    R     MOV     DPTR,#movY
0226 F0                MOVX    @DPTR,A
0227 A3                INC     DPTR
0228 EF                MOV     A,R7
0229 F0                MOVX    @DPTR,A
022A 22                RET     
022B         L?0218:
022B F583              MOV     DPH,A
022D 759300      E     MOV     DPX,#?C?XDATASEG
0230 E0                MOVX    A,@DPTR
0231 FC                MOV     R4,A
0232 A3                INC     DPTR
0233 E0                MOVX    A,@DPTR
0234 FD                MOV     R5,A
0235 EF                MOV     A,R7
0236 22                RET     
0237         L?0219:
0237 E4                CLR     A
0238 7F64              MOV     R7,#064H
023A FE                MOV     R6,A
023B FD                MOV     R5,A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 26  

023C FC                MOV     R4,A
023D 90000000    R     MOV     DPTR,#dt_end
0241 22                RET     
0242         L?0220:
0242 E0                MOVX    A,@DPTR
0243 FE                MOV     R6,A
0244 A3                INC     DPTR
0245 E0                MOVX    A,@DPTR
0246 FB                MOV     R3,A
0247 AA06              MOV     R2,AR6
0249 E4                CLR     A
024A F9                MOV     R1,A
024B F8                MOV     R0,A
024C 22                RET     
024D         L?0221:
024D 90000000    R     MOV     DPTR,#TouchCalibX+08H
0251 E0                MOVX    A,@DPTR
0252 FE                MOV     R6,A
0253 A3                INC     DPTR
0254 E0                MOVX    A,@DPTR
0255 FF                MOV     R7,A
0256 22                RET     
0257         L?0222:
0257 90000000    R     MOV     DPTR,#TouchCalibY+08H
025B E0                MOVX    A,@DPTR
025C FE                MOV     R6,A
025D A3                INC     DPTR
025E E0                MOVX    A,@DPTR
025F FF                MOV     R7,A
0260 22                RET     
0261         L?0223:
0261         L?0224:
0261 F0                MOVX    @DPTR,A
0262 759300      E     MOV     DPX,#?C?XDATASEG
0265 E500        E     MOV     A,regTW88+01H
0267 22                RET     
0268         L?0225:
0268         L?0226:
0268 90000000    R     MOV     DPTR,#i
026C E0                MOVX    A,@DPTR
026D FF                MOV     R7,A
026E 22                RET     
026F         L?0227:
026F 25E0              ADD     A,ACC
0271 2400        R     ADD     A,#LOW Temp_TouchCalibX
0273 F582              MOV     DPL,A
0275 E4                CLR     A
0276 3400        R     ADDC    A,#HIGH Temp_TouchCalibX
0278 22                RET     
0279         L?0228:
0279 25E0              ADD     A,ACC
027B 2400        R     ADD     A,#LOW Temp_TouchCalibY
027D F582              MOV     DPL,A
027F E4                CLR     A
0280 3400        R     ADDC    A,#HIGH Temp_TouchCalibY
0282 22                RET     
0283         L?0229:
0283 25E0              ADD     A,ACC
0285 2400        R     ADD     A,#LOW TouchCalibX
0287 F582              MOV     DPL,A
0289 E4                CLR     A
028A 3400        R     ADDC    A,#HIGH TouchCalibX
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 27  

028C 22                RET     
028D         L?0230:
028D 90000000    R     MOV     DPTR,#i
0291 E0                MOVX    A,@DPTR
0292 FF                MOV     R7,A
0293 C3                CLR     C
0294 9405              SUBB    A,#05H
0296 22                RET     
             ; FUNCTION Com0096 (END)

             ; FUNCTION ReadKeyPad (BEGIN)
                                           ; SOURCE LINE # 208
                                           ; SOURCE LINE # 209
                                           ; SOURCE LINE # 215
0000 90000000    E     MOV     DPTR,#CpuAUX3
0004 E0                MOVX    A,@DPTR
0005 FE                MOV     R6,A
0006 A3                INC     DPTR
0007 E0                MOVX    A,@DPTR
0008 FF                MOV     R7,A
;---- Variable 'i' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 216
0009 90000000    E     MOV     DPTR,#CpuAUX3_Changed
000D E0                MOVX    A,@DPTR
;---- Variable 'temp' assigned to Register 'R1' ----
000E F9                MOV     R1,A
                                           ; SOURCE LINE # 217
000F C3                CLR     C
0010 EF                MOV     A,R7
0011 9464              SUBB    A,#064H
0013 EE                MOV     A,R6
0014 9400              SUBB    A,#00H
0016 5003              JNC     ?C0001
0018 7F00              MOV     R7,#00H
001A 22                RET     
001B         ?C0001:
                                           ; SOURCE LINE # 219
001B 90000000    R     MOV     DPTR,#key_in
001F EE                MOV     A,R6
0020 F0                MOVX    @DPTR,A
0021 A3                INC     DPTR
0022 EF                MOV     A,R7
0023 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 221
0024 90000000    R     MOV     DPTR,#min
0028 EE                MOV     A,R6
0029 F0                MOVX    @DPTR,A
002A A3                INC     DPTR
002B EF                MOV     A,R7
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E EE                MOV     A,R6
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 EF                MOV     A,R7
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 222
;---- Variable 'j' assigned to Register 'R4/R5' ----
0033 E4                CLR     A
0034 FD                MOV     R5,A
0035 FC                MOV     R4,A
0036         ?C0003:
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 28  

0036         ?C0006:
                                           ; SOURCE LINE # 223
0036 90000000    E     MOV     DPTR,#CpuAUX3_Changed
003A E0                MOVX    A,@DPTR
003B 69                XRL     A,R1
003C 60F8              JZ      ?C0006
003E         ?C0007:
                                           ; SOURCE LINE # 224
003E 90000000    E     MOV     DPTR,#CpuAUX3_Changed
0042 E0                MOVX    A,@DPTR
0043 F9                MOV     R1,A
                                           ; SOURCE LINE # 225
0044 90000000    E     MOV     DPTR,#CpuAUX3
                                           ; SOURCE LINE # 226
0048 110000      R     ACALL   L?0166
004B 9464              SUBB    A,#064H
004D EE                MOV     A,R6
004E 9400              SUBB    A,#00H
0050 5003              JNC     ?C0008
0052 7F00              MOV     R7,#00H
0054 22                RET     
0055         ?C0008:
                                           ; SOURCE LINE # 227
0055 90000000    R     MOV     DPTR,#key_in+01H
0059 E0                MOVX    A,@DPTR
005A 2F                ADD     A,R7
005B F0                MOVX    @DPTR,A
005C 90000000    R     MOV     DPTR,#key_in
0060 E0                MOVX    A,@DPTR
0061 3E                ADDC    A,R6
0062 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 228
0063 D3                SETB    C
0064 90000000    R     MOV     DPTR,#min+01H
0068 E0                MOVX    A,@DPTR
0069 9F                SUBB    A,R7
006A 90000000    R     MOV     DPTR,#min
006E E0                MOVX    A,@DPTR
006F 9E                SUBB    A,R6
0070 4002              JC      ?C0009
0072 800F              SJMP    ?C0137
0074         ?C0009:
                                           ; SOURCE LINE # 229
0074 C3                CLR     C
0075 90000000    R     MOV     DPTR,#max+01H
0079 E0                MOVX    A,@DPTR
007A 9F                SUBB    A,R7
007B 90000000    R     MOV     DPTR,#max
007F E0                MOVX    A,@DPTR
0080 9E                SUBB    A,R6
0081 5005              JNC     ?C0005
0083         ?C0137:
0083 EE                MOV     A,R6
0084 F0                MOVX    @DPTR,A
0085 A3                INC     DPTR
0086 EF                MOV     A,R7
0087 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 230
0088         ?C0005:
0088 0D                INC     R5
0089 BD0001            CJNE    R5,#00H,?C0134
008C 0C                INC     R4
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 29  

008D         ?C0134:
008D ED                MOV     A,R5
008E 6409              XRL     A,#09H
0090 4C                ORL     A,R4
0091 70A3              JNZ     ?C0003
0093         ?C0004:
                                           ; SOURCE LINE # 231
0093 90000000    R     MOV     DPTR,#min
0097 110000      R     ACALL   L?0166
009A 90000000    R     MOV     DPTR,#key_in+01H
009E E0                MOVX    A,@DPTR
009F 9F                SUBB    A,R7
00A0 FF                MOV     R7,A
00A1 90000000    R     MOV     DPTR,#key_in
00A5 E0                MOVX    A,@DPTR
00A6 9E                SUBB    A,R6
00A7 FE                MOV     R6,A
00A8 F0                MOVX    @DPTR,A
00A9 A3                INC     DPTR
00AA EF                MOV     A,R7
00AB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 232
00AC 90000000    R     MOV     DPTR,#max
00B0 E0                MOVX    A,@DPTR
00B1 FC                MOV     R4,A
00B2 A3                INC     DPTR
00B3 E0                MOVX    A,@DPTR
00B4 FD                MOV     R5,A
00B5 C3                CLR     C
00B6 EF                MOV     A,R7
00B7 9D                SUBB    A,R5
00B8 FF                MOV     R7,A
00B9 EE                MOV     A,R6
00BA 9C                SUBB    A,R4
00BB A3                INC     DPTR
00BC F0                MOVX    @DPTR,A
00BD A3                INC     DPTR
00BE EF                MOV     A,R7
00BF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 234
00C0 90000000    R     MOV     DPTR,#key_in
00C4 E0                MOVX    A,@DPTR
00C5 FE                MOV     R6,A
00C6 A3                INC     DPTR
00C7 E0                MOVX    A,@DPTR
00C8 7803              MOV     R0,#03H
00CA         ?C0135:
00CA CE                XCH     A,R6
00CB C3                CLR     C
00CC 13                RRC     A
00CD CE                XCH     A,R6
00CE 13                RRC     A
00CF D8F9              DJNZ    R0,?C0135
00D1 F0                MOVX    @DPTR,A
00D2 EE                MOV     A,R6
00D3 90000000    R     MOV     DPTR,#key_in
00D7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 235
00D8 E0                MOVX    A,@DPTR
00D9 F9                MOV     R1,A
                                           ; SOURCE LINE # 239
00DA 09                INC     R1
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 30  

                                           ; SOURCE LINE # 240
00DB E9                MOV     A,R1
00DC C3                CLR     C
00DD 13                RRC     A
                                           ; SOURCE LINE # 241
00DE 2400        R     ADD     A,#LOW KeyPadMap
00E0 F582              MOV     DPL,A
00E2 E4                CLR     A
00E3 3400        R     ADDC    A,#HIGH KeyPadMap
00E5 F583              MOV     DPH,A
00E7 759300      E     MOV     DPX,#?C?XDATASEG
00EA E0                MOVX    A,@DPTR
00EB FF                MOV     R7,A
                                           ; SOURCE LINE # 242
00EC         ?C0002:
00EC 22                RET     
             ; FUNCTION ReadKeyPad (END)

             ; FUNCTION _GetKey (BEGIN)
                                           ; SOURCE LINE # 255
;---- Variable 'repeat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 259
;---- Variable 'i' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 260
0000 110000      R     ACALL   ReadKeyPad
                                           ; SOURCE LINE # 261
0003 EF                MOV     A,R7
0004 7008              JNZ     ?C0012
                                           ; SOURCE LINE # 262
0006 C200        R     CLR     RepeatKey
                                           ; SOURCE LINE # 263
0008 F500        R     MOV     Key,A
                                           ; SOURCE LINE # 264
000A C200        R     CLR     KeyReady
                                           ; SOURCE LINE # 265
                                           ; SOURCE LINE # 266
000C 8013              SJMP    ?C0138
                                           ; SOURCE LINE # 267
000E         ?C0012:
                                           ; SOURCE LINE # 268
000E E500        R     MOV     A,Key
0010 7005              JNZ     ?C0014
                                           ; SOURCE LINE # 269
0012 8F00        R     MOV     Key,R7
                                           ; SOURCE LINE # 270
0014 0500        R     INC     keytic
                                           ; SOURCE LINE # 271
0016 22                RET     
                                           ; SOURCE LINE # 272
0017         ?C0014:
                                           ; SOURCE LINE # 273
0017 EF                MOV     A,R7
0018 6500        R     XRL     A,Key
001A 6009              JZ      ?C0016
                                           ; SOURCE LINE # 274
001C C200        R     CLR     RepeatKey
                                           ; SOURCE LINE # 275
001E C200        R     CLR     KeyReady
                                           ; SOURCE LINE # 276
0020 E4                CLR     A
0021         ?C0138:
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 31  

0021 F500        R     MOV     keytic,A
                                           ; SOURCE LINE # 277
0023 FF                MOV     R7,A
0024 22                RET     
                                           ; SOURCE LINE # 278
0025         ?C0016:
                                           ; SOURCE LINE # 279
                                           ; SOURCE LINE # 280
0025 0500        R     INC     keytic
                                           ; SOURCE LINE # 281
0027 E500        R     MOV     A,keytic
0029 C3                CLR     C
002A 9414              SUBB    A,#014H
002C 5003              JNC     ?C0018
                                           ; SOURCE LINE # 282
002E 7F00              MOV     R7,#00H
0030 22                RET     
                                           ; SOURCE LINE # 283
0031         ?C0018:
                                           ; SOURCE LINE # 284
                                           ; SOURCE LINE # 285
0031 D200        R     SETB    RepeatKey
                                           ; SOURCE LINE # 286
0033 D200        R     SETB    KeyReady
                                           ; SOURCE LINE # 287
0035 750012      R     MOV     keytic,#012H
                                           ; SOURCE LINE # 288
                                           ; SOURCE LINE # 289
                                           ; SOURCE LINE # 290
                                           ; SOURCE LINE # 296
0038         ?C0013:
0038 22                RET     
             ; FUNCTION _GetKey (END)

             ; FUNCTION _SetTouchAuto (BEGIN)
                                           ; SOURCE LINE # 311
;---- Variable 'on' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 312
                                           ; SOURCE LINE # 313
0000 C200        R     CLR     TraceAuto
                                           ; SOURCE LINE # 314
0002 EF                MOV     A,R7
0003 6003              JZ      ?C0020
                                           ; SOURCE LINE # 315
0005 D200        R     SETB    TouchAuto
0007 22                RET     
0008         ?C0020:
                                           ; SOURCE LINE # 317
0008 C200        R     CLR     TouchAuto
                                           ; SOURCE LINE # 318
000A         ?C0022:
000A 22                RET     
             ; FUNCTION _SetTouchAuto (END)

             ; FUNCTION _SetTraceAuto (BEGIN)
                                           ; SOURCE LINE # 322
;---- Variable 'on' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 323
                                           ; SOURCE LINE # 324
0000 C200        R     CLR     TouchAuto
                                           ; SOURCE LINE # 325
0002 EF                MOV     A,R7
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 32  

0003 6003              JZ      ?C0023
                                           ; SOURCE LINE # 326
0005 D200        R     SETB    TraceAuto
0007 22                RET     
0008         ?C0023:
                                           ; SOURCE LINE # 328
0008 C200        R     CLR     TraceAuto
                                           ; SOURCE LINE # 329
000A         ?C0025:
000A 22                RET     
             ; FUNCTION _SetTraceAuto (END)

             ; FUNCTION _TscGetScreenPos (BEGIN)
                                           ; SOURCE LINE # 378
                                           ; SOURCE LINE # 379
                                           ; SOURCE LINE # 382
0000 110000      R     ACALL   L?0221
0003 90000000    R     MOV     DPTR,#TouchX
0007 E0                MOVX    A,@DPTR
0008 FC                MOV     R4,A
0009 A3                INC     DPTR
000A E0                MOVX    A,@DPTR
000B FD                MOV     R5,A
000C C3                CLR     C
000D 9F                SUBB    A,R7
000E EC                MOV     A,R4
000F 9E                SUBB    A,R6
0010 4003              JC      $ + 5H
0012 010000      R     AJMP    ?C0026
                                           ; SOURCE LINE # 383
0015 110000      R     ACALL   L?0222
0018 110000      R     ACALL   L?0212
001B 5003              JNC     $ + 5H
001D 010000      R     AJMP    ?C0027
                                           ; SOURCE LINE # 386
0020 90000000    R     MOV     DPTR,#TouchCalibX+09H
0024 E0                MOVX    A,@DPTR
0025 9D                SUBB    A,R5
0026 FF                MOV     R7,A
0027 90000000    R     MOV     DPTR,#TouchCalibX+08H
002B E0                MOVX    A,@DPTR
002C 9C                SUBB    A,R4
002D 110000      R     ACALL   L?0189
                                           ; SOURCE LINE # 387
0030 110000      R     ACALL   L?0153
0033 90000000    R     MOV     DPTR,#CalibDataX
                                           ; SOURCE LINE # 388
0037 110000      R     ACALL   L?0155
003A C006              PUSH    AR6
003C C007              PUSH    AR7
003E 90000000    R     MOV     DPTR,#TouchCalibX
0042 110000      R     ACALL   L?0166
0045 110000      R     ACALL   L?0171
0048 D007              POP     AR7
004A D006              POP     AR6
                                           ; SOURCE LINE # 389
004C 110000      R     ACALL   L?0151
004F C3                CLR     C
0050 110000      E     ACALL   ?C?ULCMP
0053 4007              JC      ?C0028
0055 E4                CLR     A
0056 110000      R     ACALL   L?0187
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 33  

0059 F0                MOVX    @DPTR,A
005A 800D              SJMP    ?C0029
005C         ?C0028:
                                           ; SOURCE LINE # 390
005C 90000000    R     MOV     DPTR,#calcX
0060 A3                INC     DPTR
0061 110000      R     ACALL   L?0159
0064 110000      R     ACALL   L?0186
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
0069         ?C0029:
                                           ; SOURCE LINE # 392
0069 110000      R     ACALL   L?0160
                                           ; SOURCE LINE # 393
006C 90000000    R     MOV     DPTR,#calcY
0070 110000      R     ACALL   L?0154
0073 90000000    R     MOV     DPTR,#CalibDataY
0077 110000      R     ACALL   L?0166
007A 110000      R     ACALL   L?0167
                                           ; SOURCE LINE # 394
007D 90000000    R     MOV     DPTR,#calcY
0081 110000      R     ACALL   L?0158
0084 C006              PUSH    AR6
0086 C007              PUSH    AR7
0088 90000000    R     MOV     DPTR,#TouchCalibY+08H
008C 110000      R     ACALL   L?0166
008F 90000000    R     MOV     DPTR,#TouchCalibY+01H
0093 E0                MOVX    A,@DPTR
0094 90000000    R     MOV     DPTR,#TouchCalibY
0098 110000      R     ACALL   L?0172
009B D007              POP     AR7
009D D006              POP     AR6
009F 110000      E     ACALL   ?C?ULDIV
00A2 110000      R     ACALL   L?0170
                                           ; SOURCE LINE # 395
00A5 110000      R     ACALL   L?0182
00A8 110000      R     ACALL   L?0154
00AB C3                CLR     C
00AC 110000      E     ACALL   ?C?ULCMP
00AF 5003              JNC     $ + 5H
00B1 010000      R     AJMP    ?C0140
00B4 010000      R     AJMP    ?C0139
00B7         ?C0027:
                                           ; SOURCE LINE # 398
                                           ; SOURCE LINE # 401
00B7 90000000    R     MOV     DPTR,#TouchX
00BB 110000      R     ACALL   L?0166
00BE 90000000    R     MOV     DPTR,#TouchCalibX+09H
00C2 E0                MOVX    A,@DPTR
00C3 9F                SUBB    A,R7
00C4 FF                MOV     R7,A
00C5 90000000    R     MOV     DPTR,#TouchCalibX+08H
00C9 E0                MOVX    A,@DPTR
00CA 90000000    R     MOV     DPTR,#calcX
00CE 110000      R     ACALL   L?0163
                                           ; SOURCE LINE # 402
00D1 110000      R     ACALL   L?0153
00D4 90000000    R     MOV     DPTR,#CalibDataX+06H
                                           ; SOURCE LINE # 403
00D8 110000      R     ACALL   L?0155
00DB C006              PUSH    AR6
00DD C007              PUSH    AR7
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 34  

00DF 90000000    R     MOV     DPTR,#TouchCalibX+06H
00E3 110000      R     ACALL   L?0166
00E6 110000      R     ACALL   L?0171
00E9 D007              POP     AR7
00EB D006              POP     AR6
                                           ; SOURCE LINE # 404
00ED 110000      R     ACALL   L?0151
00F0 C3                CLR     C
00F1 110000      E     ACALL   ?C?ULCMP
00F4 4007              JC      ?C0033
00F6 E4                CLR     A
00F7 110000      R     ACALL   L?0187
00FA F0                MOVX    @DPTR,A
00FB 800D              SJMP    ?C0034
00FD         ?C0033:
                                           ; SOURCE LINE # 405
00FD 90000000    R     MOV     DPTR,#calcX
0101 A3                INC     DPTR
0102 110000      R     ACALL   L?0159
0105 110000      R     ACALL   L?0186
0108 EF                MOV     A,R7
0109 F0                MOVX    @DPTR,A
010A         ?C0034:
                                           ; SOURCE LINE # 407
010A 90000000    R     MOV     DPTR,#TouchY
010E 110000      R     ACALL   L?0166
0111 90000000    R     MOV     DPTR,#TouchCalibY+09H
0115 E0                MOVX    A,@DPTR
0116 90000000    R     MOV     DPTR,#TouchCalibY+08H
011A 110000      R     ACALL   L?0161
                                           ; SOURCE LINE # 408
011D 90000000    R     MOV     DPTR,#calcY
0121 110000      R     ACALL   L?0154
0124 90000000    R     MOV     DPTR,#CalibDataY+08H
0128 110000      R     ACALL   L?0166
012B 90000000    R     MOV     DPTR,#CalibDataY+07H
012F E0                MOVX    A,@DPTR
0130 90000000    R     MOV     DPTR,#CalibDataY+06H
0134 110000      R     ACALL   L?0168
                                           ; SOURCE LINE # 409
0137 90000000    R     MOV     DPTR,#calcY
013B 110000      R     ACALL   L?0158
013E C006              PUSH    AR6
0140 C007              PUSH    AR7
0142 90000000    R     MOV     DPTR,#TouchCalibY+06H
0146 110000      R     ACALL   L?0166
0149 110000      R     ACALL   L?0198
014C 110000      R     ACALL   L?0173
014F D007              POP     AR7
0151 D006              POP     AR6
0153 110000      E     ACALL   ?C?ULDIV
0156 110000      R     ACALL   L?0170
                                           ; SOURCE LINE # 410
0159 110000      R     ACALL   L?0182
015C 110000      R     ACALL   L?0154
015F C3                CLR     C
0160 110000      E     ACALL   ?C?ULCMP
0163 5003              JNC     $ + 5H
0165 010000      R     AJMP    ?C0142
0168 010000      R     AJMP    ?C0141
016B         ?C0026:
                                           ; SOURCE LINE # 414
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 35  

                                           ; SOURCE LINE # 415
016B 110000      R     ACALL   L?0222
016E D3                SETB    C
016F 110000      R     ACALL   L?0212
0172 5003              JNC     $ + 5H
0174 010000      R     AJMP    ?C0038
                                           ; SOURCE LINE # 417
0177 110000      R     ACALL   L?0221
017A 110000      R     ACALL   L?0188
                                           ; SOURCE LINE # 418
017D 110000      R     ACALL   L?0153
0180 90000000    R     MOV     DPTR,#CalibDataX+08H
0184 110000      R     ACALL   L?0166
0187 90000000    R     MOV     DPTR,#CalibDataX+03H
018B E0                MOVX    A,@DPTR
018C 90000000    R     MOV     DPTR,#CalibDataX+02H
                                           ; SOURCE LINE # 419
0190 110000      R     ACALL   L?0156
0193 C006              PUSH    AR6
0195 C007              PUSH    AR7
0197 110000      R     ACALL   L?0164
019A 90000000    R     MOV     DPTR,#TouchCalibX+03H
019E E0                MOVX    A,@DPTR
019F 9F                SUBB    A,R7
01A0 FF                MOV     R7,A
01A1 90000000    R     MOV     DPTR,#TouchCalibX+02H
01A5 110000      R     ACALL   L?0173
01A8 D007              POP     AR7
01AA D006              POP     AR6
                                           ; SOURCE LINE # 420
01AC 110000      R     ACALL   L?0152
01AF C3                CLR     C
01B0 110000      E     ACALL   ?C?ULCMP
01B3 4005              JC      ?C0039
01B5 110000      R     ACALL   L?0216
01B8 8010              SJMP    ?C0040
01BA         ?C0039:
                                           ; SOURCE LINE # 421
01BA 90000000    R     MOV     DPTR,#calcX
01BE A3                INC     DPTR
01BF 110000      R     ACALL   L?0159
01C2 110000      R     ACALL   L?0209
01C5 110000      R     ACALL   L?0187
01C8 EF                MOV     A,R7
01C9 F0                MOVX    @DPTR,A
01CA         ?C0040:
                                           ; SOURCE LINE # 423
01CA 110000      R     ACALL   L?0160
                                           ; SOURCE LINE # 424
01CD 90000000    R     MOV     DPTR,#calcY
01D1 110000      R     ACALL   L?0154
01D4 90000000    R     MOV     DPTR,#CalibDataY+02H
01D8 110000      R     ACALL   L?0166
01DB 110000      R     ACALL   L?0167
                                           ; SOURCE LINE # 425
01DE 90000000    R     MOV     DPTR,#calcY
01E2 110000      R     ACALL   L?0158
01E5 C006              PUSH    AR6
01E7 C007              PUSH    AR7
01E9 90000000    R     MOV     DPTR,#TouchCalibY+08H
01ED 110000      R     ACALL   L?0166
01F0 90000000    R     MOV     DPTR,#TouchCalibY+03H
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 36  

01F4 E0                MOVX    A,@DPTR
01F5 9F                SUBB    A,R7
01F6 FF                MOV     R7,A
01F7 90000000    R     MOV     DPTR,#TouchCalibY+02H
01FB 110000      R     ACALL   L?0173
01FE D007              POP     AR7
0200 D006              POP     AR6
0202 110000      E     ACALL   ?C?ULDIV
0205 110000      R     ACALL   L?0170
                                           ; SOURCE LINE # 426
0208 110000      R     ACALL   L?0183
020B 110000      R     ACALL   L?0154
020E C3                CLR     C
020F 110000      E     ACALL   ?C?ULCMP
0212 4009              JC      ?C0041
0214         ?C0139:
0214 E4                CLR     A
0215 90000000    R     MOV     DPTR,#PosY
0219 F0                MOVX    @DPTR,A
021A A3                INC     DPTR
021B F0                MOVX    @DPTR,A
021C 22                RET     
021D         ?C0041:
                                           ; SOURCE LINE # 427
021D         ?C0140:
021D 90000000    R     MOV     DPTR,#calcY
0221 A3                INC     DPTR
0222 110000      R     ACALL   L?0159
0225 C3                CLR     C
0226 90000000    R     MOV     DPTR,#CalibDataY+09H
022A E0                MOVX    A,@DPTR
022B 9F                SUBB    A,R7
022C FF                MOV     R7,A
022D 90000000    R     MOV     DPTR,#CalibDataY+08H
0231 E0                MOVX    A,@DPTR
0232 9E                SUBB    A,R6
                                           ; SOURCE LINE # 428
0233 010000      R     AJMP    ?C0143
0236         ?C0038:
                                           ; SOURCE LINE # 429
                                           ; SOURCE LINE # 431
0236 110000      R     ACALL   L?0164
0239 110000      R     ACALL   L?0188
                                           ; SOURCE LINE # 432
023C 110000      R     ACALL   L?0153
023F 90000000    R     MOV     DPTR,#CalibDataX+08H
0243 110000      R     ACALL   L?0166
0246 90000000    R     MOV     DPTR,#CalibDataX+05H
024A E0                MOVX    A,@DPTR
024B 9F                SUBB    A,R7
024C FF                MOV     R7,A
024D 90000000    R     MOV     DPTR,#CalibDataX+04H
                                           ; SOURCE LINE # 433
0251 110000      R     ACALL   L?0157
0254 C006              PUSH    AR6
0256 C007              PUSH    AR7
0258 110000      R     ACALL   L?0165
025B 90000000    R     MOV     DPTR,#TouchCalibX+05H
025F E0                MOVX    A,@DPTR
0260 9F                SUBB    A,R7
0261 FF                MOV     R7,A
0262 90000000    R     MOV     DPTR,#TouchCalibX+04H
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 37  

0266 110000      R     ACALL   L?0173
0269 D007              POP     AR7
026B D006              POP     AR6
                                           ; SOURCE LINE # 434
026D 110000      R     ACALL   L?0152
0270 C3                CLR     C
0271 110000      E     ACALL   ?C?ULCMP
0274 4005              JC      ?C0044
0276 110000      R     ACALL   L?0216
0279 8010              SJMP    ?C0045
027B         ?C0044:
                                           ; SOURCE LINE # 435
027B 90000000    R     MOV     DPTR,#calcX
027F A3                INC     DPTR
0280 110000      R     ACALL   L?0159
0283 110000      R     ACALL   L?0209
0286 110000      R     ACALL   L?0187
0289 EF                MOV     A,R7
028A F0                MOVX    @DPTR,A
028B         ?C0045:
                                           ; SOURCE LINE # 437
028B 90000000    R     MOV     DPTR,#TouchY
028F 110000      R     ACALL   L?0166
0292 110000      R     ACALL   L?0198
0295 110000      R     ACALL   L?0162
                                           ; SOURCE LINE # 438
0298 90000000    R     MOV     DPTR,#calcY
029C 110000      R     ACALL   L?0154
029F 90000000    R     MOV     DPTR,#CalibDataY+08H
02A3 110000      R     ACALL   L?0166
02A6 90000000    R     MOV     DPTR,#CalibDataY+05H
02AA E0                MOVX    A,@DPTR
02AB 9F                SUBB    A,R7
02AC FF                MOV     R7,A
02AD 90000000    R     MOV     DPTR,#CalibDataY+04H
02B1 110000      R     ACALL   L?0169
                                           ; SOURCE LINE # 439
02B4 90000000    R     MOV     DPTR,#calcY
02B8 110000      R     ACALL   L?0158
02BB C006              PUSH    AR6
02BD C007              PUSH    AR7
02BF 90000000    R     MOV     DPTR,#TouchCalibY+04H
02C3 110000      R     ACALL   L?0166
02C6 110000      R     ACALL   L?0199
02C9 110000      R     ACALL   L?0173
02CC D007              POP     AR7
02CE D006              POP     AR6
02D0 110000      E     ACALL   ?C?ULDIV
02D3 110000      R     ACALL   L?0170
                                           ; SOURCE LINE # 440
02D6 110000      R     ACALL   L?0183
02D9 110000      R     ACALL   L?0154
02DC C3                CLR     C
02DD 110000      E     ACALL   ?C?ULCMP
02E0 400C              JC      ?C0046
02E2         ?C0141:
02E2 90000000    R     MOV     DPTR,#PosY
02E6 7401              MOV     A,#01H
02E8 F0                MOVX    @DPTR,A
02E9 A3                INC     DPTR
02EA 74DF              MOV     A,#0DFH
02EC F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 38  

02ED 22                RET     
02EE         ?C0046:
                                           ; SOURCE LINE # 441
02EE         ?C0142:
02EE 90000000    R     MOV     DPTR,#calcY
02F2 A3                INC     DPTR
02F3 110000      R     ACALL   L?0159
02F6 90000000    R     MOV     DPTR,#CalibDataY+09H
02FA E0                MOVX    A,@DPTR
02FB 2F                ADD     A,R7
02FC FF                MOV     R7,A
02FD 90000000    R     MOV     DPTR,#CalibDataY+08H
0301 E0                MOVX    A,@DPTR
0302 3E                ADDC    A,R6
0303         ?C0143:
0303 90000000    R     MOV     DPTR,#PosY
0307 F0                MOVX    @DPTR,A
0308 A3                INC     DPTR
0309 EF                MOV     A,R7
030A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 442
                                           ; SOURCE LINE # 443
                                           ; SOURCE LINE # 445
030B         ?C0048:
030B 22                RET     
             ; FUNCTION _TscGetScreenPos (END)

             ; FUNCTION InitAuxADC (BEGIN)
                                           ; SOURCE LINE # 454
                                           ; SOURCE LINE # 455
                                           ; SOURCE LINE # 459
0000 7B00        R     MOV     R3,#MBYTE ?SC_0
0002 7A00        R     MOV     R2,#HIGH ?SC_0
0004 7900        R     MOV     R1,#LOW ?SC_0
0006 110000      E     ACALL   _dPuts
                                           ; SOURCE LINE # 462
0009 90000000    R     MOV     DPTR,#TscTimeLastEnd
000D 110000      R     ACALL   L?0190
0010 90000000    R     MOV     DPTR,#TscTimeEnd
0014 110000      R     ACALL   L?0205
0017 90000000    R     MOV     DPTR,#TscTimeStart
001B 110000      R     ACALL   L?0205
                                           ; SOURCE LINE # 465
001E 110000      R     ACALL   ReadCalibDataFromEE
                                           ; SOURCE LINE # 468
0021 E4                CLR     A
0022 90000000    E     MOV     DPTR,#CpuTouchStep
0026 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 469
0027 110000      R     ACALL   L?0174
002A 7402              MOV     A,#02H
                                           ; SOURCE LINE # 470
002C 110000      R     ACALL   L?0223
002F 24B1              ADD     A,#0B1H
0031 110000      R     ACALL   L?0176
0034 74F8              MOV     A,#0F8H
                                           ; SOURCE LINE # 475
0036 110000      R     ACALL   L?0223
0039 24B4              ADD     A,#0B4H
003B 110000      R     ACALL   L?0176
003E 7402              MOV     A,#02H
0040 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 39  

                                           ; SOURCE LINE # 476
0041 110000      R     ACALL   L?0174
0044 E0                MOVX    A,@DPTR
0045 4420              ORL     A,#020H
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 477
0048 7F01              MOV     R7,#01H
004A 7E00              MOV     R6,#00H
004C 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 478
004F 759300      E     MOV     DPX,#?C?XDATASEG
0052 E500        E     MOV     A,regTW88+01H
0054 24B2              ADD     A,#0B2H
0056 110000      R     ACALL   L?0176
0059 E0                MOVX    A,@DPTR
005A 90000000    R     MOV     DPTR,#val
005E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
005F E0                MOVX    A,@DPTR
0060 FF                MOV     R7,A
0061 C3                CLR     C
0062 9480              SUBB    A,#080H
0064 5017              JNC     ?C0049
                                           ; SOURCE LINE # 480
0066 7B00        R     MOV     R3,#MBYTE ?SC_12
0068 7A00        R     MOV     R2,#HIGH ?SC_12
006A 7900        R     MOV     R1,#LOW ?SC_12
006C 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
0070 EF                MOV     A,R7
0071 F0                MOVX    @DPTR,A
0072 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 482
0075 E4                CLR     A
0076 90000000    R     MOV     DPTR,#TscHwReady
007A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 483
007B 801A              SJMP    ?C0050
007D         ?C0049:
                                           ; SOURCE LINE # 484
                                           ; SOURCE LINE # 485
007D 7B00        R     MOV     R3,#MBYTE ?SC_23
007F 7A00        R     MOV     R2,#HIGH ?SC_23
0081 7900        R     MOV     R1,#LOW ?SC_23
0083 90000000    R     MOV     DPTR,#val
0087 E0                MOVX    A,@DPTR
0088 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
008C F0                MOVX    @DPTR,A
008D 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 486
0090 90000000    R     MOV     DPTR,#TscHwReady
0094 7401              MOV     A,#01H
0096 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 487
0097         ?C0050:
                                           ; SOURCE LINE # 488
0097 110000      R     ACALL   L?0175
009A E0                MOVX    A,@DPTR
009B 54DF              ANL     A,#0DFH
                                           ; SOURCE LINE # 493
009D 110000      R     ACALL   L?0224
00A0 24B4              ADD     A,#0B4H
00A2 110000      R     ACALL   L?0176
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 40  

00A5 740A              MOV     A,#0AH
00A7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 499
00A8 C2EC              CLR     SFRB_EINT6
                                           ; SOURCE LINE # 500
00AA E4                CLR     A
00AB 90000000    E     MOV     DPTR,#CpuTouchPressed
00AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 502
00B0 858D8B            MOV     SFR_TL1,SFR_TH1
                                           ; SOURCE LINE # 503
00B3 90000000    E     MOV     DPTR,#CpuTouchSkipCount
00B7 F0                MOVX    @DPTR,A
00B8 A3                INC     DPTR
00B9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 504
00BA D2AB              SETB    SFRB_ET1
                                           ; SOURCE LINE # 507
00BC FF                MOV     R7,A
00BD 110000      R     ACALL   _SetTouchStatus
                                           ; SOURCE LINE # 508
00C0 E4                CLR     A
00C1 FF                MOV     R7,A
00C2 010000      R     AJMP    _SetLastTouchStatus
             ; FUNCTION InitAuxADC (END)

             ; FUNCTION GetTouch2 (BEGIN)
                                           ; SOURCE LINE # 521
                                           ; SOURCE LINE # 522
                                           ; SOURCE LINE # 532
0000 C2AB              CLR     SFRB_ET1
                                           ; SOURCE LINE # 533
0002 90000000    E     MOV     DPTR,#CpuTouchChanged
0006 E0                MOVX    A,@DPTR
0007 FF                MOV     R7,A
0008 90000000    R     MOV     DPTR,#TC
000C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 534
000D 110000      R     ACALL   L?0206
0010 9200        R     MOV     TP,C
                                           ; SOURCE LINE # 535
0012 90000000    E     MOV     DPTR,#CpuTouchX
0016 E0                MOVX    A,@DPTR
0017 FD                MOV     R5,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A 90000000    R     MOV     DPTR,#TouchX
001E CD                XCH     A,R5
001F F0                MOVX    @DPTR,A
0020 A3                INC     DPTR
0021 ED                MOV     A,R5
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 536
0023 90000000    E     MOV     DPTR,#CpuTouchY
0027 E0                MOVX    A,@DPTR
0028 FD                MOV     R5,A
0029 A3                INC     DPTR
002A E0                MOVX    A,@DPTR
002B 90000000    R     MOV     DPTR,#TouchY
002F CD                XCH     A,R5
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 41  

0032 ED                MOV     A,R5
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 537
0034 D2AB              SETB    SFRB_ET1
                                           ; SOURCE LINE # 553
0036 90000000    R     MOV     DPTR,#TouchChangedOld
003A E0                MOVX    A,@DPTR
003B 6F                XRL     A,R7
003C 7036              JNZ     ?C0052
                                           ; SOURCE LINE # 555
003E 90000000    R     MOV     DPTR,#TouchStatus
0042 E0                MOVX    A,@DPTR
0043 B4402B            CJNE    A,#040H,?C0053
0046 90000000    R     MOV     DPTR,#TscTimeEnd
004A E0                MOVX    A,@DPTR
004B FC                MOV     R4,A
004C A3                INC     DPTR
004D E0                MOVX    A,@DPTR
004E FD                MOV     R5,A
004F A3                INC     DPTR
0050 E0                MOVX    A,@DPTR
0051 FE                MOV     R6,A
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 2432              ADD     A,#032H
0056 FF                MOV     R7,A
0057 E4                CLR     A
0058 3E                ADDC    A,R6
0059 FE                MOV     R6,A
005A E4                CLR     A
005B 3D                ADDC    A,R5
005C FD                MOV     R5,A
005D E4                CLR     A
005E 3C                ADDC    A,R4
005F FC                MOV     R4,A
0060 AB00        E     MOV     R3,SystemClock+03H
0062 AA00        E     MOV     R2,SystemClock+02H
0064 A900        E     MOV     R1,SystemClock+01H
0066 A800        E     MOV     R0,SystemClock
0068 D3                SETB    C
0069 110000      E     ACALL   ?C?ULCMP
006C 4003              JC      ?C0053
                                           ; SOURCE LINE # 557
006E 7F01              MOV     R7,#01H
0070 22                RET     
                                           ; SOURCE LINE # 558
0071         ?C0053:
                                           ; SOURCE LINE # 559
0071 7F00              MOV     R7,#00H
0073 22                RET     
                                           ; SOURCE LINE # 560
0074         ?C0052:
                                           ; SOURCE LINE # 562
0074 E4                CLR     A
0075 90000000    R     MOV     DPTR,#ret
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 563
007A C2A9              CLR     SFRB_ET0
                                           ; SOURCE LINE # 564
007C AF00        E     MOV     R7,SystemClock+03H
007E AE00        E     MOV     R6,SystemClock+02H
0080 AD00        E     MOV     R5,SystemClock+01H
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 42  

0082 AC00        E     MOV     R4,SystemClock
0084 90000000    R     MOV     DPTR,#TscTimeCurr
0088 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 565
008B D2A9              SETB    SFRB_ET0
                                           ; SOURCE LINE # 567
008D 200003      R     JB      TouchPressedOld,$ + 6H
0090 010000      R     AJMP    ?C0055
                                           ; SOURCE LINE # 568
0093 200003      R     JB      TP,$ + 6H
0096 010000      R     AJMP    ?C0056
                                           ; SOURCE LINE # 570
0099         LABEL_TP11:
                                           ; SOURCE LINE # 572
0099 90000000    R     MOV     DPTR,#new_status
009D 7480              MOV     A,#080H
009F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 573
00A0 110000      R     ACALL   _TscGetScreenPos
                                           ; SOURCE LINE # 577
00A3 90000000    R     MOV     DPTR,#OldPosX
00A7 110000      R     ACALL   L?0166
00AA 90000000    R     MOV     DPTR,#PosX+01H
00AE E0                MOVX    A,@DPTR
00AF 9F                SUBB    A,R7
00B0 FF                MOV     R7,A
00B1 90000000    R     MOV     DPTR,#PosX
00B5 E0                MOVX    A,@DPTR
00B6 9E                SUBB    A,R6
00B7 90000000    R     MOV     DPTR,#movX
00BB F0                MOVX    @DPTR,A
00BC FA                MOV     R2,A
00BD A3                INC     DPTR
00BE EF                MOV     A,R7
00BF F0                MOVX    @DPTR,A
00C0 FB                MOV     R3,A
                                           ; SOURCE LINE # 578
00C1 90000000    R     MOV     DPTR,#OldPosY
00C5 110000      R     ACALL   L?0166
00C8 90000000    R     MOV     DPTR,#PosY+01H
00CC E0                MOVX    A,@DPTR
00CD 9F                SUBB    A,R7
00CE FF                MOV     R7,A
00CF 90000000    R     MOV     DPTR,#PosY
00D3 E0                MOVX    A,@DPTR
00D4 9E                SUBB    A,R6
00D5 110000      R     ACALL   L?0217
                                           ; SOURCE LINE # 579
00D8 AF03              MOV     R7,AR3
00DA AE02              MOV     R6,AR2
00DC 110000      R     ACALL   L?0215
00DF 500A              JNC     ?C0058
                                           ; SOURCE LINE # 580
00E1 110000      R     ACALL   L?0200
00E4 401F              JC      ?C0060
                                           ; SOURCE LINE # 581
00E6 110000      R     ACALL   L?0202
                                           ; SOURCE LINE # 582
00E9 801A              SJMP    ?C0060
00EB         ?C0058:
                                           ; SOURCE LINE # 583
                                           ; SOURCE LINE # 584
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 43  

00EB 110000      R     ACALL   L?0202
                                           ; SOURCE LINE # 585
00EE D3                SETB    C
00EF 90000000    R     MOV     DPTR,#movX+01H
00F3 E0                MOVX    A,@DPTR
00F4 90000000    R     MOV     DPTR,#movX
00F8 110000      R     ACALL   L?0213
00FB 4005              JC      ?C0061
00FD 440C              ORL     A,#0CH
00FF F0                MOVX    @DPTR,A
0100 8003              SJMP    ?C0060
0102         ?C0061:
                                           ; SOURCE LINE # 586
0102 4408              ORL     A,#08H
0104 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 587
0105         ?C0060:
                                           ; SOURCE LINE # 588
0105 90000000    R     MOV     DPTR,#movY
0109 E0                MOVX    A,@DPTR
010A FE                MOV     R6,A
010B A3                INC     DPTR
010C E0                MOVX    A,@DPTR
010D FF                MOV     R7,A
010E 110000      R     ACALL   L?0215
0111 500A              JNC     ?C0063
                                           ; SOURCE LINE # 589
0113 110000      R     ACALL   L?0200
0116 401F              JC      ?C0065
                                           ; SOURCE LINE # 590
0118 110000      R     ACALL   L?0203
                                           ; SOURCE LINE # 591
011B 801A              SJMP    ?C0065
011D         ?C0063:
                                           ; SOURCE LINE # 592
                                           ; SOURCE LINE # 593
011D 110000      R     ACALL   L?0203
                                           ; SOURCE LINE # 594
0120 D3                SETB    C
0121 90000000    R     MOV     DPTR,#movY+01H
0125 E0                MOVX    A,@DPTR
0126 90000000    R     MOV     DPTR,#movY
012A 110000      R     ACALL   L?0213
012D 4005              JC      ?C0066
012F 4403              ORL     A,#03H
0131 F0                MOVX    @DPTR,A
0132 8003              SJMP    ?C0065
0134         ?C0066:
                                           ; SOURCE LINE # 595
0134 4402              ORL     A,#02H
0136 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 596
0137         ?C0065:
                                           ; SOURCE LINE # 597
0137 90000000    R     MOV     DPTR,#new_status
013B E0                MOVX    A,@DPTR
013C FF                MOV     R7,A
013D 90000000    R     MOV     DPTR,#TouchStatus
0141 E0                MOVX    A,@DPTR
0142 6F                XRL     A,R7
0143 6003              JZ      ?C0069
                                           ; SOURCE LINE # 599
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 44  

0145         ?C0068:
                                           ; SOURCE LINE # 600
                                           ; SOURCE LINE # 603
0145 110000      R     ACALL   _TscUpdateStatus
                                           ; SOURCE LINE # 604
0148         ?C0069:
                                           ; SOURCE LINE # 608
0148 90000000    R     MOV     DPTR,#new_status
014C E0                MOVX    A,@DPTR
014D 540A              ANL     A,#0AH
014F 7003              JNZ     $ + 5H
0151 010000      R     AJMP    ?C0144
                                           ; SOURCE LINE # 609
0154 90000000    R     MOV     DPTR,#PosX
0158 E0                MOVX    A,@DPTR
0159 FF                MOV     R7,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C CF                XCH     A,R7
                                           ; SOURCE LINE # 610
015D 110000      R     ACALL   L?0210
0160 FF                MOV     R7,A
0161 A3                INC     DPTR
0162 E0                MOVX    A,@DPTR
0163 90000000    R     MOV     DPTR,#OldPosY
0167 CF                XCH     A,R7
0168 F0                MOVX    @DPTR,A
0169 A3                INC     DPTR
016A EF                MOV     A,R7
016B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 611
016C         ?C0070:
                                           ; SOURCE LINE # 613
                                           ; SOURCE LINE # 614
016C 010000      R     AJMP    ?C0144
016F         ?C0056:
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 621
016F 90000000    R     MOV     DPTR,#TscTimeStart
0173 110000      R     ACALL   L?0154
0176 110000      R     ACALL   L?0178
0179 90000000    R     MOV     DPTR,#dt_start
017D 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 622
0180 90000000    R     MOV     DPTR,#TscTimeEnd
0184 110000      R     ACALL   L?0154
0187 110000      R     ACALL   L?0178
018A 90000000    R     MOV     DPTR,#dt_end
018E 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 625
0191 90000000    R     MOV     DPTR,#LastTouchStatus
0195 E0                MOVX    A,@DPTR
0196 C3                CLR     C
0197 94C0              SUBB    A,#0C0H
0199 4002              JC      ?C0072
                                           ; SOURCE LINE # 627
                                           ; SOURCE LINE # 628
                                           ; SOURCE LINE # 629
019B 8034              SJMP    ?C0147
019D         ?C0072:
                                           ; SOURCE LINE # 630
019D E4                CLR     A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 45  

019E 7FE8              MOV     R7,#0E8H
01A0 7E03              MOV     R6,#03H
01A2 FD                MOV     R5,A
01A3 FC                MOV     R4,A
01A4 90000000    R     MOV     DPTR,#dt_start
01A8 110000      R     ACALL   L?0154
01AB D3                SETB    C
01AC 110000      E     ACALL   ?C?ULCMP
01AF 4004              JC      ?C0074
                                           ; SOURCE LINE # 632
01B1 7F04              MOV     R7,#04H
                                           ; SOURCE LINE # 633
                                           ; SOURCE LINE # 634
01B3 802B              SJMP    ?C0148
01B5         ?C0074:
                                           ; SOURCE LINE # 635
01B5 110000      R     ACALL   L?0219
01B8 110000      R     ACALL   L?0154
01BB C3                CLR     C
01BC 110000      E     ACALL   ?C?ULCMP
01BF 500B              JNC     ?C0076
                                           ; SOURCE LINE # 636
01C1 110000      R     ACALL   L?0201
01C4 4002              JC      ?C0077
                                           ; SOURCE LINE # 638
01C6         ?C0145:
                                           ; SOURCE LINE # 639
                                           ; SOURCE LINE # 640
01C6 8009              SJMP    ?C0147
01C8         ?C0077:
                                           ; SOURCE LINE # 641
                                           ; SOURCE LINE # 643
01C8 7F02              MOV     R7,#02H
01CA         ?C0146:
                                           ; SOURCE LINE # 644
                                           ; SOURCE LINE # 645
                                           ; SOURCE LINE # 646
01CA 8014              SJMP    ?C0148
01CC         ?C0076:
                                           ; SOURCE LINE # 647
                                           ; SOURCE LINE # 648
01CC 110000      R     ACALL   L?0201
01CF 400D              JC      ?C0080
                                           ; SOURCE LINE # 650
01D1         ?C0147:
01D1 7F40              MOV     R7,#040H
01D3 110000      R     ACALL   _TscUpdateStatus
                                           ; SOURCE LINE # 651
01D6 E4                CLR     A
01D7 90000000    R     MOV     DPTR,#ret
01DB F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 652
01DC 800C              SJMP    ?C0073
01DE         ?C0080:
                                           ; SOURCE LINE # 653
                                           ; SOURCE LINE # 655
01DE 7F01              MOV     R7,#01H
01E0         ?C0148:
01E0 110000      R     ACALL   _TscUpdateStatus
                                           ; SOURCE LINE # 656
01E3 90000000    R     MOV     DPTR,#ret
01E7 7401              MOV     A,#01H
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 46  

01E9 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 657
                                           ; SOURCE LINE # 658
01EA         ?C0073:
                                           ; SOURCE LINE # 663
01EA 90000000    R     MOV     DPTR,#TouchStatus
01EE E0                MOVX    A,@DPTR
01EF 6440              XRL     A,#040H
01F1 6003              JZ      $ + 5H
01F3 010000      R     AJMP    ?C0082
                                           ; SOURCE LINE # 664
01F6 90000000    R     MOV     DPTR,#StartX
01FA 110000      R     ACALL   L?0166
01FD 90000000    R     MOV     DPTR,#OldPosX+01H
0201 E0                MOVX    A,@DPTR
0202 9F                SUBB    A,R7
0203 FF                MOV     R7,A
0204 90000000    R     MOV     DPTR,#OldPosX
0208 E0                MOVX    A,@DPTR
0209 9E                SUBB    A,R6
020A FE                MOV     R6,A
020B 90000000    R     MOV     DPTR,#movX
020F F0                MOVX    @DPTR,A
0210 A3                INC     DPTR
0211 EF                MOV     A,R7
0212 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 665
0213 110000      E     ACALL   _TWabsShort
0216 90000000    R     MOV     DPTR,#movX
021A EE                MOV     A,R6
021B F0                MOVX    @DPTR,A
021C A3                INC     DPTR
021D EF                MOV     A,R7
021E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 666
021F 90000000    R     MOV     DPTR,#StartY
0223 110000      R     ACALL   L?0166
0226 90000000    R     MOV     DPTR,#OldPosY+01H
022A E0                MOVX    A,@DPTR
022B 9F                SUBB    A,R7
022C FF                MOV     R7,A
022D 90000000    R     MOV     DPTR,#OldPosY
0231 E0                MOVX    A,@DPTR
0232 9E                SUBB    A,R6
0233 FE                MOV     R6,A
0234 110000      R     ACALL   L?0217
                                           ; SOURCE LINE # 667
0237 110000      E     ACALL   _TWabsShort
023A 90000000    R     MOV     DPTR,#movY
023E EE                MOV     A,R6
023F F0                MOVX    @DPTR,A
0240 A3                INC     DPTR
0241 EF                MOV     A,R7
0242 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 669
0243 90000000    R     MOV     DPTR,#veloX
0247 110000      R     ACALL   L?0204
                                           ; SOURCE LINE # 670
024A 90000000    R     MOV     DPTR,#veloX
024E 110000      R     ACALL   L?0154
0251 90000000    R     MOV     DPTR,#movX
0255 110000      R     ACALL   L?0208
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 47  

0258 90000000    R     MOV     DPTR,#veloX
025C 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 671
025F 90000000    R     MOV     DPTR,#veloX
0263 110000      R     ACALL   L?0158
0266 90000000    R     MOV     DPTR,#dt_start
026A 110000      R     ACALL   L?0154
026D 110000      E     ACALL   ?C?ULDIV
0270 90000000    R     MOV     DPTR,#veloX
0274 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 672
0277 90000000    R     MOV     DPTR,#veloY
027B 110000      R     ACALL   L?0204
                                           ; SOURCE LINE # 673
027E 90000000    R     MOV     DPTR,#veloY
0282 110000      R     ACALL   L?0154
0285 90000000    R     MOV     DPTR,#movY
0289 110000      R     ACALL   L?0208
028C 90000000    R     MOV     DPTR,#veloY
0290 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 674
0293 90000000    R     MOV     DPTR,#veloY
0297 110000      R     ACALL   L?0158
029A 90000000    R     MOV     DPTR,#dt_start
029E 110000      R     ACALL   L?0154
02A1 110000      E     ACALL   ?C?ULDIV
02A4 90000000    R     MOV     DPTR,#veloY
02A8 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 676
02AB         ?C0082:
                                           ; SOURCE LINE # 677
02AB 90000000    R     MOV     DPTR,#TscTimeCurr
02AF 110000      R     ACALL   L?0158
02B2 90000000    R     MOV     DPTR,#TscTimeEnd
02B6 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 678
                                           ; SOURCE LINE # 679
02B9 010000      R     AJMP    ?C0083
02BC         ?C0055:
                                           ; SOURCE LINE # 680
                                           ; SOURCE LINE # 681
02BC 200003      R     JB      TP,$ + 6H
02BF 010000      R     AJMP    ?C0083
                                           ; SOURCE LINE # 686
02C2 90000000    R     MOV     DPTR,#TscTimeEnd
02C6 110000      R     ACALL   L?0154
02C9 110000      R     ACALL   L?0179
02CC 90000000    R     MOV     DPTR,#dt_end
02D0 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 688
02D3 90000000    R     MOV     DPTR,#TouchStatus
02D7 E0                MOVX    A,@DPTR
02D8 B44002            CJNE    A,#040H,?C0085
                                           ; SOURCE LINE # 692
                                           ; SOURCE LINE # 693
02DB 8014              SJMP    ?C0149
                                           ; SOURCE LINE # 694
02DD         ?C0085:
                                           ; SOURCE LINE # 695
02DD 90000000    R     MOV     DPTR,#LastTouchStatus
02E1 E0                MOVX    A,@DPTR
02E2 B44014            CJNE    A,#040H,?C0087
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 48  

02E5 110000      R     ACALL   L?0219
02E8 110000      R     ACALL   L?0154
02EB C3                CLR     C
02EC 110000      E     ACALL   ?C?ULCMP
02EF 5008              JNC     ?C0087
                                           ; SOURCE LINE # 697
02F1         ?C0149:
02F1 7FC0              MOV     R7,#0C0H
02F3 110000      R     ACALL   _TscUpdateStatus
                                           ; SOURCE LINE # 698
02F6 010000      R     AJMP    LABEL_TP11
                                           ; SOURCE LINE # 699
02F9         ?C0087:
                                           ; SOURCE LINE # 700
                                           ; SOURCE LINE # 702
02F9 7F80              MOV     R7,#080H
02FB 110000      R     ACALL   _TscUpdateStatus
                                           ; SOURCE LINE # 703
02FE 110000      R     ACALL   _TscGetScreenPos
                                           ; SOURCE LINE # 704
0301 90000000    R     MOV     DPTR,#PosX
0305 E0                MOVX    A,@DPTR
0306 FE                MOV     R6,A
0307 A3                INC     DPTR
0308 E0                MOVX    A,@DPTR
0309 FF                MOV     R7,A
030A 90000000    R     MOV     DPTR,#StartX
030E EE                MOV     A,R6
030F F0                MOVX    @DPTR,A
0310 A3                INC     DPTR
0311 EF                MOV     A,R7
0312 F0                MOVX    @DPTR,A
0313 EE                MOV     A,R6
                                           ; SOURCE LINE # 705
0314 110000      R     ACALL   L?0210
0317 FE                MOV     R6,A
0318 A3                INC     DPTR
0319 E0                MOVX    A,@DPTR
031A FF                MOV     R7,A
031B 90000000    R     MOV     DPTR,#StartY
031F EE                MOV     A,R6
0320 F0                MOVX    @DPTR,A
0321 A3                INC     DPTR
0322 EF                MOV     A,R7
0323 F0                MOVX    @DPTR,A
0324 90000000    R     MOV     DPTR,#OldPosY
0328 EE                MOV     A,R6
0329 F0                MOVX    @DPTR,A
032A A3                INC     DPTR
032B EF                MOV     A,R7
032C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 706
032D 90000000    R     MOV     DPTR,#TscTimeEnd
0331 110000      R     ACALL   L?0158
0334 90000000    R     MOV     DPTR,#TscTimeLastEnd
0338 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 707
033B 90000000    R     MOV     DPTR,#TscTimeCurr
033F 110000      R     ACALL   L?0158
0342 90000000    R     MOV     DPTR,#TscTimeStart
0346 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 710
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 49  

0349         ?C0086:
                                           ; SOURCE LINE # 711
0349         ?C0144:
0349 90000000    R     MOV     DPTR,#ret
034D 7401              MOV     A,#01H
034F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 712
                                           ; SOURCE LINE # 713
                                           ; SOURCE LINE # 720
                                           ; SOURCE LINE # 721
0350         ?C0083:
                                           ; SOURCE LINE # 722
0350 90000000    R     MOV     DPTR,#TC
0354 E0                MOVX    A,@DPTR
0355 90000000    R     MOV     DPTR,#TouchChangedOld
0359 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 723
035A A200        R     MOV     C,TP
035C 9200        R     MOV     TouchPressedOld,C
                                           ; SOURCE LINE # 725
035E 90000000    R     MOV     DPTR,#ret
0362 E0                MOVX    A,@DPTR
0363 FF                MOV     R7,A
                                           ; SOURCE LINE # 726
0364         ?C0054:
0364 22                RET     
0365         L?0215:
0365 110000      E     ACALL   _TWabsShort
0368 D3                SETB    C
0369 EF                MOV     A,R7
036A 940A              SUBB    A,#0AH
036C EE                MOV     A,R6
036D 6480              XRL     A,#080H
036F 9480              SUBB    A,#080H
0371 22                RET     
             ; FUNCTION GetTouch2 (END)

             ; FUNCTION WaitTouchButtonUp (BEGIN)
                                           ; SOURCE LINE # 842
                                           ; SOURCE LINE # 843
                                           ; SOURCE LINE # 844
0000 7B00        R     MOV     R3,#MBYTE ?SC_32
0002 7A00        R     MOV     R2,#HIGH ?SC_32
0004 7900        R     MOV     R1,#LOW ?SC_32
0006 110000      E     ACALL   _dPuts
0009         ?C0092:
                                           ; SOURCE LINE # 845
                                           ; SOURCE LINE # 846
0009 110000      R     ACALL   GetTouch2
                                           ; SOURCE LINE # 847
000C 7F0A              MOV     R7,#0AH
000E 7E00              MOV     R6,#00H
0010 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 848
0013 90000000    R     MOV     DPTR,#TouchStatus
0017 E0                MOVX    A,@DPTR
0018 FF                MOV     R7,A
0019 6401              XRL     A,#01H
001B 6012              JZ      ?C0091
001D EF                MOV     A,R7
001E 6402              XRL     A,#02H
0020 600D              JZ      ?C0091
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 50  

0022 EF                MOV     A,R7
0023 6404              XRL     A,#04H
0025 6008              JZ      ?C0091
0027 EF                MOV     A,R7
0028 6440              XRL     A,#040H
002A 6003              JZ      ?C0091
002C EF                MOV     A,R7
002D 70DA              JNZ     ?C0092
002F         ?C0091:
                                           ; SOURCE LINE # 853
002F 7B00        R     MOV     R3,#MBYTE ?SC_56
0031 7A00        R     MOV     R2,#HIGH ?SC_56
0033 7900        R     MOV     R1,#LOW ?SC_56
0035 010000      E     AJMP    _dPuts
             ; FUNCTION WaitTouchButtonUp (END)

             ; FUNCTION _SetTouchStatus (BEGIN)
                                           ; SOURCE LINE # 864
;---- Variable 'ts' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 865
                                           ; SOURCE LINE # 867
0000 90000000    R     MOV     DPTR,#TouchStatus
0004 E0                MOVX    A,@DPTR
0005 FE                MOV     R6,A
0006 6F                XRL     A,R7
0007 6003              JZ      ?C0096
                                           ; SOURCE LINE # 868
                                           ; SOURCE LINE # 869
0009 110000      R     ACALL   L?0214
                                           ; SOURCE LINE # 870
                                           ; SOURCE LINE # 871
000C         ?C0096:
000C 22                RET     
             ; FUNCTION _SetTouchStatus (END)

             ; FUNCTION _TscUpdateStatus (BEGIN)
                                           ; SOURCE LINE # 875
;---- Variable 'TscStat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 876
                                           ; SOURCE LINE # 878
0000 90000000    R     MOV     DPTR,#TouchStatus
0004 E0                MOVX    A,@DPTR
0005 FE                MOV     R6,A
0006 6F                XRL     A,R7
0007 6003              JZ      ?C0098
                                           ; SOURCE LINE # 879
                                           ; SOURCE LINE # 880
0009 110000      R     ACALL   L?0214
                                           ; SOURCE LINE # 881
                                           ; SOURCE LINE # 882
000C         ?C0098:
000C 22                RET     
             ; FUNCTION _TscUpdateStatus (END)

             ; FUNCTION _SetLastTouchStatus (BEGIN)
                                           ; SOURCE LINE # 886
;---- Variable 'ts' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 887
                                           ; SOURCE LINE # 889
0000 90000000    R     MOV     DPTR,#LastTouchStatus
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 51  

                                           ; SOURCE LINE # 890
0006 22                RET     
             ; FUNCTION _SetLastTouchStatus (END)

             ; FUNCTION _SaveCalibDataToEE (BEGIN)
                                           ; SOURCE LINE # 905
;---- Variable 'flag' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 906
                                           ; SOURCE LINE # 910
0000 EF                MOV     A,R7
0001 7035              JNZ     ?C0100
                                           ; SOURCE LINE # 911
0003 90000000    R     MOV     DPTR,#i
0007 F0                MOVX    @DPTR,A
0008         ?C0101:
                                           ; SOURCE LINE # 912
0008 90000000    R     MOV     DPTR,#i
000C E0                MOVX    A,@DPTR
000D FE                MOV     R6,A
000E 25E0              ADD     A,ACC
0010 2400        R     ADD     A,#LOW Def_TouchCalibX
0012 F582              MOV     DPL,A
0014 E4                CLR     A
0015 3400        R     ADDC    A,#HIGH Def_TouchCalibX
0017 110000      R     ACALL   L?0211
                                           ; SOURCE LINE # 913
001A 110000      R     ACALL   L?0180
001D FE                MOV     R6,A
001E 25E0              ADD     A,ACC
0020 2400        R     ADD     A,#LOW Def_TouchCalibY
0022 F582              MOV     DPL,A
0024 E4                CLR     A
0025 3400        R     ADDC    A,#HIGH Def_TouchCalibY
0027 110000      R     ACALL   L?0211
002A 110000      R     ACALL   L?0196
                                           ; SOURCE LINE # 914
002D 110000      R     ACALL   L?0181
0030 04                INC     A
0031 F0                MOVX    @DPTR,A
0032 E0                MOVX    A,@DPTR
0033 B405D2            CJNE    A,#05H,?C0101
0036 8029              SJMP    ?C0104
                                           ; SOURCE LINE # 915
0038         ?C0100:
                                           ; SOURCE LINE # 916
0038 EF                MOV     A,R7
0039 6401              XRL     A,#01H
003B 7024              JNZ     ?C0104
                                           ; SOURCE LINE # 917
003D 90000000    R     MOV     DPTR,#i
0041 F0                MOVX    @DPTR,A
0042         ?C0106:
                                           ; SOURCE LINE # 918
0042 110000      R     ACALL   L?0225
0045 110000      R     ACALL   L?0227
0048 110000      R     ACALL   L?0218
                                           ; SOURCE LINE # 919
004B 110000      R     ACALL   L?0180
004E FF                MOV     R7,A
004F 110000      R     ACALL   L?0228
0052 110000      R     ACALL   L?0218
0055 110000      R     ACALL   L?0196
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 52  

                                           ; SOURCE LINE # 920
0058 110000      R     ACALL   L?0181
005B 04                INC     A
005C F0                MOVX    @DPTR,A
005D E0                MOVX    A,@DPTR
005E B405E1            CJNE    A,#05H,?C0106
                                           ; SOURCE LINE # 921
0061         ?C0104:
                                           ; SOURCE LINE # 923
0061 E4                CLR     A
0062 90000000    R     MOV     DPTR,#i
0066 F0                MOVX    @DPTR,A
0067         ?C0109:
                                           ; SOURCE LINE # 924
0067 110000      R     ACALL   L?0225
006A 110000      R     ACALL   L?0229
                                           ; SOURCE LINE # 925
006D 110000      R     ACALL   L?0194
0070 2480              ADD     A,#080H
                                           ; SOURCE LINE # 926
0072 110000      R     ACALL   L?0195
0075 2480              ADD     A,#080H
                                           ; SOURCE LINE # 927
0077 110000      R     ACALL   L?0185
007A 04                INC     A
007B F0                MOVX    @DPTR,A
007C E0                MOVX    A,@DPTR
007D C3                CLR     C
007E 9405              SUBB    A,#05H
0080 40E5              JC      ?C0109
0082         ?C0110:
                                           ; SOURCE LINE # 928
0082 E4                CLR     A
0083 90000000    R     MOV     DPTR,#i
0087 F0                MOVX    @DPTR,A
0088         ?C0112:
                                           ; SOURCE LINE # 929
0088 110000      R     ACALL   L?0226
008B 110000      R     ACALL   L?0197
                                           ; SOURCE LINE # 930
008E 110000      R     ACALL   L?0194
0091 248A              ADD     A,#08AH
                                           ; SOURCE LINE # 931
0093 110000      R     ACALL   L?0195
0096 248A              ADD     A,#08AH
                                           ; SOURCE LINE # 932
0098 110000      R     ACALL   L?0185
009B 04                INC     A
009C F0                MOVX    @DPTR,A
009D E0                MOVX    A,@DPTR
009E C3                CLR     C
009F 9405              SUBB    A,#05H
00A1 40E5              JC      ?C0112
                                           ; SOURCE LINE # 933
00A3         ?C0115:
00A3 22                RET     
00A4         L?0185:
00A4 FF                MOV     R7,A
00A5 E4                CLR     A
00A6 35F0              ADDC    A,B
00A8 CF                XCH     A,R7
00A9 2401              ADD     A,#01H
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 53  

00AB CF                XCH     A,R7
00AC 3400              ADDC    A,#00H
00AE FE                MOV     R6,A
00AF A3                INC     DPTR
00B0 A3                INC     DPTR
00B1 E0                MOVX    A,@DPTR
00B2 FD                MOV     R5,A
00B3 110000      E     ACALL   _E3P_Write
00B6 90000000    R     MOV     DPTR,#i
00BA E0                MOVX    A,@DPTR
00BB 22                RET     
00BC         L?0195:
00BC FF                MOV     R7,A
00BD E4                CLR     A
00BE 35F0              ADDC    A,B
00C0 FE                MOV     R6,A
00C1 90000000    R     MOV     DPTR,#value
00C5 E0                MOVX    A,@DPTR
00C6 FD                MOV     R5,A
00C7 110000      E     ACALL   _E3P_Write
00CA 90000000    R     MOV     DPTR,#i
00CE E0                MOVX    A,@DPTR
00CF 75F002            MOV     B,#02H
00D2 A4                MUL     AB
00D3 22                RET     
             ; FUNCTION _SaveCalibDataToEE (END)

             ; FUNCTION ReadCalibDataFromEE (BEGIN)
                                           ; SOURCE LINE # 937
                                           ; SOURCE LINE # 938
                                           ; SOURCE LINE # 942
0000 E4                CLR     A
0001 90000000    R     MOV     DPTR,#i
0005 F0                MOVX    @DPTR,A
0006         ?C0116:
0006 110000      R     ACALL   L?0230
0009 5022              JNC     ?C0117
                                           ; SOURCE LINE # 943
000B EF                MOV     A,R7
000C 75F002            MOV     B,#02H
000F A4                MUL     AB
0010 2480              ADD     A,#080H
                                           ; SOURCE LINE # 944
                                           ; SOURCE LINE # 945
0012 110000      R     ACALL   L?0184
0015 75F002            MOV     B,#02H
0018 A4                MUL     AB
0019 2480              ADD     A,#080H
                                           ; SOURCE LINE # 946
001B 110000      R     ACALL   L?0177
001E 110000      R     ACALL   L?0229
0021 110000      R     ACALL   L?0192
                                           ; SOURCE LINE # 947
0024 90000000    R     MOV     DPTR,#i
0028 E0                MOVX    A,@DPTR
0029 04                INC     A
002A F0                MOVX    @DPTR,A
002B 80D9              SJMP    ?C0116
002D         ?C0117:
                                           ; SOURCE LINE # 948
002D E4                CLR     A
002E 90000000    R     MOV     DPTR,#i
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 54  

0032 F0                MOVX    @DPTR,A
0033         ?C0119:
0033 110000      R     ACALL   L?0230
0036 5022              JNC     ?C0122
                                           ; SOURCE LINE # 949
0038 EF                MOV     A,R7
0039 75F002            MOV     B,#02H
003C A4                MUL     AB
003D 248A              ADD     A,#08AH
                                           ; SOURCE LINE # 950
                                           ; SOURCE LINE # 951
003F 110000      R     ACALL   L?0184
0042 75F002            MOV     B,#02H
0045 A4                MUL     AB
0046 248A              ADD     A,#08AH
                                           ; SOURCE LINE # 952
0048 110000      R     ACALL   L?0177
004B 110000      R     ACALL   L?0197
004E 110000      R     ACALL   L?0192
                                           ; SOURCE LINE # 953
0051 90000000    R     MOV     DPTR,#i
0055 E0                MOVX    A,@DPTR
0056 04                INC     A
0057 F0                MOVX    @DPTR,A
0058 80D9              SJMP    ?C0119
                                           ; SOURCE LINE # 954
005A         ?C0122:
005A 22                RET     
005B         L?0177:
005B FF                MOV     R7,A
005C E4                CLR     A
005D 35F0              ADDC    A,B
005F CF                XCH     A,R7
0060 2401              ADD     A,#01H
0062 CF                XCH     A,R7
0063 3400              ADDC    A,#00H
0065 FE                MOV     R6,A
0066 110000      E     ACALL   _E3P_Read
0069 90000000    R     MOV     DPTR,#value
006D E0                MOVX    A,@DPTR
006E FE                MOV     R6,A
006F A3                INC     DPTR
0070 E0                MOVX    A,@DPTR
0071 4F                ORL     A,R7
0072 FF                MOV     R7,A
0073 90000000    R     MOV     DPTR,#value
0077 EE                MOV     A,R6
0078 F0                MOVX    @DPTR,A
0079 FE                MOV     R6,A
007A A3                INC     DPTR
007B EF                MOV     A,R7
007C F0                MOVX    @DPTR,A
007D 90000000    R     MOV     DPTR,#i
0081 E0                MOVX    A,@DPTR
0082 22                RET     
0083         L?0184:
0083 FF                MOV     R7,A
0084 E4                CLR     A
0085 35F0              ADDC    A,B
0087 FE                MOV     R6,A
0088 110000      E     ACALL   _E3P_Read
008B 90000000    R     MOV     DPTR,#value
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 55  

008F E4                CLR     A
0090 F0                MOVX    @DPTR,A
0091 A3                INC     DPTR
0092 EF                MOV     A,R7
0093 F0                MOVX    @DPTR,A
0094 E0                MOVX    A,@DPTR
0095 F8                MOV     R0,A
0096 E4                CLR     A
0097 F0                MOVX    @DPTR,A
0098 E8                MOV     A,R0
0099 90000000    R     MOV     DPTR,#value
009D F0                MOVX    @DPTR,A
009E 90000000    R     MOV     DPTR,#i
00A2 E0                MOVX    A,@DPTR
00A3 22                RET     
             ; FUNCTION ReadCalibDataFromEE (END)

             ; FUNCTION _CalibTouch (BEGIN)
                                           ; SOURCE LINE # 995
0000 90000000    R     MOV     DPTR,#n
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 996
                                           ; SOURCE LINE # 1003
0006 110000      R     ACALL   GetTouch2
                                           ; SOURCE LINE # 1005
0009 110000      R     ACALL   L?0206
000C 9200        R     MOV     TouchPressedOld,C
                                           ; SOURCE LINE # 1006
000E 90000000    R     MOV     DPTR,#CalibX
0012 110000      R     ACALL   L?0190
                                           ; SOURCE LINE # 1007
0015 E4                CLR     A
0016 FF                MOV     R7,A
0017 FE                MOV     R6,A
0018 FD                MOV     R5,A
0019 FC                MOV     R4,A
001A 90000000    R     MOV     DPTR,#CalibY
001E 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1008
0021 E4                CLR     A
0022 90000000    R     MOV     DPTR,#count
0026 F0                MOVX    @DPTR,A
0027 A3                INC     DPTR
0028 F0                MOVX    @DPTR,A
0029         ?C0123:
                                           ; SOURCE LINE # 1010
0029 C3                CLR     C
002A 90000000    R     MOV     DPTR,#count+01H
002E E0                MOVX    A,@DPTR
002F 9464              SUBB    A,#064H
0031 90000000    R     MOV     DPTR,#count
0035 E0                MOVX    A,@DPTR
0036 9400              SUBB    A,#00H
0038 5073              JNC     ?C0124
                                           ; SOURCE LINE # 1011
003A 90000000    E     MOV     DPTR,#CpuTouchChanged
003E E0                MOVX    A,@DPTR
003F FF                MOV     R7,A
0040 90000000    R     MOV     DPTR,#TouchChangedOld
0044 E0                MOVX    A,@DPTR
0045 6F                XRL     A,R7
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 56  

0046 60E1              JZ      ?C0123
0048         ?C0125:
                                           ; SOURCE LINE # 1012
0048 110000      R     ACALL   L?0207
004B 9200        R     MOV     TouchPressedOld,C
                                           ; SOURCE LINE # 1013
004D 110000      R     ACALL   GetTouch2
                                           ; SOURCE LINE # 1015
0050 30004C            JNB     TouchPressedOld,?C0126
                                           ; SOURCE LINE # 1016
0053 90000000    E     MOV     DPTR,#CpuTouchPressed
0057 E0                MOVX    A,@DPTR
0058 603E              JZ      ?C0127
                                           ; SOURCE LINE # 1017
005A 90000000    R     MOV     DPTR,#CalibX
005E 110000      R     ACALL   L?0154
0061 90000000    R     MOV     DPTR,#TouchX
0065 E0                MOVX    A,@DPTR
0066 FE                MOV     R6,A
0067 A3                INC     DPTR
0068 E0                MOVX    A,@DPTR
0069 90000000    R     MOV     DPTR,#CalibX
006D 110000      R     ACALL   L?0191
                                           ; SOURCE LINE # 1018
0070 90000000    R     MOV     DPTR,#CalibY
0074 110000      R     ACALL   L?0154
0077 90000000    R     MOV     DPTR,#TouchY
007B E0                MOVX    A,@DPTR
007C FE                MOV     R6,A
007D A3                INC     DPTR
007E E0                MOVX    A,@DPTR
007F 90000000    R     MOV     DPTR,#CalibY
0083 110000      R     ACALL   L?0191
                                           ; SOURCE LINE # 1019
0086 90000000    R     MOV     DPTR,#count+01H
008A E0                MOVX    A,@DPTR
008B 04                INC     A
008C F0                MOVX    @DPTR,A
008D 709A              JNZ     ?C0123
008F 90000000    R     MOV     DPTR,#count
0093 E0                MOVX    A,@DPTR
0094 04                INC     A
0095 F0                MOVX    @DPTR,A
0096         ?C0136:
                                           ; SOURCE LINE # 1020
0096 8091              SJMP    ?C0123
0098         ?C0127:
                                           ; SOURCE LINE # 1021
                                           ; SOURCE LINE # 1022
0098 110000      R     ACALL   L?0207
009B 9200        R     MOV     TouchPressedOld,C
                                           ; SOURCE LINE # 1024
009D 800E              SJMP    ?C0124
                                           ; SOURCE LINE # 1025
                                           ; SOURCE LINE # 1026
009F         ?C0126:
                                           ; SOURCE LINE # 1027
                                           ; SOURCE LINE # 1028
009F 90000000    E     MOV     DPTR,#CpuTouchPressed
00A3 E0                MOVX    A,@DPTR
00A4 6083              JZ      ?C0123
                                           ; SOURCE LINE # 1030
C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 57  

00A6 24FF              ADD     A,#0FFH
00A8 9200        R     MOV     TouchPressedOld,C
                                           ; SOURCE LINE # 1031
00AA 010000      R     AJMP    ?C0123
                                           ; SOURCE LINE # 1032
                                           ; SOURCE LINE # 1033
                                           ; SOURCE LINE # 1034
                                           ; SOURCE LINE # 1035
00AD         ?C0124:
                                           ; SOURCE LINE # 1036
00AD 90000000    R     MOV     DPTR,#CalibX
00B1 110000      R     ACALL   L?0158
00B4 C006              PUSH    AR6
00B6 C007              PUSH    AR7
00B8 90000000    R     MOV     DPTR,#count
00BC 110000      R     ACALL   L?0220
00BF D007              POP     AR7
00C1 D006              POP     AR6
00C3 110000      E     ACALL   ?C?ULDIV
00C6 90000000    R     MOV     DPTR,#CalibX
00CA 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1037
00CD 90000000    R     MOV     DPTR,#CalibY
00D1 110000      R     ACALL   L?0158
00D4 C006              PUSH    AR6
00D6 C007              PUSH    AR7
00D8 A3                INC     DPTR
00D9 110000      R     ACALL   L?0220
00DC D007              POP     AR7
00DE D006              POP     AR6
00E0 110000      E     ACALL   ?C?ULDIV
00E3 90000000    R     MOV     DPTR,#CalibY
00E7 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 1039
00EA 90000000    R     MOV     DPTR,#CalibX
00EE A3                INC     DPTR
00EF 110000      R     ACALL   L?0159
00F2 90000000    R     MOV     DPTR,#n
00F6 E0                MOVX    A,@DPTR
00F7 FB                MOV     R3,A
00F8 110000      R     ACALL   L?0227
00FB 110000      R     ACALL   L?0193
                                           ; SOURCE LINE # 1040
00FE 90000000    R     MOV     DPTR,#CalibY
0102 A3                INC     DPTR
0103 110000      R     ACALL   L?0159
0106 EB                MOV     A,R3
0107 110000      R     ACALL   L?0228
010A 110000      R     ACALL   L?0193
                                           ; SOURCE LINE # 1045
010D 22                RET     
             ; FUNCTION _CalibTouch (END)

             ; FUNCTION TouchDump (BEGIN)
                                           ; SOURCE LINE # 1052
                                           ; SOURCE LINE # 1053
                                           ; SOURCE LINE # 1054
0000 22                RET     
             ; FUNCTION TouchDump (END)



C51 COMPILER V9.56.0.0   TOUCHKEY                                                          07/18/2018 10:44:37 PAGE 58  

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3574    ----
   CONSTANT SIZE    =     85    ----
   XDATA SIZE       =    124      51
   PDATA SIZE       =   ----    ----
   DATA SIZE        =      2    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =      6       2
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
