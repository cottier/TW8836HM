C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE OSDFONT
OBJECT MODULE PLACED IN .\Output\OSDFont.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source36\OSDFont.c LARGE OMF2 ROM(D512K) OPTIMIZE(9,SPEED) REGFILE(.\Out
                    -put\TW8836B_EVB11.ORC) BROWSE INCDIR(SiI-SW;SiI-SW\HAL;SiI-SW\DEBUG;SiI-SW\CEC;.\Source36\LIB) DEFINE(EVB_11,nullFn=//) 
                    -DEBUG CODE PRINT(.\List\OSDFont.lst) TABS(2) OBJECT(.\Output\OSDFont.obj)

line level    source

   1          /**
   2           * @file
   3           * OSDFont.c 
   4           * @author Brian Kang
   5           * @version 1.0
   6           * @section LICENSE
   7           *  Copyright (C) 2011~2012 Intersil Corporation
   8           * @section DESCRIPTION
   9           *  low level FontOSD layer
  10           *
  11           * errata
  12           *  MultiFont can not be overlapped.
  13           *
  14           *
  15           *
  16           */
  17          /*
  18          Disclaimer: THIS INFORMATION IS PROVIDED 'AS-IS' FOR EVALUATION PURPOSES ONLY.  
  19          INTERSIL CORPORATION AND ITS SUBSIDIARIES ('INTERSIL') DISCLAIM ALL WARRANTIES, 
  20          INCLUDING WITHOUT LIMITATION FITNESS FOR A PARTICULAR PURPOSE AND MERCHANTABILITY.  
  21          Intersil provides evaluation platforms to help our customers to develop products. 
  22          However, factors beyond Intersil's control could significantly affect Intersil 
  23          product performance. 
  24          It remains the customers' responsibility to verify the actual system performance.
  25          */
  26          #include "config.h"
  27          #include "reg.h"
  28          #include "typedefs.h"
  29          #include "TW8836.h"
  30          #include "global.h"
  31          
  32          #include "CPU.h"
  33          #include "printf.h"
  34          #include "debug.h"
  35          #include "Util.h"
  36          
  37          #include "i2c.h"
  38          #include "spi.h"
  39          
  40          #include "FOsd.h"
  41          #include "SpiFlashMap.h"
  42          #include "SOsdMenu.h"
  43          #include "settings.h"
  44          #include "inputCtrl.h"
  45          
  46          
  47          //=====================================
  48          // default LUT(palette) color
  49          //=====================================
  50          /**
  51          * FOSD HW 16 default color table
  52          */
  53          code WORD FOsdHwDefPaletteBpp1[16] = {
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 2   

  54            /*0:Black*/     FOSD_COLOR_VALUE_BLACK,
  55            /*1:DarkBlue*/    FOSD_COLOR_VALUE_DBLUE,
  56            /*2:Green*/     FOSD_COLOR_VALUE_GREEN,
  57            /*3:DarkCyan*/    FOSD_COLOR_VALUE_DCYAN,
  58            /*4:DarkRed*/   FOSD_COLOR_VALUE_DRED,
  59            /*5:DarkMagenta*/ FOSD_COLOR_VALUE_DMAGENTA,
  60            /*6:DarkYellow*/  FOSD_COLOR_VALUE_DYELLOW,
  61            /*7:Gray*/      FOSD_COLOR_VALUE_GRAY,
  62            /*8:Silver*/    FOSD_COLOR_VALUE_SILVER,
  63            /*9:Blue*/      FOSD_COLOR_VALUE_BLUE,
  64            /*A:Lime*/      FOSD_COLOR_VALUE_LIME,
  65            /*B:Cyan*/      FOSD_COLOR_VALUE_CYAN,
  66            /*V:Red*/     FOSD_COLOR_VALUE_RED,
  67            /*D:Magenta*/   FOSD_COLOR_VALUE_MAGENTA,
  68            /*E:Yellow*/    FOSD_COLOR_VALUE_YELLOW,
  69            /*F:White*/     FOSD_COLOR_VALUE_WHITE 
  70          };
  71          /**
  72          * FOSD SW 16 default color table
  73          */
  74          code WORD FOsdSwDefPaletteBpp1[16] = {
  75            /*0:Black*/     FOSD_COLOR_VALUE_BLACK,
  76            /*9:Blue*/      FOSD_COLOR_VALUE_BLUE,
  77            /*A:Lime*/      FOSD_COLOR_VALUE_LIME,
  78            /*B:Cyan*/      FOSD_COLOR_VALUE_CYAN,
  79            /*V:Red*/     FOSD_COLOR_VALUE_RED,
  80            /*D:Magenta*/   FOSD_COLOR_VALUE_MAGENTA,
  81            /*E:Yellow*/    FOSD_COLOR_VALUE_YELLOW,
  82            /*F:White*/     FOSD_COLOR_VALUE_WHITE, 
  83          
  84            /*7:Gray*/      FOSD_COLOR_VALUE_GRAY,
  85            /*1:DarkBlue*/    FOSD_COLOR_VALUE_DBLUE,
  86            /*2:Green*/     FOSD_COLOR_VALUE_GREEN,
  87            /*3:DarkCyan*/    FOSD_COLOR_VALUE_DCYAN,
  88            /*4:DarkRed*/   FOSD_COLOR_VALUE_DRED,
  89            /*5:DarkMagenta*/ FOSD_COLOR_VALUE_DMAGENTA,
  90            /*6:DarkYellow*/  FOSD_COLOR_VALUE_DYELLOW,
  91            /*8:Silver*/    FOSD_COLOR_VALUE_SILVER
  92          };
  93          /**
  94          * FOSD 2 BPP default color table
  95          */
  96          code WORD FOsdDefPaletteBpp2[4] = { 
  97            0xF7DE,0x0000,0x5AAB,0xC000
  98          }; 
  99          
 100          /**
 101          * FOSD 3 BPP default color table
 102          */
 103          code WORD FOsdDefPaletteBpp3[8] = { 
 104            0xFFFF,0x0000,0xDEDB,0x9492,0x6B6D,0xB5B6,0x4A49,0x2124   //consolas22_16x26
 105          };
 106          /**
 107          * FOSD 3 BPP Alpha default color table
 108          */
 109          code BYTE FOsdDefPaletteBpp3Alpha[8] = { 1,7,6,4,3,5,2,0 };   //consolas22_16x26
 110           
 111          /**
 112          * FOSD 3 BPP default color table
 113          */
 114          code WORD FOsdDefPaletteBpp4[16] = {
 115            0xD6BA,0x20E3,0xF79E,0x62E8,0xE104,0xA944,0x39A6,0x7BAC,
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 3   

 116            0x51A6,0xC617,0x9CD1,0xB5B5,0x9BC9,0xDD85,0xF643,0xAC87
 117          };
 118          
 119          
 120          #ifdef SUPPORT_UDFONT
              #include "data/RamFontData.inc"
              #endif
 123          
 124          
 125          /**
 126          * FOSD FontInfo_s
 127          */
 128          struct FontInfo_s {
 129            char name[16];  //con, con+gray, def
 130            BYTE w,h;
 131            BYTE bpp;
 132            BYTE loc;   //fontram location
 133          
 134            WORD bpp2,bpp3,bpp4,max;                
 135                          
 136            BYTE bpp2_attr;   //for MultiBPP  (LUT index >> 2)
 137            BYTE bpp3_attr;   //for MultiBPP  (LUT index >> 2)
 138            BYTE bpp4_attr;   //for MultiBPP  (LUT index >> 2)
 139          };
 140          
 141          /**
 142          * FOSD FontWinInfo_s
 143          */
 144          struct FontWinInfo_s {
 145            WORD osdram;    //osdram start offset, 0~511.
 146            WORD sx,sy;     //pixel base
 147            BYTE column,line;   //char base
 148            BYTE x,y;     //last position. char base.
 149          
 150            BYTE bpp1_attr;   //(bgColor << 4) | fgColor
 151          };
 152          
 153          /**
 154          * FOSD FontOsdInfo_s
 155          */
 156          struct FontOsdInfo_s {
 157            struct FontInfo_s font;            /* 31 */
 158            struct FontWinInfo_s win[FOSD_MAX_OSDWIN];   /* 9*8 */
 159          } FontOsdInfo;
 160          
 161          
 162          //R307[7:0]R308[7:0]  OSD RAM Data Port
 163          //R309          Font RAM Address
 164          //R30A          Font RAM Data Port
 165          //R30B          Multi-Color Start Position
 166          //R30C          Font OSD Control
 167          //R30D[7:0]R30E[7:0]  Character Color Look-up table data port
 168          
 169          
 170          #define DMA_SIZE  0x8000L
 171          
 172          #define FONTWIN1_ST   REG310
 173          #define FONTWIN2_ST   REG320
 174          #define FONTWIN3_ST   REG330
 175          #define FONTWIN4_ST   REG340
 176          #define FONTWIN5_ST   REG350
 177          #define FONTWIN6_ST   REG360
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 4   

 178          #define FONTWIN7_ST   REG370
 179          #define FONTWIN8_ST   REG380
 180          
 181          #define FONTWIN_ENABLE  0X00
 182          #define FONT_ALPHA    0x01
 183          
 184          code  WORD  FOSDWinBase[] = { FONTWIN1_ST, FONTWIN2_ST, FONTWIN3_ST, FONTWIN4_ST, FONTWIN5_ST, FONTWIN6_ST, 
             -FONTWIN7_ST, FONTWIN8_ST };
 185          
 186          //BKTODO: move default font in this bank. 
 187          //it have a BANK issue.
 188             BYTE BPP3_alpha_lut_offset[8];         //need base_lut to use.
 189          code BYTE BPP3_alpha_value[8]={0,2,3,4,5,6,7,8};
 190          
 191          
 192          /**
 193          * print FontInfo
 194          */
 195          void DumpFontInfo(void)
 196          {
 197   1        if(DebugLevel < DEBUG_WARN)
 198   1          return;
 199   1        wPrintf("\n\rFont:%s",FontOsdInfo.font.name);
 200   1        wPrintf(" %bdx%bd", FontOsdInfo.font.w,FontOsdInfo.font.h);
 201   1        wPrintf(" bpp2:%x",FontOsdInfo.font.bpp2);
 202   1        wPrintf(" bpp3:%x",FontOsdInfo.font.bpp3);
 203   1        wPrintf(" bpp4:%x",FontOsdInfo.font.bpp4);
 204   1        wPrintf(" end:%x",FontOsdInfo.font.max);
 205   1      }
 206          
 207          //=============================================================================
 208          //r300[0]
 209          //=============================================================================
 210          /**
 211          * set FOSD OsdRam FIFO
 212          *
 213          * OsdRam uses a PCLK domain.
 214          *
 215          * If FIFO is ONed, HW has a 8 FIFO, and updata OsdRam on HBlank(Horizontal).
 216          * If FW wants to update the OsdRam related registers more than 8,
 217          * FW has to wait one HBlank.
 218          *
 219          * If FIFO is OFFed, FW has to execute the updata on VBlank(Vertical).
 220          * If FW turns on FIFO before HW updates a OsdRam related registers,
 221          * HW can write data|attr at the ramdom position.
 222          * So, FW has to wait 1 VBlank.
 223          *
 224          * oldname:FOsdRamFifoBypass
 225          * 
 226          * HW default: FIFO ON
 227          * SW prefer: FIFO OFF
 228          *
 229          * register
 230          * r300[0] 1:Bypass OSD RAM FIFO.
 231          */
 232          void FOsdRamSetFifo(BYTE fOn, BYTE vdelay)
 233          {
 234   1        if(vdelay)
 235   1          WaitVBlank(vdelay);
 236   1      
 237   1        if(fOn) WriteTW88(REG300, ReadTW88(REG300) & ~0x01);  //turn off bypass, so FIFO will be ON.
 238   1        else  WriteTW88(REG300, ReadTW88(REG300) | 0x01);   //turn on bypass, so FIFO will be OFF.
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 5   

 239   1      }
 240          
 241          
 242          /**
 243          * set FOSD FontRam Fifo
 244          *
 245          * FIFO has to be OFF if FW uses a DMA.
 246          * If FW uses IO method, FW has to wait HBlank every 8 data.
 247          *
 248          * HW default: FIFO ON
 249          * SW default: FIFO OFF
 250          *
 251          * register
 252          * r300[1] 1:Bypass FONTRAM FIFO
 253          * 
 254          */
 255          void FOsdFontSetFifo(BYTE fOn)
 256          {
 257   1        if(fOn) WriteTW88(REG300, ReadTW88(REG300) & ~0x02);  //turn off bypass, so FIFO will be ON.
 258   1        else  WriteTW88(REG300, ReadTW88(REG300) |  0x02);  //turn on bypass, so FIFO will be OFF.
 259   1      }
 260          
 261          /**
 262          * set FONT Width & Height
 263          *
 264          * r300[4]   0: CharWidth 12. 1:CharWidth 18.
 265          * r350[4:0] (Font OSD Char Height ) >> 1
 266          * r351[6:0] Sub-Font Total Count. used bytes for one font. if 12x18, use 27.
 267          */
 268          void FOsdSetFontWidthHeight(BYTE width, BYTE height)
 269          {
 270   1        BYTE value;
 271   1      
 272   1        value = ReadTW88(REG300); 
 273   1        if(width==16) value |= 0x10;            //width 16
 274   1        else      value &= 0xEF;          //   or 12
 275   1        WriteTW88(REG300, value ); 
 276   1      
 277   1        WriteTW88(REG_FOSD_CHEIGHT, height >> 1 );          //Font height(2~32)
 278   1        WriteTW88(REG_FOSD_MUL_CON, (width >> 2) * (height >> 1));  //sub-font total count.
 279   1      }
 280          
 281          
 282          //-------------------------------------------------------------------
 283          /**
 284          * calculate and set FontOSD DE value
 285          *
 286          * Font OSD DE delay calculation 
 287          * HDE = REG(0x210[7:0])
 288          * PCLKO = REG(0x20d[1:0]) {0,1,1,1}
 289          * Mixing = REG(0x400[1:1])
 290          * 
 291          * result = HDE + PCLKO - (Mixing*2 + 36)
 292          *
 293          * NOTE: minimum DE value.
 294          * - 1BPP: 3
 295          * - 2BPP: 4
 296          * - 3BPP: 5
 297          * - 4BPP: 6
 298          *
 299          * r303[7:0]
 300          */ 
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 6   

 301          void FOsdSetDeValue(void)
 302          {
 303   1      #if 1 //NEW, But NG
 304   1        XDATA BYTE temp;
 305   1        BYTE HDE,PCLKO,Mixing;
 306   1      
 307   1        HDE = ReadTW88(REG210 );        // HDE
 308   1        PCLKO = ReadTW88(REG20D) & 0x03;
 309   1        //if(PCLKO == 3)
 310   1          PCLKO = 1;
 311   1      
 312   1        Mixing = ReadTW88(REG400) & 0x02 ? 1 : 0;
 313   1      
 314   1        if((HDE + PCLKO) < (Mixing*2 + 36) ) { //I don't want a negative value.
 315   2          //temp = 0;
 316   2          temp = (Mixing*2 + 36) - HDE - PCLKO + 1;
 317   2        }
 318   1        else
 319   1          temp = HDE + PCLKO - (Mixing*2 + 36);
 320   1      
 321   1        WriteTW88(REG303, temp );           // write FONT OSD DE value
 322   1      #else //Old, But Working
                XDATA WORD temp;
              
                temp = ReadTW88(REG210 );       // HDE
                if( ReadTW88(REG20d) & 0x03 )
                  temp += 1;
              
                temp -= 37;
                if ( ReadTW88(REG400 ) & 2 ) {      // check Mixing
                  temp -= 2;
                } 
              
                WriteTW88(REG303, temp );           // write FONT OSD DE value
              #endif
 336   1      #ifdef DEBUG_FOSD
                dPrintf("\n\rFontOsdDE:%02bx",temp);
              #endif
 339   1      }
 340          
 341          
 342          
 343          //=============================================================================
 344          //=============================================================================
 345          
 346          /**
 347          * set FOSD blink attribute
 348          *
 349          * this will effect only when FW writes data on OsdRam.
 350          * the background color will fill out when it blink.
 351          *
 352          * r304[7] Blink
 353          */
 354          void FOsdBlinkOnOff(BYTE fOn)
 355          {
 356   1        if(fOn) WriteTW88(REG304, ReadTW88(REG304) | 0x80);
 357   1        else    WriteTW88(REG304, ReadTW88(REG304) & ~0x80);
 358   1      }
 359          
 360          #if 0
              //please do not use it. it has lot of bugs.
              //desc: enable the char effect(border or Shadow)
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 7   

              //    this will effect only when you write data on OsdRam.
              // r304[4]
              void FOsdEnableCharEffect(BYTE fOn)
              {
              ..
              }
              #endif
 370          
 371          /**
 372          * set FOSD OsdRam Write Mode
 373          *
 374          * @param fMode
 375          * 0:Normal, 1:DataOrAttr, 3:Data(with prev attr)
 376          *
 377          * register
 378          * r304[3:2] 00:Normal. 01:Data or Attr Addr auto mode. 11:Font Data auto mode
 379          */
 380          void FOsdRamSetWriteMode(BYTE fMode)
 381          {
 382   1        BYTE value;
 383   1        value = ReadTW88(REG304) & 0xF3;
 384   1        value |= (fMode << 2);
 385   1        WriteTW88(REG304, value);
 386   1      }
 387          #if 0
              /**
              * get FOSD OsdRam Write Mode
              *
              */
              BYTE FOsdRamGetWriteMode(void)
              {
                return (ReadTW88(REG304) >> 2) & 0x03;
              }
              #endif
 397          
 398          #if 0
              /**
              * Clear all data as 0 with current attr value at r308[7:0].
              *
              * If customer wants to use this feature, the font 0 has to be a blank data.
              *
              * r304[1]
              */
              void FOsdRamClearAllData(void)
              {
                WriteTW88(REG304, ReadTW88(REG304) | 0x02);
              }
              #endif
 411          
 412          /**
 413          * set FOSD AccessMode
 414          *
 415          * FW selects FontRAM before it starts a FontRam download
 416          * and selects OsdRam when it finish a FontRam download.
 417          *
 418          * @param fType   
 419          * - 0: OSD Ram Access.  default
 420          * - 1: FONT RAM access
 421          *
 422          * register
 423          * r304[0]
 424          */
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 8   

 425          void FOsdSetAccessMode(BYTE fType)
 426          {
 427   1        if(fType) WriteTW88(REG304, ReadTW88(REG304)| 0x01);  // Font Ram Access
 428   1        else    WriteTW88(REG304, ReadTW88(REG304)& 0xFE);  // Osd Ram Access
 429   1      }
 430          
 431          /**
 432          * set OsdRam address
 433          *
 434          * @param addr max 511.
 435          * r305[0]r306[7:0]
 436          */
 437          void FOsdRamSetAddress(WORD addr)
 438          {
 439   1        WriteTW88(REG305, (ReadTW88(REG305) & 0xFE) | (addr >> 8));
 440   1        WriteTW88(REG306, (BYTE)addr);
 441   1      }
 442          /**
 443          * set OsdRam data
 444          *
 445          * r304[5]r307[7:0]
 446          * NOTE:FontRam also use r304[5]
 447          */
 448          void FOsdRamSetData(WORD dat)
 449          {
 450   1        if(dat&0x100) WriteTW88(REG304,ReadTW88(REG304) |  0x20); 
 451   1        else      WriteTW88(REG304,ReadTW88(REG304) & ~0x20);
 452   1        WriteTW88(REG307, (BYTE)dat);
 453   1      }
 454          
 455          /**
 456          * set OsdRam attribute
 457          *
 458          * r308[7:0]
 459          * 1BPP:   r308[7:4] bgColor
 460          *     r308[3:0] fgColor
 461          * MBPP:   r308[3:0] (LUT offset / 4)
 462          */ 
 463          void FOsdRamSetAttr(BYTE attr)
 464          {
 465   1        WriteTW88(REG308, attr);
 466   1      }
 467          #if 0
              /**
              * FontRam Serial write
              *
              * NOTE: You need FOsdSetAccessMode(FOSD_ACCESS_FONTRAM),
              *       FOsdSetAccessMode(FOSD_ACCESS_OSDRAM)
              * NOTE: You need a FIFO delay if you are using FIFO. 
              *       So, the better higher function is a FOsdDownloadFontBySerial().
              *
              * r304[5]r309[7:0]    //NOTE: OsdRam also use r304[5] 
              * r30A[7:0]
              */
              void FOsdFontWrite(WORD start, BYTE *dat, BYTE bytesperfont, BYTE size)
              {
                BYTE i,j;
                WORD addr;
              
                addr = start;
                for(i=0; i < size; i++) {
                  if(addr & 0x100)  WriteTW88(REG304, ReadTW88(REG304) |  0x20);  //Upper256
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 9   

                  else        WriteTW88(REG304, ReadTW88(REG304) & ~0x20);
                  WriteTW88(REG309, (BYTE)addr);
                  for(j=0; j < bytesperfont; j++)
                    WriteTW88(REG30A, *dat++);
                  addr++;   
                }
              }
              void FOsdDownloadFontCode( void )
              {
              BYTE  i, j;
                DWORD UsedTime;
                WORD wTemp;
              
              //  WriteTW88(REG350, 0x09 );         // default FONT height: 18 = 9*2
              
                WriteTW88(REG304, ReadTW88(REG304) | 0x01 );
              
                WriteTW88(REG300, ReadTW88(REG300) & 0xFD ); // turn OFF bypass for Font RAM
              //??  WriteTW88(REG309, 0x00 ); //Font Addr
              
                //FOsdSetAccessMode(FOSD_ACCESS_FONTRAM); 
              
                SFRB_ET0 = 0;
                UsedTime = SystemClock;
                SFRB_ET0 = 1;
              
                wTemp = 0x200u;
              
              
              //=======================
              #ifdef SUPPORT_UDFONT
                FOsdFontWrite(0x00,&RAMFONTDATA[0][0], 27, 0xA0);
                FOsdFontWrite(0xA0,&RAMFONTDATA[0][0], 27, 0x22);
                FOsdFontWrite(0xC2,&RAMFONTDATA[0x82][0], 27, 0x60-0x22);
              #endif
                TWmemcpy(SPI_Buffer,&RAMFONTDATA[34][0], 27*4);
                FOsdFontWrite(0x00,SPI_Buffer, 27, 4);
              //========================
              
              
              //  FOsdSetAccessMode(FOSD_ACCESS_OSDRAM);  
                WriteTW88(REG300,ReadTW88(REG300) & ~0x02); 
              
              
                SFRB_ET0 = 0;
                UsedTime = SystemClock - UsedTime;
                SFRB_ET0 = 1;
                Printf("\n\rUsedTime:%ld.%ldsec", UsedTime/100, UsedTime%100 );
              
              //  WriteTW88(REG30B, 0xF0 );             // 2bit color font start
              //  WriteTW88(REG_FOSD_MADD3, 0xF0 );
              //  WriteTW88(REG_FOSD_MADD4, 0xF0 );
              }
              
              
              #endif
 543          
 544          //r30B[7:0]
 545          //  MADD2
 546          
 547          //-------------------------------------------------------------------
 548          /**
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 10  

 549          * OnOff FontOSD
 550          *
 551          * r30C[6]
 552          *
 553          * @return
 554          * - 1: changed
 555          */
 556          BYTE FOsdOnOff(BYTE fOnOff, BYTE vdelay)
 557          {
 558   1        BYTE value;
 559   1        
 560   1        value = ReadTW88(REG30C);
 561   1        if(fOnOff) {
 562   2          if(value & 0x40) {
 563   3            if(vdelay)
 564   3              WaitVBlank(vdelay);
 565   3            WriteTW88(REG30C, value & ~0x40);
 566   3            return 1;
 567   3          }
 568   2        }
 569   1        else {
 570   2          if((value & 0x40) == 0) {
 571   3            if(vdelay)
 572   3              WaitVBlank(vdelay);
 573   3            WriteTW88(REG30C, value | 0x40);
 574   3            return 1;
 575   3          }
 576   2        }
 577   1        return 0;
 578   1      }
 579          
 580          
 581          //r30C[5:0]
 582          //r30D[7:0]
 583          //r30E[7:0]
 584          //=============================================================================
 585          // FOsdPalette
 586          //=============================================================================
 587          /**
 588          * set FOSD Palette color
 589          *
 590          * old code use index 2 for normal foreground     Now 6bit.(64).
 591          * TW8835 needs PCLK divider2
 592          */
 593          void FOsdSetPaletteColor(BYTE start, WORD color, BYTE size, BYTE vdelay)
 594          {
 595   1        BYTE i;
 596   1        BYTE r30c;
 597   1      
 598   1        if(vdelay)
 599   1          WaitVBlank(vdelay);
 600   1      
 601   1        r30c = ReadTW88(REG30C) & 0xC0;
 602   1        for(i=start; i < (start+size); i++) {
 603   2          WriteTW88(REG30C, r30c | i );
 604   2          WriteTW88(REG30D, (BYTE)(color>>8));
 605   2          WriteTW88(REG30E, (BYTE)color);
 606   2        }
 607   1      }
 608          
 609          /**
 610          * set FOSD Palette color
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 11  

 611          *
 612          * TW8835 needs PCLK divider2
 613          */
 614          void FOsdSetPaletteColorArray(BYTE index, WORD *array, BYTE size, BYTE vdelay)
 615          {
 616   1        BYTE i;
 617   1        BYTE r30c;
 618   1      
 619   1        //dPrintf("\n\rFOsdSetPaletteColorArray index:%bd",index);
 620   1        //for(i=0; i < size; i++)
 621   1        //  dPrintf(" %04x",array[i]);
 622   1      
 623   1        if(vdelay)
 624   1          WaitVBlank(vdelay);
 625   1      
 626   1        r30c = ReadTW88(REG30C) & 0xC0;
 627   1        for(i=0; i < size; i++) {
 628   2          WriteTW88(REG30C, (index+i) | r30c);
 629   2          WriteTW88(REG30D, (BYTE)(array[i] >> 8));
 630   2          WriteTW88(REG30E, (BYTE)array[i]);
 631   2        }
 632   1      }
 633          
 634          
 635          
 636          /**
 637          * set Address and Attribute
 638          *
 639          * we assign the attr and then wirte a start font index.
 640          * after this, you can just assign the font index data. 
 641          * @param OsdRamAddr 0 to 511
 642          * @param attr
 643          * - attr for 1BPP:  (bgColor << 4) | fgColor
 644          * - attr for MultiBPP (LUT index >> 2)
 645          */
 646          void FOsdRamSetAddrAttr(WORD OsdRamAddr, BYTE attr)
 647          {
 648   1        FOsdRamSetWriteMode(FOSD_OSDRAM_WRITE_NORMAL);
 649   1        FOsdRamSetAddress(OsdRamAddr); 
 650   1        FOsdRamSetAttr(attr);                                     
 651   1      
 652   1        FOsdRamSetWriteMode(FOSD_OSDRAM_WRITE_DATA);
 653   1        FOsdRamSetAddress(OsdRamAddr);  //NOTE: HW needs it.
 654   1        //              
 655   1        //now use FOsdRamSetData(dat).  
 656   1      }
 657          /**
 658          * write BYTE string to OsdRam
 659          *
 660          * assume low char  
 661          * assume FIFO OFF
 662          */
 663          void FOsdRamWriteByteStr(BYTE *str, BYTE len)
 664          {
 665   1        BYTE i;
 666   1        BYTE w_count;
 667   1      
 668   1        WriteTW88(REG304, ReadTW88(REG304) & ~0x20);
 669   1        
 670   1        w_count = 1;
 671   1        for(i=0; i < len; i++) {
 672   2          WriteTW88(REG307, *str++);
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 12  

 673   2          w_count++;
 674   2          if(w_count==6/*8*/) {  //NOTE
 675   3            delay1ms(1);
 676   3            w_count=0;
 677   3          }
 678   2        }
 679   1      }
 680          #if 0
              /**
              * Write data on ByPassFIFO mode.
              *
              * example
              * FOsdRamSetFifo(OFF,0)
              * FOsdRamSetAddrAttr(,);
              * FOsdRamWriteByteStrBypassFifo("   ",len);
              * FOsdRamSetFifo(ON,1)
              */
              void FOsdRamWriteByteStrBypassFifo(BYTE *str, BYTE len)
              {
                BYTE i;
                BYTE w_count;
              
                WriteTW88(REG304, ReadTW88(REG304)& ~0x20);
                
                for(i=0; i < len; i++) {
                  WriteTW88(REG307, *str++);
                }
              }
              #endif
 702          
 703          
 704          //=============================================================================
 705          // FOsdWin
 706          //=============================================================================
 707          /**
 708          * enable FOSD Window
 709          *
 710          * R310[7],R320[7],,,
 711          */
 712          void FOsdWinEnable(BYTE winno, BYTE en)
 713          {
 714   1        XDATA   WORD index;
 715   1        XDATA BYTE dat;
 716   1      
 717   1        index = FOSDWinBase[winno] + FONTWIN_ENABLE;
 718   1      
 719   1        dat = ReadTW88(index);
 720   1        if( en ) dat |= 0x80;
 721   1        else     dat &= 0x7F;
 722   1        WriteTW88(index, dat);
 723   1      }
 724          
 725          /**
 726          * toggle FOSD Window enable bit
 727          *
 728          * @see FOsdWinEnable
 729          */
 730          void FOsdWinToggleEnable(BYTE winno)
 731          {
 732   1        XDATA   WORD index;
 733   1        XDATA BYTE dat;
 734   1      
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 13  

 735   1        index = FOSDWinBase[winno] + FONTWIN_ENABLE;
 736   1      
 737   1        dat = ReadTW88(index);
 738   1        if( dat & 0x80 )    WriteTW88(index, dat & 0x7F);   //ON->OFF
 739   1        else        WriteTW88(index, dat | 0x80); //OFF->ON
 740   1      }
 741          
 742          /**
 743          * turn off all FontOSD Window
 744          */
 745          void FOsdWinOffAll(void)
 746          {
 747   1        BYTE i;
 748   1        for(i=0; i< FOSD_MAX_OSDWIN; i++)
 749   1          FOsdWinEnable(i, OFF);
 750   1      }
 751          
 752          /**
 753          * enable MultiColor attribute
 754          *
 755          * pls, DO NOT TURN OFF
 756          *
 757          * R310[6],R320[6],,,
 758          */
 759          void FOsdWinMulticolor(BYTE winno, BYTE en)
 760          {
 761   1        XDATA   WORD index;
 762   1        XDATA BYTE dat;
 763   1      
 764   1        index = FOSDWinBase[winno] + FONTWIN_ENABLE;
 765   1      
 766   1        dat = ReadTW88(index);
 767   1        if( en ) dat |= 0x40;
 768   1        else     dat &= 0xBF;  
 769   1        WriteTW88(index, dat);
 770   1      }
 771          
 772          //R310[5],R320[5],,,
 773          #if 0
              void FOsdWinEnableVerticalExtensior(BYTE fOn)
              { .. }
              #endif
 777          
 778          /**
 779          * set Horizontal Vertical Zoom
 780          *
 781          * R310[3:2],R320[3:2],,,
 782          * R310[1:0],R320[1:0],,,
 783          */
 784          void FOsdWinZoom(BYTE winno, BYTE zoomH, BYTE zoomV)
 785          {
 786   1        XDATA WORD index;
 787   1        XDATA BYTE temp;
 788   1      
 789   1        index = FOSDWinBase[winno];
 790   1      
 791   1        temp = (zoomH << 2) + zoomV;
 792   1        temp += (ReadTW88(index ) & 0xf0);
 793   1        WriteTW88(index, temp );
 794   1      }
 795          
 796          //------------------------------------------------------------------------
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 14  

 797          //    void FOsdWinAlphaPixel(BYTE winno, BYTE color, BYTE alpha)
 798          //------------------------------------------------------------------------
 799          /**
 800          * set FOSD Window Alpha color and Amount
 801          *
 802          * r311[3:0] r321[3:0] & r352[]
 803          *
 804          * @todo divide it with AlphaColor & AlphaAmount
 805          */
 806          void FOsdWinAlphaPixel(BYTE winno, BYTE lut, BYTE alpha)
 807          {
 808   1        WORD  index = FOSDWinBase[winno] + FONT_ALPHA;
 809   1      
 810   1        WriteTW88(REG_FOSD_ALPHA_SEL,  lut ); // first, select color index
 811   1        WriteTW88(index, alpha );       // second, write alpha value
 812   1      }
 813          
 814          //array { index , alpha}
 815          #if 0
              //we have a bank issue(we can not use the call by reference on CodeSegment).
              //so, pls use FontOsdBpp3Alpha_setLutOffset() and FOsdWinSetBpp3Alpha()
              void FOsdWinAlphaPixelArray(BYTE winno, BYTE *array, BYTE size)
              {
                WORD index = FOSDWinBase[winno] + FONT_ALPHA;
                BYTE i;
              
                for(i=0; i < size; i++) {
                  WriteTW88(REG_FOSD_ALPHA_SEL, array[i*2]);  // first, select color index
                  WriteTW88(index,   array[i*2+1] );      // second, write alpha value
                }
              }
              #endif
 829          
 830          /**
 831          * set alpah value for 3BPP Alpha font
 832          *
 833          * extern
 834          * BPP3_alpha_lut_offset[].
 835          * BPP3_alpha_value[].
 836          * 
 837          * @param base_lut: start position of LUT
 838          */
 839          void FOsdWinSetBpp3Alpha(BYTE winno, BYTE base_lut)
 840          {
 841   1        WORD index = FOSDWinBase[winno] + FONT_ALPHA;
 842   1        BYTE i;
 843   1      
 844   1        for(i=0; i < 8; i++) {
 845   2          WriteTW88(REG_FOSD_ALPHA_SEL,  base_lut+BPP3_alpha_lut_offset[i] ); // first, select color index
 846   2          WriteTW88(index, BPP3_alpha_value[i] );               // second, write alpha value
 847   2        }
 848   1      }
 849          /**
 850          * set Screen Position
 851          *
 852          * r312[6:4]r313[7:0]  H-Start
 853          * r312[1:0]r314[7:0]  V-Start
 854          */  
 855          void FOsdWinScreenXY(BYTE winno, WORD x, WORD y)
 856          {
 857   1        XDATA WORD index;
 858   1        XDATA BYTE temp;
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 15  

 859   1      
 860   1        index = FOSDWinBase[winno];
 861   1      
 862   1        temp = x >> 8;
 863   1        temp <<= 4;
 864   1        temp += ( y >> 8 );
 865   1        WriteTW88(index+2,  temp );     // upper bit for position x, y
 866   1        WriteTW88(index+3, x );       // position x
 867   1        WriteTW88(index+4, y );       // position y
 868   1      
 869   1        FontOsdInfo.win[winno].sx = x;
 870   1        FontOsdInfo.win[winno].sy = y;
 871   1      }
 872          
 873          /**
 874          * set screen width and height
 875          *
 876          * r315[5:0]     V-Height
 877          * r316[5:0]     H-width
 878          */
 879          void FOsdWinScreenWH(BYTE winno, BYTE w, BYTE h)
 880          {
 881   1        XDATA WORD index;
 882   1      
 883   1        index = FOSDWinBase[winno];
 884   1      
 885   1        WriteTW88(index+5, h );
 886   1        WriteTW88(index+6, w );
 887   1      
 888   1        FontOsdInfo.win[winno].column = w;
 889   1        FontOsdInfo.win[winno].line = h;
 890   1      }
 891          
 892          
 893          //-----------------------------------------------------------------------------
 894          //    WORD FOsdWinGetX(BYTE winno)        : winno 1~4
 895          //    void FOsdWinSetX(BYTE winno, WORD x)  : winno 1~4
 896          //    WORD FOsdWinGetY(BYTE winno)        : winno 1~4
 897          //    void FOsdWinSetY(BYTE winno, WORD y)  : winno 1~4
 898          //    void FOsdWinSetW(BYTE winno, WORD w)  : winno 1~4
 899          //-----------------------------------------------------------------------------
 900          #ifdef SUPPORT_FOSD_MENU
              /**
              * get window x position
              */
              WORD FOsdWinGetX(BYTE winno)
              {
                WORD  Pos;
              
                Pos = ReadTW88(FOSDWinBase[winno]+2)&0x70;
                Pos <<= 4;
                Pos += ReadTW88(FOSDWinBase[winno]+3);
              
                return (Pos);
              }
              
              #if 0
              void FOsdWinSetX(BYTE winno, WORD x)
              {
                WORD index;
              
                //dPrintf("\n\rFOsdWinSetX( %bd, %d )", winno, x );
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 16  

              
                index = FOSDWinBase[winno];
                WriteTW88(index+2, (ReadTW88(index+2)&0x8F) | ((x>>4)&0x70));
                WriteTW88(index+3, x);
              }
              #endif
              
              /**
              * get window Y position
              */
              WORD FOsdWinGetY(BYTE winno)
              {
                WORD index;
                WORD  Pos;
              
                index = FOSDWinBase[winno];
                Pos = ReadTW88(index+2)&0x03;
                Pos <<= 8;
                Pos += ReadTW88(index+4);
                return (Pos);
              }
              
              /**
              * set window Y position
              */
              void FOsdWinSetY(BYTE winno, WORD y)
              {
                WORD index;
              
                //dPrintf("\n\rFOsdWinSetY( %bd, %d )", winno, y );
              
                index = FOSDWinBase[winno];
                WriteTW88(index+2, (ReadTW88(index+2)&0xFC)|(y>>8));
                WriteTW88(index+4, y);
              }
              
              /**
              * set window width
              */
              void FOsdWinSetW(BYTE winno, WORD w)
              {
                WORD  index;
              
                //dPrintf("\n\rFOsdWinSetW( %bd, %d )", winno, w );
              
                index = FOSDWinBase[winno];  //????
                WriteTW88(index+6, w);
              }
              #endif
 970          
 971          //r317[3:0]
 972          //void FOsdWinSetBorderColor(BYTe idx)
 973          
 974          //r318[7]
 975          //void FOsdWinEnableBorder(fOn)
 976          
 977          //r318[4:0]
 978          //void FOsdWinSetBorderWidth(BYTE width)
 979          
 980          //r319[6:0]
 981          //void FOsdWinSetHBorder(BYTE width)
 982          
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 17  

 983          //r31A[6:0]
 984          //void FOsdWinSetVBorder(BYTE width)
 985          
 986          //r31B[7] 3D effect enable
 987          //r31B[6] 3D top effect
 988          //r31B[5] 3D effect level
 989          //      NOTE: 3D need a Border.
 990          //r31B[4] Select BorderOrShadow. 1=Shadow
 991          //r31B[3:0] Shadow Color
 992          
 993          //note:winno 0~3.
 994          #ifdef SUPPORT_FOSD_MENU
              /**
              * set 3DControl
              */
              void FOsdWinSet3DControl(BYTE win, BYTE value)
              {
                WriteTW88(FOSDWinBase[win]+0x0B,value);   
              }
              #endif
1003          
1004          //r31C[7] Enable Shadow
1005          //r31C[4:0] Shadow Width
1006          
1007          //r31C[6]r31D[7:4]    Char H-Space
1008          //r31C[5]r31D[3:0]    Char V-Space
1009          
1010          //r31E[7:4] H/V Border Background Color
1011          
1012          //r31E[3:0] char border/shadow color 
1013          
1014          /**
1015          * set OsdRam Start Address
1016          *
1017          * R3X7[4],R3XF[7:0], WIN1:R317, WIN2:R327, WIN3:R337 WIN4:R347
1018          */
1019          void FOsdWinSetOsdRamStartAddr(BYTE winno, WORD addr)
1020          {
1021   1        WORD index;
1022   1      
1023   1        index = FOSDWinBase[winno];
1024   1      
1025   1        if(addr >=0x100)  WriteTW88(index+0x07, ReadTW88(index+0x07) |  0x10);
1026   1        else        WriteTW88(index+0x07, ReadTW88(index+0x07) & ~0x10);
1027   1        WriteTW88(index+0x0F, (BYTE)addr);
1028   1      
1029   1        FontOsdInfo.win[winno].osdram = addr;
1030   1      }
1031          
1032          
1033          //=============================================================================
1034          // HAL END
1035          //=============================================================================
1036          
1037          
1038          
1039          
1040          //=======================================
1041          // Initialize Functions
1042          //=======================================
1043          
1044          
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 18  

1045          //-------------------------------------------------------------------
1046          /**
1047          * Init FontOSD
1048          */
1049          void FontOsdInit(void)
1050          {
1051   1        BYTE winno;
1052   1        BYTE columns=40;
1053   1        BYTE lines = 1;
1054   1      
1055   1        //TW8836 needs a FOSD ON when it download font.
1056   1        FOsdOnOff(ON, 0); 
1057   1      
1058   1        //download font set & init Multi-BPP location
1059   1        InitFontRamByNum(FONT_NUM_CONGRAY16X28, 0); // set consolas & graynum and calculate 3BPP alpha
1060   1      
1061   1        //init all fontosd windows attributes
1062   1        for(winno = 0; winno < FOSD_MAX_OSDWIN; winno++) {
1063   2          FOsdWinInit(winno);
1064   2      
1065   2          FontOsdInfo.win[winno].bpp1_attr = 0x1A;          //BG|FG
1066   2          FOsdWinAlphaPixel(winno, FOSD_COLOR_IDX_BLANK, 0x0F);   //BG color alpha
1067   2      
1068   2          FOsdWinScreenXY(winno, 0,30*winno);
1069   2          FOsdWinScreenWH(winno, columns, 1/*lines*/);    //0x20, 0x10);    //max 512 = 32x16
1070   2          FOsdWinZoom(winno, 0, 0);       
1071   2          FOsdWinSetOsdRamStartAddr(winno, columns*winno /*text_info->osdram*/);
1072   2        }
1073   1      
1074   1        //clear all OsdRam.
1075   1        FOsdRamClearAll(0x020, 0x0F);
1076   1      }
1077          
1078          
1079          
1080          /* calculated example value.
1081          [01:0] 
1082          [07:43] 
1083          [06:90] 
1084          [04:133] 
1085          [03:180] 
1086          [05:223] 
1087          [02:270] 
1088          [00:313]
1089          */
1090          //code BYTE calculated_3BPP_alpha_table[8] = { 1,7,6,4,3,5,2,0 };
1091          
1092          //read value from FontEditor and place it here.
1093          //code WORD consolas22_16x26_3BPP[8] = {
1094          //  0xFFFF,0x0000,0xDEDB,0x9492,0x6B6D,0xB5B6,0x4A49,0x2124
1095          //}; 
1096          
1097          /**
1098          * init 3BPP Alpha table
1099          *
1100          * after download font.
1101          * prepare alpha table for 3BPP
1102          */
1103          void FOsdInitBpp3AlphaTable(BYTE fCalculate)
1104          {
1105   1        BYTE i,j,k;
1106   1        WORD Y;
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 19  

1107   1        WORD value;
1108   1        WORD alpha_table_Y[8];
1109   1      
1110   1        if(fCalculate==0) {
1111   2          //use the calculated table and save a time.
1112   2          for(i=0; i < 8; i++)
1113   2            BPP3_alpha_lut_offset[i]=FOsdDefPaletteBpp3Alpha[i];  
1114   2        }
1115   1        else {
1116   2          //prepare alpha
1117   2          for(i=0; i < 8; i++) {
1118   3            value= FOsdDefPaletteBpp3[i];
1119   3            //B = value >> 11;
1120   3            //G = (value & 0x07E0) >> 5;
1121   3            //R = value & 0x001F;
1122   3            //Y = B;
1123   3            //Y += (G * 3); //*6 / 2
1124   3            //Y += (R * 3);
1125   3            j = value >> 11;        //B
1126   3            Y = j;
1127   3            j = (value & 0x07E0) >> 5;    //G
1128   3            Y += (j * 3);           //*6 / 2
1129   3            j = value & 0x001F;       //R
1130   3            Y += (j * 3);
1131   3        
1132   3            //dPrintf("\n\ri:%02bx BGR:%04X Y:%d",i,FOsdDefPaletteBpp3[i],Y);
1133   3        
1134   3            if(i) {
1135   4              BPP3_alpha_lut_offset[i]=i;
1136   4              alpha_table_Y[i]=Y;
1137   4        
1138   4              for(j=0; j < i; j++) {
1139   5                if(Y < alpha_table_Y[j]) {
1140   6                  k    =BPP3_alpha_lut_offset[i];
1141   6                  value=alpha_table_Y[i];
1142   6        
1143   6                  BPP3_alpha_lut_offset[i] = BPP3_alpha_lut_offset[j];
1144   6                  alpha_table_Y[i] = alpha_table_Y[j];
1145   6        
1146   6                  BPP3_alpha_lut_offset[j] = k;               
1147   6                  alpha_table_Y[j] = value;
1148   6                  Y = value;
1149   6                }
1150   5              }
1151   4        
1152   4              //dPrintf("\n\r  ");
1153   4              //for(j=0; j <= i; j++) {
1154   4              //  dPrintf(" %bx:%d",BPP3_alpha_lut_offset[j], alpha_table_Y[j]);    
1155   4              //}
1156   4            }
1157   3            else {
1158   4              BPP3_alpha_lut_offset[0]=0;
1159   4              alpha_table_Y[0]=Y;
1160   4            }
1161   3          }
1162   2          //result
1163   2          //dPuts("\n\r3BPP Alpha");
1164   2          //for(i=0; i < 8; i++) {
1165   2          //  dPrintf(" [%bx:%d]",BPP3_alpha_lut_offset[i], alpha_table_Y[i]);
1166   2          //}
1167   2        }
1168   1      }
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 20  

1169          
1170          //=======================================
1171          //=======================================
1172          
1173          
1174          //=======================================
1175          // Windows Functions
1176          //=======================================
1177          
1178          
1179          
1180          /**
1181          * init FOSD Window register
1182          *
1183          * @param winno  from 0 to 3. TW8836 use 0 to 7
1184          * NOTE: OsdRamAddr  from 0 to 511
1185          */
1186          void FOsdWinInit(BYTE winno)
1187          {
1188   1        WORD index;
1189   1      
1190   1        index = FOSDWinBase[winno];
1191   1        //init all fontosd attributes
1192   1        WriteTW88(index, (ReadTW88(index) & 0x7F) | 0x40 );   //FOsdWinEnable(winno, OFF) & Enable Multi-Color
1193   1      
1194   1        WriteTW88(index+0x07, 0x00 );
1195   1        WriteTW88(index+0x08, 0x00 );
1196   1        WriteTW88(index+0x09, 0x00 );
1197   1        WriteTW88(index+0x0A, 0x00 );
1198   1        WriteTW88(index+0x0B, 0x00 );
1199   1        WriteTW88(index+0x0C, 0x00 );
1200   1        WriteTW88(index+0x0D, 0x00 );
1201   1        WriteTW88(index+0x0E, 0x00 );
1202   1        WriteTW88(index+0x0F, 0x00 );
1203   1      
1204   1        //clear alpha
1205   1        FOsdWinAlphaPixel(winno,FOSD_COLOR_IDX_BLANK,0);
1206   1      }
1207          
1208          
1209          
1210          //=======================================
1211          // Palette Functions
1212          //=======================================
1213          /**
1214          * set default Palette color
1215          */
1216          void FOsdSetDefPaletteColor(BYTE mode)
1217          {
1218   1        if(mode==0) {
1219   2          FOsdSetPaletteColorArray(0,                 FOsdHwDefPaletteBpp1,16, 0);
1220   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_ALPHA_A_START, FOsdDefPaletteBpp2,  4, 0);
1221   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_ALPHA_B_START, FOsdDefPaletteBpp2,  4, 0);
1222   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_ALPHA_G_START, FOsdDefPaletteBpp3,  8, 0);
1223   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START-4,     FOsdDefPaletteBpp2,  4, 0);
1224   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START,     FOsdDefPaletteBpp2,  4, 0);
1225   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_START,     FOsdDefPaletteBpp3,  8, 0);
1226   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP4_START,     FOsdDefPaletteBpp4, 16, 0);
1227   2        }
1228   1        else if(mode==1) {
1229   2          FOsdSetPaletteColorArray(0,                 FOsdSwDefPaletteBpp1,8, 0);
1230   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_ALPHA_R_START, FOsdDefPaletteBpp3,8, 0);
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 21  

1231   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_ALPHA_B_START, FOsdDefPaletteBpp3,8, 0);
1232   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_ALPHA_G_START, FOsdDefPaletteBpp3,8, 0);
1233   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START-4,     FOsdDefPaletteBpp2,4, 0);
1234   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START,     FOsdDefPaletteBpp2,4, 0);
1235   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_START,     FOsdDefPaletteBpp3,8, 0);
1236   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP4_START,     FOsdDefPaletteBpp4,16, 0);
1237   2        }
1238   1        else if(mode==2) {
1239   2          FOsdSetPaletteColorArray(0,                 FOsdSwDefPaletteBpp1,16, 0);
1240   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_ALPHA_A_START, FOsdDefPaletteBpp2,4, 0);
1241   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_ALPHA_B_START, FOsdDefPaletteBpp2,4, 0);
1242   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_ALPHA_G_START, FOsdDefPaletteBpp3,8, 0);
1243   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START-4,     FOsdDefPaletteBpp2,4, 0);
1244   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START,     FOsdDefPaletteBpp2,4, 0);
1245   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_START,     FOsdDefPaletteBpp3,8, 0);
1246   2          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP4_START,     FOsdDefPaletteBpp4,16, 0);
1247   2        }
1248   1      }
1249          
1250          
1251          
1252          
1253          
1254          //=======================================
1255          // FontRam Functions
1256          //=======================================
1257          
1258          
1259          
1260          /**
1261          * download font set
1262          *
1263          * the dest font index starts from 0.
1264          *
1265          * width: 12 or 16
1266          * height: 2~32
1267          *
1268          * note: use PCLK.
1269          * turns off FontRAM FIFO and uses PCLK.
1270          *
1271          * @param dest: start addr on FontRam.(0~10*1024) ..Need to Verify
1272          * @param src_loc: location on SpiFlash.
1273          * @param size
1274          */
1275          void FOsdDownloadFontByDMA(WORD dest_loc, DWORD src_loc, WORD size)
1276          {
1277   1      #ifdef DEBUG_FOSD
                dPrintf("\n\rFOsdDownloadFontByDMA(%x,%lx,%x)",dest_loc, src_loc, size);
              #endif
1280   1      
1281   1        //save clock mode & select PCLK
1282   1        WaitVBlank(1);  
1283   1      
1284   1      
1285   1        FOsdFontSetFifo(OFF);             //Turn Off FontRam FIFO.
1286   1        FOsdSetAccessMode(FOSD_ACCESS_FONTRAM);     //FontRam Access
1287   1      
1288   1        //SpiFlashDmaRead(DMA_DEST_FONTRAM, dest_loc, src_loc, size, SPIFLASH_WAIT_READ);
1289   1        SpiFlash_Read_FOsd(src_loc, dest_loc, size); 
1290   1      
1291   1      
1292   1        WaitVBlank(1);  
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 22  

1293   1        FOsdFontSetFifo(ON);            //Turn On FontRam FIFO. return to default
1294   1        FOsdSetAccessMode(FOSD_ACCESS_OSDRAM);    //OsdRam Access Mode. return to default
1295   1      }
1296          
1297          #ifdef SUPPORT_UDFONT
              //use FIFO. We don't need to use PCLK domain.
              //param
              //  unit_size: if 12x18 font, it is a 27 = 12x18/8
              void FOsdDownloadFontBySerial(WORD dest_font_index, BYTE *dat, BYTE unit_size, BYTE unit_num)
              {
                BYTE value;
                BYTE w_cnt;
                BYTE i,j;
                WORD addr;
              
                //assume FontRam FIFO ON.
                FOsdSetAccessMode(FOSD_ACCESS_FONTRAM);   //Select FontRam Access
              
                addr =  dest_font_index;
                w_cnt=0;
                for(i=0; i < unit_num; i++) {
                  if(w_cnt>=(8-2)) {
                    delay1ms(1);
                    w_cnt = 0;
                  }
                  value = ReadTW88(REG304);
                  if(addr & 0x100)  value |=  0x20;   //UPPER256
                  else        value &= ~0x20;
                  WriteTW88(REG304, value);
                  WriteTW88(REG309, (BYTE)addr );     //Font Addr
                  addr++;
                  w_cnt += 2;
              
                  for(j=0; j < unit_size; j++) {
                    WriteTW88(REG30A, *dat++);
                    w_cnt++;
                    if(w_cnt>=8) {
                      delay1ms(1);
                      w_cnt = 0;
                    }
                  }
                }
                FOsdSetAccessMode(FOSD_ACCESS_OSDRAM);    //Select OSDRam Access. restore to default
              }
              #endif
1338          
1339          #ifdef SUPPORT_UDFONT
              void FOsdDownloadUDFontBySerial(void)
              {
                FOsdDownloadFontBySerial(0, &RAMFONTDATA[0][0], 27, 0x80);
              }
              #endif
1345          
1346          /**
1347          * replace FontRam
1348          */
1349          void ReplaceFontRam(WORD dest_font_index, FONT_SPI_INFO_t *font, char *sName)
1350          {
1351   1        WORD addr;
1352   1        dPrintf("\n\rReplaceFontRam(%x,,%s",dest_font_index,sName);
1353   1        addr = dest_font_index *(font->width >> 2) * (font->height >> 1);
1354   1        FOsdDownloadFontByDMA(addr, font->loc, font->size);
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 23  

1355   1      }
1356          
1357          /**
1358          * download fontset and adjust Multi-font start address
1359          */
1360          void InitFontRam(WORD dest_font_index, FONT_SPI_INFO_t *font, char *sName)
1361          {
1362   1        BYTE value;
1363   1        WORD addr;
1364   1      
1365   1      #ifdef DEBUG_FOSD
                dPrintf("\n\rInitFontRam(%x,,%s)",dest_font_index,sName);
              #endif
1368   1        FOsdSetFontWidthHeight(font->width, font->height);
1369   1      
1370   1        //download font
1371   1        addr = dest_font_index *(font->width >> 2) * (font->height >> 1);
1372   1        FOsdDownloadFontByDMA(addr, font->loc, font->size);
1373   1      
1374   1        //assign Multi-Color start address.
1375   1        value = ReadTW88(REG305) & 0xF1;
1376   1        if((font->bpp2 +dest_font_index) & 0x100) value |= 0x02;  // 2bit-multi-font start. 8th address
1377   1        if((font->bpp3 +dest_font_index) & 0x100) value |= 0x04;  // 3bit-multi-font start. 8th address
1378   1        if((font->bpp4 +dest_font_index) & 0x100) value |= 0x08;  // 4bit-multi-font start. 8th address
1379   1        WriteTW88(REG305, value); 
1380   1        WriteTW88(REG30B, (BYTE)(font->bpp2 + dest_font_index) );       // 2bit-multi-font start
1381   1        WriteTW88(REG_FOSD_MADD3, (BYTE)(font->bpp3 +dest_font_index));   // 3bit-multi-font start
1382   1        WriteTW88(REG_FOSD_MADD4, (BYTE)(font->bpp4 +dest_font_index));   // 4bit-multi-font start
1383   1      
1384   1        //link palette
1385   1        FOsdSetPaletteColorArray(0, FOsdHwDefPaletteBpp1,16, 0);
1386   1        if(font->palette_bpp2 != NULL)
1387   1          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP2_START,(WORD *)font->palette_bpp2,4, 0);
1388   1        if(font->palette_bpp3 != NULL)
1389   1          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP3_START,(WORD *)font->palette_bpp3,8, 0);
1390   1        if(font->palette_bpp4 != NULL)
1391   1          FOsdSetPaletteColorArray(FOSD_LUT_MAP_BPP4_START,(WORD *)font->palette_bpp4,16, 0);
1392   1      
1393   1        //..USE_FONTOSDINFO
1394   1        if(sName != NULL) TWstrcpy(FontOsdInfo.font.name,sName);
1395   1        else              TWstrcpy(FontOsdInfo.font.name,"unknown");
1396   1        FontOsdInfo.font.w = font->width;
1397   1        FontOsdInfo.font.h = font->height;
1398   1      
1399   1        FontOsdInfo.font.bpp2 = font->bpp2 +dest_font_index;
1400   1        FontOsdInfo.font.bpp3 = font->bpp3 +dest_font_index;
1401   1        FontOsdInfo.font.bpp4 = font->bpp4 +dest_font_index;
1402   1        FontOsdInfo.font.max  = font->max  +dest_font_index;
1403   1      
1404   1        DumpFontInfo();
1405   1      }
1406          
1407          /**
1408          * test InitFontRam routine
1409          */
1410          void TestInitFontRam(WORD start)
1411          {
1412   1        InitFontRam(start, &consolas16x26_graynum,"gray");      //set default font set
1413   1      }
1414          
1415          
1416          
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 24  

1417          //=====================
1418          // OsdRam function
1419          //=====================
1420          
1421          
1422          
1423          
1424          //========================
1425          // FOsdMsg Functions
1426          //========================
1427          
1428          
1429          
1430          //indicate which font.
1431          
1432          //BYTE FOsdMsg_win;
1433          //BYTE FOsdMsg_sx;
1434          //BYTE FOsdMsg_sy;
1435          
1436          //global
1437          
1438          //110727. Use FIFO with delay
1439          /**
1440          * copy message to OsdRam
1441          */
1442          void FOsdCopyMsgBuff2Osdram(BYTE fOn)
1443          {
1444   1      //  BYTE i;
1445   1        BYTE len;
1446   1        BYTE columns=40;
1447   1        BYTE attr;
1448   1        WORD osdram;
1449   1      
1450   1      #ifdef DEBUG_FOSD
                dPrintf("\n\rFOsdCopyMsgBuff2Osdram(%bx)",fOn);
              #endif
1453   1        len = TWstrlen(FOsdMsgBuff);
1454   1      //  dPrintf("\n\rFOsdCopyMsgBuff2Osdram len:%bd ",len);
1455   1      //  for(i=0; i < len; i++) {
1456   1      //    attr=FOsdMsgBuff[i];
1457   1      //    if(attr >= 0x20 && attr <= 0x7F)
1458   1      //      dPrintf("%c",attr);
1459   1      //    else
1460   1      //    dPrintf(" %02bx ",attr);
1461   1      //  }
1462   1        if(len==0)
1463   1          return;
1464   1        dPrintf(" len:%bx",len);
1465   1      
1466   1        columns = FontOsdInfo.win[FOSD_MSG_WIN].column;
1467   1        attr =    FontOsdInfo.win[FOSD_MSG_WIN].bpp1_attr;
1468   1        osdram =  FontOsdInfo.win[FOSD_MSG_WIN].osdram;
1469   1      
1470   1      //  dPrintf(" col:%bd attr:%02bx osdram:%x ",columns, attr, osdram);
1471   1      
1472   1      
1473   1        //cut end of line
1474   1        FOsdWinScreenWH(FOSD_MSG_WIN, len,1);
1475   1      
1476   1      
1477   1      
1478   1        //print string
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 25  

1479   1        WaitVBlank(1); //pls. finish within one vblank.
1480   1        FOsdRamSetAddrAttr(osdram, attr); //osdram address, fg|bg, mode:auto
1481   1        FOsdRamWriteByteStr(FOsdMsgBuff,len);
1482   1      
1483   1        FOsdWinEnable(FOSD_MSG_WIN,fOn);  //WINn enable
1484   1      }
1485          
1486          /**
1487          * print the indexed message
1488          */
1489          void FOsdIndexMsgPrint(BYTE index)
1490          {
1491   1        if(MenuGetLevel())
1492   1          return;
1493   1      
1494   1        switch(index) {
1495   2        case FOSD_STR0_GOOD:  
1496   2          FOsdSetInputMainString2FOsdMsgBuff(); //GetInputMainString(FOsdMsgBuff);
1497   2          TWstrcat(FOsdMsgBuff,"..Good!");    
1498   2          break;
1499   2        case FOSD_STR1_TW8836:
1500   2          TWstrcpy(FOsdMsgBuff,"Intersil TW8836.");
1501   2          break;
1502   2        case FOSD_STR2_NOSIGNAL:
1503   2          FOsdSetInputMainString2FOsdMsgBuff(); //GetInputMainString(FOsdMsgBuff);
1504   2          TWstrcat(FOsdMsgBuff," No Signal");
1505   2          break;
1506   2        case FOSD_STR3_OUTRANGE:
1507   2          FOsdSetInputMainString2FOsdMsgBuff(); //GetInputMainString(FOsdMsgBuff);
1508   2          TWstrcat(FOsdMsgBuff," Out of Range");    
1509   2          break;
1510   2        case FOSD_STR4_INIT_EEPROM:
1511   2          TWstrcpy(FOsdMsgBuff,"Initialize EEPROM");
1512   2          break;
1513   2        case FOSD_STR5_INPUTMAIN:
1514   2          FOsdSetInputMainString2FOsdMsgBuff(); //GetInputMainString(FOsdMsgBuff);
1515   2          break;
1516   2        default:
1517   2          TWstrcpy(FOsdMsgBuff,"Unknown");
1518   2          break;  
1519   2        }
1520   1        FOsdCopyMsgBuff2Osdram(ON);
1521   1      }
1522          
1523          #define TEST_OSDRAM_ADDR  120 
1524          /**
1525          * dump the Palette table
1526          */
1527          void FOsdDumpPalette(BYTE winno)
1528          {
1529   1        BYTE palette_group;
1530   1      
1531   1        WaitVBlank(1);
1532   1        FOsdWinEnable(winno,OFF); //winno disable
1533   1      
1534   1        FOsdWinScreenXY(winno, 0x70,0); //start 0,0  16 colums 1 line
1535   1        FOsdWinScreenWH(winno, 16, 2);  //start 0,0  16 colums 1 line
1536   1        FOsdWinZoom(winno, 1, 0);     //zoom 1,1
1537   1        FOsdWinAlphaPixel(winno, 1, 0x00);  //BG color alpha => removed
1538   1        FOsdWinMulticolor(winno, ON);
1539   1        FOsdWinSetOsdRamStartAddr(winno,TEST_OSDRAM_ADDR);
1540   1      
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 26  

1541   1        for(palette_group=0; palette_group < 16; palette_group++) {
1542   2          //first line
1543   2          FOsdRamSetAddrAttr(TEST_OSDRAM_ADDR+palette_group, palette_group);
1544   2          FOsdRamSetData(CH_2BPP_BAR);
1545   2      
1546   2          //second line
1547   2          FOsdRamSetAddrAttr(120+palette_group+16, ((palette_group) << 4) | palette_group+1);
1548   2          WriteTW88(REG304,ReadTW88(REG304) & ~0x20);
1549   2          if(palette_group < 0xA) WriteTW88(REG307, '0'+palette_group);
1550   2          else          WriteTW88(REG307, 'A'+palette_group-0x0A);
1551   2      
1552   2          delay1ms(1);
1553   2        }
1554   1      
1555   1        FOsdWinEnable(winno,ON);    //winno enable
1556   1      }
1557          
1558          
1559          //=============================================================================
1560          // 
1561          //=============================================================================
1562          /**
1563          * prepare InputMain String
1564          */
1565          char *GetInputMainString(char *p_itoa_buff)
1566          {
1567   1        BYTE InputMainIndex;
1568   1        BYTE len;
1569   1      
1570   1        InputMainIndex = GetInputMain();
1571   1      
1572   1        switch(InputMainIndex) {
1573   2        case INPUT_CVBS:  TWstrcpy(p_itoa_buff,"CVBS");   break;
1574   2        case INPUT_SVIDEO:  TWstrcpy(p_itoa_buff,"SVIDEO");   break;
1575   2        case INPUT_COMP:  TWstrcpy(p_itoa_buff,"Component");  break;
1576   2        case INPUT_PC:    TWstrcpy(p_itoa_buff,"PC");     break;
1577   2        case INPUT_DVI:   TWstrcpy(p_itoa_buff,"DVI");    break;
1578   2        case INPUT_HDMIPC:  TWstrcpy(p_itoa_buff,"HDMI_PC");  break;
1579   2        case INPUT_HDMITV:  TWstrcpy(p_itoa_buff,"HDMI_TV");  break;
1580   2        case INPUT_BT656: TWstrcpy(p_itoa_buff,"BT656");    break;
1581   2        case INPUT_LVDS:  TWstrcpy(p_itoa_buff,"LVDS");   break;
1582   2        default:      TWstrcpy(p_itoa_buff,"UNKNOWN");  break;
1583   2        }
1584   1        len = TWstrlen(p_itoa_buff);
1585   1        return p_itoa_buff+len;
1586   1      }
1587          
1588          /**
1589          * set InputMain String
1590          *
1591          * for Bank issue
1592          */
1593          void FOsdSetInputMainString2FOsdMsgBuff(void)
1594          {
1595   1        GetInputMainString(FOsdMsgBuff);
1596   1      }
1597          
1598          
1599          //=============================
1600          // comes from FOsdBasic.c
1601          //=============================
1602          //===============================================================================
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 27  

1603          //  void WriteStringToAddr(BYTE addr, BYTE *str, BYTE cnt)
1604          //===============================================================================
1605          
1606          
1607          //FOsdPuts()
1608          //FOsdPutch
1609          
1610          //BKTODO:addr need 9bit
1611          #ifdef SUPPORT_FOSD_MENU
              /**
              * write string to Address
              */
              void WriteStringToAddr(WORD addr, BYTE *str, BYTE cnt)
              {
                BYTE i;
                BYTE w_cnt;
                WORD dat,start;
              
                //Printf("\n\rWriteStringToAddr(%x,,%bx)\n",addr,cnt);
                w_cnt = 0;
                start = 0;
              
                //default::FOsdSetAccessMode(FOSD_ACCESS_OSDRAM);
                FOsdRamSetWriteMode(FOSD_OSDRAM_WRITE_NORMAL);
              
                w_cnt = 2;
              
                for ( i=0; i<cnt; i++ ) {
              
                  if(*str >= 0xF0) {
                    //we have a escape code
                    if(*str == FONT_RAM)    start = FONT_RAM_START;
                    else if(*str == FONT_ROM) start = 0;
                    else if(*str == FONT_2BPP)  start = FONT_2BPP_START;
                    else if(*str == FONT_3BPP)  start = FONT_3BPP_START;
                    else if(*str == FONT_4BPP)  start = FONT_4BPP_START;
                    else            start = 0;
                    str++;
                    continue;
                  }
                  dat = start + *str++;
                  if(w_cnt >=3) {
                    delay1ms(1);
                    w_cnt = 0;
                  }
                  //Printf("A:%X D:%X ",addr,dat);
              
                  //addr
                  FOsdRamSetAddress(addr);
                  //data
                  FOsdRamSetData(dat);
                  //attr
                  if(start==FONT_2BPP_START)
                    WriteTW88(REG308, FOSD_LUT_MAP_BPP2_START >>2);
                  else if(start==FONT_3BPP_START)
                    WriteTW88(REG308, FOSD_LUT_MAP_BPP3_START >>2);
                  else if(start==FONT_4BPP_START)
                    WriteTW88(REG308, FOSD_LUT_MAP_BPP4_START >>2);
                  addr++;
              
                  w_cnt += 5;
                }
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 28  

              }
              #endif
1667          
1668          //===============================================================================
1669          //  void FOsdRamMemsetAttr(BYTE addr, BYTE color, BYTE cnt)
1670          //===============================================================================
1671          #ifdef SUPPORT_FOSD_MENU
              /**
              * write only attr.
              *
              * assume:
              *   - FOSD_ACCESS_OSDRAM.
              * - FIFO on
              * NOTE:FOsdRamFifo has 8 buffer.
              */
              void FOsdRamMemsetAttr(WORD addr, BYTE attr, BYTE len)
              {
                BYTE  i;
                BYTE w_count;
              
                //Printf("\n\rFOsdRamMemsetAttr(%bx,%bx,%bx)",addr,color,cnt);
                FOsdRamSetWriteMode(FOSD_OSDRAM_WRITE_AUTO);
                FOsdRamSetAddress(addr);
                delay1ms(1);
              
                w_count = 0;
                for(i=0; i < len; i++) {
                  WriteTW88(REG308, attr);
                  w_count++;
                  if(w_count==6/*8*/) { //NOTE
                    delay1ms(1);
                    w_count=0;
                  }
                }
              }
              /**
              * write only data.
              *
              * assume:
              * - FOSD_ACCESS_OSDRAM.
              * - FIFO on
              */
              void FOsdRamMemsetData(WORD addr, WORD dat, BYTE len)
              {
                BYTE  i;
                BYTE w_count;
              
                FOsdRamSetWriteMode(FOSD_OSDRAM_WRITE_AUTO);
                FOsdRamSetAddress(addr);
                delay1ms(1);
                
                if(dat < 0x100) WriteTW88(REG304, ReadTW88(REG304)& ~0x20);     // clear Upper 256 it
                else      WriteTW88(REG304, ReadTW88(REG304)| 0x20);      // upper 256
                w_count = 1;
                for(i=0; i < len; i++) {
                  WriteTW88(REG307, (BYTE)dat);
                  w_count++;
                  if(w_count==6/*8*/) { //NOTE
                    delay1ms(1);
                    w_count=0;
                  }
                }
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 29  

              }
              /**
              * memset for OsdRam
              */
              void FOsdRamMemset(WORD addr, WORD dat, BYTE attr, BYTE len)
              {
                BYTE  i;
                BYTE w_count;
              
                FOsdRamSetAddrAttr(addr,attr);
                delay1ms(1);
                
                if(dat < 0x100) WriteTW88(REG304, ReadTW88(REG304)& ~0x20);     // clear Upper 256 it
                else      WriteTW88(REG304, ReadTW88(REG304)| 0x20);      // upper 256
                w_count = 1;
                for(i=0; i < len; i++) {
                  WriteTW88(REG307, (BYTE)dat);
                  w_count++;
                  if(w_count==6/*8*/) { //NOTE
                    delay1ms(1);
                    w_count=0;
                  }
                }
              }
              #endif
1752          
1753          /**
1754          * clear all OsdRam data
1755          *
1756          * NOTE:I will use FOsdRamClearAllData.
1757          * ex:
1758          * FOsdRamSetAttr(attr);
1759          * FOsdRamClearAllData();
1760          */      
1761          void FOsdRamClearAll(WORD dat, BYTE attr)
1762          {
1763   1        WORD i;
1764   1        FOsdRamSetFifo(OFF,0);
1765   1        FOsdRamSetAddrAttr(0, attr);
1766   1        if(dat&0x100) WriteTW88(REG304,ReadTW88(REG304) |  0x20); 
1767   1        else      WriteTW88(REG304,ReadTW88(REG304) & ~0x20);
1768   1        for(i=0; i < FOSD_MAX_OSDRAM_SIZE; i++) {
1769   2          WriteTW88(REG307, dat);
1770   2        }
1771   1        FOsdRamSetFifo(ON,1);   //with vdelay 1
1772   1      }
1773          
1774          
1775          //=============================================================================
1776          //      Init Menu Window Data initialize 
1777          //=============================================================================
1778          #ifdef SUPPORT_FOSD_MENU
              // counter
              //    reg win
              //    data
              // 0 
              /**
              * init FOSD Menu Window
              */
              void InitFOsdMenuWindow(BYTE *ptr)
              {
                WORD index;
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 30  

                BYTE data_cnt;
                  
                //debug message
              #if 0
                data_cnt = *ptr;    //read counter
                  while( data_cnt ) {
                  ptr++;
                  dPrintf("\n\rOSD data down counts: %bd, WindowNo: %bd", data_cnt, *ptr);
                  index = FOSDWinBase[*ptr];        // start register address
                  ptr++;
                  do {
                    dPrintf("\n\rOSD data down: 0x%03x - 0x%02bx", index, *ptr);
                    index++; 
                    ptr++;
                    data_cnt--;
                  } while(data_cnt);
                  data_cnt = *ptr;  //read counter
                  };
              #endif
              
              
                data_cnt = *ptr;    //read counter
                  while( data_cnt ) {
                  ptr++;
                  index = FOSDWinBase[*ptr];        // start register address
                  ptr++;
                  do {
                    WriteTW88(index, *ptr );
                    index++; 
                    ptr++;
                    data_cnt--;
                  } while(data_cnt);
                  data_cnt = *ptr;  //read counter
                  };
              }
              #endif
1825          
1826          
1827          
1828          
1829          //=============================================================================
1830          //           void FontLUT( void )
1831          //=============================================================================
1832          #ifdef SUPPORT_FOSD_MENU
              //Bank issue  
              void FOsdDefaultLUT( void )
              {
                FOsdSetPaletteColorArray(0,FOsdHwDefPaletteBpp1,16, 1); //with 1 vdelay
              }
              #endif
1839          
1840          
1841          
1842          
1843          //=============================================================================
1844          //=============================================================================
1845          /**
1846          * init FontRam by number
1847          *
1848          * bank issue
1849          */
1850          void InitFontRamByNum(BYTE FontMode, WORD start)
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 31  

1851          {
1852   1        switch ( FontMode ) {
1853   2          case 0:
1854   2            InitFontRam(start, &default_font,"def");
1855   2            //FOsdSetDefPaletteColor(0);
1856   2            break;
1857   2          case 1:
1858   2            //InitFontRam(0, &SPI_FONT1_TEMP, "FONT1");
1859   2            //FOsdSetPaletteColorArray(16, SPI_FONT1, 40 , 1);
1860   2            InitFontRam(start, &consolas16x26_606C90, "con");
1861   2            break;
1862   2          case 2:
1863   2            //InitFontRam(0, &SPI_LOGO_TEMP, "LOGO");
1864   2            InitFontRam(start, &consolas16x26_graynum,"con+gray");
1865   2            FOsdInitBpp3AlphaTable(0);
1866   2            break;
1867   2          case 3:
1868   2            InitFontRam(start, &consolas16x26_606C90, "con");
1869   2            InitFontRam(start+0x80, &consolas16x26_graynum,"con+gray");
1870   2            FOsdInitBpp3AlphaTable(0);
1871   2            //FOsdSetDefPaletteColor(1);
1872   2            break;
1873   2          case 4:
1874   2            InitFontRam(start, &default_font,"def");
1875   2            ReplaceFontRam(start+0xA0, &kor_font,"def+kor");
1876   2            break;
1877   2          default:
1878   2            //dPuts("\n\rDOWNLOAD SPI_FONT0");
1879   2            //InitFontRam(0, &SPI_FONT0_TEMP,"FONT0");
1880   2            InitFontRam(start, &default_font,"def");
1881   2            break;
1882   2        }
1883   1      }
1884          /**
1885          * print Font Info
1886          */
1887          static void FontInfo(WORD start, FONT_SPI_INFO_t *font)
1888          {
1889   1        BYTE i;
1890   1        WORD *wptr;
1891   1      
1892   1        Printf("\n\rLoc:%lx",font->loc );
1893   1        Printf(" size:%x",font->size);
1894   1        Printf(" %bdx%bd",font->width, font->height);
1895   1        Printf(" 2BPP:%x 3BPP:%x 4BPP:%x MAX:%x",font->bpp2+start,font->bpp3+start,font->bpp4+start,font->max+sta
             -rt);
1896   1        if(font->palette_bpp2 != NULL) {
1897   2          Printf("\n\r\t2BPP:");
1898   2          wptr = (WORD *)font->palette_bpp2;
1899   2          for(i=0; i < 4; i++)
1900   2            Printf("%04x ",*wptr++);
1901   2        }
1902   1        if(font->palette_bpp3 != NULL) {
1903   2          Printf("\n\r\t3BPP:");
1904   2          wptr = (WORD *)font->palette_bpp3;
1905   2          for(i=0; i < 8; i++)
1906   2            Printf("%04x ",*wptr++);
1907   2        }
1908   1        if(font->palette_bpp4 != NULL) {
1909   2          Printf("\n\r\t4BPP:");
1910   2          wptr = (WORD *)font->palette_bpp4;
1911   2          for(i=0; i < 8; i++)
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 32  

1912   2            Printf("%04x ",*wptr++);
1913   2          Printf("\n\r\t    :");
1914   2          for(i=0; i < 8; i++)
1915   2            Printf("%04x ",*wptr++);
1916   2        }
1917   1      }
1918          
1919          /**
1920          * print Font Info by number
1921          */
1922          void FontInfoByNum(BYTE FontMode)
1923          {
1924   1        switch ( FontMode ) {
1925   2          case 0: 
1926   2            Puts("\n\rdefailt_font");
1927   2            FontInfo(0, &default_font);     
1928   2            break;
1929   2          case 1:
1930   2            Puts("\n\rconsolas");
1931   2            FontInfo(0, &consolas16x26_606C90);
1932   2            break;
1933   2          case 2:
1934   2            Puts("\n\rconsolas_graynum");
1935   2            FontInfo(0, &consolas16x26_graynum);
1936   2            break;
1937   2          case 3:
1938   2            Puts("\n\rconsolas+graynum");
1939   2            FontInfo(0, &consolas16x26_606C90);
1940   2            FontInfo(0+0x80, &consolas16x26_graynum);
1941   2            break;
1942   2          case 4:
1943   2            Puts("\n\rdef+kor");
1944   2            FontInfo(0, &default_font);
1945   2            FontInfo(0+0xA0, &kor_font);
1946   2            break;
1947   2          default:
1948   2            break;
1949   2        }
1950   1      }
1951          /**
1952          * dump current downloaded font
1953          */
1954          void DumpFont(void)
1955          {
1956   1        WORD start,next,size;
1957   1        WORD dat,addr;
1958   1        BYTE value;
1959   1        BYTE w_cnt;
1960   1        WORD Y;
1961   1      
1962   1        Printf("\n\rname:%s", FontOsdInfo.font.name);
1963   1        Printf(" %bdx%bd",  FontOsdInfo.font.w,FontOsdInfo.font.h);
1964   1      
1965   1        //WIN0 for 1BPP
1966   1        FOsdWinInit(0);
1967   1        start = 0;
1968   1        next = FontOsdInfo.font.bpp2;
1969   1        size = next - start;
1970   1        Printf("\n\r1BPP start:%d end:%d size:%d",start,next-1,size);
1971   1        FOsdRamSetAddrAttr(start, 0x0F);
1972   1        delay1ms(1);
1973   1        w_cnt = 0;
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 33  

1974   1        for(addr=0; addr < next; addr++) {
1975   2          FOsdRamSetData(addr); //same as data
1976   2          w_cnt++;
1977   2          if(w_cnt==4) {
1978   3            w_cnt = 0;
1979   3            delay1ms(1);
1980   3          }
1981   2        }
1982   1        FOsdWinScreenXY(0, 0,0);
1983   1        FOsdWinScreenWH(0, (size >=16 ? 16: size), (size >> 4) + (size & 0x0F ? 1 : 0));  Y = ((size >> 4) + 1)* F
             -ontOsdInfo.font.h + 10;
1984   1        FOsdWinZoom(0, 1/*0*/,0);
1985   1        FOsdWinMulticolor(0, ON);
1986   1        FOsdWinSetOsdRamStartAddr(0,start);
1987   1        FOsdWinEnable(0, ON);
1988   1      
1989   1        //WIN1 for 2BPP
1990   1        FOsdWinInit(1);
1991   1        start = next;
1992   1        next = FontOsdInfo.font.bpp3;
1993   1        size = next - start;
1994   1        size /= 2;
1995   1        Printf("\n\r2BPP start:%d end:%d size:%d",start,next,size);
1996   1        FOsdRamSetAddrAttr(start, 36>>2);
1997   1        for(addr=start,dat=start; dat < next; addr++,dat+=2) {
1998   2          FOsdRamSetAddress(addr);
1999   2          FOsdRamSetAttr(36>>2);
2000   2          FOsdRamSetAddress(addr);
2001   2          FOsdRamSetData(dat);  
2002   2          delay1ms(1);
2003   2        }
2004   1        FOsdWinScreenXY(1, 0,Y);
2005   1        FOsdWinScreenWH(1, (size >=16 ? 16: size), (size >> 4) + (size & 0x0F ? 1 : 0));  Y += ((size >> 4) + 1)* 
             -FontOsdInfo.font.h + 10;
2006   1        FOsdWinZoom(1, 1/*0*/,0);
2007   1        FOsdWinMulticolor(1, ON);
2008   1        FOsdWinSetOsdRamStartAddr(1,start);
2009   1        FOsdWinEnable(1, ON);
2010   1      
2011   1        //WIN2 for 3BPP
2012   1        FOsdWinInit(2);
2013   1        start = next;
2014   1        next = FontOsdInfo.font.bpp4;
2015   1        size = next - start;
2016   1        size /= 3;
2017   1        Printf("\n\r3BPP start:%d end:%d size:%d",start,next,size);
2018   1        FOsdRamSetWriteMode(FOSD_OSDRAM_WRITE_NORMAL);
2019   1        for(addr=start,dat=start; dat < next; addr++, dat+=3) {
2020   2          FOsdRamSetAddress(addr);
2021   2          FOsdRamSetAttr(40>>2);
2022   2          FOsdRamSetAddress(addr);
2023   2          FOsdRamSetData(dat);  
2024   2          delay1ms(1);
2025   2        }
2026   1        FOsdWinScreenXY(2, 0,Y);
2027   1        FOsdWinScreenWH(2, (size >=16 ? 16: size), (size >> 4) + (size & 0x0F ? 1 : 0));  Y += ((size >> 4) + 1)* 
             -FontOsdInfo.font.h + 10;
2028   1        FOsdWinZoom(2, 1/*0*/,0);
2029   1        FOsdWinMulticolor(2, ON);
2030   1        FOsdWinSetOsdRamStartAddr(2,start);
2031   1        FOsdWinEnable(2, ON);
2032   1      
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 34  

2033   1      
2034   1        //WIN3 for 4BPP
2035   1        FOsdWinInit(3);
2036   1        start = next;
2037   1        value = ReadTW88(REG_FOSD_MUL_CON) & 0x7F; //bytes per font
2038   1        next = 10*1024 / value;
2039   1        size = next - start;
2040   1        size /= 4;
2041   1        Printf("\n\r4BPP start:%d end:%d size:%d",start,next,size);
2042   1        FOsdRamSetAddrAttr(start, 48>>2);
2043   1        for(addr=start,dat=start; dat < next; addr++, dat+=4) {
2044   2          FOsdRamSetAddress(addr);
2045   2          FOsdRamSetAttr(48>>2);
2046   2          FOsdRamSetAddress(addr);
2047   2          FOsdRamSetData(dat);  
2048   2          delay1ms(1);
2049   2        }
2050   1        FOsdWinScreenXY(3, 0,Y);
2051   1        FOsdWinScreenWH(3, (size >=16 ? 16: size), (size >> 4) + (size & 0x0F ? 1 : 0));
2052   1        FOsdWinZoom(3, 2,3/*0,0*/);
2053   1        FOsdWinMulticolor(3, ON);
2054   1        FOsdWinSetOsdRamStartAddr(3,start);
2055   1        FOsdWinEnable(3, ON);
2056   1      }
2057          
2058          
2059          
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 35  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com0102 (BEGIN)
0000         L?0259:
0000         L?0260:
0000 759300      E     MOV     DPX,#?C?XDATASEG
0003 E500        E     MOV     A,regTW88+01H
0005 2404              ADD     A,#04H
0007         L?0261:
0007 F582              MOV     DPL,A
0009 E500        E     MOV     A,regTW88
000B 3403              ADDC    A,#03H
000D F583              MOV     DPH,A
000F 759300      E     MOV     DPX,#?C?XDATASEG
0012 22                RET     
0013         L?0262:
0013 2407              ADD     A,#07H
0015         L?0263:
0015 FD                MOV     R5,A
0016 E4                CLR     A
0017 3E                ADDC    A,R6
0018         L?0264:
0018 FC                MOV     R4,A
0019 759300      E     MOV     DPX,#?C?XDATASEG
001C E500        E     MOV     A,regTW88+01H
001E 2D                ADD     A,R5
001F         L?0265:
001F F582              MOV     DPL,A
0021 E500        E     MOV     A,regTW88
0023 3C                ADDC    A,R4
0024 F583              MOV     DPH,A
0026 759300      E     MOV     DPX,#?C?XDATASEG
0029 22                RET     
002A         L?0266:
002A         L?0267:
002A EF                MOV     A,R7
002B         L?0268:
002B F0                MOVX    @DPTR,A
002C         L?0269:
002C 90000000    R     MOV     DPTR,#font
0030         L?0270:
0030 E0                MOVX    A,@DPTR
0031 FB                MOV     R3,A
0032 A3                INC     DPTR
0033 E0                MOVX    A,@DPTR
0034 FA                MOV     R2,A
0035 A3                INC     DPTR
0036 E0                MOVX    A,@DPTR
0037 22                RET     
0038         L?0271:
0038 EF                MOV     A,R7
0039 240F              ADD     A,#0FH
003B         L?0272:
003B FF                MOV     R7,A
003C E4                CLR     A
003D 3E                ADDC    A,R6
003E         L?0273:
003E FE                MOV     R6,A
003F         L?0274:
003F 759300      E     MOV     DPX,#?C?XDATASEG
0042 E500        E     MOV     A,regTW88+01H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 36  

0044 2F                ADD     A,R7
0045         L?0275:
0045 F582              MOV     DPL,A
0047 E500        E     MOV     A,regTW88
0049 3E                ADDC    A,R6
004A F583              MOV     DPH,A
004C 759300      E     MOV     DPX,#?C?XDATASEG
004F 22                RET     
0050         L?0277:
0050 F0                MOVX    @DPTR,A
0051 A3                INC     DPTR
0052 EB                MOV     A,R3
0053 F0                MOVX    @DPTR,A
0054         L?0278:
0054 A907              MOV     R1,AR7
0056         L?0279:
0056 E9                MOV     A,R1
0057         L?0280:
0057 25E0              ADD     A,ACC
0059 2400        R     ADD     A,#LOW FOSDWinBase
005B F582              MOV     DPL,A
005D E4                CLR     A
005E 3400        R     ADDC    A,#HIGH FOSDWinBase
0060 F583              MOV     DPH,A
0062 759300      E     MOV     DPX,#?C?CODESEG
0065 22                RET     
0066         L?0281:
0066         L?0282:
0066 7B00        R     MOV     R3,#MBYTE FOsdDefPaletteBpp3
0068 7A00        R     MOV     R2,#HIGH FOsdDefPaletteBpp3
006A 7900        R     MOV     R1,#LOW FOsdDefPaletteBpp3
006C         L?0283:
006C 7408              MOV     A,#08H
006E         L?0284:
006E 90000000    R     MOV     DPTR,#?_FOsdSetPaletteColorArray?BYTE+04H
0072 F0                MOVX    @DPTR,A
0073 E4                CLR     A
0074 A3                INC     DPTR
0075 F0                MOVX    @DPTR,A
0076 22                RET     
0077         L?0285:
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 FA                MOV     R2,A
007A A3                INC     DPTR
007B E0                MOVX    A,@DPTR
007C F9                MOV     R1,A
007D 110000      E     ACALL   ?C?LLDPTR
0080 90000000    R     MOV     DPTR,#?_FOsdDownloadFontByDMA?BYTE+02H
0084 110000      E     ACALL   ?C?LSTXDATA
0087 E9                MOV     A,R1
0088         L?0286:
0088 2404              ADD     A,#04H
008A         L?0287:
008A F9                MOV     R1,A
008B E4                CLR     A
008C 3A                ADDC    A,R2
008D FA                MOV     R2,A
008E 110000      E     ACALL   ?C?ILDPTR
0091 FF                MOV     R7,A
0092 22                RET     
0093         L?0290:
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 37  

0093 13                RRC     A
0094 13                RRC     A
0095 543F              ANL     A,#03FH
0097 FF                MOV     R7,A
0098 7E00              MOV     R6,#00H
009A E0                MOVX    A,@DPTR
009B FC                MOV     R4,A
009C A3                INC     DPTR
009D E0                MOVX    A,@DPTR
009E FD                MOV     R5,A
009F 110000      E     ACALL   ?C?IMUL
00A2 A3                INC     DPTR
00A3         L?0291:
00A3 A3                INC     DPTR
00A4 E0                MOVX    A,@DPTR
00A5 FA                MOV     R2,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 2407              ADD     A,#07H
00AA         L?0292:
00AA F9                MOV     R1,A
00AB E4                CLR     A
00AC 3A                ADDC    A,R2
00AD FA                MOV     R2,A
00AE 010000      E     AJMP    ?C?CLDPTR
00B1         L?0295:
00B1         L?0296:
00B1 90000000    R     MOV     DPTR,#size
00B5 E0                MOVX    A,@DPTR
00B6 FA                MOV     R2,A
00B7 A3                INC     DPTR
00B8 E0                MOVX    A,@DPTR
00B9 FB                MOV     R3,A
00BA EA                MOV     A,R2
00BB C4                SWAP    A
00BC F8                MOV     R0,A
00BD 54F0              ANL     A,#0F0H
00BF C8                XCH     A,R0
00C0 EB                MOV     A,R3
00C1 C4                SWAP    A
00C2 540F              ANL     A,#0FH
00C4 48                ORL     A,R0
00C5 FF                MOV     R7,A
00C6 EB                MOV     A,R3
00C7 540F              ANL     A,#0FH
00C9 7E00              MOV     R6,#00H
00CB 22                RET     
00CC         L?0297:
00CC         L?0298:
00CC F9                MOV     R1,A
00CD E4                CLR     A
00CE 3A                ADDC    A,R2
00CF FA                MOV     R2,A
00D0 110000      E     ACALL   ?C?PLDPTR
00D3 90000000    R     MOV     DPTR,#wptr
00D7         L?0299:
00D7 EB                MOV     A,R3
00D8         L?0300:
00D8 F0                MOVX    @DPTR,A
00D9 A3                INC     DPTR
00DA EA                MOV     A,R2
00DB F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 38  

00DC A3                INC     DPTR
00DD E9                MOV     A,R1
00DE F0                MOVX    @DPTR,A
00DF 22                RET     
00E0         L?0301:
00E0         L?0302:
00E0 90000000    R     MOV     DPTR,#dest_font_index
00E4 A3                INC     DPTR
00E5         L?0303:
00E5 E0                MOVX    A,@DPTR
00E6 2F                ADD     A,R7
00E7         L?0304:
00E7 FF                MOV     R7,A
00E8 759300      E     MOV     DPX,#?C?XDATASEG
00EB E500        E     MOV     A,regTW88+01H
00ED 22                RET     
00EE         L?0305:
00EE         L?0306:
00EE 7B00        R     MOV     R3,#MBYTE FOsdDefPaletteBpp2
00F0 7A00        R     MOV     R2,#HIGH FOsdDefPaletteBpp2
00F2 7900        R     MOV     R1,#LOW FOsdDefPaletteBpp2
00F4         L?0307:
00F4 7404              MOV     A,#04H
00F6         L?0308:
00F6 90000000    R     MOV     DPTR,#?_FOsdSetPaletteColorArray?BYTE+04H
00FA F0                MOVX    @DPTR,A
00FB E4                CLR     A
00FC A3                INC     DPTR
00FD F0                MOVX    @DPTR,A
00FE 22                RET     
00FF         L?0309:
00FF E0                MOVX    A,@DPTR
0100 FF                MOV     R7,A
0101         L?0310:
0101 ED                MOV     A,R5
0102         L?0311:
0102 25E0              ADD     A,ACC
0104 2400        R     ADD     A,#LOW alpha_table_Y
0106 F582              MOV     DPL,A
0108 E4                CLR     A
0109 3400        R     ADDC    A,#HIGH alpha_table_Y
010B F583              MOV     DPH,A
010D 759300      E     MOV     DPX,#?C?XDATASEG
0110 22                RET     
0111         L?0312:
0111 110000      R     ACALL   _FOsdRamSetAddrAttr
0114         L?0313:
0114 90000000    R     MOV     DPTR,#start
0118 E0                MOVX    A,@DPTR
0119 FE                MOV     R6,A
011A A3                INC     DPTR
011B E0                MOVX    A,@DPTR
011C FF                MOV     R7,A
011D 90000000    R     MOV     DPTR,#addr
0121 EE                MOV     A,R6
0122 F0                MOVX    @DPTR,A
0123 A3                INC     DPTR
0124 EF                MOV     A,R7
0125 F0                MOVX    @DPTR,A
0126 90000000    R     MOV     DPTR,#dat
012A EE                MOV     A,R6
012B F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 39  

012C A3                INC     DPTR
012D EF                MOV     A,R7
012E F0                MOVX    @DPTR,A
012F 22                RET     
0130         L?0314:
0130 F0                MOVX    @DPTR,A
0131 A3                INC     DPTR
0132 EB                MOV     A,R3
0133 F0                MOVX    @DPTR,A
0134 7400        R     MOV     A,#LOW BPP3_alpha_lut_offset
0136 2C                ADD     A,R4
0137         L?0315:
0137 F582              MOV     DPL,A
0139 E4                CLR     A
013A 3400        R     ADDC    A,#HIGH BPP3_alpha_lut_offset
013C F583              MOV     DPH,A
013E 759300      E     MOV     DPX,#?C?XDATASEG
0141 22                RET     
0142         L?0317:
0142 ED                MOV     A,R5
0143 2F                ADD     A,R7
0144 FE                MOV     R6,A
0145 EC                MOV     A,R4
0146 35F0              ADDC    A,B
0148 F0                MOVX    @DPTR,A
0149 A3                INC     DPTR
014A CE                XCH     A,R6
014B F0                MOVX    @DPTR,A
014C 22                RET     
014D         L?0318:
014D 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
0151 F0                MOVX    @DPTR,A
0152 A3                INC     DPTR
0153 22                RET     
0154         L?0320:
0154         L?0321:
0154 90000000    R     MOV     DPTR,#next
0158 E0                MOVX    A,@DPTR
0159 FE                MOV     R6,A
015A A3                INC     DPTR
015B E0                MOVX    A,@DPTR
015C FF                MOV     R7,A
015D C3                CLR     C
015E 90000000    R     MOV     DPTR,#dat+01H
0162 E0                MOVX    A,@DPTR
0163 9F                SUBB    A,R7
0164 90000000    R     MOV     DPTR,#dat
0168 E0                MOVX    A,@DPTR
0169 9E                SUBB    A,R6
016A 22                RET     
016B         L?0322:
016B 2410              ADD     A,#010H
016D         L?0323:
016D F9                MOV     R1,A
016E E4                CLR     A
016F 3A                ADDC    A,R2
0170 FA                MOV     R2,A
0171 110000      E     ACALL   ?C?PLDPTR
0174 E9                MOV     A,R1
0175 4A                ORL     A,R2
0176 4B                ORL     A,R3
0177 22                RET     
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 40  

0178         L?0324:
0178 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
017C F0                MOVX    @DPTR,A
017D A3                INC     DPTR
017E 22                RET     
017F         L?0325:
017F ED                MOV     A,R5
0180 2F                ADD     A,R7
0181 FE                MOV     R6,A
0182 EC                MOV     A,R4
0183 35F0              ADDC    A,B
0185 F0                MOVX    @DPTR,A
0186 A3                INC     DPTR
0187 CE                XCH     A,R6
0188 F0                MOVX    @DPTR,A
0189 22                RET     
018A         L?0326:
018A 90000000    R     MOV     DPTR,#start
018E E0                MOVX    A,@DPTR
018F FE                MOV     R6,A
0190 A3                INC     DPTR
0191 E0                MOVX    A,@DPTR
0192 FF                MOV     R7,A
0193 90000000    R     MOV     DPTR,#?_InitFontRam?BYTE+05H
0197 7400        R     MOV     A,#MBYTE ?SC_244
0199 F0                MOVX    @DPTR,A
019A A3                INC     DPTR
019B 7400        R     MOV     A,#HIGH ?SC_244
019D F0                MOVX    @DPTR,A
019E A3                INC     DPTR
019F 7400        R     MOV     A,#LOW ?SC_244
01A1 F0                MOVX    @DPTR,A
01A2         L?0327:
01A2 7B00        E     MOV     R3,#MBYTE consolas16x26_606C90
01A4 7A00        E     MOV     R2,#HIGH consolas16x26_606C90
01A6 7900        E     MOV     R1,#LOW consolas16x26_606C90
01A8 22                RET     
01A9         L?0328:
01A9 90000000    R     MOV     DPTR,#start
01AD E0                MOVX    A,@DPTR
01AE FE                MOV     R6,A
01AF A3                INC     DPTR
01B0 E0                MOVX    A,@DPTR
01B1 FF                MOV     R7,A
01B2 90000000    R     MOV     DPTR,#?_InitFontRam?BYTE+05H
01B6 7400        R     MOV     A,#MBYTE ?SC_240
01B8 F0                MOVX    @DPTR,A
01B9 A3                INC     DPTR
01BA 7400        R     MOV     A,#HIGH ?SC_240
01BC F0                MOVX    @DPTR,A
01BD A3                INC     DPTR
01BE 7400        R     MOV     A,#LOW ?SC_240
01C0 F0                MOVX    @DPTR,A
01C1         L?0329:
01C1 7B00        E     MOV     R3,#MBYTE default_font
01C3 7A00        E     MOV     R2,#HIGH default_font
01C5 7900        E     MOV     R1,#LOW default_font
01C7 22                RET     
01C8         L?0330:
01C8 FF                MOV     R7,A
01C9         L?0331:
01C9 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 41  

01CA FC                MOV     R4,A
01CB         L?0332:
01CB A3                INC     DPTR
01CC E0                MOVX    A,@DPTR
01CD 759300      E     MOV     DPX,#?C?XDATASEG
01D0 2500        E     ADD     A,regTW88+01H
01D2 22                RET     
01D3         L?0333:
01D3 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
01D7 F0                MOVX    @DPTR,A
01D8 A3                INC     DPTR
01D9 22                RET     
01DA         L?0335:
01DA         L?0336:
01DA 90000000    R     MOV     DPTR,#addr
01DE E0                MOVX    A,@DPTR
01DF FE                MOV     R6,A
01E0 A3                INC     DPTR
01E1 E0                MOVX    A,@DPTR
01E2 FF                MOV     R7,A
01E3 22                RET     
01E4         L?0337:
01E4         L?0338:
01E4 110000      R     ACALL   _FOsdWinMulticolor
01E7 90000000    R     MOV     DPTR,#start
01EB E0                MOVX    A,@DPTR
01EC FC                MOV     R4,A
01ED A3                INC     DPTR
01EE E0                MOVX    A,@DPTR
01EF FD                MOV     R5,A
01F0 22                RET     
01F1         L?0339:
01F1         L?0340:
01F1 E4                CLR     A
01F2 F0                MOVX    @DPTR,A
01F3 90000000    R     MOV     DPTR,#index
01F7 E0                MOVX    A,@DPTR
01F8 FE                MOV     R6,A
01F9 A3                INC     DPTR
01FA E0                MOVX    A,@DPTR
01FB FF                MOV     R7,A
01FC 22                RET     
01FD         L?0341:
01FD 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
0201 F0                MOVX    @DPTR,A
0202 A3                INC     DPTR
0203 22                RET     
0204         L?0343:
0204 75F003            MOV     B,#03H
0207 A4                MUL     AB
0208 FF                MOV     R7,A
0209 AEF0              MOV     R6,B
020B 90000000    R     MOV     DPTR,#Y+01H
020F E0                MOVX    A,@DPTR
0210 2F                ADD     A,R7
0211         L?0344:
0211 F0                MOVX    @DPTR,A
0212 90000000    R     MOV     DPTR,#Y
0216 E0                MOVX    A,@DPTR
0217 22                RET     
0218         L?0345:
0218         L?0346:
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 42  

0218 90000000    R     MOV     DPTR,#winno
021C E0                MOVX    A,@DPTR
021D FF                MOV     R7,A
021E 22                RET     
021F         L?0347:
021F 2F                ADD     A,R7
0220 FE                MOV     R6,A
0221 EC                MOV     A,R4
0222 35F0              ADDC    A,B
0224 F0                MOVX    @DPTR,A
0225 A3                INC     DPTR
0226 CE                XCH     A,R6
0227 F0                MOVX    @DPTR,A
0228         L?0348:
0228 90000000    R     MOV     DPTR,#font
022C A3                INC     DPTR
022D E0                MOVX    A,@DPTR
022E FA                MOV     R2,A
022F A3                INC     DPTR
0230 E0                MOVX    A,@DPTR
0231 22                RET     
0232         L?0349:
0232 F0                MOVX    @DPTR,A
0233         L?0350:
0233 90000000    R     MOV     DPTR,#font
0237 A3                INC     DPTR
0238 E0                MOVX    A,@DPTR
0239 FA                MOV     R2,A
023A A3                INC     DPTR
023B E0                MOVX    A,@DPTR
023C 22                RET     
023D         L?0351:
023D         L?0352:
023D 759300      E     MOV     DPX,#?C?XDATASEG
0240 E4                CLR     A
0241 2500        E     ADD     A,regTW88+01H
0243 22                RET     
0244         L?0353:
0244         L?0354:
0244 E0                MOVX    A,@DPTR
0245 FE                MOV     R6,A
0246 A3                INC     DPTR
0247         L?0355:
0247 E0                MOVX    A,@DPTR
0248 FF                MOV     R7,A
0249 E9                MOV     A,R1
024A 75F00B            MOV     B,#0BH
024D A4                MUL     AB
024E 22                RET     
024F         L?0356:
024F 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
0253 F0                MOVX    @DPTR,A
0254 A3                INC     DPTR
0255 22                RET     
0256         L?0358:
0256         L?0359:
0256 E4                CLR     A
0257 93                MOVC    A,@A+DPTR
0258 FE                MOV     R6,A
0259 7401              MOV     A,#01H
025B 93                MOVC    A,@A+DPTR
025C FF                MOV     R7,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 43  

025D 22                RET     
025E         L?0360:
025E E0                MOVX    A,@DPTR
025F FC                MOV     R4,A
0260 A3                INC     DPTR
0261 E0                MOVX    A,@DPTR
0262 FD                MOV     R5,A
0263 90000000    R     MOV     DPTR,#next
0267 EC                MOV     A,R4
0268 F0                MOVX    @DPTR,A
0269 A3                INC     DPTR
026A ED                MOV     A,R5
026B F0                MOVX    @DPTR,A
026C C3                CLR     C
026D 9F                SUBB    A,R7
026E FF                MOV     R7,A
026F EC                MOV     A,R4
0270 9E                SUBB    A,R6
0271 22                RET     
0272         L?0361:
0272 FE                MOV     R6,A
0273 90000000    R     MOV     DPTR,#Y+01H
0277 E0                MOVX    A,@DPTR
0278 2F                ADD     A,R7
0279 F0                MOVX    @DPTR,A
027A 90000000    R     MOV     DPTR,#Y
027E E0                MOVX    A,@DPTR
027F 3E                ADDC    A,R6
0280 F0                MOVX    @DPTR,A
0281 E4                CLR     A
0282 FB                MOV     R3,A
0283 7D01              MOV     R5,#01H
0285 22                RET     
0286         L?0363:
0286         L?0364:
0286 F583              MOV     DPH,A
0288 759300      E     MOV     DPX,#?C?XDATASEG
028B EE                MOV     A,R6
028C F0                MOVX    @DPTR,A
028D A3                INC     DPTR
028E EF                MOV     A,R7
028F F0                MOVX    @DPTR,A
0290 22                RET     
0291         L?0365:
0291         L?0366:
0291 F0                MOVX    @DPTR,A
0292         L?0367:
0292 7B00        E     MOV     R3,#MBYTE FOsdMsgBuff
0294 7A00        E     MOV     R2,#HIGH FOsdMsgBuff
0296 7900        E     MOV     R1,#LOW FOsdMsgBuff
0298 22                RET     
0299         L?0369:
0299 F582              MOV     DPL,A
029B E500        E     MOV     A,regTW88
029D 3402              ADDC    A,#02H
029F         L?0370:
029F F583              MOV     DPH,A
02A1 759300      E     MOV     DPX,#?C?XDATASEG
02A4 E0                MOVX    A,@DPTR
02A5 22                RET     
02A6         L?0371:
02A6 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 44  

02AA F0                MOVX    @DPTR,A
02AB A3                INC     DPTR
02AC 22                RET     
02AD         L?0372:
02AD 90000000    R     MOV     DPTR,#next
02B1         L?0373:
02B1 EE                MOV     A,R6
02B2 F0                MOVX    @DPTR,A
02B3 FC                MOV     R4,A
02B4 A3                INC     DPTR
02B5 EF                MOV     A,R7
02B6 F0                MOVX    @DPTR,A
02B7 FD                MOV     R5,A
02B8 22                RET     
02B9         L?0374:
02B9         L?0375:
02B9 90000000    R     MOV     DPTR,#addr
02BD E0                MOVX    A,@DPTR
02BE 04                INC     A
02BF F0                MOVX    @DPTR,A
02C0 22                RET     
02C1         L?0376:
02C1         L?0377:
02C1 F0                MOVX    @DPTR,A
02C2 90000000    R     MOV     DPTR,#dat
02C6 E0                MOVX    A,@DPTR
02C7 3400              ADDC    A,#00H
02C9 F0                MOVX    @DPTR,A
02CA 22                RET     
02CB         L?0378:
02CB A3                INC     DPTR
02CC F0                MOVX    @DPTR,A
02CD         L?0379:
02CD 7B00        E     MOV     R3,#MBYTE consolas16x26_graynum
02CF 7A00        E     MOV     R2,#HIGH consolas16x26_graynum
02D1 7900        E     MOV     R1,#LOW consolas16x26_graynum
02D3 22                RET     
02D4         L?0380:
02D4 A3                INC     DPTR
02D5 F0                MOVX    @DPTR,A
02D6 CE                XCH     A,R6
02D7         L?0381:
02D7 A3                INC     DPTR
02D8 F0                MOVX    @DPTR,A
02D9 90000000    R     MOV     DPTR,#size
02DD E0                MOVX    A,@DPTR
02DE 22                RET     
02DF         L?0382:
02DF 90000000    R     MOV     DPTR,#?_FOsdDownloadFontByDMA?BYTE+06H
02E3         L?0383:
02E3 E5F0              MOV     A,B
02E5 F0                MOVX    @DPTR,A
02E6 A3                INC     DPTR
02E7 EF                MOV     A,R7
02E8 F0                MOVX    @DPTR,A
02E9 22                RET     
02EA         L?0384:
02EA         L?0385:
02EA E4                CLR     A
02EB 93                MOVC    A,@A+DPTR
02EC FF                MOV     R7,A
02ED 7401              MOV     A,#01H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 45  

02EF 93                MOVC    A,@A+DPTR
02F0 22                RET     
02F1         L?0386:
02F1         L?0387:
02F1 90000000    R     MOV     DPTR,#winno
02F5 E0                MOVX    A,@DPTR
02F6 FF                MOV     R7,A
02F7 22                RET     
02F8         L?0388:
02F8         L?0389:
02F8 EE                MOV     A,R6
02F9 F0                MOVX    @DPTR,A
02FA A3                INC     DPTR
02FB EF                MOV     A,R7
02FC F0                MOVX    @DPTR,A
02FD A3                INC     DPTR
02FE 22                RET     
02FF         L?0390:
02FF         L?0391:
02FF E4                CLR     A
0300 90000000    R     MOV     DPTR,#i
0304 F0                MOVX    @DPTR,A
0305 22                RET     
0306         L?0392:
0306 7400        R     MOV     A,#MBYTE FontOsdInfo
0308 F0                MOVX    @DPTR,A
0309 A3                INC     DPTR
030A 7400        R     MOV     A,#HIGH FontOsdInfo
030C F0                MOVX    @DPTR,A
030D A3                INC     DPTR
030E 7400        R     MOV     A,#LOW FontOsdInfo
0310 F0                MOVX    @DPTR,A
0311 22                RET     
0312         L?0393:
0312 7B00        R     MOV     R3,#MBYTE ?SC_10
0314 7A00        R     MOV     R2,#HIGH ?SC_10
0316 7900        R     MOV     R1,#LOW ?SC_10
0318 90000000    R     MOV     DPTR,#FontOsdInfo+010H
031C E0                MOVX    A,@DPTR
031D 22                RET     
031E         L?0394:
031E         L?0395:
031E 759300      E     MOV     DPX,#?C?XDATASEG
0321 E500        E     MOV     A,regTW88+01H
0323 240C              ADD     A,#0CH
0325 22                RET     
0326         L?0396:
0326 C3                CLR     C
0327 13                RRC     A
0328         L?0397:
0328 FD                MOV     R5,A
0329 7C00              MOV     R4,#00H
032B 010000      E     AJMP    ?C?IMUL
032E         L?0398:
032E         L?0399:
032E F9                MOV     R1,A
032F E4                CLR     A
0330 3A                ADDC    A,R2
0331 FA                MOV     R2,A
0332 010000      E     AJMP    ?C?PLDPTR
0335         L?0402:
0335 7401              MOV     A,#01H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 46  

0337 93                MOVC    A,@A+DPTR
0338 2401              ADD     A,#01H
033A FE                MOV     R6,A
033B E4                CLR     A
033C 93                MOVC    A,@A+DPTR
033D 3400              ADDC    A,#00H
033F 22                RET     
0340         L?0403:
0340 90000000    R     MOV     DPTR,#dest_font_index
0344 E0                MOVX    A,@DPTR
0345 FC                MOV     R4,A
0346 A3                INC     DPTR
0347 E0                MOVX    A,@DPTR
0348 FD                MOV     R5,A
0349 2F                ADD     A,R7
034A 22                RET     
034B         L?0404:
034B 90000000    R     MOV     DPTR,#?_FOsdSetPaletteColorArray?BYTE+04H
034F 7410              MOV     A,#010H
0351 F0                MOVX    @DPTR,A
0352 E4                CLR     A
0353 A3                INC     DPTR
0354 F0                MOVX    @DPTR,A
0355 22                RET     
0356         L?0405:
0356 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
035A F0                MOVX    @DPTR,A
035B A3                INC     DPTR
035C 22                RET     
035D         L?0406:
035D FF                MOV     R7,A
035E 90000000    R     MOV     DPTR,#start
0362 E0                MOVX    A,@DPTR
0363 3400              ADDC    A,#00H
0365 FE                MOV     R6,A
0366 22                RET     
             ; FUNCTION Com0102 (END)

             ; FUNCTION DumpFontInfo (BEGIN)
                                           ; SOURCE LINE # 195
                                           ; SOURCE LINE # 196
                                           ; SOURCE LINE # 197
0000 90000000    E     MOV     DPTR,#DebugLevel
0004 E0                MOVX    A,@DPTR
0005 C3                CLR     C
0006 9402              SUBB    A,#02H
0008 4059              JC      ?C0002
000A         ?C0001:
                                           ; SOURCE LINE # 199
000A 90000000    E     MOV     DPTR,#?_wPrintf?BYTE+03H
000E 110000      R     ACALL   L?0392
0011 7B00        R     MOV     R3,#MBYTE ?SC_0
0013 7A00        R     MOV     R2,#HIGH ?SC_0
0015 7900        R     MOV     R1,#LOW ?SC_0
0017 110000      E     ACALL   _wPrintf
                                           ; SOURCE LINE # 200
001A 110000      R     ACALL   L?0393
001D 90000000    E     MOV     DPTR,#?_wPrintf?BYTE+03H
0021 F0                MOVX    @DPTR,A
0022 90000000    R     MOV     DPTR,#FontOsdInfo+011H
0026 E0                MOVX    A,@DPTR
0027 90000000    E     MOV     DPTR,#?_wPrintf?BYTE+04H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 47  

002B F0                MOVX    @DPTR,A
002C 110000      E     ACALL   _wPrintf
                                           ; SOURCE LINE # 201
002F 7B00        R     MOV     R3,#MBYTE ?SC_19
0031 7A00        R     MOV     R2,#HIGH ?SC_19
0033 7900        R     MOV     R1,#LOW ?SC_19
0035 90000000    R     MOV     DPTR,#FontOsdInfo+014H
0039 110000      R     ACALL   L?0319
                                           ; SOURCE LINE # 202
003C 7B00        R     MOV     R3,#MBYTE ?SC_28
003E 7A00        R     MOV     R2,#HIGH ?SC_28
0040 7900        R     MOV     R1,#LOW ?SC_28
0042 90000000    R     MOV     DPTR,#FontOsdInfo+016H
0046 110000      R     ACALL   L?0319
                                           ; SOURCE LINE # 203
0049 7B00        R     MOV     R3,#MBYTE ?SC_37
004B 7A00        R     MOV     R2,#HIGH ?SC_37
004D 7900        R     MOV     R1,#LOW ?SC_37
004F 90000000    R     MOV     DPTR,#FontOsdInfo+018H
0053 110000      R     ACALL   L?0368
                                           ; SOURCE LINE # 204
0056 7B00        R     MOV     R3,#MBYTE ?SC_46
0058 7A00        R     MOV     R2,#HIGH ?SC_46
005A 7900        R     MOV     R1,#LOW ?SC_46
005C 90000000    R     MOV     DPTR,#FontOsdInfo+01AH
0060 110000      R     ACALL   L?0368
                                           ; SOURCE LINE # 205
0063         ?C0002:
0063 22                RET     
0064         L?0319:
0064 E0                MOVX    A,@DPTR
0065 FF                MOV     R7,A
0066 A3                INC     DPTR
0067 E0                MOVX    A,@DPTR
0068 90000000    E     MOV     DPTR,#?_wPrintf?BYTE+03H
006C CF                XCH     A,R7
006D F0                MOVX    @DPTR,A
006E A3                INC     DPTR
006F EF                MOV     A,R7
0070 F0                MOVX    @DPTR,A
0071 110000      E     ACALL   _wPrintf
0074 22                RET     
0075         L?0368:
0075 E0                MOVX    A,@DPTR
0076 FF                MOV     R7,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 90000000    E     MOV     DPTR,#?_wPrintf?BYTE+03H
007D CF                XCH     A,R7
007E F0                MOVX    @DPTR,A
007F A3                INC     DPTR
0080 EF                MOV     A,R7
0081 F0                MOVX    @DPTR,A
0082 110000      E     ACALL   _wPrintf
0085 22                RET     
             ; FUNCTION DumpFontInfo (END)

             ; FUNCTION _FOsdRamSetFifo (BEGIN)
                                           ; SOURCE LINE # 232
0000 90000000    R     MOV     DPTR,#fOn
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 48  

;---- Variable 'vdelay' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 233
                                           ; SOURCE LINE # 234
0006 ED                MOV     A,R5
0007 6004              JZ      ?C0003
                                           ; SOURCE LINE # 235
0009 FF                MOV     R7,A
000A 110000      E     ACALL   _WaitVBlank
000D         ?C0003:
                                           ; SOURCE LINE # 237
000D 90000000    R     MOV     DPTR,#fOn
0011 E0                MOVX    A,@DPTR
0012 600B              JZ      ?C0004
0014 110000      R     ACALL   L?0351
0017 110000      R     ACALL   L?0261
001A E0                MOVX    A,@DPTR
001B 54FE              ANL     A,#0FEH
001D F0                MOVX    @DPTR,A
001E 22                RET     
001F         ?C0004:
                                           ; SOURCE LINE # 238
001F 110000      R     ACALL   L?0351
0022 110000      R     ACALL   L?0261
0025 E0                MOVX    A,@DPTR
0026 4401              ORL     A,#01H
0028 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 239
0029         ?C0006:
0029 22                RET     
             ; FUNCTION _FOsdRamSetFifo (END)

             ; FUNCTION _FOsdFontSetFifo (BEGIN)
                                           ; SOURCE LINE # 255
;---- Variable 'fOn' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 256
                                           ; SOURCE LINE # 257
0000 EF                MOV     A,R7
0001 600B              JZ      ?C0007
0003 110000      R     ACALL   L?0352
0006 110000      R     ACALL   L?0261
0009 E0                MOVX    A,@DPTR
000A 54FD              ANL     A,#0FDH
000C F0                MOVX    @DPTR,A
000D 22                RET     
000E         ?C0007:
                                           ; SOURCE LINE # 258
000E 110000      R     ACALL   L?0352
0011 110000      R     ACALL   L?0261
0014 E0                MOVX    A,@DPTR
0015 4402              ORL     A,#02H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 259
0018         ?C0009:
0018 22                RET     
             ; FUNCTION _FOsdFontSetFifo (END)

             ; FUNCTION _FOsdSetFontWidthHeight (BEGIN)
                                           ; SOURCE LINE # 268
;---- Variable 'height' assigned to Register 'R5' ----
;---- Variable 'width' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 269
                                           ; SOURCE LINE # 272
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 49  

0000 110000      R     ACALL   L?0352
0003 110000      R     ACALL   L?0261
0006 E0                MOVX    A,@DPTR
0007 FE                MOV     R6,A
;---- Variable 'value' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 273
0008 EF                MOV     A,R7
0009 B41006            CJNE    A,#010H,?C0010
000C EE                MOV     A,R6
000D 4410              ORL     A,#010H
000F FE                MOV     R6,A
0010 8004              SJMP    ?C0011
0012         ?C0010:
                                           ; SOURCE LINE # 274
0012 EE                MOV     A,R6
0013 54EF              ANL     A,#0EFH
0015 FE                MOV     R6,A
0016         ?C0011:
                                           ; SOURCE LINE # 275
0016 110000      R     ACALL   L?0352
0019 110000      R     ACALL   L?0261
001C EE                MOV     A,R6
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 277
001E ED                MOV     A,R5
001F C3                CLR     C
0020 13                RRC     A
0021 FE                MOV     R6,A
0022 759300      E     MOV     DPX,#?C?XDATASEG
0025 E500        E     MOV     A,regTW88+01H
0027 2490              ADD     A,#090H
0029 110000      R     ACALL   L?0261
002C EE                MOV     A,R6
002D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 278
002E EF                MOV     A,R7
002F 13                RRC     A
0030 13                RRC     A
0031 543F              ANL     A,#03FH
0033 8EF0              MOV     B,R6
0035 A4                MUL     AB
0036 110000      R     ACALL   L?0304
0039 2491              ADD     A,#091H
003B 110000      R     ACALL   L?0261
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 279
0040 22                RET     
             ; FUNCTION _FOsdSetFontWidthHeight (END)

             ; FUNCTION FOsdSetDeValue (BEGIN)
                                           ; SOURCE LINE # 301
                                           ; SOURCE LINE # 302
                                           ; SOURCE LINE # 307
0000 759300      E     MOV     DPX,#?C?XDATASEG
0003 E500        E     MOV     A,regTW88+01H
0005 2410              ADD     A,#010H
0007 110000      R     ACALL   L?0369
;---- Variable 'HDE' assigned to Register 'R1' ----
000A F9                MOV     R1,A
                                           ; SOURCE LINE # 308
000B 759300      E     MOV     DPX,#?C?XDATASEG
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 50  

000E E500        E     MOV     A,regTW88+01H
0010 240D              ADD     A,#0DH
0012 110000      R     ACALL   L?0369
;---- Variable 'PCLKO' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 310
0015 7D01              MOV     R5,#01H
                                           ; SOURCE LINE # 312
0017 110000      R     ACALL   L?0352
001A F582              MOV     DPL,A
001C E500        E     MOV     A,regTW88
001E 3404              ADDC    A,#04H
0020 110000      R     ACALL   L?0370
0023 7F00              MOV     R7,#00H
0025 30E102            JNB     ACC.1,?C0013
0028 7F01              MOV     R7,#01H
002A         ?C0013:
002A         ?C0014:
;---- Variable 'Mixing' assigned to Register 'R4' ----
002A AC07              MOV     R4,AR7
                                           ; SOURCE LINE # 314
002C ED                MOV     A,R5
002D FF                MOV     R7,A
002E E9                MOV     A,R1
002F 2F                ADD     A,R7
0030 FB                MOV     R3,A
0031 E4                CLR     A
0032 33                RLC     A
0033 FA                MOV     R2,A
0034 EC                MOV     A,R4
0035 75F002            MOV     B,#02H
0038 A4                MUL     AB
0039 2424              ADD     A,#024H
003B FF                MOV     R7,A
003C E4                CLR     A
003D 35F0              ADDC    A,B
003F FE                MOV     R6,A
0040 C3                CLR     C
0041 EB                MOV     A,R3
0042 9F                SUBB    A,R7
0043 EE                MOV     A,R6
0044 6480              XRL     A,#080H
0046 F8                MOV     R0,A
0047 EA                MOV     A,R2
0048 6480              XRL     A,#080H
004A 98                SUBB    A,R0
004B EC                MOV     A,R4
004C 500B              JNC     ?C0015
                                           ; SOURCE LINE # 316
004E 25E0              ADD     A,ACC
0050 2424              ADD     A,#024H
0052 C3                CLR     C
0053 99                SUBB    A,R1
0054 C3                CLR     C
0055 9D                SUBB    A,R5
0056 04                INC     A
                                           ; SOURCE LINE # 317
0057 800D              SJMP    ?C0231
0059         ?C0015:
                                           ; SOURCE LINE # 319
0059 25E0              ADD     A,ACC
005B 2424              ADD     A,#024H
005D FF                MOV     R7,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 51  

005E AE05              MOV     R6,AR5
0060 AD01              MOV     R5,AR1
0062 E9                MOV     A,R1
0063 2E                ADD     A,R6
0064 C3                CLR     C
0065 9F                SUBB    A,R7
0066         ?C0231:
0066 90000000    R     MOV     DPTR,#temp
006A F0                MOVX    @DPTR,A
006B         ?C0016:
                                           ; SOURCE LINE # 321
006B 90000000    R     MOV     DPTR,#temp
006F E0                MOVX    A,@DPTR
0070 110000      R     ACALL   L?0304
0073 2403              ADD     A,#03H
0075 110000      R     ACALL   L?0261
0078 EF                MOV     A,R7
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 339
007A 22                RET     
             ; FUNCTION FOsdSetDeValue (END)

             ; FUNCTION _FOsdBlinkOnOff (BEGIN)
                                           ; SOURCE LINE # 354
;---- Variable 'fOn' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 355
                                           ; SOURCE LINE # 356
0000 EF                MOV     A,R7
0001 6008              JZ      ?C0018
0003 110000      R     ACALL   L?0259
0006 E0                MOVX    A,@DPTR
0007 4480              ORL     A,#080H
0009 F0                MOVX    @DPTR,A
000A 22                RET     
000B         ?C0018:
                                           ; SOURCE LINE # 357
000B 110000      R     ACALL   L?0259
000E E0                MOVX    A,@DPTR
000F 547F              ANL     A,#07FH
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 358
0012         ?C0020:
0012 22                RET     
             ; FUNCTION _FOsdBlinkOnOff (END)

             ; FUNCTION _FOsdRamSetWriteMode (BEGIN)
                                           ; SOURCE LINE # 380
;---- Variable 'fMode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 381
                                           ; SOURCE LINE # 383
0000 110000      R     ACALL   L?0260
0003 E0                MOVX    A,@DPTR
0004 54F3              ANL     A,#0F3H
0006 FE                MOV     R6,A
;---- Variable 'value' assigned to Register 'R6' ----
                                           ; SOURCE LINE # 384
0007 EF                MOV     A,R7
0008 25E0              ADD     A,ACC
000A 25E0              ADD     A,ACC
000C 4E                ORL     A,R6
                                           ; SOURCE LINE # 385
000D FF                MOV     R7,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 52  

000E 110000      R     ACALL   L?0260
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 386
0013 22                RET     
             ; FUNCTION _FOsdRamSetWriteMode (END)

             ; FUNCTION _FOsdSetAccessMode (BEGIN)
                                           ; SOURCE LINE # 425
;---- Variable 'fType' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 426
                                           ; SOURCE LINE # 427
0000 EF                MOV     A,R7
0001 6008              JZ      ?C0022
0003 110000      R     ACALL   L?0260
0006 E0                MOVX    A,@DPTR
0007 4401              ORL     A,#01H
0009 F0                MOVX    @DPTR,A
000A 22                RET     
000B         ?C0022:
                                           ; SOURCE LINE # 428
000B 110000      R     ACALL   L?0260
000E E0                MOVX    A,@DPTR
000F 54FE              ANL     A,#0FEH
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 429
0012         ?C0024:
0012 22                RET     
             ; FUNCTION _FOsdSetAccessMode (END)

             ; FUNCTION _FOsdRamSetAddress (BEGIN)
                                           ; SOURCE LINE # 437
;---- Variable 'addr' assigned to Register 'R4/R5' ----
0000 AD07              MOV     R5,AR7
0002 AC06              MOV     R4,AR6
                                           ; SOURCE LINE # 438
                                           ; SOURCE LINE # 439
0004 EC                MOV     A,R4
0005 110000      R     ACALL   L?0304
0008 2405              ADD     A,#05H
000A 110000      R     ACALL   L?0261
000D E0                MOVX    A,@DPTR
000E 54FE              ANL     A,#0FEH
0010 4F                ORL     A,R7
0011 FF                MOV     R7,A
0012 759300      E     MOV     DPX,#?C?XDATASEG
0015 E500        E     MOV     A,regTW88+01H
0017 2405              ADD     A,#05H
0019 110000      R     ACALL   L?0261
001C EF                MOV     A,R7
001D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 440
001E AF05              MOV     R7,AR5
0020 759300      E     MOV     DPX,#?C?XDATASEG
0023 E500        E     MOV     A,regTW88+01H
0025 2406              ADD     A,#06H
0027 110000      R     ACALL   L?0261
002A EF                MOV     A,R7
002B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 441
002C 22                RET     
             ; FUNCTION _FOsdRamSetAddress (END)
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 53  


             ; FUNCTION _FOsdRamSetData (BEGIN)
                                           ; SOURCE LINE # 448
;---- Variable 'dat' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 449
                                           ; SOURCE LINE # 450
0000 EE                MOV     A,R6
0001 30E009            JNB     ACC.0,?C0026
0004 110000      R     ACALL   L?0260
0007 E0                MOVX    A,@DPTR
0008 4420              ORL     A,#020H
000A F0                MOVX    @DPTR,A
000B 8007              SJMP    ?C0027
000D         ?C0026:
                                           ; SOURCE LINE # 451
000D 110000      R     ACALL   L?0260
0010 E0                MOVX    A,@DPTR
0011 54DF              ANL     A,#0DFH
0013 F0                MOVX    @DPTR,A
0014         ?C0027:
                                           ; SOURCE LINE # 452
0014 759300      E     MOV     DPX,#?C?XDATASEG
0017 E500        E     MOV     A,regTW88+01H
0019 2407              ADD     A,#07H
001B 110000      R     ACALL   L?0261
001E EF                MOV     A,R7
001F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 453
0020 22                RET     
             ; FUNCTION _FOsdRamSetData (END)

             ; FUNCTION _FOsdRamSetAttr (BEGIN)
                                           ; SOURCE LINE # 463
;---- Variable 'attr' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 464
                                           ; SOURCE LINE # 465
0000 759300      E     MOV     DPX,#?C?XDATASEG
0003 E500        E     MOV     A,regTW88+01H
0005 2408              ADD     A,#08H
0007 110000      R     ACALL   L?0261
000A EF                MOV     A,R7
000B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 466
000C 22                RET     
             ; FUNCTION _FOsdRamSetAttr (END)

             ; FUNCTION _FOsdOnOff (BEGIN)
                                           ; SOURCE LINE # 556
0000 90000000    R     MOV     DPTR,#vdelay
0004 ED                MOV     A,R5
0005 F0                MOVX    @DPTR,A
;---- Variable 'fOnOff' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 557
                                           ; SOURCE LINE # 560
0006 110000      R     ACALL   L?0394
0009 110000      R     ACALL   L?0261
000C E0                MOVX    A,@DPTR
000D 90000000    R     MOV     DPTR,#value
0011 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 561
0012 EF                MOV     A,R7
0013 6018              JZ      ?C0030
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 54  

                                           ; SOURCE LINE # 562
0015 E0                MOVX    A,@DPTR
0016 30E63B            JNB     ACC.6,?C0034
                                           ; SOURCE LINE # 563
0019 90000000    R     MOV     DPTR,#vdelay
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F 6003              JZ      ?C0032
                                           ; SOURCE LINE # 564
0021 110000      E     ACALL   _WaitVBlank
0024         ?C0032:
                                           ; SOURCE LINE # 565
0024 90000000    R     MOV     DPTR,#value
0028 E0                MOVX    A,@DPTR
0029 54BF              ANL     A,#0BFH
                                           ; SOURCE LINE # 566
002B 801A              SJMP    ?C0232
                                           ; SOURCE LINE # 567
                                           ; SOURCE LINE # 568
002D         ?C0030:
                                           ; SOURCE LINE # 569
                                           ; SOURCE LINE # 570
002D 90000000    R     MOV     DPTR,#value
0031 E0                MOVX    A,@DPTR
0032 20E61F            JB      ACC.6,?C0034
                                           ; SOURCE LINE # 571
0035 90000000    R     MOV     DPTR,#vdelay
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 6003              JZ      ?C0036
                                           ; SOURCE LINE # 572
003D 110000      E     ACALL   _WaitVBlank
0040         ?C0036:
                                           ; SOURCE LINE # 573
0040 90000000    R     MOV     DPTR,#value
0044 E0                MOVX    A,@DPTR
0045 4440              ORL     A,#040H
0047         ?C0232:
0047 110000      R     ACALL   L?0304
004A 240C              ADD     A,#0CH
004C 110000      R     ACALL   L?0261
004F EF                MOV     A,R7
0050 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 574
0051 7F01              MOV     R7,#01H
0053 22                RET     
                                           ; SOURCE LINE # 575
                                           ; SOURCE LINE # 576
0054         ?C0034:
                                           ; SOURCE LINE # 577
0054 7F00              MOV     R7,#00H
                                           ; SOURCE LINE # 578
0056         ?C0033:
0056 22                RET     
             ; FUNCTION _FOsdOnOff (END)

             ; FUNCTION _FOsdSetPaletteColor (BEGIN)
                                           ; SOURCE LINE # 593
0000 90000000    R     MOV     DPTR,#start
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 55  

0007 EC                MOV     A,R4
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A ED                MOV     A,R5
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D EB                MOV     A,R3
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 594
                                           ; SOURCE LINE # 598
000F A3                INC     DPTR
0010 E0                MOVX    A,@DPTR
0011 FF                MOV     R7,A
0012 6003              JZ      ?C0037
                                           ; SOURCE LINE # 599
0014 110000      E     ACALL   _WaitVBlank
0017         ?C0037:
                                           ; SOURCE LINE # 601
0017 110000      R     ACALL   L?0394
001A 110000      R     ACALL   L?0261
001D E0                MOVX    A,@DPTR
001E 54C0              ANL     A,#0C0H
;---- Variable 'r30c' assigned to Register 'R5' ----
0020 FD                MOV     R5,A
                                           ; SOURCE LINE # 602
0021 90000000    R     MOV     DPTR,#start
0025 E0                MOVX    A,@DPTR
;---- Variable 'i' assigned to Register 'R4' ----
0026 FC                MOV     R4,A
0027         ?C0038:
0027 90000000    R     MOV     DPTR,#size
002B E0                MOVX    A,@DPTR
002C FF                MOV     R7,A
002D 90000000    R     MOV     DPTR,#start
0031 E0                MOVX    A,@DPTR
0032 2F                ADD     A,R7
0033 FF                MOV     R7,A
0034 E4                CLR     A
0035 33                RLC     A
0036 FE                MOV     R6,A
0037 EC                MOV     A,R4
0038 C3                CLR     C
0039 9F                SUBB    A,R7
003A EE                MOV     A,R6
003B 6480              XRL     A,#080H
003D F8                MOV     R0,A
003E 7480              MOV     A,#080H
0040 98                SUBB    A,R0
0041 502E              JNC     ?C0041
                                           ; SOURCE LINE # 603
0043 ED                MOV     A,R5
0044 4C                ORL     A,R4
0045 110000      R     ACALL   L?0304
0048 240C              ADD     A,#0CH
004A 110000      R     ACALL   L?0261
004D EF                MOV     A,R7
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 604
004F 90000000    R     MOV     DPTR,#color
0053 E0                MOVX    A,@DPTR
0054 110000      R     ACALL   L?0304
0057 240D              ADD     A,#0DH
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 56  

0059 110000      R     ACALL   L?0261
005C EF                MOV     A,R7
005D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 605
005E 90000000    R     MOV     DPTR,#color
0062 A3                INC     DPTR
0063 E0                MOVX    A,@DPTR
0064 110000      R     ACALL   L?0304
0067 240E              ADD     A,#0EH
0069 110000      R     ACALL   L?0261
006C EF                MOV     A,R7
006D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 606
006E 0C                INC     R4
006F 80B6              SJMP    ?C0038
                                           ; SOURCE LINE # 607
0071         ?C0041:
0071 22                RET     
             ; FUNCTION _FOsdSetPaletteColor (END)

             ; FUNCTION _FOsdSetPaletteColorArray (BEGIN)
                                           ; SOURCE LINE # 614
0000 90000000    R     MOV     DPTR,#index
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 110000      R     ACALL   L?0299
                                           ; SOURCE LINE # 615
                                           ; SOURCE LINE # 623
000A 90000000    R     MOV     DPTR,#vdelay
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 6003              JZ      ?C0042
                                           ; SOURCE LINE # 624
0012 110000      E     ACALL   _WaitVBlank
0015         ?C0042:
                                           ; SOURCE LINE # 626
0015 110000      R     ACALL   L?0395
0018 110000      R     ACALL   L?0261
001B E0                MOVX    A,@DPTR
001C 54C0              ANL     A,#0C0H
001E 90000000    R     MOV     DPTR,#r30c
0022 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 627
0023 E4                CLR     A
0024 90000000    R     MOV     DPTR,#i
0028 F0                MOVX    @DPTR,A
0029         ?C0043:
0029 90000000    R     MOV     DPTR,#size
002D E0                MOVX    A,@DPTR
002E FF                MOV     R7,A
002F 90000000    R     MOV     DPTR,#i
0033 E0                MOVX    A,@DPTR
0034 FE                MOV     R6,A
0035 C3                CLR     C
0036 9F                SUBB    A,R7
0037 5057              JNC     ?C0046
                                           ; SOURCE LINE # 628
0039 90000000    R     MOV     DPTR,#index
003D E0                MOVX    A,@DPTR
003E 2E                ADD     A,R6
003F FF                MOV     R7,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 57  

0040 90000000    R     MOV     DPTR,#r30c
0044 E0                MOVX    A,@DPTR
0045 4F                ORL     A,R7
0046 110000      R     ACALL   L?0304
0049 240C              ADD     A,#0CH
004B 110000      R     ACALL   L?0261
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 629
0050 90000000    R     MOV     DPTR,#array
0054 110000      R     ACALL   L?0270
0057 F9                MOV     R1,A
0058 90000000    R     MOV     DPTR,#i
005C E0                MOVX    A,@DPTR
005D 75F002            MOV     B,#02H
0060 A4                MUL     AB
0061 F582              MOV     DPL,A
0063 E9                MOV     A,R1
0064 2582              ADD     A,DPL
0066 F9                MOV     R1,A
0067 EA                MOV     A,R2
0068 35F0              ADDC    A,B
006A FA                MOV     R2,A
006B 110000      E     ACALL   ?C?ILDPTR
006E E5F0              MOV     A,B
0070 110000      R     ACALL   L?0304
0073 240D              ADD     A,#0DH
0075 110000      R     ACALL   L?0261
0078 EF                MOV     A,R7
0079 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 630
007A 110000      E     ACALL   ?C?ILDPTR
007D 110000      R     ACALL   L?0304
0080 240E              ADD     A,#0EH
0082 110000      R     ACALL   L?0261
0085 EF                MOV     A,R7
0086 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 631
0087 90000000    R     MOV     DPTR,#i
008B E0                MOVX    A,@DPTR
008C 04                INC     A
008D F0                MOVX    @DPTR,A
008E 8099              SJMP    ?C0043
                                           ; SOURCE LINE # 632
0090         ?C0046:
0090 22                RET     
             ; FUNCTION _FOsdSetPaletteColorArray (END)

             ; FUNCTION _FOsdRamSetAddrAttr (BEGIN)
                                           ; SOURCE LINE # 646
;---- Variable 'OsdRamAddr' assigned to Register 'R2/R3' ----
0000 AB07              MOV     R3,AR7
0002 AA06              MOV     R2,AR6
;---- Variable 'attr' assigned to Register 'R1' ----
0004 A905              MOV     R1,AR5
                                           ; SOURCE LINE # 647
                                           ; SOURCE LINE # 648
0006 E4                CLR     A
0007 FF                MOV     R7,A
0008 110000      R     ACALL   _FOsdRamSetWriteMode
                                           ; SOURCE LINE # 649
000B AF03              MOV     R7,AR3
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 58  

000D AE02              MOV     R6,AR2
000F 110000      R     ACALL   _FOsdRamSetAddress
                                           ; SOURCE LINE # 650
0012 AF01              MOV     R7,AR1
0014 110000      R     ACALL   _FOsdRamSetAttr
                                           ; SOURCE LINE # 652
0017 7F03              MOV     R7,#03H
0019 110000      R     ACALL   _FOsdRamSetWriteMode
                                           ; SOURCE LINE # 653
001C AE02              MOV     R6,AR2
001E AF03              MOV     R7,AR3
0020 010000      R     AJMP    _FOsdRamSetAddress
             ; FUNCTION _FOsdRamSetAddrAttr (END)

             ; FUNCTION _FOsdRamWriteByteStr (BEGIN)
                                           ; SOURCE LINE # 663
0000 90000000    R     MOV     DPTR,#str
0004 110000      R     ACALL   L?0299
0007 A3                INC     DPTR
0008 ED                MOV     A,R5
0009 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 664
                                           ; SOURCE LINE # 668
000A 110000      R     ACALL   L?0260
000D E0                MOVX    A,@DPTR
000E 54DF              ANL     A,#0DFH
0010 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 670
0011 90000000    R     MOV     DPTR,#w_count
0015 7401              MOV     A,#01H
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 671
0018 E4                CLR     A
0019 90000000    R     MOV     DPTR,#i
001D F0                MOVX    @DPTR,A
001E         ?C0048:
001E 90000000    R     MOV     DPTR,#len
0022 E0                MOVX    A,@DPTR
0023 FF                MOV     R7,A
0024 A3                INC     DPTR
0025 E0                MOVX    A,@DPTR
0026 C3                CLR     C
0027 9F                SUBB    A,R7
0028 503F              JNC     ?C0052
                                           ; SOURCE LINE # 672
002A 90000000    R     MOV     DPTR,#str
002E E0                MOVX    A,@DPTR
002F FB                MOV     R3,A
0030 A3                INC     DPTR
0031 E4                CLR     A
0032 75F001            MOV     B,#01H
0035 110000      E     ACALL   ?C?ILDIX
0038 A9F0              MOV     R1,B
003A FA                MOV     R2,A
003B 110000      E     ACALL   ?C?CLDPTR
003E 110000      R     ACALL   L?0304
0041 2407              ADD     A,#07H
0043 110000      R     ACALL   L?0261
0046 EF                MOV     A,R7
0047 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 673
0048 90000000    R     MOV     DPTR,#w_count
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 59  

004C E0                MOVX    A,@DPTR
004D 04                INC     A
004E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 674
004F E0                MOVX    A,@DPTR
0050 B4060D            CJNE    A,#06H,?C0050
                                           ; SOURCE LINE # 675
0053 7F01              MOV     R7,#01H
0055 7E00              MOV     R6,#00H
0057 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 676
005A E4                CLR     A
005B 90000000    R     MOV     DPTR,#w_count
005F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 677
                                           ; SOURCE LINE # 678
0060         ?C0050:
0060 90000000    R     MOV     DPTR,#i
0064 E0                MOVX    A,@DPTR
0065 04                INC     A
0066 F0                MOVX    @DPTR,A
0067 80B5              SJMP    ?C0048
                                           ; SOURCE LINE # 679
0069         ?C0052:
0069 22                RET     
             ; FUNCTION _FOsdRamWriteByteStr (END)

             ; FUNCTION _FOsdWinEnable (BEGIN)
                                           ; SOURCE LINE # 712
;---- Variable 'en' assigned to Register 'R1' ----
0000 A905              MOV     R1,AR5
;---- Variable 'winno' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 713
                                           ; SOURCE LINE # 717
0002 EF                MOV     A,R7
0003 110000      R     ACALL   L?0280
0006 110000      R     ACALL   L?0358
;---- Variable 'index' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 719
0009 759300      E     MOV     DPX,#?C?XDATASEG
000C 2500        E     ADD     A,regTW88+01H
000E 110000      R     ACALL   L?0275
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
;---- Variable 'dat' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 720
0013 E9                MOV     A,R1
0014 6006              JZ      ?C0053
0016 ED                MOV     A,R5
0017 4480              ORL     A,#080H
0019 FD                MOV     R5,A
001A 8004              SJMP    ?C0054
001C         ?C0053:
                                           ; SOURCE LINE # 721
001C ED                MOV     A,R5
001D 547F              ANL     A,#07FH
001F FD                MOV     R5,A
0020         ?C0054:
                                           ; SOURCE LINE # 722
0020 110000      R     ACALL   L?0274
0023 ED                MOV     A,R5
0024 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 60  

                                           ; SOURCE LINE # 723
0025 22                RET     
             ; FUNCTION _FOsdWinEnable (END)

             ; FUNCTION _FOsdWinToggleEnable (BEGIN)
                                           ; SOURCE LINE # 730
;---- Variable 'winno' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 731
                                           ; SOURCE LINE # 735
0000 EF                MOV     A,R7
0001 110000      R     ACALL   L?0280
0004 110000      R     ACALL   L?0384
0007 90000000    R     MOV     DPTR,#index
000B CF                XCH     A,R7
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 737
0010 90000000    R     MOV     DPTR,#index
0014 E0                MOVX    A,@DPTR
0015 FE                MOV     R6,A
0016 110000      R     ACALL   L?0332
0019 110000      R     ACALL   L?0275
001C E0                MOVX    A,@DPTR
001D FF                MOV     R7,A
;---- Variable 'dat' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 738
001E 30E704            JNB     ACC.7,?C0056
0021 547F              ANL     A,#07FH
0023 8003              SJMP    ?C0233
0025         ?C0056:
                                           ; SOURCE LINE # 739
0025 EF                MOV     A,R7
0026 4480              ORL     A,#080H
0028         ?C0233:
0028 90000000    R     MOV     DPTR,#index
002C 110000      R     ACALL   L?0330
002F 110000      R     ACALL   L?0265
0032 EF                MOV     A,R7
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 740
0034         ?C0058:
0034 22                RET     
             ; FUNCTION _FOsdWinToggleEnable (END)

             ; FUNCTION FOsdWinOffAll (BEGIN)
                                           ; SOURCE LINE # 745
                                           ; SOURCE LINE # 746
                                           ; SOURCE LINE # 748
;---- Variable 'i' assigned to Register 'R4' ----
0000 E4                CLR     A
0001 FC                MOV     R4,A
0002         ?C0059:
                                           ; SOURCE LINE # 749
0002 AF04              MOV     R7,AR4
0004 E4                CLR     A
0005 FD                MOV     R5,A
0006 110000      R     ACALL   _FOsdWinEnable
0009 0C                INC     R4
000A EC                MOV     A,R4
000B B408F4            CJNE    A,#08H,?C0059
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 61  

                                           ; SOURCE LINE # 750
000E         ?C0062:
000E 22                RET     
             ; FUNCTION FOsdWinOffAll (END)

             ; FUNCTION _FOsdWinMulticolor (BEGIN)
                                           ; SOURCE LINE # 759
;---- Variable 'en' assigned to Register 'R1' ----
0000 A905              MOV     R1,AR5
;---- Variable 'winno' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 760
                                           ; SOURCE LINE # 764
0002 EF                MOV     A,R7
0003 110000      R     ACALL   L?0280
0006 110000      R     ACALL   L?0358
;---- Variable 'index' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 766
0009 759300      E     MOV     DPX,#?C?XDATASEG
000C 2500        E     ADD     A,regTW88+01H
000E 110000      R     ACALL   L?0275
0011 E0                MOVX    A,@DPTR
0012 FD                MOV     R5,A
;---- Variable 'dat' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 767
0013 E9                MOV     A,R1
0014 6006              JZ      ?C0063
0016 ED                MOV     A,R5
0017 4440              ORL     A,#040H
0019 FD                MOV     R5,A
001A 8004              SJMP    ?C0064
001C         ?C0063:
                                           ; SOURCE LINE # 768
001C ED                MOV     A,R5
001D 54BF              ANL     A,#0BFH
001F FD                MOV     R5,A
0020         ?C0064:
                                           ; SOURCE LINE # 769
0020 110000      R     ACALL   L?0274
0023 ED                MOV     A,R5
0024 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 770
0025 22                RET     
             ; FUNCTION _FOsdWinMulticolor (END)

             ; FUNCTION _FOsdWinZoom (BEGIN)
                                           ; SOURCE LINE # 784
;---- Variable 'winno' assigned to Register 'R7' ----
;---- Variable 'zoomV' assigned to Register 'R3' ----
;---- Variable 'zoomH' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 785
                                           ; SOURCE LINE # 789
0000 EF                MOV     A,R7
0001 110000      R     ACALL   L?0280
0004 110000      R     ACALL   L?0384
0007 90000000    R     MOV     DPTR,#index
000B CF                XCH     A,R7
000C F0                MOVX    @DPTR,A
000D A3                INC     DPTR
000E EF                MOV     A,R7
000F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 791
0010 AF05              MOV     R7,AR5
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 62  

0012 EF                MOV     A,R7
0013 25E0              ADD     A,ACC
0015 25E0              ADD     A,ACC
0017 2B                ADD     A,R3
;---- Variable 'temp' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 792
0018 90000000    R     MOV     DPTR,#index
001C 110000      R     ACALL   L?0330
001F 110000      R     ACALL   L?0265
0022 E0                MOVX    A,@DPTR
0023 54F0              ANL     A,#0F0H
0025 2F                ADD     A,R7
0026 FF                MOV     R7,A
                                           ; SOURCE LINE # 793
0027 90000000    R     MOV     DPTR,#index
002B 110000      R     ACALL   L?0332
002E 110000      R     ACALL   L?0265
0031 EF                MOV     A,R7
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 794
0033 22                RET     
             ; FUNCTION _FOsdWinZoom (END)

             ; FUNCTION _FOsdWinAlphaPixel (BEGIN)
                                           ; SOURCE LINE # 806
;---- Variable 'winno' assigned to Register 'R7' ----
;---- Variable 'alpha' assigned to Register 'R3' ----
;---- Variable 'lut' assigned to Register 'R5' ----
                                           ; SOURCE LINE # 807
                                           ; SOURCE LINE # 808
0000 EF                MOV     A,R7
0001 110000      R     ACALL   L?0280
0004 110000      R     ACALL   L?0402
0007 90000000    R     MOV     DPTR,#index
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D CE                XCH     A,R6
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 810
000F AF05              MOV     R7,AR5
0011 759300      E     MOV     DPX,#?C?XDATASEG
0014 E500        E     MOV     A,regTW88+01H
0016 2492              ADD     A,#092H
0018 110000      R     ACALL   L?0261
001B EF                MOV     A,R7
001C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 811
001D AF03              MOV     R7,AR3
001F 90000000    R     MOV     DPTR,#index
0023 110000      R     ACALL   L?0331
0026 110000      R     ACALL   L?0265
0029 EF                MOV     A,R7
002A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 812
002B 22                RET     
             ; FUNCTION _FOsdWinAlphaPixel (END)

             ; FUNCTION _FOsdWinSetBpp3Alpha (BEGIN)
                                           ; SOURCE LINE # 839
0000 90000000    R     MOV     DPTR,#base_lut
0004 ED                MOV     A,R5
0005 F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 63  

;---- Variable 'winno' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 840
                                           ; SOURCE LINE # 841
0006 EF                MOV     A,R7
0007 110000      R     ACALL   L?0280
000A 110000      R     ACALL   L?0402
000D 90000000    R     MOV     DPTR,#index
0011 F0                MOVX    @DPTR,A
0012 A3                INC     DPTR
0013 CE                XCH     A,R6
0014 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 844
;---- Variable 'i' assigned to Register 'R1' ----
0015 E4                CLR     A
0016 F9                MOV     R1,A
0017         ?C0068:
                                           ; SOURCE LINE # 845
0017 7400        R     MOV     A,#LOW BPP3_alpha_lut_offset
0019 29                ADD     A,R1
001A 110000      R     ACALL   L?0315
001D E0                MOVX    A,@DPTR
001E FF                MOV     R7,A
001F 90000000    R     MOV     DPTR,#base_lut
0023 110000      R     ACALL   L?0303
0026 2492              ADD     A,#092H
0028 110000      R     ACALL   L?0261
002B EF                MOV     A,R7
002C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 846
002D E9                MOV     A,R1
002E 90000000    R     MOV     DPTR,#BPP3_alpha_value
0032 93                MOVC    A,@A+DPTR
0033 FF                MOV     R7,A
0034 90000000    R     MOV     DPTR,#index
0038 110000      R     ACALL   L?0331
003B 110000      R     ACALL   L?0265
003E EF                MOV     A,R7
003F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 847
0040 09                INC     R1
0041 E9                MOV     A,R1
0042 B408D2            CJNE    A,#08H,?C0068
                                           ; SOURCE LINE # 848
0045         ?C0071:
0045 22                RET     
             ; FUNCTION _FOsdWinSetBpp3Alpha (END)

             ; FUNCTION _FOsdWinScreenXY (BEGIN)
                                           ; SOURCE LINE # 855
0000 90000000    R     MOV     DPTR,#x
0004 EC                MOV     A,R4
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
0009 A3                INC     DPTR
000A EA                MOV     A,R2
;---- Variable 'winno' assigned to Register 'R1' ----
                                           ; SOURCE LINE # 856
                                           ; SOURCE LINE # 860
000B 110000      R     ACALL   L?0277
000E 110000      R     ACALL   L?0359
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 64  

0011 90000000    R     MOV     DPTR,#index
0015 110000      R     ACALL   L?0373
                                           ; SOURCE LINE # 862
0018 90000000    R     MOV     DPTR,#x
001C E0                MOVX    A,@DPTR
;---- Variable 'temp' assigned to Register 'R3' ----
                                           ; SOURCE LINE # 863
001D C4                SWAP    A
001E 54F0              ANL     A,#0F0H
0020 FB                MOV     R3,A
                                           ; SOURCE LINE # 864
0021 90000000    R     MOV     DPTR,#y
0025 E0                MOVX    A,@DPTR
0026 2B                ADD     A,R3
                                           ; SOURCE LINE # 865
0027 FF                MOV     R7,A
0028 ED                MOV     A,R5
0029 2402              ADD     A,#02H
002B FD                MOV     R5,A
002C E4                CLR     A
002D 3C                ADDC    A,R4
002E 110000      R     ACALL   L?0264
0031 EF                MOV     A,R7
0032 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 866
0033 90000000    R     MOV     DPTR,#x
0037 A3                INC     DPTR
0038 E0                MOVX    A,@DPTR
0039 FF                MOV     R7,A
003A 90000000    R     MOV     DPTR,#index+01H
003E E0                MOVX    A,@DPTR
003F 2403              ADD     A,#03H
0041 FD                MOV     R5,A
0042 90000000    R     MOV     DPTR,#index
0046 E0                MOVX    A,@DPTR
0047 3400              ADDC    A,#00H
0049 110000      R     ACALL   L?0264
004C EF                MOV     A,R7
004D F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 867
004E 90000000    R     MOV     DPTR,#y
0052 A3                INC     DPTR
0053 E0                MOVX    A,@DPTR
0054 FF                MOV     R7,A
0055 90000000    R     MOV     DPTR,#index+01H
0059 E0                MOVX    A,@DPTR
005A 2404              ADD     A,#04H
005C FD                MOV     R5,A
005D 90000000    R     MOV     DPTR,#index
0061 E0                MOVX    A,@DPTR
0062 3400              ADDC    A,#00H
0064 110000      R     ACALL   L?0264
0067 EF                MOV     A,R7
0068 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 869
0069 90000000    R     MOV     DPTR,#x
006D 110000      R     ACALL   L?0353
0070 2400        R     ADD     A,#LOW FontOsdInfo+021H
0072 F582              MOV     DPL,A
0074 E4                CLR     A
0075 3400        R     ADDC    A,#HIGH FontOsdInfo+021H
0077 110000      R     ACALL   L?0363
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 65  

                                           ; SOURCE LINE # 870
007A 90000000    R     MOV     DPTR,#y
007E 110000      R     ACALL   L?0353
0081 2400        R     ADD     A,#LOW FontOsdInfo+023H
0083 F582              MOV     DPL,A
0085 E4                CLR     A
0086 3400        R     ADDC    A,#HIGH FontOsdInfo+023H
0088 110000      R     ACALL   L?0363
                                           ; SOURCE LINE # 871
008B 22                RET     
             ; FUNCTION _FOsdWinScreenXY (END)

             ; FUNCTION _FOsdWinScreenWH (BEGIN)
                                           ; SOURCE LINE # 879
0000 90000000    R     MOV     DPTR,#w
0004 ED                MOV     A,R5
;---- Variable 'winno' assigned to Register 'R1' ----
                                           ; SOURCE LINE # 880
                                           ; SOURCE LINE # 883
0005 110000      R     ACALL   L?0277
0008 110000      R     ACALL   L?0359
000B 90000000    R     MOV     DPTR,#index
000F EE                MOV     A,R6
0010 F0                MOVX    @DPTR,A
0011 A3                INC     DPTR
0012 EF                MOV     A,R7
0013 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 885
0014 90000000    R     MOV     DPTR,#h
0018 E0                MOVX    A,@DPTR
0019 FD                MOV     R5,A
001A EF                MOV     A,R7
001B 2405              ADD     A,#05H
001D 110000      R     ACALL   L?0272
0020 ED                MOV     A,R5
0021 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 886
0022 90000000    R     MOV     DPTR,#w
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
0028 90000000    R     MOV     DPTR,#index+01H
002C E0                MOVX    A,@DPTR
002D 2406              ADD     A,#06H
002F FD                MOV     R5,A
0030 90000000    R     MOV     DPTR,#index
0034 E0                MOVX    A,@DPTR
0035 3400              ADDC    A,#00H
0037 110000      R     ACALL   L?0264
003A EF                MOV     A,R7
003B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 888
003C E9                MOV     A,R1
003D 75F00B            MOV     B,#0BH
0040 A4                MUL     AB
0041 2400        R     ADD     A,#LOW FontOsdInfo+025H
0043 F582              MOV     DPL,A
0045 E4                CLR     A
0046 3400        R     ADDC    A,#HIGH FontOsdInfo+025H
0048 F583              MOV     DPH,A
004A 759300      E     MOV     DPX,#?C?XDATASEG
004D EF                MOV     A,R7
004E F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 66  

                                           ; SOURCE LINE # 889
004F 90000000    R     MOV     DPTR,#h
0053 110000      R     ACALL   L?0355
0056 2400        R     ADD     A,#LOW FontOsdInfo+026H
0058 F582              MOV     DPL,A
005A E4                CLR     A
005B 3400        R     ADDC    A,#HIGH FontOsdInfo+026H
005D F583              MOV     DPH,A
005F 759300      E     MOV     DPX,#?C?XDATASEG
0062 EF                MOV     A,R7
0063 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 890
0064 22                RET     
             ; FUNCTION _FOsdWinScreenWH (END)

             ; FUNCTION _FOsdWinSetOsdRamStartAddr (BEGIN)
                                           ; SOURCE LINE # 1019
;---- Variable 'winno' assigned to Register 'R1' ----
0000 A907              MOV     R1,AR7
0002 90000000    R     MOV     DPTR,#addr
0006 EC                MOV     A,R4
0007 F0                MOVX    @DPTR,A
0008 A3                INC     DPTR
0009 ED                MOV     A,R5
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1020
                                           ; SOURCE LINE # 1023
000B 110000      R     ACALL   L?0279
000E 110000      R     ACALL   L?0359
;---- Variable 'index' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 1025
0011 C3                CLR     C
0012 EC                MOV     A,R4
0013 9401              SUBB    A,#01H
0015 EF                MOV     A,R7
0016 4009              JC      ?C0074
0018 110000      R     ACALL   L?0262
001B E0                MOVX    A,@DPTR
001C 4410              ORL     A,#010H
001E F0                MOVX    @DPTR,A
001F 8007              SJMP    ?C0075
0021         ?C0074:
                                           ; SOURCE LINE # 1026
0021 110000      R     ACALL   L?0262
0024 E0                MOVX    A,@DPTR
0025 54EF              ANL     A,#0EFH
0027 F0                MOVX    @DPTR,A
0028         ?C0075:
                                           ; SOURCE LINE # 1027
0028 90000000    R     MOV     DPTR,#addr
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E FD                MOV     R5,A
002F 110000      R     ACALL   L?0271
0032 ED                MOV     A,R5
0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1029
0034 90000000    R     MOV     DPTR,#addr
0038 110000      R     ACALL   L?0354
003B 2400        R     ADD     A,#LOW FontOsdInfo+01FH
003D F582              MOV     DPL,A
003F E4                CLR     A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 67  

0040 3400        R     ADDC    A,#HIGH FontOsdInfo+01FH
0042 110000      R     ACALL   L?0364
                                           ; SOURCE LINE # 1030
0045 22                RET     
             ; FUNCTION _FOsdWinSetOsdRamStartAddr (END)

             ; FUNCTION FontOsdInit (BEGIN)
                                           ; SOURCE LINE # 1049
                                           ; SOURCE LINE # 1050
                                           ; SOURCE LINE # 1052
0000 90000000    R     MOV     DPTR,#columns
0004 7428              MOV     A,#028H
0006 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1053
0007 A3                INC     DPTR
0008 7401              MOV     A,#01H
000A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1056
000B E4                CLR     A
000C FD                MOV     R5,A
000D 7F01              MOV     R7,#01H
000F 110000      R     ACALL   _FOsdOnOff
                                           ; SOURCE LINE # 1059
0012 E4                CLR     A
0013 FD                MOV     R5,A
0014 FC                MOV     R4,A
0015 7F03              MOV     R7,#03H
0017 110000      R     ACALL   _InitFontRamByNum
                                           ; SOURCE LINE # 1062
001A E4                CLR     A
001B 90000000    R     MOV     DPTR,#winno
001F F0                MOVX    @DPTR,A
0020         ?C0077:
0020 110000      R     ACALL   L?0386
0023 C3                CLR     C
0024 9408              SUBB    A,#08H
0026 5065              JNC     ?C0078
                                           ; SOURCE LINE # 1063
0028 110000      R     ACALL   _FOsdWinInit
                                           ; SOURCE LINE # 1065
002B 110000      R     ACALL   L?0386
002E 75F00B            MOV     B,#0BH
0031 A4                MUL     AB
0032 2400        R     ADD     A,#LOW FontOsdInfo+029H
0034 F582              MOV     DPL,A
0036 E4                CLR     A
0037 3400        R     ADDC    A,#HIGH FontOsdInfo+029H
0039 F583              MOV     DPH,A
003B 759300      E     MOV     DPX,#?C?XDATASEG
003E 741A              MOV     A,#01AH
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1066
0041 7B0F              MOV     R3,#0FH
0043 7D01              MOV     R5,#01H
0045 110000      R     ACALL   _FOsdWinAlphaPixel
                                           ; SOURCE LINE # 1068
0048 90000000    R     MOV     DPTR,#winno
004C E0                MOVX    A,@DPTR
004D F9                MOV     R1,A
004E 75F01E            MOV     B,#01EH
0051 A4                MUL     AB
0052 FB                MOV     R3,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 68  

0053 AAF0              MOV     R2,B
0055 AF01              MOV     R7,AR1
0057 E4                CLR     A
0058 1D                DEC     R5
0059 FC                MOV     R4,A
005A 110000      R     ACALL   _FOsdWinScreenXY
                                           ; SOURCE LINE # 1069
005D 110000      R     ACALL   L?0387
0060 A3                INC     DPTR
0061 E0                MOVX    A,@DPTR
0062 FD                MOV     R5,A
0063 7B01              MOV     R3,#01H
0065 110000      R     ACALL   _FOsdWinScreenWH
                                           ; SOURCE LINE # 1070
0068 110000      R     ACALL   L?0387
006B E4                CLR     A
006C 1B                DEC     R3
006D FD                MOV     R5,A
006E 110000      R     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 1071
0071 90000000    R     MOV     DPTR,#winno
0075 E0                MOVX    A,@DPTR
0076 FB                MOV     R3,A
0077 A3                INC     DPTR
0078 E0                MOVX    A,@DPTR
0079 8BF0              MOV     B,R3
007B A4                MUL     AB
007C FD                MOV     R5,A
007D ACF0              MOV     R4,B
007F AF03              MOV     R7,AR3
0081 110000      R     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 1072
0084 90000000    R     MOV     DPTR,#winno
0088 E0                MOVX    A,@DPTR
0089 04                INC     A
008A F0                MOVX    @DPTR,A
008B 8093              SJMP    ?C0077
008D         ?C0078:
                                           ; SOURCE LINE # 1075
008D 7D0F              MOV     R5,#0FH
008F 7F20              MOV     R7,#020H
0091 7E00              MOV     R6,#00H
0093 010000      R     AJMP    _FOsdRamClearAll
             ; FUNCTION FontOsdInit (END)

             ; FUNCTION _FOsdInitBpp3AlphaTable (BEGIN)
                                           ; SOURCE LINE # 1103
;---- Variable 'i' assigned to Register 'R5' ----
;---- Variable 'fCalculate' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1104
                                           ; SOURCE LINE # 1110
0000 EF                MOV     A,R7
0001 7016              JNZ     ?C0081
                                           ; SOURCE LINE # 1112
0003 FD                MOV     R5,A
0004         ?C0082:
                                           ; SOURCE LINE # 1113
0004 ED                MOV     A,R5
0005 90000000    R     MOV     DPTR,#FOsdDefPaletteBpp3Alpha
0009 93                MOVC    A,@A+DPTR
000A FF                MOV     R7,A
000B 7400        R     MOV     A,#LOW BPP3_alpha_lut_offset
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 69  

000D 2D                ADD     A,R5
000E 110000      R     ACALL   L?0315
0011 EF                MOV     A,R7
0012 F0                MOVX    @DPTR,A
0013 0D                INC     R5
0014 ED                MOV     A,R5
0015 B408EC            CJNE    A,#08H,?C0082
0018 22                RET     
                                           ; SOURCE LINE # 1114
0019         ?C0081:
                                           ; SOURCE LINE # 1115
                                           ; SOURCE LINE # 1117
0019 E4                CLR     A
001A FD                MOV     R5,A
001B         ?C0086:
                                           ; SOURCE LINE # 1118
001B ED                MOV     A,R5
001C 25E0              ADD     A,ACC
001E 2400        R     ADD     A,#LOW FOsdDefPaletteBpp3
0020 F582              MOV     DPL,A
0022 E4                CLR     A
0023 3400        R     ADDC    A,#HIGH FOsdDefPaletteBpp3
0025 F583              MOV     DPH,A
0027 759300      E     MOV     DPX,#?C?CODESEG
002A 110000      R     ACALL   L?0385
002D 90000000    R     MOV     DPTR,#value
0031 CF                XCH     A,R7
0032 F0                MOVX    @DPTR,A
0033 A3                INC     DPTR
0034 EF                MOV     A,R7
0035 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1125
0036 90000000    R     MOV     DPTR,#value
003A E0                MOVX    A,@DPTR
003B FA                MOV     R2,A
003C A3                INC     DPTR
003D E0                MOVX    A,@DPTR
003E FB                MOV     R3,A
003F EA                MOV     A,R2
0040 13                RRC     A
0041 13                RRC     A
0042 13                RRC     A
0043 541F              ANL     A,#01FH
;---- Variable 'j' assigned to Register 'R4' ----
0045 FC                MOV     R4,A
                                           ; SOURCE LINE # 1126
0046 FF                MOV     R7,A
0047 90000000    R     MOV     DPTR,#Y
004B E4                CLR     A
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E EF                MOV     A,R7
004F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1127
0050 EA                MOV     A,R2
0051 5407              ANL     A,#07H
0053 FE                MOV     R6,A
0054 EB                MOV     A,R3
0055 54E0              ANL     A,#0E0H
0057 7805              MOV     R0,#05H
0059         ?C0214:
0059 CE                XCH     A,R6
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 70  

005A C3                CLR     C
005B 13                RRC     A
005C CE                XCH     A,R6
005D 13                RRC     A
005E D8F9              DJNZ    R0,?C0214
                                           ; SOURCE LINE # 1128
0060 110000      R     ACALL   L?0343
0063 3E                ADDC    A,R6
0064 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1129
0065 90000000    R     MOV     DPTR,#value
0069 A3                INC     DPTR
006A E0                MOVX    A,@DPTR
006B 541F              ANL     A,#01FH
                                           ; SOURCE LINE # 1130
006D 110000      R     ACALL   L?0343
0070 3E                ADDC    A,R6
0071 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1134
0072 ED                MOV     A,R5
0073 7003              JNZ     $ + 5H
0075 010000      R     AJMP    ?C0089
                                           ; SOURCE LINE # 1135
0078 2400        R     ADD     A,#LOW BPP3_alpha_lut_offset
007A 110000      R     ACALL   L?0315
007D ED                MOV     A,R5
                                           ; SOURCE LINE # 1136
007E 110000      R     ACALL   L?0344
0081 FE                MOV     R6,A
0082 A3                INC     DPTR
0083 110000      R     ACALL   L?0309
0086 EE                MOV     A,R6
0087 F0                MOVX    @DPTR,A
0088 A3                INC     DPTR
0089 EF                MOV     A,R7
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1138
008B E4                CLR     A
008C FC                MOV     R4,A
008D         ?C0090:
008D EC                MOV     A,R4
008E C3                CLR     C
008F 9D                SUBB    A,R5
0090 507B              JNC     ?C0088
                                           ; SOURCE LINE # 1139
0092 EC                MOV     A,R4
0093 110000      R     ACALL   L?0311
0096 E0                MOVX    A,@DPTR
0097 FE                MOV     R6,A
0098 A3                INC     DPTR
0099 E0                MOVX    A,@DPTR
009A FF                MOV     R7,A
009B C3                CLR     C
009C 90000000    R     MOV     DPTR,#Y+01H
00A0 E0                MOVX    A,@DPTR
00A1 9F                SUBB    A,R7
00A2 90000000    R     MOV     DPTR,#Y
00A6 E0                MOVX    A,@DPTR
00A7 9E                SUBB    A,R6
00A8 504C              JNC     ?C0092
                                           ; SOURCE LINE # 1140
00AA 7400        R     MOV     A,#LOW BPP3_alpha_lut_offset
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 71  

00AC 2D                ADD     A,R5
00AD 110000      R     ACALL   L?0315
;---- Variable 'k' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1141
00B0 110000      R     ACALL   L?0309
00B3 E0                MOVX    A,@DPTR
00B4 FB                MOV     R3,A
00B5 A3                INC     DPTR
00B6 E0                MOVX    A,@DPTR
00B7 90000000    R     MOV     DPTR,#value
00BB CB                XCH     A,R3
                                           ; SOURCE LINE # 1143
00BC 110000      R     ACALL   L?0314
00BF E0                MOVX    A,@DPTR
00C0 FE                MOV     R6,A
00C1 7400        R     MOV     A,#LOW BPP3_alpha_lut_offset
00C3 2D                ADD     A,R5
00C4 110000      R     ACALL   L?0315
00C7 EE                MOV     A,R6
00C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1144
00C9 EC                MOV     A,R4
00CA 110000      R     ACALL   L?0311
00CD E0                MOVX    A,@DPTR
00CE FA                MOV     R2,A
00CF A3                INC     DPTR
00D0 E0                MOVX    A,@DPTR
00D1 FB                MOV     R3,A
00D2 110000      R     ACALL   L?0310
00D5 EA                MOV     A,R2
                                           ; SOURCE LINE # 1146
00D6 110000      R     ACALL   L?0314
00D9 EF                MOV     A,R7
00DA F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1147
00DB 90000000    R     MOV     DPTR,#value
00DF E0                MOVX    A,@DPTR
00E0 FE                MOV     R6,A
00E1 A3                INC     DPTR
00E2 E0                MOVX    A,@DPTR
00E3 FF                MOV     R7,A
00E4 EC                MOV     A,R4
00E5 110000      R     ACALL   L?0311
00E8 EE                MOV     A,R6
00E9 F0                MOVX    @DPTR,A
00EA A3                INC     DPTR
00EB EF                MOV     A,R7
00EC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1148
00ED 90000000    R     MOV     DPTR,#Y
00F1 EE                MOV     A,R6
00F2 F0                MOVX    @DPTR,A
00F3 A3                INC     DPTR
00F4 EF                MOV     A,R7
00F5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1149
                                           ; SOURCE LINE # 1150
00F6         ?C0092:
00F6 0C                INC     R4
00F7 8094              SJMP    ?C0090
                                           ; SOURCE LINE # 1156
00F9         ?C0089:
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 72  

                                           ; SOURCE LINE # 1157
                                           ; SOURCE LINE # 1158
00F9 E4                CLR     A
00FA 90000000    R     MOV     DPTR,#BPP3_alpha_lut_offset
                                           ; SOURCE LINE # 1159
00FE 110000      R     ACALL   L?0344
0101 FF                MOV     R7,A
0102 A3                INC     DPTR
0103 E0                MOVX    A,@DPTR
0104 90000000    R     MOV     DPTR,#alpha_table_Y
0108 CF                XCH     A,R7
0109 F0                MOVX    @DPTR,A
010A A3                INC     DPTR
010B EF                MOV     A,R7
010C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1160
                                           ; SOURCE LINE # 1161
010D         ?C0088:
010D 0D                INC     R5
010E ED                MOV     A,R5
010F 6408              XRL     A,#08H
0111 6003              JZ      $ + 5H
0113 010000      R     AJMP    ?C0086
                                           ; SOURCE LINE # 1167
                                           ; SOURCE LINE # 1168
0116         ?C0095:
0116 22                RET     
             ; FUNCTION _FOsdInitBpp3AlphaTable (END)

             ; FUNCTION _FOsdWinInit (BEGIN)
                                           ; SOURCE LINE # 1186
;---- Variable 'winno' assigned to Register 'R1' ----
                                           ; SOURCE LINE # 1187
                                           ; SOURCE LINE # 1190
0000 110000      R     ACALL   L?0278
0003 110000      R     ACALL   L?0385
0006 90000000    R     MOV     DPTR,#index
000A CF                XCH     A,R7
000B F0                MOVX    @DPTR,A
000C A3                INC     DPTR
000D EF                MOV     A,R7
000E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1192
000F 90000000    R     MOV     DPTR,#index
0013 E0                MOVX    A,@DPTR
0014 FE                MOV     R6,A
0015 110000      R     ACALL   L?0332
0018 110000      R     ACALL   L?0275
001B E0                MOVX    A,@DPTR
001C 547F              ANL     A,#07FH
001E 4440              ORL     A,#040H
0020 FF                MOV     R7,A
0021 90000000    R     MOV     DPTR,#index
0025 E0                MOVX    A,@DPTR
0026 FC                MOV     R4,A
0027 A3                INC     DPTR
0028 E0                MOVX    A,@DPTR
0029 FD                MOV     R5,A
002A 759300      E     MOV     DPX,#?C?XDATASEG
002D 2500        E     ADD     A,regTW88+01H
002F 110000      R     ACALL   L?0265
0032 EF                MOV     A,R7
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 73  

0033 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1194
0034 ED                MOV     A,R5
0035 2407              ADD     A,#07H
0037 FF                MOV     R7,A
0038 E4                CLR     A
0039 3C                ADDC    A,R4
003A 110000      R     ACALL   L?0273
                                           ; SOURCE LINE # 1195
003D 110000      R     ACALL   L?0339
0040 2408              ADD     A,#08H
0042 110000      R     ACALL   L?0263
0045 E4                CLR     A
0046 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1196
0047 EF                MOV     A,R7
0048 2409              ADD     A,#09H
004A 110000      R     ACALL   L?0272
                                           ; SOURCE LINE # 1197
004D 110000      R     ACALL   L?0339
0050 240A              ADD     A,#0AH
0052 110000      R     ACALL   L?0263
0055 E4                CLR     A
0056 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1198
0057 EF                MOV     A,R7
0058 240B              ADD     A,#0BH
005A 110000      R     ACALL   L?0272
                                           ; SOURCE LINE # 1199
005D 110000      R     ACALL   L?0340
0060 240C              ADD     A,#0CH
0062 110000      R     ACALL   L?0263
0065 E4                CLR     A
0066 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1200
0067 EF                MOV     A,R7
0068 240D              ADD     A,#0DH
006A 110000      R     ACALL   L?0272
                                           ; SOURCE LINE # 1201
006D 110000      R     ACALL   L?0340
0070 240E              ADD     A,#0EH
0072 110000      R     ACALL   L?0263
0075 E4                CLR     A
0076 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1202
0077 110000      R     ACALL   L?0271
007A E4                CLR     A
007B F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1205
007C AF01              MOV     R7,AR1
007E FB                MOV     R3,A
007F 7D01              MOV     R5,#01H
0081 010000      R     AJMP    _FOsdWinAlphaPixel
             ; FUNCTION _FOsdWinInit (END)

             ; FUNCTION _FOsdSetDefPaletteColor (BEGIN)
                                           ; SOURCE LINE # 1216
0000 90000000    R     MOV     DPTR,#mode
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1217
                                           ; SOURCE LINE # 1218
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 74  

0006 7008              JNZ     ?C0097
                                           ; SOURCE LINE # 1219
0008 7B00        R     MOV     R3,#MBYTE FOsdHwDefPaletteBpp1
000A 7A00        R     MOV     R2,#HIGH FOsdHwDefPaletteBpp1
000C 7900        R     MOV     R1,#LOW FOsdHwDefPaletteBpp1
                                           ; SOURCE LINE # 1220
                                           ; SOURCE LINE # 1221
                                           ; SOURCE LINE # 1222
                                           ; SOURCE LINE # 1223
                                           ; SOURCE LINE # 1224
                                           ; SOURCE LINE # 1225
                                           ; SOURCE LINE # 1226
                                           ; SOURCE LINE # 1227
000E 8034              SJMP    ?C0234
0010         ?C0097:
                                           ; SOURCE LINE # 1228
0010 90000000    R     MOV     DPTR,#mode
0014 E0                MOVX    A,@DPTR
0015 6401              XRL     A,#01H
0017 701C              JNZ     ?C0099
                                           ; SOURCE LINE # 1229
0019 7B00        R     MOV     R3,#MBYTE FOsdSwDefPaletteBpp1
001B 7A00        R     MOV     R2,#HIGH FOsdSwDefPaletteBpp1
001D 7900        R     MOV     R1,#LOW FOsdSwDefPaletteBpp1
001F 110000      R     ACALL   L?0283
0022 FF                MOV     R7,A
0023 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1230
0026 110000      R     ACALL   L?0281
0029 7F08              MOV     R7,#08H
002B 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1231
002E 110000      R     ACALL   L?0281
0031 7F10              MOV     R7,#010H
                                           ; SOURCE LINE # 1232
                                           ; SOURCE LINE # 1233
                                           ; SOURCE LINE # 1234
                                           ; SOURCE LINE # 1235
                                           ; SOURCE LINE # 1236
                                           ; SOURCE LINE # 1237
0033 8025              SJMP    ?C0235
0035         ?C0099:
                                           ; SOURCE LINE # 1238
0035 90000000    R     MOV     DPTR,#mode
0039 E0                MOVX    A,@DPTR
003A 6402              XRL     A,#02H
003C 704F              JNZ     ?C0102
                                           ; SOURCE LINE # 1239
003E 7B00        R     MOV     R3,#MBYTE FOsdSwDefPaletteBpp1
0040 7A00        R     MOV     R2,#HIGH FOsdSwDefPaletteBpp1
0042 7900        R     MOV     R1,#LOW FOsdSwDefPaletteBpp1
0044         ?C0234:
0044 7410              MOV     A,#010H
0046 110000      R     ACALL   L?0284
0049 FF                MOV     R7,A
004A 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1240
004D 110000      R     ACALL   L?0305
0050 7F10              MOV     R7,#010H
0052 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1241
0055 110000      R     ACALL   L?0305
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 75  

0058 7F14              MOV     R7,#014H
005A         ?C0235:
005A 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1242
005D 110000      R     ACALL   L?0282
0060 7F18              MOV     R7,#018H
0062 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1243
0065 110000      R     ACALL   L?0306
0068 7F20              MOV     R7,#020H
006A 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1244
006D 110000      R     ACALL   L?0306
0070 7F24              MOV     R7,#024H
0072 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1245
0075 110000      R     ACALL   L?0282
0078 7F28              MOV     R7,#028H
007A 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1246
007D 7B00        R     MOV     R3,#MBYTE FOsdDefPaletteBpp4
007F 7A00        R     MOV     R2,#HIGH FOsdDefPaletteBpp4
0081 7900        R     MOV     R1,#LOW FOsdDefPaletteBpp4
0083 7410              MOV     A,#010H
0085 110000      R     ACALL   L?0308
0088 7F30              MOV     R7,#030H
008A 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1247
                                           ; SOURCE LINE # 1248
008D         ?C0102:
008D 22                RET     
             ; FUNCTION _FOsdSetDefPaletteColor (END)

             ; FUNCTION _FOsdDownloadFontByDMA (BEGIN)
                                           ; SOURCE LINE # 1275
0000 90000000    R     MOV     DPTR,#dest_loc
0004 EE                MOV     A,R6
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 EF                MOV     A,R7
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1276
                                           ; SOURCE LINE # 1282
0009 7F01              MOV     R7,#01H
000B 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 1285
000E E4                CLR     A
000F FF                MOV     R7,A
0010 110000      R     ACALL   _FOsdFontSetFifo
                                           ; SOURCE LINE # 1286
0013 0F                INC     R7
0014 110000      R     ACALL   _FOsdSetAccessMode
                                           ; SOURCE LINE # 1289
0017 90000000    R     MOV     DPTR,#src_loc
001B E0                MOVX    A,@DPTR
001C FC                MOV     R4,A
001D A3                INC     DPTR
001E E0                MOVX    A,@DPTR
001F FD                MOV     R5,A
0020 A3                INC     DPTR
0021 E0                MOVX    A,@DPTR
0022 FE                MOV     R6,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 76  

0023 A3                INC     DPTR
0024 E0                MOVX    A,@DPTR
0025 FF                MOV     R7,A
0026 90000000    R     MOV     DPTR,#dest_loc
002A E0                MOVX    A,@DPTR
002B FB                MOV     R3,A
002C A3                INC     DPTR
002D E0                MOVX    A,@DPTR
002E 90000000    E     MOV     DPTR,#?_SpiFlash_Read_FOsd?BYTE+04H
0032 CB                XCH     A,R3
0033 F0                MOVX    @DPTR,A
0034 A3                INC     DPTR
0035 EB                MOV     A,R3
0036 F0                MOVX    @DPTR,A
0037 90000000    R     MOV     DPTR,#size
003B E0                MOVX    A,@DPTR
003C FB                MOV     R3,A
003D A3                INC     DPTR
003E E0                MOVX    A,@DPTR
003F 90000000    E     MOV     DPTR,#?_SpiFlash_Read_FOsd?BYTE+06H
0043 CB                XCH     A,R3
0044 F0                MOVX    @DPTR,A
0045 A3                INC     DPTR
0046 EB                MOV     A,R3
0047 F0                MOVX    @DPTR,A
0048 110000      E     ACALL   _SpiFlash_Read_FOsd
                                           ; SOURCE LINE # 1292
004B 7F01              MOV     R7,#01H
004D 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 1293
0050 7F01              MOV     R7,#01H
0052 110000      R     ACALL   _FOsdFontSetFifo
                                           ; SOURCE LINE # 1294
0055 1F                DEC     R7
0056 010000      R     AJMP    _FOsdSetAccessMode
             ; FUNCTION _FOsdDownloadFontByDMA (END)

             ; FUNCTION _ReplaceFontRam (BEGIN)
                                           ; SOURCE LINE # 1349
0000 90000000    R     MOV     DPTR,#dest_font_index
0004 110000      R     ACALL   L?0388
0007 110000      R     ACALL   L?0299
                                           ; SOURCE LINE # 1350
                                           ; SOURCE LINE # 1352
000A 90000000    R     MOV     DPTR,#dest_font_index
000E E0                MOVX    A,@DPTR
000F FF                MOV     R7,A
0010 A3                INC     DPTR
0011 E0                MOVX    A,@DPTR
0012 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
0016 CF                XCH     A,R7
0017 F0                MOVX    @DPTR,A
0018 A3                INC     DPTR
0019 EF                MOV     A,R7
001A F0                MOVX    @DPTR,A
001B 90000000    R     MOV     DPTR,#sName
001F E0                MOVX    A,@DPTR
0020 F9                MOV     R1,A
0021 A3                INC     DPTR
0022 E0                MOVX    A,@DPTR
0023 FA                MOV     R2,A
0024 A3                INC     DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 77  

0025 E0                MOVX    A,@DPTR
0026 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+05H
002A C9                XCH     A,R1
002B 110000      R     ACALL   L?0300
002E 7B00        R     MOV     R3,#MBYTE ?SC_54
0030 7A00        R     MOV     R2,#HIGH ?SC_54
0032 7900        R     MOV     R1,#LOW ?SC_54
0034 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 1353
0037 90000000    R     MOV     DPTR,#font
003B 110000      R     ACALL   L?0270
003E 2406              ADD     A,#06H
0040 110000      R     ACALL   L?0292
0043 90000000    R     MOV     DPTR,#dest_font_index
0047 110000      R     ACALL   L?0290
004A 110000      R     ACALL   L?0396
;---- Variable 'addr' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 1354
004D C006              PUSH    AR6
004F C007              PUSH    AR7
0051 90000000    R     MOV     DPTR,#font
0055 110000      R     ACALL   L?0285
0058 110000      R     ACALL   L?0382
005B D007              POP     AR7
005D D006              POP     AR6
005F 010000      R     AJMP    _FOsdDownloadFontByDMA
             ; FUNCTION _ReplaceFontRam (END)

             ; FUNCTION _InitFontRam (BEGIN)
                                           ; SOURCE LINE # 1360
0000 90000000    R     MOV     DPTR,#dest_font_index
0004 110000      R     ACALL   L?0388
0007 110000      R     ACALL   L?0299
                                           ; SOURCE LINE # 1361
                                           ; SOURCE LINE # 1368
000A 110000      R     ACALL   L?0269
000D 2406              ADD     A,#06H
000F 110000      R     ACALL   L?0292
0012 FF                MOV     R7,A
0013 90000000    R     MOV     DPTR,#font
0017 110000      R     ACALL   L?0291
001A FD                MOV     R5,A
001B 110000      R     ACALL   _FOsdSetFontWidthHeight
                                           ; SOURCE LINE # 1371
001E 110000      R     ACALL   L?0269
0021 2406              ADD     A,#06H
0023 110000      R     ACALL   L?0292
0026 90000000    R     MOV     DPTR,#dest_font_index
002A 110000      R     ACALL   L?0290
002D 110000      R     ACALL   L?0396
;---- Variable 'addr' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 1372
0030 C006              PUSH    AR6
0032 C007              PUSH    AR7
0034 90000000    R     MOV     DPTR,#font
0038 110000      R     ACALL   L?0285
003B 110000      R     ACALL   L?0382
003E D007              POP     AR7
0040 D006              POP     AR6
0042 110000      R     ACALL   _FOsdDownloadFontByDMA
                                           ; SOURCE LINE # 1375
0045 759300      E     MOV     DPX,#?C?XDATASEG
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 78  

0048 E500        E     MOV     A,regTW88+01H
004A 2405              ADD     A,#05H
004C 110000      R     ACALL   L?0261
004F E0                MOVX    A,@DPTR
0050 54F1              ANL     A,#0F1H
0052 90000000    R     MOV     DPTR,#value
                                           ; SOURCE LINE # 1376
0056 110000      R     ACALL   L?0268
0059 2408              ADD     A,#08H
005B 110000      R     ACALL   L?0287
005E 110000      R     ACALL   L?0403
0061 EC                MOV     A,R4
0062 35F0              ADDC    A,B
0064 30E008            JNB     ACC.0,?C0105
0067 90000000    R     MOV     DPTR,#value
006B E0                MOVX    A,@DPTR
006C 4402              ORL     A,#02H
006E F0                MOVX    @DPTR,A
006F         ?C0105:
                                           ; SOURCE LINE # 1377
006F 110000      R     ACALL   L?0269
0072 240A              ADD     A,#0AH
0074 F9                MOV     R1,A
0075 E4                CLR     A
0076 3A                ADDC    A,R2
0077 FA                MOV     R2,A
0078 110000      E     ACALL   ?C?ILDPTR
007B 2D                ADD     A,R5
007C EC                MOV     A,R4
007D 35F0              ADDC    A,B
007F 30E008            JNB     ACC.0,?C0106
0082 90000000    R     MOV     DPTR,#value
0086 E0                MOVX    A,@DPTR
0087 4404              ORL     A,#04H
0089 F0                MOVX    @DPTR,A
008A         ?C0106:
                                           ; SOURCE LINE # 1378
008A 110000      R     ACALL   L?0269
008D 240C              ADD     A,#0CH
008F 110000      R     ACALL   L?0287
0092 90000000    R     MOV     DPTR,#dest_font_index+01H
0096 E0                MOVX    A,@DPTR
0097 2F                ADD     A,R7
0098 90000000    R     MOV     DPTR,#dest_font_index
009C E0                MOVX    A,@DPTR
009D 35F0              ADDC    A,B
009F 30E008            JNB     ACC.0,?C0107
00A2 90000000    R     MOV     DPTR,#value
00A6 E0                MOVX    A,@DPTR
00A7 4408              ORL     A,#08H
00A9 F0                MOVX    @DPTR,A
00AA         ?C0107:
                                           ; SOURCE LINE # 1379
00AA 90000000    R     MOV     DPTR,#value
00AE E0                MOVX    A,@DPTR
00AF 110000      R     ACALL   L?0304
00B2 2405              ADD     A,#05H
00B4 110000      R     ACALL   L?0261
                                           ; SOURCE LINE # 1380
00B7 110000      R     ACALL   L?0266
00BA 2408              ADD     A,#08H
00BC 110000      R     ACALL   L?0287
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 79  

00BF 110000      R     ACALL   L?0301
00C2 240B              ADD     A,#0BH
00C4 110000      R     ACALL   L?0261
                                           ; SOURCE LINE # 1381
00C7 110000      R     ACALL   L?0266
00CA 240A              ADD     A,#0AH
00CC 110000      R     ACALL   L?0287
00CF 110000      R     ACALL   L?0301
00D2 2493              ADD     A,#093H
00D4 110000      R     ACALL   L?0261
                                           ; SOURCE LINE # 1382
00D7 110000      R     ACALL   L?0267
00DA 240C              ADD     A,#0CH
00DC 110000      R     ACALL   L?0287
00DF 110000      R     ACALL   L?0302
00E2 2494              ADD     A,#094H
00E4 110000      R     ACALL   L?0261
00E7 EF                MOV     A,R7
00E8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1385
00E9 7B00        R     MOV     R3,#MBYTE FOsdHwDefPaletteBpp1
00EB 7A00        R     MOV     R2,#HIGH FOsdHwDefPaletteBpp1
00ED 7900        R     MOV     R1,#LOW FOsdHwDefPaletteBpp1
00EF 110000      R     ACALL   L?0404
00F2 FF                MOV     R7,A
00F3 110000      R     ACALL   _FOsdSetPaletteColorArray
                                           ; SOURCE LINE # 1386
00F6 110000      R     ACALL   L?0269
00F9 110000      R     ACALL   L?0322
00FC 6010              JZ      ?C0108
                                           ; SOURCE LINE # 1387
00FE 110000      R     ACALL   L?0269
0101 2410              ADD     A,#010H
0103 110000      R     ACALL   L?0398
0106 110000      R     ACALL   L?0307
0109 7F24              MOV     R7,#024H
010B 110000      R     ACALL   _FOsdSetPaletteColorArray
010E         ?C0108:
                                           ; SOURCE LINE # 1388
010E 110000      R     ACALL   L?0269
0111 2413              ADD     A,#013H
0113 110000      R     ACALL   L?0323
0116 6010              JZ      ?C0109
                                           ; SOURCE LINE # 1389
0118 110000      R     ACALL   L?0269
011B 2413              ADD     A,#013H
011D 110000      R     ACALL   L?0398
0120 110000      R     ACALL   L?0283
0123 7F28              MOV     R7,#028H
0125 110000      R     ACALL   _FOsdSetPaletteColorArray
0128         ?C0109:
                                           ; SOURCE LINE # 1390
0128 110000      R     ACALL   L?0269
012B 2416              ADD     A,#016H
012D 110000      R     ACALL   L?0323
0130 6010              JZ      ?C0110
                                           ; SOURCE LINE # 1391
0132 110000      R     ACALL   L?0269
0135 2416              ADD     A,#016H
0137 110000      R     ACALL   L?0399
013A 110000      R     ACALL   L?0404
013D 7F30              MOV     R7,#030H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 80  

013F 110000      R     ACALL   _FOsdSetPaletteColorArray
0142         ?C0110:
                                           ; SOURCE LINE # 1394
0142 90000000    R     MOV     DPTR,#sName
0146 110000      R     ACALL   L?0270
0149 4A                ORL     A,R2
014A 4B                ORL     A,R3
014B 6012              JZ      ?C0111
014D 90000000    R     MOV     DPTR,#sName
0151 A3                INC     DPTR
0152 A3                INC     DPTR
0153 E0                MOVX    A,@DPTR
0154 F9                MOV     R1,A
0155 EB                MOV     A,R3
0156 110000      R     ACALL   L?0318
0159 EA                MOV     A,R2
015A F0                MOVX    @DPTR,A
015B A3                INC     DPTR
015C E9                MOV     A,R1
015D 800B              SJMP    ?C0236
015F         ?C0111:
                                           ; SOURCE LINE # 1395
015F 7400        R     MOV     A,#MBYTE ?SC_78
0161 110000      R     ACALL   L?0318
0164 7400        R     MOV     A,#HIGH ?SC_78
0166 F0                MOVX    @DPTR,A
0167 A3                INC     DPTR
0168 7400        R     MOV     A,#LOW ?SC_78
016A         ?C0236:
016A F0                MOVX    @DPTR,A
016B 7B00        R     MOV     R3,#MBYTE FontOsdInfo
016D 7A00        R     MOV     R2,#HIGH FontOsdInfo
016F 7900        R     MOV     R1,#LOW FontOsdInfo
0171 110000      E     ACALL   _TWstrcpy
0174         ?C0112:
                                           ; SOURCE LINE # 1396
0174 110000      R     ACALL   L?0269
0177 2406              ADD     A,#06H
0179 110000      R     ACALL   L?0292
017C 90000000    R     MOV     DPTR,#FontOsdInfo+010H
0180 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1397
0181 90000000    R     MOV     DPTR,#font
0185 110000      R     ACALL   L?0291
0188 90000000    R     MOV     DPTR,#FontOsdInfo+011H
                                           ; SOURCE LINE # 1399
018C 110000      R     ACALL   L?0349
018F 2408              ADD     A,#08H
0191 110000      R     ACALL   L?0287
0194 110000      R     ACALL   L?0403
0197 FE                MOV     R6,A
0198 EC                MOV     A,R4
0199 35F0              ADDC    A,B
019B 90000000    R     MOV     DPTR,#FontOsdInfo+014H
019F F0                MOVX    @DPTR,A
01A0 A3                INC     DPTR
01A1 CE                XCH     A,R6
                                           ; SOURCE LINE # 1400
01A2 110000      R     ACALL   L?0349
01A5 240A              ADD     A,#0AH
01A7 110000      R     ACALL   L?0287
01AA 90000000    R     MOV     DPTR,#FontOsdInfo+016H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 81  

01AE 110000      R     ACALL   L?0317
                                           ; SOURCE LINE # 1401
01B1 110000      R     ACALL   L?0350
01B4 240C              ADD     A,#0CH
01B6 110000      R     ACALL   L?0287
01B9 90000000    R     MOV     DPTR,#FontOsdInfo+018H
01BD 110000      R     ACALL   L?0317
                                           ; SOURCE LINE # 1402
01C0 110000      R     ACALL   L?0350
01C3 240E              ADD     A,#0EH
01C5 110000      R     ACALL   L?0287
01C8 90000000    R     MOV     DPTR,#FontOsdInfo+01AH
01CC 110000      R     ACALL   L?0325
                                           ; SOURCE LINE # 1404
01CF 010000      R     AJMP    DumpFontInfo
             ; FUNCTION _InitFontRam (END)

             ; FUNCTION _TestInitFontRam (BEGIN)
                                           ; SOURCE LINE # 1410
;---- Variable 'start' assigned to Register 'R6/R7' ----
                                           ; SOURCE LINE # 1411
                                           ; SOURCE LINE # 1412
0000 90000000    R     MOV     DPTR,#?_InitFontRam?BYTE+05H
0004 7400        R     MOV     A,#MBYTE ?SC_86
0006 F0                MOVX    @DPTR,A
0007 A3                INC     DPTR
0008 7400        R     MOV     A,#HIGH ?SC_86
000A F0                MOVX    @DPTR,A
000B 7400        R     MOV     A,#LOW ?SC_86
000D 110000      R     ACALL   L?0378
0010 010000      R     AJMP    _InitFontRam
             ; FUNCTION _TestInitFontRam (END)

             ; FUNCTION _FOsdCopyMsgBuff2Osdram (BEGIN)
                                           ; SOURCE LINE # 1442
0000 90000000    R     MOV     DPTR,#fOn
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1443
                                           ; SOURCE LINE # 1446
0006 90000000    R     MOV     DPTR,#columns
000A 7428              MOV     A,#028H
                                           ; SOURCE LINE # 1453
000C 110000      R     ACALL   L?0365
000F 110000      E     ACALL   _TWstrlen
0012 90000000    R     MOV     DPTR,#len
0016 EF                MOV     A,R7
0017 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1462
0018 6073              JZ      ?C0116
001A         ?C0115:
                                           ; SOURCE LINE # 1464
001A 7B00        R     MOV     R3,#MBYTE ?SC_91
001C 7A00        R     MOV     R2,#HIGH ?SC_91
001E 7900        R     MOV     R1,#LOW ?SC_91
0020 90000000    R     MOV     DPTR,#len
0024 E0                MOVX    A,@DPTR
0025 90000000    E     MOV     DPTR,#?_dPrintf?BYTE+03H
0029 F0                MOVX    @DPTR,A
002A 110000      E     ACALL   _dPrintf
                                           ; SOURCE LINE # 1466
002D 90000000    R     MOV     DPTR,#FontOsdInfo+025H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 82  

0031 E0                MOVX    A,@DPTR
0032 90000000    R     MOV     DPTR,#columns
0036 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1467
0037 90000000    R     MOV     DPTR,#FontOsdInfo+029H
003B E0                MOVX    A,@DPTR
003C 90000000    R     MOV     DPTR,#attr
0040 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1468
0041 90000000    R     MOV     DPTR,#FontOsdInfo+01FH
0045 E0                MOVX    A,@DPTR
0046 FF                MOV     R7,A
0047 A3                INC     DPTR
0048 E0                MOVX    A,@DPTR
0049 90000000    R     MOV     DPTR,#osdram
004D CF                XCH     A,R7
004E F0                MOVX    @DPTR,A
004F A3                INC     DPTR
0050 EF                MOV     A,R7
0051 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1474
0052 90000000    R     MOV     DPTR,#len
0056 E0                MOVX    A,@DPTR
0057 FD                MOV     R5,A
0058 7B01              MOV     R3,#01H
005A E4                CLR     A
005B FF                MOV     R7,A
005C 110000      R     ACALL   _FOsdWinScreenWH
                                           ; SOURCE LINE # 1479
005F 7F01              MOV     R7,#01H
0061 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 1480
0064 90000000    R     MOV     DPTR,#osdram
0068 E0                MOVX    A,@DPTR
0069 FE                MOV     R6,A
006A A3                INC     DPTR
006B E0                MOVX    A,@DPTR
006C FF                MOV     R7,A
006D 90000000    R     MOV     DPTR,#attr
0071 E0                MOVX    A,@DPTR
0072 FD                MOV     R5,A
0073 110000      R     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 1481
0076 110000      R     ACALL   L?0367
0079 90000000    R     MOV     DPTR,#len
007D E0                MOVX    A,@DPTR
007E FD                MOV     R5,A
007F 110000      R     ACALL   _FOsdRamWriteByteStr
                                           ; SOURCE LINE # 1483
0082 90000000    R     MOV     DPTR,#fOn
0086 E0                MOVX    A,@DPTR
0087 FD                MOV     R5,A
0088 E4                CLR     A
0089 FF                MOV     R7,A
008A 110000      R     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 1484
008D         ?C0116:
008D 22                RET     
             ; FUNCTION _FOsdCopyMsgBuff2Osdram (END)

             ; FUNCTION _FOsdIndexMsgPrint (BEGIN)
                                           ; SOURCE LINE # 1489
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 83  

0000 90000000    R     MOV     DPTR,#index
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1490
                                           ; SOURCE LINE # 1491
0006 110000      E     ACALL   MenuGetLevel
0009 EF                MOV     A,R7
000A 6003              JZ      $ + 5H
000C 010000      R     AJMP    ?C0118
000F         ?C0117:
                                           ; SOURCE LINE # 1494
000F 90000000    R     MOV     DPTR,#index
0013 E0                MOVX    A,@DPTR
0014 14                DEC     A
0015 601F              JZ      ?C0121
0017 14                DEC     A
0018 6029              JZ      ?C0122
001A 14                DEC     A
001B 6035              JZ      ?C0123
001D 14                DEC     A
001E 604B              JZ      ?C0124
0020 14                DEC     A
0021 6055              JZ      ?C0125
0023 2405              ADD     A,#05H
0025 7056              JNZ     ?C0126
                                           ; SOURCE LINE # 1495
0027         ?C0120:
                                           ; SOURCE LINE # 1496
                                           ; SOURCE LINE # 1497
0027 110000      R     ACALL   L?0400
002A 7400        R     MOV     A,#MBYTE ?SC_100
002C F0                MOVX    @DPTR,A
002D A3                INC     DPTR
002E 7400        R     MOV     A,#HIGH ?SC_100
0030 F0                MOVX    @DPTR,A
0031 A3                INC     DPTR
0032 7400        R     MOV     A,#LOW ?SC_100
                                           ; SOURCE LINE # 1498
0034 802D              SJMP    ?C0239
                                           ; SOURCE LINE # 1499
0036         ?C0121:
                                           ; SOURCE LINE # 1500
0036 7400        R     MOV     A,#MBYTE ?SC_108
0038 110000      R     ACALL   L?0324
003B 7400        R     MOV     A,#HIGH ?SC_108
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 7400        R     MOV     A,#LOW ?SC_108
                                           ; SOURCE LINE # 1501
0041 8045              SJMP    ?C0240
                                           ; SOURCE LINE # 1502
0043         ?C0122:
                                           ; SOURCE LINE # 1503
                                           ; SOURCE LINE # 1504
0043 110000      R     ACALL   L?0400
0046 7400        R     MOV     A,#MBYTE ?SC_125
0048 F0                MOVX    @DPTR,A
0049 A3                INC     DPTR
004A 7400        R     MOV     A,#HIGH ?SC_125
004C F0                MOVX    @DPTR,A
004D A3                INC     DPTR
004E 7400        R     MOV     A,#LOW ?SC_125
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 84  

0050         ?C0237:
                                           ; SOURCE LINE # 1505
0050 8011              SJMP    ?C0239
                                           ; SOURCE LINE # 1506
0052         ?C0123:
                                           ; SOURCE LINE # 1507
0052 110000      R     ACALL   FOsdSetInputMainString2FOsdMsgBuff
                                           ; SOURCE LINE # 1508
0055 90000000    E     MOV     DPTR,#?_TWstrcat?BYTE+03H
0059 7400        R     MOV     A,#MBYTE ?SC_136
005B F0                MOVX    @DPTR,A
005C A3                INC     DPTR
005D 7400        R     MOV     A,#HIGH ?SC_136
005F F0                MOVX    @DPTR,A
0060 A3                INC     DPTR
0061 7400        R     MOV     A,#LOW ?SC_136
0063         ?C0239:
0063 110000      R     ACALL   L?0365
0066 110000      E     ACALL   _TWstrcat
                                           ; SOURCE LINE # 1509
0069 8023              SJMP    ?C0119
                                           ; SOURCE LINE # 1510
006B         ?C0124:
                                           ; SOURCE LINE # 1511
006B 7400        R     MOV     A,#MBYTE ?SC_150
006D 110000      R     ACALL   L?0324
0070 7400        R     MOV     A,#HIGH ?SC_150
0072 F0                MOVX    @DPTR,A
0073 A3                INC     DPTR
0074 7400        R     MOV     A,#LOW ?SC_150
0076         ?C0238:
                                           ; SOURCE LINE # 1512
0076 8010              SJMP    ?C0240
                                           ; SOURCE LINE # 1513
0078         ?C0125:
                                           ; SOURCE LINE # 1514
0078 110000      R     ACALL   FOsdSetInputMainString2FOsdMsgBuff
                                           ; SOURCE LINE # 1515
007B 8011              SJMP    ?C0119
                                           ; SOURCE LINE # 1516
007D         ?C0126:
                                           ; SOURCE LINE # 1517
007D 7400        R     MOV     A,#MBYTE ?SC_168
007F 110000      R     ACALL   L?0333
0082 7400        R     MOV     A,#HIGH ?SC_168
0084 F0                MOVX    @DPTR,A
0085 A3                INC     DPTR
0086 7400        R     MOV     A,#LOW ?SC_168
0088         ?C0240:
0088 110000      R     ACALL   L?0366
008B 110000      E     ACALL   _TWstrcpy
                                           ; SOURCE LINE # 1518
                                           ; SOURCE LINE # 1519
008E         ?C0119:
                                           ; SOURCE LINE # 1520
008E 7F01              MOV     R7,#01H
0090 110000      R     ACALL   _FOsdCopyMsgBuff2Osdram
                                           ; SOURCE LINE # 1521
0093         ?C0118:
0093 22                RET     
0094         L?0400:
0094 110000      R     ACALL   FOsdSetInputMainString2FOsdMsgBuff
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 85  

0097 90000000    E     MOV     DPTR,#?_TWstrcat?BYTE+03H
009B 22                RET     
             ; FUNCTION _FOsdIndexMsgPrint (END)

             ; FUNCTION _FOsdDumpPalette (BEGIN)
                                           ; SOURCE LINE # 1527
0000 90000000    R     MOV     DPTR,#winno
0004 EF                MOV     A,R7
0005 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1528
                                           ; SOURCE LINE # 1531
0006 7F01              MOV     R7,#01H
0008 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 1532
000B 110000      R     ACALL   L?0345
000E E4                CLR     A
000F FD                MOV     R5,A
0010 110000      R     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 1534
0013 110000      R     ACALL   L?0345
0016 E4                CLR     A
0017 FB                MOV     R3,A
0018 FA                MOV     R2,A
0019 7D70              MOV     R5,#070H
001B FC                MOV     R4,A
001C 110000      R     ACALL   _FOsdWinScreenXY
                                           ; SOURCE LINE # 1535
001F 110000      R     ACALL   L?0346
0022 7B02              MOV     R3,#02H
0024 7D10              MOV     R5,#010H
0026 110000      R     ACALL   _FOsdWinScreenWH
                                           ; SOURCE LINE # 1536
0029 110000      R     ACALL   L?0346
002C E4                CLR     A
002D FB                MOV     R3,A
002E 7D01              MOV     R5,#01H
0030 110000      R     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 1537
0033 110000      R     ACALL   L?0346
0036 110000      R     ACALL   _FOsdWinAlphaPixel
                                           ; SOURCE LINE # 1538
0039 110000      R     ACALL   L?0346
003C 110000      R     ACALL   _FOsdWinMulticolor
                                           ; SOURCE LINE # 1539
003F 110000      R     ACALL   L?0346
0042 7D78              MOV     R5,#078H
0044 7C00              MOV     R4,#00H
0046 110000      R     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 1541
0049 E4                CLR     A
004A 90000000    R     MOV     DPTR,#palette_group
004E F0                MOVX    @DPTR,A
004F         ?C0127:
                                           ; SOURCE LINE # 1543
004F 90000000    R     MOV     DPTR,#palette_group
0053 E0                MOVX    A,@DPTR
0054 FD                MOV     R5,A
0055 2478              ADD     A,#078H
0057 FF                MOV     R7,A
0058 E4                CLR     A
0059 33                RLC     A
005A FE                MOV     R6,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 86  

005B 110000      R     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 1544
005E 7F00              MOV     R7,#00H
0060 7E01              MOV     R6,#01H
0062 110000      R     ACALL   _FOsdRamSetData
                                           ; SOURCE LINE # 1547
0065 90000000    R     MOV     DPTR,#palette_group
0069 E0                MOVX    A,@DPTR
006A FD                MOV     R5,A
006B 1E                DEC     R6
006C 2478              ADD     A,#078H
006E FF                MOV     R7,A
006F EE                MOV     A,R6
0070 33                RLC     A
0071 CF                XCH     A,R7
0072 2410              ADD     A,#010H
0074 CF                XCH     A,R7
0075 3400              ADDC    A,#00H
0077 FE                MOV     R6,A
0078 ED                MOV     A,R5
0079 C4                SWAP    A
007A 54F0              ANL     A,#0F0H
007C FD                MOV     R5,A
007D E0                MOVX    A,@DPTR
007E 04                INC     A
007F 4D                ORL     A,R5
0080 FD                MOV     R5,A
0081 110000      R     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 1548
0084 110000      R     ACALL   L?0260
0087 E0                MOVX    A,@DPTR
0088 54DF              ANL     A,#0DFH
008A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1549
008B 90000000    R     MOV     DPTR,#palette_group
008F E0                MOVX    A,@DPTR
0090 FF                MOV     R7,A
0091 C3                CLR     C
0092 940A              SUBB    A,#0AH
0094 5005              JNC     ?C0130
0096 EF                MOV     A,R7
0097 2430              ADD     A,#030H
0099 8007              SJMP    ?C0241
009B         ?C0130:
                                           ; SOURCE LINE # 1550
009B 90000000    R     MOV     DPTR,#palette_group
009F E0                MOVX    A,@DPTR
00A0 2437              ADD     A,#037H
00A2         ?C0241:
00A2 110000      R     ACALL   L?0304
00A5 2407              ADD     A,#07H
00A7 110000      R     ACALL   L?0261
00AA EF                MOV     A,R7
00AB F0                MOVX    @DPTR,A
00AC         ?C0131:
                                           ; SOURCE LINE # 1552
00AC 7F01              MOV     R7,#01H
00AE 7E00              MOV     R6,#00H
00B0 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1553
00B3 90000000    R     MOV     DPTR,#palette_group
00B7 E0                MOVX    A,@DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 87  

00B8 04                INC     A
00B9 F0                MOVX    @DPTR,A
00BA E0                MOVX    A,@DPTR
00BB C3                CLR     C
00BC 9410              SUBB    A,#010H
00BE 408F              JC      ?C0127
00C0         ?C0128:
                                           ; SOURCE LINE # 1555
00C0 110000      R     ACALL   L?0346
00C3 7D01              MOV     R5,#01H
00C5 010000      R     AJMP    _FOsdWinEnable
             ; FUNCTION _FOsdDumpPalette (END)

             ; FUNCTION _GetInputMainString (BEGIN)
                                           ; SOURCE LINE # 1565
0000 90000000    R     MOV     DPTR,#p_itoa_buff
0004 110000      R     ACALL   L?0299
                                           ; SOURCE LINE # 1566
                                           ; SOURCE LINE # 1570
0007 110000      E     ACALL   GetInputMain
;---- Variable 'InputMainIndex' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1572
000A EF                MOV     A,R7
000B B40900            CJNE    A,#09H,?C0219
000E         ?C0219:
000E 4003              JC      $ + 5H
0010 010000      R     AJMP    ?C0143
0013 90000000    R     MOV     DPTR,#?C0220
0017 F8                MOV     R0,A
0018 28                ADD     A,R0
0019 28                ADD     A,R0
001A 73                JMP     @A+DPTR
001B         ?C0220:
001B 010000      R     AJMP    ?C0134
001E 010000      R     AJMP    ?C0135
0021 010000      R     AJMP    ?C0136
0024 010000      R     AJMP    ?C0137
0027 010000      R     AJMP    ?C0138
002A 010000      R     AJMP    ?C0139
002D 010000      R     AJMP    ?C0140
0030 010000      R     AJMP    ?C0141
0033 010000      R     AJMP    ?C0142
                                           ; SOURCE LINE # 1573
0036         ?C0134:
0036 7400        R     MOV     A,#MBYTE ?SC_176
0038 110000      R     ACALL   L?0333
003B 7400        R     MOV     A,#HIGH ?SC_176
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 7400        R     MOV     A,#LOW ?SC_176
0041 8076              SJMP    ?C0250
                                           ; SOURCE LINE # 1574
0043         ?C0135:
0043 7400        R     MOV     A,#MBYTE ?SC_181
0045 110000      R     ACALL   L?0341
0048 7400        R     MOV     A,#HIGH ?SC_181
004A F0                MOVX    @DPTR,A
004B A3                INC     DPTR
004C 7400        R     MOV     A,#LOW ?SC_181
004E         ?C0242:
004E 8069              SJMP    ?C0250
                                           ; SOURCE LINE # 1575
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 88  

0050         ?C0136:
0050 7400        R     MOV     A,#MBYTE ?SC_188
0052 110000      R     ACALL   L?0341
0055 7400        R     MOV     A,#HIGH ?SC_188
0057 F0                MOVX    @DPTR,A
0058 A3                INC     DPTR
0059 7400        R     MOV     A,#LOW ?SC_188
005B         ?C0243:
005B 805C              SJMP    ?C0250
                                           ; SOURCE LINE # 1576
005D         ?C0137:
005D 7400        R     MOV     A,#MBYTE ?SC_198
005F 110000      R     ACALL   L?0356
0062 7400        R     MOV     A,#HIGH ?SC_198
0064 F0                MOVX    @DPTR,A
0065 A3                INC     DPTR
0066 7400        R     MOV     A,#LOW ?SC_198
0068         ?C0244:
0068 804F              SJMP    ?C0250
                                           ; SOURCE LINE # 1577
006A         ?C0138:
006A 7400        R     MOV     A,#MBYTE ?SC_201
006C 110000      R     ACALL   L?0356
006F 7400        R     MOV     A,#HIGH ?SC_201
0071 F0                MOVX    @DPTR,A
0072 A3                INC     DPTR
0073 7400        R     MOV     A,#LOW ?SC_201
0075         ?C0245:
0075 8042              SJMP    ?C0250
                                           ; SOURCE LINE # 1578
0077         ?C0139:
0077 7400        R     MOV     A,#MBYTE ?SC_205
0079 110000      R     ACALL   L?0371
007C 7400        R     MOV     A,#HIGH ?SC_205
007E F0                MOVX    @DPTR,A
007F A3                INC     DPTR
0080 7400        R     MOV     A,#LOW ?SC_205
0082         ?C0246:
0082 8035              SJMP    ?C0250
                                           ; SOURCE LINE # 1579
0084         ?C0140:
0084 7400        R     MOV     A,#MBYTE ?SC_213
0086 110000      R     ACALL   L?0371
0089 7400        R     MOV     A,#HIGH ?SC_213
008B F0                MOVX    @DPTR,A
008C A3                INC     DPTR
008D 7400        R     MOV     A,#LOW ?SC_213
008F         ?C0247:
008F 8028              SJMP    ?C0250
                                           ; SOURCE LINE # 1580
0091         ?C0141:
0091 7400        R     MOV     A,#MBYTE ?SC_221
0093 110000      R     ACALL   L?0405
0096 7400        R     MOV     A,#HIGH ?SC_221
0098 F0                MOVX    @DPTR,A
0099 A3                INC     DPTR
009A 7400        R     MOV     A,#LOW ?SC_221
009C         ?C0248:
009C 801B              SJMP    ?C0250
                                           ; SOURCE LINE # 1581
009E         ?C0142:
009E 7400        R     MOV     A,#MBYTE ?SC_227
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 89  

00A0 110000      R     ACALL   L?0405
00A3 7400        R     MOV     A,#HIGH ?SC_227
00A5 F0                MOVX    @DPTR,A
00A6 A3                INC     DPTR
00A7 7400        R     MOV     A,#LOW ?SC_227
00A9         ?C0249:
00A9 800E              SJMP    ?C0250
                                           ; SOURCE LINE # 1582
00AB         ?C0143:
00AB 90000000    E     MOV     DPTR,#?_TWstrcpy?BYTE+03H
00AF 7400        R     MOV     A,#MBYTE ?SC_232
00B1 F0                MOVX    @DPTR,A
00B2 A3                INC     DPTR
00B3 7400        R     MOV     A,#HIGH ?SC_232
00B5 F0                MOVX    @DPTR,A
00B6 A3                INC     DPTR
00B7 7400        R     MOV     A,#LOW ?SC_232
00B9         ?C0250:
00B9 F0                MOVX    @DPTR,A
00BA 90000000    R     MOV     DPTR,#p_itoa_buff
00BE 110000      R     ACALL   L?0270
00C1 F9                MOV     R1,A
00C2 110000      E     ACALL   _TWstrcpy
                                           ; SOURCE LINE # 1583
00C5         ?C0133:
                                           ; SOURCE LINE # 1584
00C5 90000000    R     MOV     DPTR,#p_itoa_buff
00C9 110000      R     ACALL   L?0270
00CC F9                MOV     R1,A
00CD 110000      E     ACALL   _TWstrlen
;---- Variable 'len' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1585
00D0 90000000    R     MOV     DPTR,#p_itoa_buff
00D4 110000      R     ACALL   L?0270
00D7 7E00              MOV     R6,#00H
00D9 2F                ADD     A,R7
00DA F9                MOV     R1,A
00DB EE                MOV     A,R6
00DC 3A                ADDC    A,R2
00DD FA                MOV     R2,A
                                           ; SOURCE LINE # 1586
00DE         ?C0144:
00DE 22                RET     
             ; FUNCTION _GetInputMainString (END)

             ; FUNCTION FOsdSetInputMainString2FOsdMsgBuff (BEGIN)
                                           ; SOURCE LINE # 1593
                                           ; SOURCE LINE # 1594
                                           ; SOURCE LINE # 1595
0000 110000      R     ACALL   L?0367
0003 010000      R     AJMP    _GetInputMainString
             ; FUNCTION FOsdSetInputMainString2FOsdMsgBuff (END)

             ; FUNCTION _FOsdRamClearAll (BEGIN)
                                           ; SOURCE LINE # 1761
0000 90000000    R     MOV     DPTR,#dat
0004 110000      R     ACALL   L?0389
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1762
                                           ; SOURCE LINE # 1764
0009 E4                CLR     A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 90  

000A FD                MOV     R5,A
000B FF                MOV     R7,A
000C 110000      R     ACALL   _FOsdRamSetFifo
                                           ; SOURCE LINE # 1765
000F 90000000    R     MOV     DPTR,#attr
0013 E0                MOVX    A,@DPTR
0014 FD                MOV     R5,A
0015 E4                CLR     A
0016 FF                MOV     R7,A
0017 FE                MOV     R6,A
0018 110000      R     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 1766
001B 90000000    R     MOV     DPTR,#dat
001F E0                MOVX    A,@DPTR
0020 30E009            JNB     ACC.0,?C0146
0023 110000      R     ACALL   L?0260
0026 E0                MOVX    A,@DPTR
0027 4420              ORL     A,#020H
0029 F0                MOVX    @DPTR,A
002A 8007              SJMP    ?C0147
002C         ?C0146:
                                           ; SOURCE LINE # 1767
002C 110000      R     ACALL   L?0260
002F E0                MOVX    A,@DPTR
0030 54DF              ANL     A,#0DFH
0032 F0                MOVX    @DPTR,A
0033         ?C0147:
                                           ; SOURCE LINE # 1768
;---- Variable 'i' assigned to Register 'R6/R7' ----
0033 E4                CLR     A
0034 FF                MOV     R7,A
0035 FE                MOV     R6,A
0036         ?C0148:
                                           ; SOURCE LINE # 1769
0036 90000000    R     MOV     DPTR,#dat
003A A3                INC     DPTR
003B E0                MOVX    A,@DPTR
003C FD                MOV     R5,A
003D 759300      E     MOV     DPX,#?C?XDATASEG
0040 E500        E     MOV     A,regTW88+01H
0042 2407              ADD     A,#07H
0044 110000      R     ACALL   L?0261
0047 ED                MOV     A,R5
0048 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1770
0049 0F                INC     R7
004A BF0001            CJNE    R7,#00H,?C0221
004D 0E                INC     R6
004E         ?C0221:
004E E4                CLR     A
004F B507E4            CJNE    A,AR7,?C0148
0052 EE                MOV     A,R6
0053 B402E0            CJNE    A,#02H,?C0148
0056         ?C0149:
                                           ; SOURCE LINE # 1771
0056 7D01              MOV     R5,#01H
0058 7F01              MOV     R7,#01H
005A 010000      R     AJMP    _FOsdRamSetFifo
             ; FUNCTION _FOsdRamClearAll (END)

             ; FUNCTION _InitFontRamByNum (BEGIN)
                                           ; SOURCE LINE # 1850
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 91  

0000 90000000    R     MOV     DPTR,#start
0004 EC                MOV     A,R4
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 ED                MOV     A,R5
0008 F0                MOVX    @DPTR,A
;---- Variable 'FontMode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1851
                                           ; SOURCE LINE # 1852
0009 EF                MOV     A,R7
000A 14                DEC     A
000B 600D              JZ      ?C0154
000D 14                DEC     A
000E 600F              JZ      ?C0155
0010 14                DEC     A
0011 6017              JZ      ?C0156
0013 14                DEC     A
0014 603C              JZ      ?C0157
0016 2404              ADD     A,#04H
                                           ; SOURCE LINE # 1853
0018         ?C0153:
                                           ; SOURCE LINE # 1854
                                           ; SOURCE LINE # 1856
0018 8060              SJMP    ?C0251
                                           ; SOURCE LINE # 1857
001A         ?C0154:
                                           ; SOURCE LINE # 1860
001A 110000      R     ACALL   L?0326
                                           ; SOURCE LINE # 1861
001D 805E              SJMP    ?C0252
                                           ; SOURCE LINE # 1862
001F         ?C0155:
                                           ; SOURCE LINE # 1864
001F 90000000    R     MOV     DPTR,#start
0023 E0                MOVX    A,@DPTR
0024 FE                MOV     R6,A
0025 A3                INC     DPTR
0026 E0                MOVX    A,@DPTR
0027 FF                MOV     R7,A
                                           ; SOURCE LINE # 1865
                                           ; SOURCE LINE # 1866
0028 8010              SJMP    ?C0253
                                           ; SOURCE LINE # 1867
002A         ?C0156:
                                           ; SOURCE LINE # 1868
002A 110000      R     ACALL   L?0326
002D 110000      R     ACALL   _InitFontRam
                                           ; SOURCE LINE # 1869
0030 90000000    R     MOV     DPTR,#start+01H
0034 E0                MOVX    A,@DPTR
0035 2480              ADD     A,#080H
0037 110000      R     ACALL   L?0406
003A         ?C0253:
003A 90000000    R     MOV     DPTR,#?_InitFontRam?BYTE+05H
003E 7400        R     MOV     A,#MBYTE ?SC_248
0040 F0                MOVX    @DPTR,A
0041 A3                INC     DPTR
0042 7400        R     MOV     A,#HIGH ?SC_248
0044 F0                MOVX    @DPTR,A
0045 7400        R     MOV     A,#LOW ?SC_248
0047 110000      R     ACALL   L?0378
004A 110000      R     ACALL   _InitFontRam
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 92  

                                           ; SOURCE LINE # 1870
004D E4                CLR     A
004E FF                MOV     R7,A
004F 010000      R     AJMP    _FOsdInitBpp3AlphaTable
                                           ; SOURCE LINE # 1872
                                           ; SOURCE LINE # 1873
0052         ?C0157:
                                           ; SOURCE LINE # 1874
0052 110000      R     ACALL   L?0328
0055 110000      R     ACALL   _InitFontRam
                                           ; SOURCE LINE # 1875
0058 90000000    R     MOV     DPTR,#start+01H
005C E0                MOVX    A,@DPTR
005D 24A0              ADD     A,#0A0H
005F 110000      R     ACALL   L?0406
0062 90000000    R     MOV     DPTR,#?_ReplaceFontRam?BYTE+05H
0066 7400        R     MOV     A,#MBYTE ?SC_257
0068 F0                MOVX    @DPTR,A
0069 A3                INC     DPTR
006A 7400        R     MOV     A,#HIGH ?SC_257
006C F0                MOVX    @DPTR,A
006D A3                INC     DPTR
006E 7400        R     MOV     A,#LOW ?SC_257
0070 F0                MOVX    @DPTR,A
0071 7B00        E     MOV     R3,#MBYTE kor_font
0073 7A00        E     MOV     R2,#HIGH kor_font
0075 7900        E     MOV     R1,#LOW kor_font
0077 010000      R     AJMP    _ReplaceFontRam
                                           ; SOURCE LINE # 1876
                                           ; SOURCE LINE # 1877
007A         ?C0251:
007A 110000      R     ACALL   L?0328
007D         ?C0252:
007D 110000      R     ACALL   _InitFontRam
                                           ; SOURCE LINE # 1881
                                           ; SOURCE LINE # 1882
                                           ; SOURCE LINE # 1883
0080         ?C0159:
0080 22                RET     
             ; FUNCTION _InitFontRamByNum (END)

             ; FUNCTION _FontInfo (BEGIN)
                                           ; SOURCE LINE # 1887
0000 90000000    R     MOV     DPTR,#start
0004 110000      R     ACALL   L?0389
0007 110000      R     ACALL   L?0299
                                           ; SOURCE LINE # 1888
                                           ; SOURCE LINE # 1892
000A 90000000    R     MOV     DPTR,#font
000E 110000      R     ACALL   L?0270
0011 F9                MOV     R1,A
0012 110000      E     ACALL   ?C?LLDPTR
0015 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0019 110000      E     ACALL   ?C?LSTXDATA
001C 7B00        R     MOV     R3,#MBYTE ?SC_265
001E 7A00        R     MOV     R2,#HIGH ?SC_265
0020 7900        R     MOV     R1,#LOW ?SC_265
                                           ; SOURCE LINE # 1893
0022 110000      R     ACALL   L?0342
0025 110000      R     ACALL   L?0270
0028 110000      R     ACALL   L?0286
002B 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 93  

002F 110000      R     ACALL   L?0383
0032 7B00        R     MOV     R3,#MBYTE ?SC_275
0034 7A00        R     MOV     R2,#HIGH ?SC_275
0036 7900        R     MOV     R1,#LOW ?SC_275
                                           ; SOURCE LINE # 1894
0038 110000      R     ACALL   L?0342
003B 110000      R     ACALL   L?0270
003E 2406              ADD     A,#06H
0040 110000      R     ACALL   L?0292
0043 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0047 F0                MOVX    @DPTR,A
0048 90000000    R     MOV     DPTR,#font
004C 110000      R     ACALL   L?0291
004F 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0053 F0                MOVX    @DPTR,A
0054 7B00        R     MOV     R3,#MBYTE ?SC_10
0056 7A00        R     MOV     R2,#HIGH ?SC_10
0058 7900        R     MOV     R1,#LOW ?SC_10
                                           ; SOURCE LINE # 1895
005A 110000      R     ACALL   L?0362
005D 110000      R     ACALL   L?0270
0060 2408              ADD     A,#08H
0062 110000      R     ACALL   L?0287
0065 90000000    R     MOV     DPTR,#start
0069 E0                MOVX    A,@DPTR
006A FC                MOV     R4,A
006B A3                INC     DPTR
006C E0                MOVX    A,@DPTR
006D FD                MOV     R5,A
006E 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0072 110000      R     ACALL   L?0347
0075 240A              ADD     A,#0AH
0077 110000      R     ACALL   L?0287
007A 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
007E 110000      R     ACALL   L?0325
0081 110000      R     ACALL   L?0348
0084 240C              ADD     A,#0CH
0086 110000      R     ACALL   L?0287
0089 ED                MOV     A,R5
008A 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
008E 110000      R     ACALL   L?0347
0091 240E              ADD     A,#0EH
0093 110000      R     ACALL   L?0287
0096 ED                MOV     A,R5
0097 2F                ADD     A,R7
0098 FE                MOV     R6,A
0099 EC                MOV     A,R4
009A 35F0              ADDC    A,B
009C 90000000    E     MOV     DPTR,#?_Printf?BYTE+09H
00A0 F0                MOVX    @DPTR,A
00A1 A3                INC     DPTR
00A2 CE                XCH     A,R6
00A3 F0                MOVX    @DPTR,A
00A4 7B00        R     MOV     R3,#MBYTE ?SC_284
00A6 7A00        R     MOV     R2,#HIGH ?SC_284
00A8 7900        R     MOV     R1,#LOW ?SC_284
                                           ; SOURCE LINE # 1896
00AA 110000      R     ACALL   L?0362
00AD 110000      R     ACALL   L?0270
00B0 110000      R     ACALL   L?0322
00B3 601B              JZ      ?C0160
                                           ; SOURCE LINE # 1897
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 94  

00B5 7B00        R     MOV     R3,#MBYTE ?SC_316
00B7 7A00        R     MOV     R2,#HIGH ?SC_316
00B9 7900        R     MOV     R1,#LOW ?SC_316
                                           ; SOURCE LINE # 1898
00BB 110000      R     ACALL   L?0401
00BE 110000      R     ACALL   L?0270
00C1 2410              ADD     A,#010H
00C3 110000      R     ACALL   L?0297
                                           ; SOURCE LINE # 1899
00C6 110000      R     ACALL   L?0390
00C9         ?C0161:
                                           ; SOURCE LINE # 1900
00C9 110000      R     ACALL   L?0276
00CC 9404              SUBB    A,#04H
00CE 40F9              JC      ?C0161
                                           ; SOURCE LINE # 1901
00D0         ?C0160:
                                           ; SOURCE LINE # 1902
00D0 90000000    R     MOV     DPTR,#font
00D4 110000      R     ACALL   L?0270
00D7 2413              ADD     A,#013H
00D9 110000      R     ACALL   L?0323
00DC 601B              JZ      ?C0164
                                           ; SOURCE LINE # 1903
00DE 7B00        R     MOV     R3,#MBYTE ?SC_331
00E0 7A00        R     MOV     R2,#HIGH ?SC_331
00E2 7900        R     MOV     R1,#LOW ?SC_331
                                           ; SOURCE LINE # 1904
00E4 110000      R     ACALL   L?0401
00E7 110000      R     ACALL   L?0270
00EA 2413              ADD     A,#013H
00EC 110000      R     ACALL   L?0297
                                           ; SOURCE LINE # 1905
00EF 110000      R     ACALL   L?0390
00F2         ?C0165:
                                           ; SOURCE LINE # 1906
00F2 110000      R     ACALL   L?0276
00F5 9408              SUBB    A,#08H
00F7 40F9              JC      ?C0165
                                           ; SOURCE LINE # 1907
00F9         ?C0164:
                                           ; SOURCE LINE # 1908
00F9 90000000    R     MOV     DPTR,#font
00FD 110000      R     ACALL   L?0270
0100 2416              ADD     A,#016H
0102 110000      R     ACALL   L?0323
0105 602E              JZ      ?C0175
                                           ; SOURCE LINE # 1909
0107 7B00        R     MOV     R3,#MBYTE ?SC_340
0109 7A00        R     MOV     R2,#HIGH ?SC_340
010B 7900        R     MOV     R1,#LOW ?SC_340
010D 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1910
0110 90000000    R     MOV     DPTR,#font
0114 110000      R     ACALL   L?0270
0117 2416              ADD     A,#016H
0119 110000      R     ACALL   L?0298
                                           ; SOURCE LINE # 1911
011C 110000      R     ACALL   L?0391
011F         ?C0169:
                                           ; SOURCE LINE # 1912
011F 110000      R     ACALL   L?0316
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 95  

0122 40FB              JC      ?C0169
0124         ?C0170:
                                           ; SOURCE LINE # 1913
0124 7B00        R     MOV     R3,#MBYTE ?SC_349
0126 7A00        R     MOV     R2,#HIGH ?SC_349
0128 7900        R     MOV     R1,#LOW ?SC_349
012A 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1914
012D 110000      R     ACALL   L?0391
0130         ?C0172:
                                           ; SOURCE LINE # 1915
0130 110000      R     ACALL   L?0316
0133 40FB              JC      ?C0172
                                           ; SOURCE LINE # 1916
                                           ; SOURCE LINE # 1917
0135         ?C0175:
0135 22                RET     
0136         L?0276:
0136 90000000    R     MOV     DPTR,#wptr
013A E0                MOVX    A,@DPTR
013B FB                MOV     R3,A
013C A3                INC     DPTR
013D E4                CLR     A
013E 75F002            MOV     B,#02H
0141 110000      E     ACALL   ?C?ILDIX
0144 A9F0              MOV     R1,B
0146 FA                MOV     R2,A
0147 110000      E     ACALL   ?C?ILDPTR
014A FF                MOV     R7,A
014B 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
014F E5F0              MOV     A,B
0151 F0                MOVX    @DPTR,A
0152 A3                INC     DPTR
0153 EF                MOV     A,R7
0154 F0                MOVX    @DPTR,A
0155 7B00        R     MOV     R3,#MBYTE ?SC_325
0157 7A00        R     MOV     R2,#HIGH ?SC_325
0159 7900        R     MOV     R1,#LOW ?SC_325
015B 110000      E     ACALL   _Printf
015E 90000000    R     MOV     DPTR,#i
0162 E0                MOVX    A,@DPTR
0163 04                INC     A
0164 F0                MOVX    @DPTR,A
0165 E0                MOVX    A,@DPTR
0166 C3                CLR     C
0167 22                RET     
0168         L?0316:
0168 90000000    R     MOV     DPTR,#wptr
016C E0                MOVX    A,@DPTR
016D FB                MOV     R3,A
016E A3                INC     DPTR
016F E4                CLR     A
0170 75F002            MOV     B,#02H
0173 110000      E     ACALL   ?C?ILDIX
0176 A9F0              MOV     R1,B
0178 FA                MOV     R2,A
0179 110000      E     ACALL   ?C?ILDPTR
017C FF                MOV     R7,A
017D 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0181 E5F0              MOV     A,B
0183 F0                MOVX    @DPTR,A
0184 A3                INC     DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 96  

0185 EF                MOV     A,R7
0186 F0                MOVX    @DPTR,A
0187 7B00        R     MOV     R3,#MBYTE ?SC_325
0189 7A00        R     MOV     R2,#HIGH ?SC_325
018B 7900        R     MOV     R1,#LOW ?SC_325
018D 110000      E     ACALL   _Printf
0190 90000000    R     MOV     DPTR,#i
0194 E0                MOVX    A,@DPTR
0195 04                INC     A
0196 F0                MOVX    @DPTR,A
0197 E0                MOVX    A,@DPTR
0198 C3                CLR     C
0199 9408              SUBB    A,#08H
019B 22                RET     
019C         L?0342:
019C 110000      E     ACALL   _Printf
019F 90000000    R     MOV     DPTR,#font
01A3 22                RET     
01A4         L?0362:
01A4 110000      E     ACALL   _Printf
01A7 90000000    R     MOV     DPTR,#font
01AB 22                RET     
01AC         L?0401:
01AC 110000      E     ACALL   _Printf
01AF 90000000    R     MOV     DPTR,#font
01B3 22                RET     
             ; FUNCTION _FontInfo (END)

             ; FUNCTION _FontInfoByNum (BEGIN)
                                           ; SOURCE LINE # 1922
;---- Variable 'FontMode' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 1923
                                           ; SOURCE LINE # 1924
0000 EF                MOV     A,R7
0001 14                DEC     A
0002 601B              JZ      ?C0178
0004 14                DEC     A
0005 6026              JZ      ?C0179
0007 14                DEC     A
0008 6034              JZ      ?C0180
000A 14                DEC     A
000B 604C              JZ      ?C0181
000D 2404              ADD     A,#04H
000F 7067              JNZ     ?C0183
                                           ; SOURCE LINE # 1925
0011         ?C0177:
                                           ; SOURCE LINE # 1926
0011 7B00        R     MOV     R3,#MBYTE ?SC_358
0013 7A00        R     MOV     R2,#HIGH ?SC_358
0015 7900        R     MOV     R1,#LOW ?SC_358
0017 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1927
001A 110000      R     ACALL   L?0329
                                           ; SOURCE LINE # 1928
001D 801A              SJMP    ?C0255
                                           ; SOURCE LINE # 1929
001F         ?C0178:
                                           ; SOURCE LINE # 1930
001F 7B00        R     MOV     R3,#MBYTE ?SC_373
0021 7A00        R     MOV     R2,#HIGH ?SC_373
0023 7900        R     MOV     R1,#LOW ?SC_373
0025 110000      E     ACALL   _Puts
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 97  

                                           ; SOURCE LINE # 1931
0028 110000      R     ACALL   L?0327
002B         ?C0254:
                                           ; SOURCE LINE # 1932
002B 800C              SJMP    ?C0255
                                           ; SOURCE LINE # 1933
002D         ?C0179:
                                           ; SOURCE LINE # 1934
002D 7B00        R     MOV     R3,#MBYTE ?SC_384
002F 7A00        R     MOV     R2,#HIGH ?SC_384
0031 7900        R     MOV     R1,#LOW ?SC_384
0033 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1935
0036 110000      R     ACALL   L?0379
0039         ?C0255:
0039 E4                CLR     A
003A FF                MOV     R7,A
003B FE                MOV     R6,A
                                           ; SOURCE LINE # 1936
003C 8037              SJMP    ?C0257
                                           ; SOURCE LINE # 1937
003E         ?C0180:
                                           ; SOURCE LINE # 1938
003E 7B00        R     MOV     R3,#MBYTE ?SC_403
0040 7A00        R     MOV     R2,#HIGH ?SC_403
0042 7900        R     MOV     R1,#LOW ?SC_403
0044 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1939
0047 110000      R     ACALL   L?0327
004A E4                CLR     A
004B FF                MOV     R7,A
004C FE                MOV     R6,A
004D 110000      R     ACALL   _FontInfo
                                           ; SOURCE LINE # 1940
0050 110000      R     ACALL   L?0379
0053 7F80              MOV     R7,#080H
0055 7E00              MOV     R6,#00H
0057         ?C0256:
                                           ; SOURCE LINE # 1941
0057 801C              SJMP    ?C0257
                                           ; SOURCE LINE # 1942
0059         ?C0181:
                                           ; SOURCE LINE # 1943
0059 7B00        R     MOV     R3,#MBYTE ?SC_422
005B 7A00        R     MOV     R2,#HIGH ?SC_422
005D 7900        R     MOV     R1,#LOW ?SC_422
005F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 1944
0062 110000      R     ACALL   L?0329
0065 E4                CLR     A
0066 FF                MOV     R7,A
0067 FE                MOV     R6,A
0068 110000      R     ACALL   _FontInfo
                                           ; SOURCE LINE # 1945
006B 7B00        E     MOV     R3,#MBYTE kor_font
006D 7A00        E     MOV     R2,#HIGH kor_font
006F 7900        E     MOV     R1,#LOW kor_font
0071 7FA0              MOV     R7,#0A0H
0073 7E00              MOV     R6,#00H
0075         ?C0257:
0075 110000      R     ACALL   _FontInfo
                                           ; SOURCE LINE # 1946
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 98  

                                           ; SOURCE LINE # 1947
                                           ; SOURCE LINE # 1948
                                           ; SOURCE LINE # 1949
                                           ; SOURCE LINE # 1950
0078         ?C0183:
0078 22                RET     
             ; FUNCTION _FontInfoByNum (END)

             ; FUNCTION DumpFont (BEGIN)
                                           ; SOURCE LINE # 1954
                                           ; SOURCE LINE # 1955
                                           ; SOURCE LINE # 1962
0000 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0004 110000      R     ACALL   L?0392
0007 7B00        R     MOV     R3,#MBYTE ?SC_432
0009 7A00        R     MOV     R2,#HIGH ?SC_432
000B 7900        R     MOV     R1,#LOW ?SC_432
000D 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1963
0010 110000      R     ACALL   L?0393
0013 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0017 F0                MOVX    @DPTR,A
0018 90000000    R     MOV     DPTR,#FontOsdInfo+011H
001C E0                MOVX    A,@DPTR
001D 90000000    E     MOV     DPTR,#?_Printf?BYTE+04H
0021 F0                MOVX    @DPTR,A
0022 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1966
0025 E4                CLR     A
0026 FF                MOV     R7,A
0027 110000      R     ACALL   _FOsdWinInit
                                           ; SOURCE LINE # 1967
002A E4                CLR     A
002B 90000000    R     MOV     DPTR,#start
002F F0                MOVX    @DPTR,A
0030 A3                INC     DPTR
0031 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1968
0032 90000000    R     MOV     DPTR,#FontOsdInfo+014H
0036 E0                MOVX    A,@DPTR
0037 FE                MOV     R6,A
0038 A3                INC     DPTR
0039 E0                MOVX    A,@DPTR
003A FF                MOV     R7,A
003B 110000      R     ACALL   L?0372
                                           ; SOURCE LINE # 1969
003E C3                CLR     C
003F 9400              SUBB    A,#00H
0041 FE                MOV     R6,A
0042 EC                MOV     A,R4
0043 9400              SUBB    A,#00H
0045 A3                INC     DPTR
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
0048 CE                XCH     A,R6
0049 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1970
004A 7B00        R     MOV     R3,#MBYTE ?SC_442
004C 7A00        R     MOV     R2,#HIGH ?SC_442
004E 7900        R     MOV     R1,#LOW ?SC_442
0050 E4                CLR     A
0051 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 99  

0055 F0                MOVX    @DPTR,A
0056 A3                INC     DPTR
0057 F0                MOVX    @DPTR,A
0058 C3                CLR     C
0059 ED                MOV     A,R5
005A 9401              SUBB    A,#01H
005C FE                MOV     R6,A
005D EC                MOV     A,R4
005E 9400              SUBB    A,#00H
0060 110000      R     ACALL   L?0380
0063 FF                MOV     R7,A
0064 A3                INC     DPTR
0065 E0                MOVX    A,@DPTR
0066 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
006A CF                XCH     A,R7
006B F0                MOVX    @DPTR,A
006C A3                INC     DPTR
006D EF                MOV     A,R7
006E F0                MOVX    @DPTR,A
006F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 1971
0072 90000000    R     MOV     DPTR,#start
0076 E0                MOVX    A,@DPTR
0077 FE                MOV     R6,A
0078 A3                INC     DPTR
0079 E0                MOVX    A,@DPTR
007A FF                MOV     R7,A
007B 7D0F              MOV     R5,#0FH
007D 110000      R     ACALL   _FOsdRamSetAddrAttr
                                           ; SOURCE LINE # 1972
0080 7F01              MOV     R7,#01H
0082 7E00              MOV     R6,#00H
0084 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1973
0087 E4                CLR     A
0088 90000000    R     MOV     DPTR,#w_cnt
008C F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1974
008D 90000000    R     MOV     DPTR,#addr
0091 F0                MOVX    @DPTR,A
0092 A3                INC     DPTR
0093 F0                MOVX    @DPTR,A
0094         ?C0184:
0094 90000000    R     MOV     DPTR,#next
0098 E0                MOVX    A,@DPTR
0099 FC                MOV     R4,A
009A A3                INC     DPTR
009B E0                MOVX    A,@DPTR
009C FD                MOV     R5,A
009D 110000      R     ACALL   L?0335
00A0 C3                CLR     C
00A1 9D                SUBB    A,R5
00A2 EE                MOV     A,R6
00A3 9C                SUBB    A,R4
00A4 5024              JNC     ?C0185
                                           ; SOURCE LINE # 1975
00A6 110000      R     ACALL   _FOsdRamSetData
                                           ; SOURCE LINE # 1976
00A9 90000000    R     MOV     DPTR,#w_cnt
00AD E0                MOVX    A,@DPTR
00AE 04                INC     A
00AF F0                MOVX    @DPTR,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 100 

                                           ; SOURCE LINE # 1977
00B0 E0                MOVX    A,@DPTR
00B1 B40408            CJNE    A,#04H,?C0186
                                           ; SOURCE LINE # 1978
00B4 E4                CLR     A
00B5 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1979
00B6 7F01              MOV     R7,#01H
00B8 FE                MOV     R6,A
00B9 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 1980
                                           ; SOURCE LINE # 1981
00BC         ?C0186:
00BC 90000000    R     MOV     DPTR,#addr+01H
00C0 E0                MOVX    A,@DPTR
00C1 04                INC     A
00C2 F0                MOVX    @DPTR,A
00C3 70CF              JNZ     ?C0184
00C5 110000      R     ACALL   L?0374
00C8         ?C0226:
00C8 80CA              SJMP    ?C0184
00CA         ?C0185:
                                           ; SOURCE LINE # 1982
00CA E4                CLR     A
00CB FB                MOV     R3,A
00CC FA                MOV     R2,A
00CD FD                MOV     R5,A
00CE FC                MOV     R4,A
00CF FF                MOV     R7,A
                                           ; SOURCE LINE # 1983
00D0 110000      R     ACALL   L?0357
00D3 4002              JC      ?C0188
00D5 7D10              MOV     R5,#010H
00D7         ?C0188:
00D7         ?C0189:
00D7 110000      R     ACALL   L?0295
00DA 6002              JZ      ?C0190
00DC 7E01              MOV     R6,#01H
00DE         ?C0190:
00DE         ?C0191:
00DE EE                MOV     A,R6
00DF 2F                ADD     A,R7
00E0 FB                MOV     R3,A
00E1 E4                CLR     A
00E2 FF                MOV     R7,A
00E3 110000      R     ACALL   _FOsdWinScreenWH
00E6 90000000    R     MOV     DPTR,#size
00EA E0                MOVX    A,@DPTR
00EB C4                SWAP    A
00EC F8                MOV     R0,A
00ED 54F0              ANL     A,#0F0H
00EF C8                XCH     A,R0
00F0 68                XRL     A,R0
00F1 FE                MOV     R6,A
00F2 A3                INC     DPTR
00F3 E0                MOVX    A,@DPTR
00F4 C4                SWAP    A
00F5 540F              ANL     A,#0FH
00F7 48                ORL     A,R0
00F8 2401              ADD     A,#01H
00FA FF                MOV     R7,A
00FB E4                CLR     A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 101 

00FC 3E                ADDC    A,R6
00FD FE                MOV     R6,A
00FE 90000000    R     MOV     DPTR,#FontOsdInfo+011H
0102 E0                MOVX    A,@DPTR
0103 110000      R     ACALL   L?0397
0106 EF                MOV     A,R7
0107 240A              ADD     A,#0AH
0109 FF                MOV     R7,A
010A E4                CLR     A
010B 3E                ADDC    A,R6
010C 90000000    R     MOV     DPTR,#Y
0110 F0                MOVX    @DPTR,A
0111 A3                INC     DPTR
0112 EF                MOV     A,R7
0113 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1984
0114 E4                CLR     A
0115 FB                MOV     R3,A
0116 7D01              MOV     R5,#01H
0118 FF                MOV     R7,A
0119 110000      R     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 1985
011C E4                CLR     A
011D FF                MOV     R7,A
                                           ; SOURCE LINE # 1986
011E 110000      R     ACALL   L?0337
0121 E4                CLR     A
0122 FF                MOV     R7,A
0123 110000      R     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 1987
0126 7D01              MOV     R5,#01H
0128 E4                CLR     A
0129 FF                MOV     R7,A
012A 110000      R     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 1990
012D 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 1991
012F 110000      R     ACALL   L?0334
0132 A3                INC     DPTR
0133 EF                MOV     A,R7
0134 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1992
0135 90000000    R     MOV     DPTR,#FontOsdInfo+016H
                                           ; SOURCE LINE # 1993
0139 110000      R     ACALL   L?0360
013C A3                INC     DPTR
013D F0                MOVX    @DPTR,A
013E EF                MOV     A,R7
                                           ; SOURCE LINE # 1994
013F 110000      R     ACALL   L?0381
0142 C3                CLR     C
0143 13                RRC     A
0144 F0                MOVX    @DPTR,A
0145 A3                INC     DPTR
0146 E0                MOVX    A,@DPTR
0147 13                RRC     A
0148 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 1995
0149 7B00        R     MOV     R3,#MBYTE ?SC_473
014B 7A00        R     MOV     R2,#HIGH ?SC_473
014D 7900        R     MOV     R1,#LOW ?SC_473
                                           ; SOURCE LINE # 1996
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 102 

014F 110000      R     ACALL   L?0288
0152 7D09              MOV     R5,#09H
                                           ; SOURCE LINE # 1997
0154 110000      R     ACALL   L?0312
0157         ?C0192:
0157 110000      R     ACALL   L?0320
015A 501C              JNC     ?C0193
                                           ; SOURCE LINE # 1998
015C 110000      R     ACALL   L?0335
015F 110000      R     ACALL   _FOsdRamSetAddress
                                           ; SOURCE LINE # 1999
0162 7F09              MOV     R7,#09H
                                           ; SOURCE LINE # 2000
                                           ; SOURCE LINE # 2001
                                           ; SOURCE LINE # 2002
                                           ; SOURCE LINE # 2003
0164 110000      R     ACALL   L?0293
0167 7003              JNZ     ?C0227
0169 110000      R     ACALL   L?0374
016C         ?C0227:
016C 90000000    R     MOV     DPTR,#dat+01H
0170 E0                MOVX    A,@DPTR
0171 2402              ADD     A,#02H
0173 110000      R     ACALL   L?0376
0176 80DF              SJMP    ?C0192
0178         ?C0193:
                                           ; SOURCE LINE # 2004
0178 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2005
017A 110000      R     ACALL   L?0294
017D 4002              JC      ?C0195
017F 7D10              MOV     R5,#010H
0181         ?C0195:
0181         ?C0196:
0181 110000      R     ACALL   L?0295
0184 6002              JZ      ?C0197
0186 7E01              MOV     R6,#01H
0188         ?C0197:
0188         ?C0198:
0188 EE                MOV     A,R6
0189 2F                ADD     A,R7
018A 7F01              MOV     R7,#01H
018C 110000      R     ACALL   L?0289
                                           ; SOURCE LINE # 2006
018F 110000      R     ACALL   L?0361
0192 7F01              MOV     R7,#01H
0194 110000      R     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 2007
0197 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 2008
0199 110000      R     ACALL   L?0337
019C 7F01              MOV     R7,#01H
019E 110000      R     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 2009
01A1 7D01              MOV     R5,#01H
01A3 7F01              MOV     R7,#01H
01A5 110000      R     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 2012
01A8 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2013
01AA 110000      R     ACALL   L?0334
01AD A3                INC     DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 103 

01AE EF                MOV     A,R7
01AF F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2014
01B0 90000000    R     MOV     DPTR,#FontOsdInfo+018H
                                           ; SOURCE LINE # 2015
01B4 110000      R     ACALL   L?0360
01B7 FE                MOV     R6,A
01B8 A3                INC     DPTR
01B9 F0                MOVX    @DPTR,A
01BA A3                INC     DPTR
01BB EF                MOV     A,R7
01BC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2016
01BD 7C00              MOV     R4,#00H
01BF 7D03              MOV     R5,#03H
01C1 110000      E     ACALL   ?C?UIDIV
01C4 90000000    R     MOV     DPTR,#size
01C8 EE                MOV     A,R6
01C9 F0                MOVX    @DPTR,A
01CA A3                INC     DPTR
01CB EF                MOV     A,R7
01CC F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2017
01CD 7B00        R     MOV     R3,#MBYTE ?SC_504
01CF 7A00        R     MOV     R2,#HIGH ?SC_504
01D1 7900        R     MOV     R1,#LOW ?SC_504
01D3 90000000    R     MOV     DPTR,#start
01D7 E0                MOVX    A,@DPTR
01D8 FD                MOV     R5,A
01D9 A3                INC     DPTR
01DA E0                MOVX    A,@DPTR
01DB 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
01DF CD                XCH     A,R5
01E0 F0                MOVX    @DPTR,A
01E1 A3                INC     DPTR
01E2 ED                MOV     A,R5
01E3 F0                MOVX    @DPTR,A
01E4 90000000    R     MOV     DPTR,#next
01E8 E0                MOVX    A,@DPTR
01E9 FD                MOV     R5,A
01EA A3                INC     DPTR
01EB E0                MOVX    A,@DPTR
01EC 90000000    E     MOV     DPTR,#?_Printf?BYTE+05H
01F0 CD                XCH     A,R5
01F1 F0                MOVX    @DPTR,A
01F2 A3                INC     DPTR
01F3 ED                MOV     A,R5
01F4 F0                MOVX    @DPTR,A
01F5 A3                INC     DPTR
01F6 EE                MOV     A,R6
01F7 F0                MOVX    @DPTR,A
01F8 A3                INC     DPTR
01F9 EF                MOV     A,R7
01FA F0                MOVX    @DPTR,A
01FB 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 2018
01FE E4                CLR     A
01FF FF                MOV     R7,A
0200 110000      R     ACALL   _FOsdRamSetWriteMode
                                           ; SOURCE LINE # 2019
0203 110000      R     ACALL   L?0313
0206         ?C0199:
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 104 

0206 110000      R     ACALL   L?0320
0209 501C              JNC     ?C0200
                                           ; SOURCE LINE # 2020
020B 110000      R     ACALL   L?0336
020E 110000      R     ACALL   _FOsdRamSetAddress
                                           ; SOURCE LINE # 2021
0211 7F0A              MOV     R7,#0AH
                                           ; SOURCE LINE # 2022
                                           ; SOURCE LINE # 2023
                                           ; SOURCE LINE # 2024
                                           ; SOURCE LINE # 2025
0213 110000      R     ACALL   L?0293
0216 7003              JNZ     ?C0228
0218 110000      R     ACALL   L?0375
021B         ?C0228:
021B 90000000    R     MOV     DPTR,#dat+01H
021F E0                MOVX    A,@DPTR
0220 2403              ADD     A,#03H
0222 110000      R     ACALL   L?0376
0225 80DF              SJMP    ?C0199
0227         ?C0200:
                                           ; SOURCE LINE # 2026
0227 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2027
0229 110000      R     ACALL   L?0294
022C 4002              JC      ?C0202
022E 7D10              MOV     R5,#010H
0230         ?C0202:
0230         ?C0203:
0230 110000      R     ACALL   L?0296
0233 6002              JZ      ?C0204
0235 7E01              MOV     R6,#01H
0237         ?C0204:
0237         ?C0205:
0237 EE                MOV     A,R6
0238 2F                ADD     A,R7
0239 7F02              MOV     R7,#02H
023B 110000      R     ACALL   L?0289
                                           ; SOURCE LINE # 2028
023E 110000      R     ACALL   L?0361
0241 7F02              MOV     R7,#02H
0243 110000      R     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 2029
0246 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 2030
0248 110000      R     ACALL   L?0338
024B 7F02              MOV     R7,#02H
024D 110000      R     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 2031
0250 7D01              MOV     R5,#01H
0252 7F02              MOV     R7,#02H
0254 110000      R     ACALL   _FOsdWinEnable
                                           ; SOURCE LINE # 2035
0257 7F03              MOV     R7,#03H
0259 110000      R     ACALL   _FOsdWinInit
                                           ; SOURCE LINE # 2036
025C 90000000    R     MOV     DPTR,#next
0260 E0                MOVX    A,@DPTR
0261 FE                MOV     R6,A
0262 A3                INC     DPTR
0263 E0                MOVX    A,@DPTR
0264 FF                MOV     R7,A
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 105 

0265 90000000    R     MOV     DPTR,#start
0269 EE                MOV     A,R6
026A F0                MOVX    @DPTR,A
026B FA                MOV     R2,A
026C A3                INC     DPTR
026D EF                MOV     A,R7
026E F0                MOVX    @DPTR,A
026F FB                MOV     R3,A
                                           ; SOURCE LINE # 2037
0270 759300      E     MOV     DPX,#?C?XDATASEG
0273 E500        E     MOV     A,regTW88+01H
0275 2491              ADD     A,#091H
0277 110000      R     ACALL   L?0261
027A E0                MOVX    A,@DPTR
027B 547F              ANL     A,#07FH
;---- Variable 'value' assigned to Register 'R7' ----
                                           ; SOURCE LINE # 2038
027D FD                MOV     R5,A
027E 7C00              MOV     R4,#00H
0280 7E28              MOV     R6,#028H
0282 7F00              MOV     R7,#00H
0284 110000      E     ACALL   ?C?UIDIV
0287 110000      R     ACALL   L?0372
                                           ; SOURCE LINE # 2039
028A C3                CLR     C
028B 9B                SUBB    A,R3
028C FE                MOV     R6,A
028D EC                MOV     A,R4
028E 9A                SUBB    A,R2
                                           ; SOURCE LINE # 2040
028F 110000      R     ACALL   L?0380
0292 FE                MOV     R6,A
0293 A3                INC     DPTR
0294 E0                MOVX    A,@DPTR
0295 7802              MOV     R0,#02H
0297         ?C0229:
0297 CE                XCH     A,R6
0298 C3                CLR     C
0299 13                RRC     A
029A CE                XCH     A,R6
029B 13                RRC     A
029C D8F9              DJNZ    R0,?C0229
029E F0                MOVX    @DPTR,A
029F EE                MOV     A,R6
02A0 90000000    R     MOV     DPTR,#size
02A4 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 2041
02A5 7B00        R     MOV     R3,#MBYTE ?SC_535
02A7 7A00        R     MOV     R2,#HIGH ?SC_535
02A9 7900        R     MOV     R1,#LOW ?SC_535
                                           ; SOURCE LINE # 2042
02AB 110000      R     ACALL   L?0288
02AE 7D0C              MOV     R5,#0CH
                                           ; SOURCE LINE # 2043
02B0 110000      R     ACALL   L?0312
02B3         ?C0206:
02B3 110000      R     ACALL   L?0321
02B6 503C              JNC     ?C0207
                                           ; SOURCE LINE # 2044
02B8 110000      R     ACALL   L?0336
02BB 110000      R     ACALL   _FOsdRamSetAddress
                                           ; SOURCE LINE # 2045
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 106 

02BE 7F0C              MOV     R7,#0CH
02C0 110000      R     ACALL   _FOsdRamSetAttr
                                           ; SOURCE LINE # 2046
02C3 110000      R     ACALL   L?0336
02C6 110000      R     ACALL   _FOsdRamSetAddress
                                           ; SOURCE LINE # 2047
02C9 90000000    R     MOV     DPTR,#dat
02CD E0                MOVX    A,@DPTR
02CE FE                MOV     R6,A
02CF A3                INC     DPTR
02D0 E0                MOVX    A,@DPTR
02D1 FF                MOV     R7,A
02D2 110000      R     ACALL   _FOsdRamSetData
                                           ; SOURCE LINE # 2048
02D5 7F01              MOV     R7,#01H
02D7 7E00              MOV     R6,#00H
02D9 110000      E     ACALL   _delay1ms
                                           ; SOURCE LINE # 2049
02DC 90000000    R     MOV     DPTR,#addr+01H
02E0 E0                MOVX    A,@DPTR
02E1 04                INC     A
02E2 F0                MOVX    @DPTR,A
02E3 7003              JNZ     ?C0230
02E5 110000      R     ACALL   L?0375
02E8         ?C0230:
02E8 90000000    R     MOV     DPTR,#dat+01H
02EC E0                MOVX    A,@DPTR
02ED 2404              ADD     A,#04H
02EF 110000      R     ACALL   L?0377
02F2 80BF              SJMP    ?C0206
02F4         ?C0207:
                                           ; SOURCE LINE # 2050
02F4 90000000    R     MOV     DPTR,#Y
02F8 E0                MOVX    A,@DPTR
02F9 FA                MOV     R2,A
02FA A3                INC     DPTR
02FB E0                MOVX    A,@DPTR
02FC FB                MOV     R3,A
02FD E4                CLR     A
02FE FD                MOV     R5,A
02FF FC                MOV     R4,A
0300 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 2051
0302 110000      R     ACALL   L?0357
0305 4002              JC      ?C0209
0307 7D10              MOV     R5,#010H
0309         ?C0209:
0309         ?C0210:
0309 110000      R     ACALL   L?0296
030C 6002              JZ      ?C0211
030E 7E01              MOV     R6,#01H
0310         ?C0211:
0310         ?C0212:
0310 EE                MOV     A,R6
0311 2F                ADD     A,R7
0312 FB                MOV     R3,A
0313 7F03              MOV     R7,#03H
0315 110000      R     ACALL   _FOsdWinScreenWH
                                           ; SOURCE LINE # 2052
0318 7B03              MOV     R3,#03H
031A 7D02              MOV     R5,#02H
031C 7F03              MOV     R7,#03H
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 107 

031E 110000      R     ACALL   _FOsdWinZoom
                                           ; SOURCE LINE # 2053
0321 1D                DEC     R5
0322 7F03              MOV     R7,#03H
                                           ; SOURCE LINE # 2054
0324 110000      R     ACALL   L?0338
0327 7F03              MOV     R7,#03H
0329 110000      R     ACALL   _FOsdWinSetOsdRamStartAddr
                                           ; SOURCE LINE # 2055
032C 7D01              MOV     R5,#01H
032E 7F03              MOV     R7,#03H
0330 010000      R     AJMP    _FOsdWinEnable
                                           ; SOURCE LINE # 2056
0333         L?0288:
0333 90000000    R     MOV     DPTR,#start
0337 E0                MOVX    A,@DPTR
0338 FF                MOV     R7,A
0339 A3                INC     DPTR
033A E0                MOVX    A,@DPTR
033B 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
033F CF                XCH     A,R7
0340 F0                MOVX    @DPTR,A
0341 A3                INC     DPTR
0342 EF                MOV     A,R7
0343 F0                MOVX    @DPTR,A
0344 A3                INC     DPTR
0345 EC                MOV     A,R4
0346 F0                MOVX    @DPTR,A
0347 A3                INC     DPTR
0348 ED                MOV     A,R5
0349 F0                MOVX    @DPTR,A
034A 90000000    R     MOV     DPTR,#size
034E E0                MOVX    A,@DPTR
034F FF                MOV     R7,A
0350 A3                INC     DPTR
0351 E0                MOVX    A,@DPTR
0352 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
0356 CF                XCH     A,R7
0357 F0                MOVX    @DPTR,A
0358 A3                INC     DPTR
0359 EF                MOV     A,R7
035A F0                MOVX    @DPTR,A
035B 110000      E     ACALL   _Printf
035E 90000000    R     MOV     DPTR,#start
0362 E0                MOVX    A,@DPTR
0363 FE                MOV     R6,A
0364 A3                INC     DPTR
0365 E0                MOVX    A,@DPTR
0366 FF                MOV     R7,A
0367 22                RET     
0368         L?0289:
0368 FB                MOV     R3,A
0369 110000      R     ACALL   _FOsdWinScreenWH
036C 90000000    R     MOV     DPTR,#size
0370 E0                MOVX    A,@DPTR
0371 C4                SWAP    A
0372 F8                MOV     R0,A
0373 54F0              ANL     A,#0F0H
0375 C8                XCH     A,R0
0376 68                XRL     A,R0
0377 FE                MOV     R6,A
0378 A3                INC     DPTR
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 108 

0379 E0                MOVX    A,@DPTR
037A C4                SWAP    A
037B 540F              ANL     A,#0FH
037D 48                ORL     A,R0
037E 2401              ADD     A,#01H
0380 FF                MOV     R7,A
0381 E4                CLR     A
0382 3E                ADDC    A,R6
0383 FE                MOV     R6,A
0384 90000000    R     MOV     DPTR,#FontOsdInfo+011H
0388 E0                MOVX    A,@DPTR
0389 FD                MOV     R5,A
038A 7C00              MOV     R4,#00H
038C 110000      E     ACALL   ?C?IMUL
038F EF                MOV     A,R7
0390 240A              ADD     A,#0AH
0392 FF                MOV     R7,A
0393 E4                CLR     A
0394 3E                ADDC    A,R6
0395 22                RET     
0396         L?0293:
0396 110000      R     ACALL   _FOsdRamSetAttr
0399 90000000    R     MOV     DPTR,#addr
039D E0                MOVX    A,@DPTR
039E FE                MOV     R6,A
039F A3                INC     DPTR
03A0 E0                MOVX    A,@DPTR
03A1 FF                MOV     R7,A
03A2 110000      R     ACALL   _FOsdRamSetAddress
03A5 90000000    R     MOV     DPTR,#dat
03A9 E0                MOVX    A,@DPTR
03AA FE                MOV     R6,A
03AB A3                INC     DPTR
03AC E0                MOVX    A,@DPTR
03AD FF                MOV     R7,A
03AE 110000      R     ACALL   _FOsdRamSetData
03B1 7F01              MOV     R7,#01H
03B3 7E00              MOV     R6,#00H
03B5 110000      E     ACALL   _delay1ms
03B8 90000000    R     MOV     DPTR,#addr+01H
03BC E0                MOVX    A,@DPTR
03BD 04                INC     A
03BE F0                MOVX    @DPTR,A
03BF 22                RET     
03C0         L?0294:
03C0 90000000    R     MOV     DPTR,#Y
03C4 E0                MOVX    A,@DPTR
03C5 FA                MOV     R2,A
03C6 A3                INC     DPTR
03C7 E0                MOVX    A,@DPTR
03C8 FB                MOV     R3,A
03C9 E4                CLR     A
03CA FD                MOV     R5,A
03CB FC                MOV     R4,A
03CC 110000      R     ACALL   _FOsdWinScreenXY
03CF 90000000    R     MOV     DPTR,#size
03D3 E0                MOVX    A,@DPTR
03D4 FE                MOV     R6,A
03D5 A3                INC     DPTR
03D6 E0                MOVX    A,@DPTR
03D7 FF                MOV     R7,A
03D8 C3                CLR     C
C51 COMPILER V9.56.0.0   OSDFONT                                                           07/18/2018 10:44:47 PAGE 109 

03D9 9410              SUBB    A,#010H
03DB EE                MOV     A,R6
03DC 9400              SUBB    A,#00H
03DE AD07              MOV     R5,AR7
03E0 22                RET     
03E1         L?0334:
03E1 110000      R     ACALL   _FOsdWinInit
03E4 90000000    R     MOV     DPTR,#next
03E8 E0                MOVX    A,@DPTR
03E9 FE                MOV     R6,A
03EA A3                INC     DPTR
03EB E0                MOVX    A,@DPTR
03EC FF                MOV     R7,A
03ED 90000000    R     MOV     DPTR,#start
03F1 EE                MOV     A,R6
03F2 F0                MOVX    @DPTR,A
03F3 22                RET     
03F4         L?0357:
03F4 110000      R     ACALL   _FOsdWinScreenXY
03F7 90000000    R     MOV     DPTR,#size
03FB E0                MOVX    A,@DPTR
03FC FE                MOV     R6,A
03FD A3                INC     DPTR
03FE E0                MOVX    A,@DPTR
03FF FF                MOV     R7,A
0400 C3                CLR     C
0401 9410              SUBB    A,#010H
0403 EE                MOV     A,R6
0404 9400              SUBB    A,#00H
0406 AD07              MOV     R5,AR7
0408 22                RET     
             ; FUNCTION DumpFont (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   6431    ----
   CONSTANT SIZE    =    718    ----
   XDATA SIZE       =    127     134
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
