C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 1   


C51 COMPILER V9.56.0.0, COMPILATION OF MODULE MONITOR_MENU
OBJECT MODULE PLACED IN .\Output\monitor_menu.obj
COMPILER INVOKED BY: C:\Keil_v5\C51\BIN\C51.EXE source36\monitor_menu.c LARGE OMF2 ROM(D512K) OPTIMIZE(9,SPEED) REGFILE(
                    -.\Output\TW8836B_EVB11.ORC) BROWSE INCDIR(SiI-SW;SiI-SW\HAL;SiI-SW\DEBUG;SiI-SW\CEC;.\Source36\LIB) DEFINE(EVB_11,nullFn
                    -=//) DEBUG CODE PRINT(.\List\monitor_menu.lst) TABS(2) OBJECT(.\Output\monitor_menu.obj)

line level    source

   1          /**
   2           * @file
   3           * Monitor_MENU.c 
   4           * @author Brian Kang
   5           * @version 1.0
   6           * @section LICENSE
   7           *  Copyright (C) 2011~2012 Intersil Corporation
   8           * @section DESCRIPTION
   9           *  Interface between TW_Terminal2 and Firmware.
  10          */
  11          /*
  12          Disclaimer: THIS INFORMATION IS PROVIDED 'AS-IS' FOR EVALUATION PURPOSES ONLY.  
  13          INTERSIL CORPORATION AND ITS SUBSIDIARIES ('INTERSIL') DISCLAIM ALL WARRANTIES, 
  14          INCLUDING WITHOUT LIMITATION FITNESS FOR A PARTICULAR PURPOSE AND MERCHANTABILITY.  
  15          Intersil provides evaluation platforms to help our customers to develop products. 
  16          However, factors beyond Intersil's control could significantly affect Intersil 
  17          product performance. 
  18          It remains the customers' responsibility to verify the actual system performance.
  19          */
  20          //*****************************************************************************
  21          //
  22          //                Monitor_Menu.c
  23          //
  24          //*****************************************************************************
  25          //
  26          //
  27          #include "Config.h"
  28          #include "reg.h"
  29          #include "typedefs.h"
  30          #include "TW8836.h"
  31          
  32          #include "Global.h"
  33          #include "CPU.h"
  34          #include "printf.h"
  35          #include "util.h"
  36          #include "monitor_MENU.h"
  37          #include "reg_debug.h"
  38          
  39          #include "i2c.h"
  40          //#include "menu8835.h"
  41          #include "Remo.h"
  42          
  43          #include "SOsd.h"
  44          #include "FOsd.h"
  45          #include "SOsdMenu.h"
  46          
  47          #include "Demo.h"
  48          #include "SpiFlashMap.h"
  49          
  50          #ifdef SUPPORT_FOSD_MENU
              #include "FOsdMenu.h"
              #endif
  53          
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 2   

  54          //temp..please move to .h file and remove it
  55          extern    void MenuCheckTouchInput(BYTE TscStatus,int x,int y);
  56          extern    void proc_home_menu_start(void);
  57          
  58          extern void DumpFontOsdPalette(void);
  59          extern void Test16x32FontSet(void);
  60          extern void TestUpper256Char(void);
  61          extern void TestMultiBPP4(void);
  62          extern void TestNum1BPP3BPP(void);
  63          
  64          extern void TaskSetGridCmd(BYTE cmd);
  65          extern BYTE TaskGetGrid(void);
  66          
  67          
  68          //extern XDATA BYTE Task_Grid_on;
  69          extern void MenuKeyInput(BYTE key);
  70          
  71          //extern TestMainMenuImage(BYTE type);
  72          
  73          
  74          
  75          //=============================================================================
  76          //
  77          //=============================================================================
  78          /*
  79            menu start
  80            menu [up|down|right|left]
  81            menu enter
  82            menu exit
  83          */
  84          void MonitorMenu(void)
  85          {
  86   1      //  int x, y;
  87   1        if(!stricmp( argv[1], "?")) {
  88   2          Puts("\n\r  === Help for MENU command ===");
  89   2          Puts("\n\rmenu start          ;start main menu");
  90   2          Puts("\n\rmenu [up|down|right|left] ;menu arrow key");
  91   2          Puts("\n\rmenu enter          ;enter key");
  92   2          Puts("\n\rmenu exit         ;exit key");
  93   2          return;
  94   2        }
  95   1      
  96   1        if(argc != 3) {
  97   2          //Puts("\n\rmenu x y");
  98   2      
  99   2          if(TaskGetGrid()) {
 100   3            if(!stricmp( argv[1], "up")) {
 101   4              TaskSetGridCmd(NAVI_KEY_UP);
 102   4            }
 103   3            else if(!stricmp( argv[1], "down")) {
 104   4              TaskSetGridCmd(NAVI_KEY_DOWN);
 105   4            }
 106   3            else if(!stricmp( argv[1], "left")) {
 107   4              TaskSetGridCmd(NAVI_KEY_LEFT);
 108   4            }
 109   3            else if(!stricmp( argv[1], "right")) {
 110   4              TaskSetGridCmd(NAVI_KEY_RIGHT);
 111   4            }
 112   3            else if(!stricmp( argv[1], "enter")) {
 113   4              TaskSetGridCmd(NAVI_KEY_ENTER);
 114   4            }
 115   3            return;
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 3   

 116   3          }
 117   2          if(MenuGetLevel()) {
 118   3            if(!stricmp( argv[1], "up")) {
 119   4              MenuKeyInput(NAVI_KEY_UP);
 120   4            }
 121   3            else if(!stricmp( argv[1], "down")) {
 122   4              MenuKeyInput(NAVI_KEY_DOWN);
 123   4            }
 124   3            else if(!stricmp( argv[1], "left")) {
 125   4              MenuKeyInput(NAVI_KEY_LEFT);
 126   4            }
 127   3            else if(!stricmp( argv[1], "right")) {
 128   4              MenuKeyInput(NAVI_KEY_RIGHT);
 129   4            }
 130   3            else if(!stricmp( argv[1], "enter")) {
 131   4              MenuKeyInput(NAVI_KEY_ENTER);
 132   4            }
 133   3          }
 134   2      
 135   2      
 136   2          if(!stricmp( argv[1], "start" ))  {
 137   3            Printf("\n\rcall MenuStart");
 138   3            //proc_home_menu_start();
 139   3            MenuStart();
 140   3          }
 141   2          else if(!stricmp( argv[1], "exit" ))  {
 142   3            Printf("\n\rcall MenuEnd");
 143   3            MenuEnd();
 144   3          }
 145   2          else if(!stricmp( argv[1], "test1")) {
 146   3            //draw 1bpp FOSD Palette
 147   3            //environmemt
 148   3            //  w ff 3
 149   3            //  b 8a 0c 66 40
 150   3            //  fosd dnfont 0
 151   3            //
 152   3            DumpFontOsdPalette();
 153   3          }
 154   2          else if(!stricmp( argv[1], "test2")) {
 155   3            //FOSD FIFO test.
 156   3            Test16x32FontSet();
 157   3          }
 158   2          else if(!stricmp( argv[1], "test3")) {
 159   3            TestUpper256Char();
 160   3          }
 161   2          else if(!stricmp( argv[1], "test4")) {
 162   3            TestMultiBPP4();
 163   3          }
 164   2          else if(!stricmp( argv[1], "test5")) {
 165   3            TestNum1BPP3BPP();
 166   3          }
 167   2          //else if(!stricmp( argv[1], "main1")) {
 168   2          //  TestMainMenuImage(1);
 169   2          //}
 170   2          //else if(!stricmp( argv[1], "main2")) {
 171   2          //  TestMainMenuImage(2);
 172   2          //}
 173   2          //else if(!stricmp( argv[1], "main3")) {
 174   2          //  TestMainMenuImage(3);
 175   2          //}
 176   2      
 177   2      
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 4   

 178   2          return;
 179   2        }
 180   1      //  x=a2h(argv[1]);
 181   1      //  y=a2h(argv[2]);
 182   1      //    Printf("\n\r ECHO: menu x:%d y:%d", x,y);
 183   1      //  MenuCheckTouchInput(x,y);
 184   1      }
 185          
 186          //=============================================================================
 187          //
 188          //=============================================================================
 189          //FONT OSD
 190          void MonitorFOsd(void)
 191          {
 192   1        if(!stricmp( argv[1], "?")) {
 193   2          Puts("\n\r  === Help for FOSD command ===");
 194   2          Puts("\n\rFOSD BPP3     ;calculate 3BPP alpha order");
 195   2          Puts("\n\rFOSD BPP2 [winno] ;draw 2BPP intersil icon");
 196   2          Puts("\n\rFOSD lutd     ;dump 64 lut value");
 197   2          Puts("\n\rFOSD lutw dat   ;overwrite all 64 LUT with value");
 198   2          Puts("\n\rFOSD dnlut  [0|1|2] ;download LUT");
 199   2          Puts("\n\rFOSD info     ;");
 200   2          Puts("\n\rFOSD dnfont [n]   ;download font");
 201   2          Puts("\n\rFOSD fontd      ;dump downloaded font");
 202   2        }
 203   1        //=============================================
 204   1        // font
 205   1        //  font info
 206   1        //  download font
 207   1        //  dump font
 208   1        // 
 209   1        //palette
 210   1        //  palette dump
 211   1        //  download palette
 212   1        //
 213   1        //osdram
 214   1        //  
 215   1        //
 216   1      
 217   1        //-----------------------------------------------------
 218   1        // print Font information
 219   1        else if(!stricmp( argv[1], "info" )) {
 220   2          extern void FontInfoByNum(BYTE FontMode);
 221   2          
 222   2          //FOsdMon_info();
 223   2          Printf("\n\rFont");
 224   2          Printf("\n\r\t0: default_font 12x18");
 225   2          Printf("\n\r\t1: consolas 16x26");
 226   2          Printf("\n\r\t2: consolas graynum 16x26");
 227   2          Printf("\n\r\t3: con+graynum 16x26");
 228   2          Printf("\n\r\t4: def+kor 16x26");
 229   2          FontInfoByNum(0);
 230   2          FontInfoByNum(1);
 231   2          FontInfoByNum(2);
 232   2          FontInfoByNum(3);
 233   2        }
 234   1        //-----------------------------------------------------
 235   1        // download font
 236   1        else if(!stricmp( argv[1], "dnfont" )) {
 237   2          BYTE num;
 238   2          WORD loc;
 239   2          if(argc < 3) {
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 5   

 240   3            num = 0;
 241   3            loc = 0;
 242   3          }
 243   2          else {
 244   3            num = a2h(argv[2]);
 245   3            if(argc < 4) {
 246   4              loc = 0;
 247   4            }
 248   3            else {
 249   4              loc = a2h(argv[3]);
 250   4            }
 251   3          }
 252   2          InitFontRamByNum(num, loc);
 253   2        }
 254   1        //-----------------------------------------------------
 255   1        // dump font.
 256   1        else if(!stricmp( argv[1], "fontd" )) {
 257   2          extern void DumpFont(void);
 258   2          DumpFont();
 259   2        }
 260   1        //-----------------------------------------------------
 261   1        // dump palette.
 262   1        else if(!stricmp( argv[1], "lutd")) {
 263   2          //dump palette table
 264   2          BYTE winno;
 265   2      
 266   2          winno=3;
 267   2          if(argc == 3) {
 268   3            winno = a2h(argv[2]);
 269   3            if(winno > 3)
 270   3              winno=3;
 271   3          }
 272   2          FOsdDumpPalette(winno);
 273   2        }
 274   1        else if(!stricmp( argv[1], "lutw")) {
 275   2          //fosd lutw 0 ffff  0
 276   2          BYTE loc;
 277   2          WORD color;
 278   2          if ( argc < 3 ) {
 279   3            Printf("\n\rflutw need a WORDSIZE value");
 280   3          }
 281   2          else {
 282   3            loc = a2h(argv[2]);
 283   3            color = a2h(argv[3]);
 284   3            FOsdSetPaletteColor(loc, color, 1, 0);
 285   3          }
 286   2        }
 287   1        else if(!stricmp( argv[1], "dnlut")) {
 288   2          //download palette table
 289   2          BYTE lut_num;
 290   2      
 291   2          lut_num = 0;
 292   2          if(argc == 3) {
 293   3            lut_num = a2h(argv[2]);
 294   3          }
 295   2          FOsdSetDefPaletteColor(lut_num);
 296   2      
 297   2      
 298   2        }
 299   1        else if(!stricmp( argv[1], "cpwin" )) {
 300   2          /*
 301   2          TW8836 has 8 FontOsdWindow. FW uses 4 windows for MENU.
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 6   

 302   2          To test WIN5,6,7,8 copy WIN1,2,3,4 register to WIN5,6,7,8 
 303   2          and then adjust start x, start y.
 304   2          */
 305   2          BYTE src,dest,i;
 306   2      
 307   2          if(argc >=4) {  
 308   3            src = a2h(argv[2]);
 309   3            dest = a2h(argv[3]);
 310   3            if(src >=8 || dest >=8)
 311   3              return;
 312   3            for(i=0; i < 0x10; i++) {
 313   4              WriteTW88(REG310+dest*0x10+i, ReadTW88(REG310+src*0x10+i));
 314   4            }
 315   3          }
 316   2        }
 317   1        else if ( !stricmp( argv[1], "test1" )) {
 318   2          //extern void FOsdDisplayInput(void);
 319   2          //FOsdDisplayInput();
 320   2          extern void FOsdTest_1(BYTE mode);
 321   2          FOsdTest_1(0);
 322   2        }
 323   1        else if ( !stricmp( argv[1], "test2" )) {
 324   2          extern void FOsdTest_1(BYTE mode);
 325   2          FOsdTest_1(1);
 326   2        }
 327   1        else if ( !stricmp( argv[1], "test3" )) {
 328   2      #ifdef SUPPORT_FOSD_MENU
              //    extern void FOsdMenuOpen(void);
              
                  //InitFontRam(0, &default_font,"def");
                  InitFontRamByNum(FONT_NUM_DEF12X18, 0);
                  FOsdRamSetFifo(ON, 1);
                  FOsdMenuOpen();
              #endif
 336   2        }
 337   1        else if ( !stricmp( argv[1], "test4" )) {
 338   2      #ifdef SUPPORT_FOSD_MENU
                  //extern void FOsdDisplayInput(void);
                  //FOsdDisplayInput();
              
                  extern void FOsdDisplayInput(void);
              //    extern BYTE CloseOSDMenu(void);
                  extern void WriteStringToAddr(WORD addr, BYTE *str, BYTE cnt);
              //    extern void OSDSelect(void);
                  extern void DisplayPCInfo(BYTE CODE *ptr);
              //    extern void OSDCursorMove(BYTE flag );
              
              
              
              //    CloseOSDMenu();
                  FOsdDisplayInput();
                  WriteStringToAddr(0, "test", 4);
              //    OSDSelect();
                  DisplayPCInfo("CHECK 656 signal");
              //    OSDCursorMove(0);
              #endif
 358   2        }
 359   1      #if defined(SUPPORT_I2C_MASTER) 
 360   1        else if ( !stricmp( argv[1], "test5" )) {
 361   2          extern void FOsdTest_5(BYTE);
 362   2          BYTE num;
 363   2          if(argc < 3)  num = 0;
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 7   

 364   2          else      num = a2h(argv[2]);
 365   2          
 366   2      
 367   2          FOsdTest_5(num);
 368   2        }
 369   1      #endif
 370   1        else if(!stricmp( argv[1], "BPP3")) {
 371   2          FOsdInitBpp3AlphaTable(1);
 372   2        }
 373   1        else if(!stricmp( argv[1], "BPP2")) {
 374   2          BYTE winno;
 375   2      
 376   2          winno=3;
 377   2          if(argc == 3) {
 378   3            winno = a2h(argv[2]);
 379   3            if(winno > 3)
 380   3              winno=3;
 381   3          }
 382   2      //    FOsdIntersil(winno);
 383   2        }
 384   1        else
 385   1          Printf("\n\rInvalid command..."); 
 386   1      }
 387          
 388          //=============================================================================
 389          //
 390          //=============================================================================
 391          //SPI OSD
 392          void MonitorSOsd(void)
 393          {
 394   1        if(!stricmp( argv[1], "?")) {
 395   2          Puts("\n\r=== Help for SOSD command ===");
 396   2          Puts("\n\r\ton/off    ;SOSD on/off");
 397   2          Puts("\n\r\t [rose|pigeon]");
 398   2          Puts("\n\r\t ??");
 399   2          Puts("\n\r\t lut img_n lut_n");
 400   2          Puts("\n\r\t img img_n lut_n win_n");
 401   2          Puts("\n\rAdd Your Test Function      ;add comment");
 402   2        }
 403   1        //-------<<on>>-----------------------------
 404   1        else if(!stricmp( argv[1], "on")) {
 405   2          SpiOsdEnable(ON);
 406   2        }
 407   1        //-------<<off>>-----------------------------
 408   1        else if(!stricmp( argv[1], "off")) {
 409   2          SpiOsdEnable(OFF);
 410   2        }
 411   1        //-------<<rose>>-----------------------------
 412   1        else if(!stricmp( argv[1], "rose")) {
 413   2          if(argc >= 3) {
 414   3            if(!stricmp( argv[2], "info")) {
 415   4              Printf("\n\rimg loc:%lx size:%lx lut loc:%lx size:%lx 400x400x10",ROSE_START,ROSE_LEN, ROSE_LUT_LOC,PI
             -GEON_ROSE_LUT_LEN);
 416   4            }
 417   3            else
 418   3              Printf("\n\rInvalid command..."); 
 419   3          }
 420   2          RoseDemo();
 421   2        }
 422   1        //-------<<pigeon>>-----------------------------
 423   1        else if(!stricmp( argv[1], "pigeon")) {
 424   2          if(argc >= 3) {
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 8   

 425   3            if(!stricmp( argv[2], "info")) {
 426   4              Printf("\n\rimg loc:%lx size:%lx lut loc:%lx size:%lx 400x400x10",PIGEON_START,PIGEON_LEN, PIGEON_LUT_
             -LOC,PIGEON_ROSE_LUT_LEN);
 427   4            }
 428   3            else
 429   3              Printf("\n\rInvalid command..."); 
 430   3          }
 431   2          PigeonDemo();
 432   2        }
 433   1        //-------<<?? test image information>>-----------------------------
 434   1        else if(!stricmp( argv[1], "??")) {
 435   2          MonSOsdImgInfo();
 436   2        }
 437   1        //-------<<lut offset# addr#>>-----------------------------
 438   1        else if(!stricmp( argv[1], "lut")) {
 439   2          BYTE img_n;
 440   2          WORD lut;
 441   2          BYTE saved_DebugLevel;
 442   2      
 443   2          if(argc < 4)
 444   2            Printf("\n\rInvalid command...");    
 445   2          else {
 446   3            saved_DebugLevel = DebugLevel;
 447   3            DebugLevel = 3;
 448   3      
 449   3            img_n=a2i(argv[2]);
 450   3            lut  =a2i(argv[3]);
 451   3            MonOsdLutLoad(img_n,3, lut); //I don't know winno. so tempolary assign 3.
 452   3      
 453   3            DebugLevel = saved_DebugLevel;  
 454   3          } 
 455   2        }
 456   1        //-------<<img0 win# lut#>>-----------------------------
 457   1        else if(!stricmp( argv[1], "img")) {
 458   2          BYTE img_n,winno;
 459   2          WORD lut;
 460   2          if(argc < 5)
 461   2            Printf("\n\rInvalid command...");    
 462   2          else {
 463   3            img_n=a2i(argv[2]);
 464   3            lut  =a2i(argv[3]);
 465   3            winno = a2i(argv[4]);
 466   3            MonOsdImgLoad(img_n,winno,lut);
 467   3          } 
 468   2        }
 469   1        //-------<<img1 win# lut#>>-----------------------------
 470   1        else if(!stricmp( argv[1], "dnitem")) {
 471   2          BYTE img_n,winno;
 472   2          WORD lut;
 473   2          BYTE saved_DebugLevel;
 474   2      
 475   2          if(argc < 4) 
 476   2            Printf("\n\rInvalid command...");
 477   2          else {
 478   3            saved_DebugLevel = DebugLevel;
 479   3            DebugLevel = 3;
 480   3            if(!stricmp( argv[3], "lut")) {
 481   4              img_n = a2i(argv[2]);
 482   4              winno = ReadTW88(REG009) >> 5;
 483   4              winno++;  
 484   4              lut = ReadTW88(REG009) & 0x1F;
 485   4              lut <<= 4;
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 9   

 486   4              MonOsdLutLoad(img_n,winno, lut);
 487   4            } 
 488   3            else if(!stricmp( argv[3], "img")) {
 489   4              img_n = a2i(argv[2]);
 490   4              winno = ReadTW88(REG009) >> 5;
 491   4              winno++;  
 492   4              lut = ReadTW88(REG009) & 0x1F;
 493   4              lut <<= 4;
 494   4              MonOsdImgLoad(img_n,winno,lut);
 495   4            }
 496   3            else
 497   3              Printf("\n\rInvalid command...");
 498   3            DebugLevel = saved_DebugLevel;  
 499   3          }
 500   2        }
 501   1        //-------<<sosd download lut>>-----------------------------
 502   1        else if(!stricmp( argv[1], "dnlut")) {
 503   2          //download palette table
 504   2          //format: sosd dnlut lut_offset image_address
 505   2          //step: read header & download lut
 506   2          extern menu_image_header_t header_table;
 507   2          extern BYTE MenuReadRleHeader(DWORD spi_loc,struct RLE2_HEADER *header);
 508   2          extern void rle2_to_header(struct RLE2_HEADER *rle_header);
 509   2          #define MRLE_INFO_SIZE    0x10
 510   2          WORD lut_loc;
 511   2          BYTE lut_type;
 512   2          WORD nColor;
 513   2          DWORD image_loc;
 514   2          BYTE winno;   //TW8836 need.
 515   2          menu_image_header_t *header = &header_table;
 516   2          struct RLE2_HEADER rle_header;
 517   2      
 518   2      
 519   2          if(argc < 3) {
 520   3            Puts("\n\ruse: sosd dnlut ?");
 521   3            return;
 522   3          }
 523   2          else {
 524   3            if(argv[2][0]=='?') {
 525   4              Puts("\n\rFormat: sosd dnlut winno lut_type(0 or 1) lut_offset flash_addr");
 526   4              Puts("\n\r      : sosd dnlut winno lut_type(2 or 3) lut_offset flash_addr [nColor].");
 527   4              Puts("\n\r\twinno 0~8. TW8836 needs winno");
 528   4              Puts("\n\r\tlut_type 0: TW8832 style. 256 color.");
 529   4              Puts("\n\r\t         1: TW8835 menu style. image has a header+palette+data.");
 530   4              Puts("\n\r\t         2: LUT type(BBB...GGG..RRR...AAA...).");
 531   4              Puts("\n\r\t         3: LUTS type(BGRA BGRA BGRA...).");
 532   4              Puts("\n\r\tlut_offset 0~511 (TW8836 win1~win2:0~255, win3~win8 and win0:0~511)");
 533   4              Puts("\n\r\tflash_addr:flash address. if lut_type is 1, it has a header location");
 534   4              Puts("\n\r\tnColor:number of color. default:256");
 535   4              Puts("\n\rexample:");
 536   4              Puts("\n\r\t sosd dnlut 1 1 0 41e071      ; menu background");
 537   4              Puts("\n\r\t sosd dnlut 1 3 0 41e081 128  ; menu background");
 538   4              Puts("\n\r\t sosd dnlut 8 1 256 4336a7    ; menu video icon");
 539   4              return;
 540   4            }
 541   3            if(argc < 6) {
 542   4              Puts("\n\ruse: sosd dnlut ?");
 543   4              return;
 544   4            }
 545   3            winno = a2h(argv[2]);
 546   3            lut_type = a2h(argv[3]);
 547   3            lut_loc = a2i(argv[4]);
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 10  

 548   3            image_loc = a2h(argv[5]);
 549   3            if(lut_type == 2 || lut_type == 3) {
 550   4              if(argc < 7) 
 551   4                nColor = 256;
 552   4              else
 553   4                nColor = a2i(argv[6]);
 554   4            }
 555   3          }
 556   2          
 557   2        
 558   2          //MenuPrepareImageHeader(image);  //update header_table
 559   2          if(lut_type==0) { //TW8832 style. only LUT. size 256*4. group style.
 560   3            header->lut_type = 0;
 561   3            header->lut_size = 0x400;
 562   3            header->lut_loc = image_loc;
 563   3          }
 564   2          else if(lut_type==1) { //TW8835 menu style
 565   3            MenuReadRleHeader(image_loc,&rle_header);   
 566   3            rle2_to_header(&rle_header);
 567   3            header->lut_loc = image_loc + MRLE_INFO_SIZE;
 568   3            header->image_loc = image_loc + header->lut_size + MRLE_INFO_SIZE;
 569   3          } 
 570   2          else if(lut_type==2) {
 571   3            header->lut_type = 0;
 572   3            header->lut_size = nColor*4;
 573   3            header->lut_loc = image_loc;
 574   3          }
 575   2          else if(lut_type==3) {
 576   3            header->lut_type = 1;
 577   3            header->lut_size = nColor*4;
 578   3            header->lut_loc = image_loc;
 579   3          }
 580   2          else {
 581   3            Printf("\n\rInvalid command..."); 
 582   3            return;
 583   3          } 
 584   2          WaitVBlank(1);
 585   2          //SpiOsdLoadLUT(winno, header->lut_type, lut_loc, header->lut_size, header->lut_loc, 0xFF);
 586   2          SOsd_SetLut(winno, header->lut_type, lut_loc, header->lut_size, header->lut_loc, 0xFF);
 587   2          SOsd_UpdateLut(winno, 0); 
 588   2      
 589   2        }
 590   1        //-------<<sosd demo1>>-----------------------------
 591   1        else if(!stricmp( argv[1], "demo1")) {
 592   2          extern void SOsdDemo1(void);
 593   2          SOsdDemo1();
 594   2        }
 595   1        else if(!stricmp( argv[1], "demo2")) {
 596   2          extern void SOsdDemo2(void);
 597   2          SOsdDemo2();
 598   2        }
 599   1        //1280x800 test
 600   1        else if(!stricmp( argv[1], "demo3")) {
 601   2          extern void SOsdDemo3(void);
 602   2          SOsdDemo3();
 603   2        }
 604   1      
 605   1      
 606   1      
 607   1        //-------<<sosd rlut img_n lut_n>>----------------------
 608   1        // read back lut & compare
 609   1        else if(!stricmp( argv[1], "rlut")) {
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 11  

 610   2        }
 611   1        //-------<<img5 win# lut#>>-----------------------------
 612   1        else if(!stricmp( argv[1], "??")) {
 613   2        }
 614   1        //-------<<img6 win# lut#>>-----------------------------
 615   1        else if(!stricmp( argv[1], "??")) {
 616   2        }
 617   1        //-------<<img7 win# lut#>>-----------------------------
 618   1        else if(!stricmp( argv[1], "??")) {
 619   2        }
 620   1        //-------<<??>>-----------------------------
 621   1        else if(!stricmp( argv[1], "??")) {
 622   2        }
 623   1        else
 624   1          Printf("\n\rInvalid command..."); 
 625   1      }
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 12  

ASSEMBLY LISTING OF GENERATED OBJECT CODE


             ; FUNCTION Com00B7 (BEGIN)
0000         L?0184:
0000         L?0185:
0000 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0004 7400        R     MOV     A,#MBYTE ?SC_1061
0006 F0                MOVX    @DPTR,A
0007 A3                INC     DPTR
0008 7400        R     MOV     A,#HIGH ?SC_1061
000A F0                MOVX    @DPTR,A
000B 7400        R     MOV     A,#LOW ?SC_1061
000D         L?0186:
000D A3                INC     DPTR
000E         L?0187:
000E F0                MOVX    @DPTR,A
000F 90000000    E     MOV     DPTR,#argv+03H
0013         L?0188:
0013 E0                MOVX    A,@DPTR
0014 FB                MOV     R3,A
0015         L?0189:
0015 A3                INC     DPTR
0016 E0                MOVX    A,@DPTR
0017 FA                MOV     R2,A
0018 A3                INC     DPTR
0019 E0                MOVX    A,@DPTR
001A F9                MOV     R1,A
001B 22                RET     
001C         L?0190:
001C         L?0191:
001C 7400        R     MOV     A,#MBYTE ?SC_0
001E         L?0192:
001E 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0022 F0                MOVX    @DPTR,A
0023 A3                INC     DPTR
0024 22                RET     
0025         L?0193:
0025         L?0194:
0025 7400        R     MOV     A,#MBYTE ?SC_593
0027         L?0195:
0027 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
002B F0                MOVX    @DPTR,A
002C A3                INC     DPTR
002D 22                RET     
002E         L?0196:
002E 7400        R     MOV     A,#MBYTE ?SC_176
0030         L?0197:
0030 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0034 F0                MOVX    @DPTR,A
0035 A3                INC     DPTR
0036 22                RET     
0037         L?0198:
0037 7400        R     MOV     A,#MBYTE ?SC_187
0039         L?0199:
0039 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
003D F0                MOVX    @DPTR,A
003E A3                INC     DPTR
003F 22                RET     
0040         L?0201:
0040 7400        R     MOV     A,#MBYTE ?SC_236
0042         L?0202:
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 13  

0042 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0046 F0                MOVX    @DPTR,A
0047 A3                INC     DPTR
0048 22                RET     
0049         L?0203:
0049 7400        R     MOV     A,#MBYTE ?SC_242
004B         L?0204:
004B 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
004F F0                MOVX    @DPTR,A
0050 A3                INC     DPTR
0051 22                RET     
0052         L?0205:
0052 7400        R     MOV     A,#MBYTE ?SC_248
0054         L?0206:
0054 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0058 F0                MOVX    @DPTR,A
0059 A3                INC     DPTR
005A 22                RET     
005B         L?0207:
005B 7400        R     MOV     A,#MBYTE ?SC_254
005D         L?0208:
005D 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0061 F0                MOVX    @DPTR,A
0062 A3                INC     DPTR
0063 22                RET     
0064         L?0209:
0064 7400        R     MOV     A,#MBYTE ?SC_260
0066         L?0210:
0066 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
006A F0                MOVX    @DPTR,A
006B A3                INC     DPTR
006C 22                RET     
006D         L?0211:
006D 7400        R     MOV     A,#MBYTE ?SC_777
006F         L?0212:
006F 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0073 F0                MOVX    @DPTR,A
0074 A3                INC     DPTR
0075 22                RET     
0076         L?0213:
0076 FF                MOV     R7,A
0077         L?0214:
0077 90000000    R     MOV     DPTR,#header
007B E0                MOVX    A,@DPTR
007C FB                MOV     R3,A
007D A3                INC     DPTR
007E E0                MOVX    A,@DPTR
007F FA                MOV     R2,A
0080 A3                INC     DPTR
0081 E0                MOVX    A,@DPTR
0082 22                RET     
0083         L?0215:
0083 7400        R     MOV     A,#MBYTE ?SC_1064
0085         L?0216:
0085 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0089 F0                MOVX    @DPTR,A
008A A3                INC     DPTR
008B 22                RET     
008C         L?0217:
008C 7400        R     MOV     A,#MBYTE ?SC_1068
008E         L?0218:
008E 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 14  

0092 F0                MOVX    @DPTR,A
0093 A3                INC     DPTR
0094 22                RET     
0095         L?0219:
0095 F0                MOVX    @DPTR,A
0096         L?0220:
0096 90000000    E     MOV     DPTR,#argc
009A E0                MOVX    A,@DPTR
009B C3                CLR     C
009C 22                RET     
009D         L?0221:
009D 110000      E     ACALL   ?C?ISTPTR
00A0         L?0222:
00A0 90000000    R     MOV     DPTR,#image_loc
00A4 E0                MOVX    A,@DPTR
00A5 FC                MOV     R4,A
00A6 A3                INC     DPTR
00A7 E0                MOVX    A,@DPTR
00A8 FD                MOV     R5,A
00A9 A3                INC     DPTR
00AA E0                MOVX    A,@DPTR
00AB FE                MOV     R6,A
00AC A3                INC     DPTR
00AD E0                MOVX    A,@DPTR
00AE 22                RET     
00AF         L?0223:
00AF 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00B3 F0                MOVX    @DPTR,A
00B4 A3                INC     DPTR
00B5 22                RET     
00B6         L?0224:
00B6 7F00              MOV     R7,#00H
00B8 7C00              MOV     R4,#00H
00BA 90000000    E     MOV     DPTR,#?_Printf?BYTE+07H
00BE 110000      E     ACALL   ?C?LSTXDATA
00C1 7F00              MOV     R7,#00H
00C3 7E77              MOV     R6,#077H
00C5 7D81              MOV     R5,#081H
00C7 7C00              MOV     R4,#00H
00C9 90000000    E     MOV     DPTR,#?_Printf?BYTE+0BH
00CD 110000      E     ACALL   ?C?LSTXDATA
00D0 90000000    E     MOV     DPTR,#?_Printf?BYTE+0FH
00D4 7410              MOV     A,#010H
00D6 F0                MOVX    @DPTR,A
00D7 A3                INC     DPTR
00D8 E4                CLR     A
00D9 F0                MOVX    @DPTR,A
00DA 22                RET     
00DB         L?0226:
00DB 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00DF F0                MOVX    @DPTR,A
00E0 A3                INC     DPTR
00E1 22                RET     
00E2         L?0228:
00E2 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00E6 F0                MOVX    @DPTR,A
00E7 A3                INC     DPTR
00E8 22                RET     
00E9         L?0229:
00E9 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
00ED F0                MOVX    @DPTR,A
00EE A3                INC     DPTR
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 15  

00EF 22                RET     
00F0         L?0230:
00F0 FE                MOV     R6,A
00F1 759300      E     MOV     DPX,#?C?XDATASEG
00F4 E500        E     MOV     A,regTW88+01H
00F6 2F                ADD     A,R7
00F7 F582              MOV     DPL,A
00F9 E500        E     MOV     A,regTW88
00FB 3E                ADDC    A,R6
00FC F583              MOV     DPH,A
00FE 759300      E     MOV     DPX,#?C?XDATASEG
0101 22                RET     
0102         L?0231:
0102 90000000    R     MOV     DPTR,#img_n
0106         L?0232:
0106 EF                MOV     A,R7
0107 F0                MOVX    @DPTR,A
0108 90000000    E     MOV     DPTR,#argv+09H
010C 22                RET     
010D         L?0233:
010D 2410              ADD     A,#010H
010F FF                MOV     R7,A
0110 E4                CLR     A
0111 3E                ADDC    A,R6
0112 FE                MOV     R6,A
0113 E4                CLR     A
0114 3D                ADDC    A,R5
0115 FD                MOV     R5,A
0116 E4                CLR     A
0117 3C                ADDC    A,R4
0118 FC                MOV     R4,A
0119 90000000    R     MOV     DPTR,#header
011D 22                RET     
011E         L?0234:
011E         L?0235:
011E 90000000    R     MOV     DPTR,#num
0122 E0                MOVX    A,@DPTR
0123 FF                MOV     R7,A
0124 22                RET     
0125         L?0236:
0125 90000000    R     MOV     DPTR,#winno
0129 7403              MOV     A,#03H
012B         L?0237:
012B F0                MOVX    @DPTR,A
012C 90000000    E     MOV     DPTR,#argc
0130 E0                MOVX    A,@DPTR
0131 22                RET     
0132         L?0238:
0132         L?0239:
0132 7B00        R     MOV     R3,#MBYTE ?SC_799
0134 7A00        R     MOV     R2,#HIGH ?SC_799
0136 7900        R     MOV     R1,#LOW ?SC_799
0138 22                RET     
0139         L?0240:
0139         L?0241:
0139 240F              ADD     A,#0FH
013B F9                MOV     R1,A
013C E4                CLR     A
013D 3A                ADDC    A,R2
013E FA                MOV     R2,A
013F 22                RET     
0140         L?0242:
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 16  

0140 110000      E     ACALL   ?C?CSTPTR
0143 90000000    R     MOV     DPTR,#nColor
0147 E0                MOVX    A,@DPTR
0148 FE                MOV     R6,A
0149 A3                INC     DPTR
014A E0                MOVX    A,@DPTR
014B 7802              MOV     R0,#02H
014D 22                RET     
014E         L?0243:
014E E0                MOVX    A,@DPTR
014F 75F010            MOV     B,#010H
0152 A4                MUL     AB
0153 2410              ADD     A,#010H
0155 FF                MOV     R7,A
0156 E5F0              MOV     A,B
0158 3403              ADDC    A,#03H
015A 22                RET     
015B         L?0244:
015B         L?0245:
015B 2408              ADD     A,#08H
015D F9                MOV     R1,A
015E E4                CLR     A
015F 3A                ADDC    A,R2
0160 FA                MOV     R2,A
0161 22                RET     
0162         L?0246:
0162 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0166 F0                MOVX    @DPTR,A
0167 A3                INC     DPTR
0168 22                RET     
0169         L?0247:
0169 7400        R     MOV     A,#HIGH ?SC_593
016B F0                MOVX    @DPTR,A
016C A3                INC     DPTR
016D 7400        R     MOV     A,#LOW ?SC_593
016F F0                MOVX    @DPTR,A
0170 90000000    E     MOV     DPTR,#argv+06H
0174 22                RET     
             ; FUNCTION Com00B7 (END)

             ; FUNCTION MonitorMenu (BEGIN)
                                           ; SOURCE LINE # 84
                                           ; SOURCE LINE # 85
                                           ; SOURCE LINE # 87
0000 110000      R     ACALL   L?0190
0003 7400        R     MOV     A,#HIGH ?SC_0
0005 F0                MOVX    @DPTR,A
0006 7400        R     MOV     A,#LOW ?SC_0
0008 110000      R     ACALL   L?0186
000B 110000      E     ACALL   _stricmp
000E EF                MOV     A,R7
000F 4E                ORL     A,R6
0010 702D              JNZ     ?C0001
                                           ; SOURCE LINE # 88
0012 7B00        R     MOV     R3,#MBYTE ?SC_2
0014 7A00        R     MOV     R2,#HIGH ?SC_2
0016 7900        R     MOV     R1,#LOW ?SC_2
0018 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 89
001B 7B00        R     MOV     R3,#MBYTE ?SC_36
001D 7A00        R     MOV     R2,#HIGH ?SC_36
001F 7900        R     MOV     R1,#LOW ?SC_36
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 17  

0021 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 90
0024 7B00        R     MOV     R3,#MBYTE ?SC_70
0026 7A00        R     MOV     R2,#HIGH ?SC_70
0028 7900        R     MOV     R1,#LOW ?SC_70
002A 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 91
002D 7B00        R     MOV     R3,#MBYTE ?SC_114
002F 7A00        R     MOV     R2,#HIGH ?SC_114
0031 7900        R     MOV     R1,#LOW ?SC_114
0033 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 92
0036 7B00        R     MOV     R3,#MBYTE ?SC_142
0038 7A00        R     MOV     R2,#HIGH ?SC_142
003A 7900        R     MOV     R1,#LOW ?SC_142
003C 010000      E     AJMP    _Puts
                                           ; SOURCE LINE # 94
003F         ?C0001:
                                           ; SOURCE LINE # 96
003F 90000000    E     MOV     DPTR,#argc
0043 E0                MOVX    A,@DPTR
0044 6403              XRL     A,#03H
0046 7003              JNZ     $ + 5H
0048 010000      R     AJMP    ?C0002
                                           ; SOURCE LINE # 99
004B 110000      E     ACALL   TaskGetGrid
004E EF                MOV     A,R7
004F 7003              JNZ     $ + 5H
0051 010000      R     AJMP    ?C0004
                                           ; SOURCE LINE # 100
0054 7400        R     MOV     A,#MBYTE ?SC_168
0056 110000      R     ACALL   L?0192
0059 7400        R     MOV     A,#HIGH ?SC_168
005B F0                MOVX    @DPTR,A
005C A3                INC     DPTR
005D 7400        R     MOV     A,#LOW ?SC_168
005F 110000      R     ACALL   L?0187
0062 110000      E     ACALL   _stricmp
0065 EF                MOV     A,R7
0066 4E                ORL     A,R6
0067 7004              JNZ     ?C0005
                                           ; SOURCE LINE # 101
0069 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 102
006B 8061              SJMP    ?C0161
006D         ?C0005:
                                           ; SOURCE LINE # 103
006D 7400        R     MOV     A,#MBYTE ?SC_171
006F 110000      R     ACALL   L?0195
0072 7400        R     MOV     A,#HIGH ?SC_171
0074 F0                MOVX    @DPTR,A
0075 A3                INC     DPTR
0076 7400        R     MOV     A,#LOW ?SC_171
0078 110000      R     ACALL   L?0187
007B 110000      E     ACALL   _stricmp
007E EF                MOV     A,R7
007F 4E                ORL     A,R6
0080 7004              JNZ     ?C0007
                                           ; SOURCE LINE # 104
0082 7F03              MOV     R7,#03H
0084         ?C0158:
                                           ; SOURCE LINE # 105
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 18  

0084 8048              SJMP    ?C0161
0086         ?C0007:
                                           ; SOURCE LINE # 106
0086 110000      R     ACALL   L?0196
0089 7400        R     MOV     A,#HIGH ?SC_176
008B F0                MOVX    @DPTR,A
008C A3                INC     DPTR
008D 7400        R     MOV     A,#LOW ?SC_176
008F 110000      R     ACALL   L?0187
0092 110000      E     ACALL   _stricmp
0095 EF                MOV     A,R7
0096 4E                ORL     A,R6
0097 7004              JNZ     ?C0009
                                           ; SOURCE LINE # 107
0099 7F04              MOV     R7,#04H
009B         ?C0159:
                                           ; SOURCE LINE # 108
009B 8031              SJMP    ?C0161
009D         ?C0009:
                                           ; SOURCE LINE # 109
009D 7400        R     MOV     A,#MBYTE ?SC_181
009F 110000      R     ACALL   L?0197
00A2 7400        R     MOV     A,#HIGH ?SC_181
00A4 F0                MOVX    @DPTR,A
00A5 A3                INC     DPTR
00A6 7400        R     MOV     A,#LOW ?SC_181
00A8 110000      R     ACALL   L?0187
00AB 110000      E     ACALL   _stricmp
00AE EF                MOV     A,R7
00AF 4E                ORL     A,R6
00B0 7004              JNZ     ?C0011
                                           ; SOURCE LINE # 110
00B2 7F05              MOV     R7,#05H
00B4         ?C0160:
                                           ; SOURCE LINE # 111
00B4 8018              SJMP    ?C0161
00B6         ?C0011:
                                           ; SOURCE LINE # 112
00B6 110000      R     ACALL   L?0198
00B9 7400        R     MOV     A,#HIGH ?SC_187
00BB F0                MOVX    @DPTR,A
00BC A3                INC     DPTR
00BD 7400        R     MOV     A,#LOW ?SC_187
00BF 110000      R     ACALL   L?0187
00C2 110000      E     ACALL   _stricmp
00C5 EF                MOV     A,R7
00C6 4E                ORL     A,R6
00C7 6003              JZ      $ + 5H
00C9 010000      R     AJMP    ?C0002
                                           ; SOURCE LINE # 113
00CC 7F01              MOV     R7,#01H
00CE         ?C0161:
00CE 010000      E     AJMP    _TaskSetGridCmd
                                           ; SOURCE LINE # 114
                                           ; SOURCE LINE # 116
00D1         ?C0004:
                                           ; SOURCE LINE # 117
00D1 110000      E     ACALL   MenuGetLevel
00D4 EF                MOV     A,R7
00D5 607A              JZ      ?C0014
                                           ; SOURCE LINE # 118
00D7 7400        R     MOV     A,#MBYTE ?SC_168
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 19  

00D9 110000      R     ACALL   L?0199
00DC 7400        R     MOV     A,#HIGH ?SC_168
00DE F0                MOVX    @DPTR,A
00DF A3                INC     DPTR
00E0 7400        R     MOV     A,#LOW ?SC_168
00E2 110000      R     ACALL   L?0187
00E5 110000      E     ACALL   _stricmp
00E8 EF                MOV     A,R7
00E9 4E                ORL     A,R6
00EA 7004              JNZ     ?C0015
                                           ; SOURCE LINE # 119
00EC 7F02              MOV     R7,#02H
                                           ; SOURCE LINE # 120
00EE 805E              SJMP    ?C0165
00F0         ?C0015:
                                           ; SOURCE LINE # 121
00F0 7400        R     MOV     A,#MBYTE ?SC_171
00F2 110000      R     ACALL   L?0202
00F5 7400        R     MOV     A,#HIGH ?SC_171
00F7 F0                MOVX    @DPTR,A
00F8 A3                INC     DPTR
00F9 7400        R     MOV     A,#LOW ?SC_171
00FB 110000      R     ACALL   L?0187
00FE 110000      E     ACALL   _stricmp
0101 EF                MOV     A,R7
0102 4E                ORL     A,R6
0103 7004              JNZ     ?C0017
                                           ; SOURCE LINE # 122
0105 7F03              MOV     R7,#03H
0107         ?C0162:
                                           ; SOURCE LINE # 123
0107 8045              SJMP    ?C0165
0109         ?C0017:
                                           ; SOURCE LINE # 124
0109 110000      R     ACALL   L?0196
010C 7400        R     MOV     A,#HIGH ?SC_176
010E F0                MOVX    @DPTR,A
010F A3                INC     DPTR
0110 7400        R     MOV     A,#LOW ?SC_176
0112 110000      R     ACALL   L?0187
0115 110000      E     ACALL   _stricmp
0118 EF                MOV     A,R7
0119 4E                ORL     A,R6
011A 7004              JNZ     ?C0019
                                           ; SOURCE LINE # 125
011C 7F04              MOV     R7,#04H
011E         ?C0163:
                                           ; SOURCE LINE # 126
011E 802E              SJMP    ?C0165
0120         ?C0019:
                                           ; SOURCE LINE # 127
0120 7400        R     MOV     A,#MBYTE ?SC_181
0122 110000      R     ACALL   L?0204
0125 7400        R     MOV     A,#HIGH ?SC_181
0127 F0                MOVX    @DPTR,A
0128 A3                INC     DPTR
0129 7400        R     MOV     A,#LOW ?SC_181
012B 110000      R     ACALL   L?0187
012E 110000      E     ACALL   _stricmp
0131 EF                MOV     A,R7
0132 4E                ORL     A,R6
0133 7004              JNZ     ?C0021
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 20  

                                           ; SOURCE LINE # 128
0135 7F05              MOV     R7,#05H
0137         ?C0164:
                                           ; SOURCE LINE # 129
0137 8015              SJMP    ?C0165
0139         ?C0021:
                                           ; SOURCE LINE # 130
0139 110000      R     ACALL   L?0198
013C 7400        R     MOV     A,#HIGH ?SC_187
013E F0                MOVX    @DPTR,A
013F A3                INC     DPTR
0140 7400        R     MOV     A,#LOW ?SC_187
0142 110000      R     ACALL   L?0187
0145 110000      E     ACALL   _stricmp
0148 EF                MOV     A,R7
0149 4E                ORL     A,R6
014A 7005              JNZ     ?C0014
                                           ; SOURCE LINE # 131
014C 7F01              MOV     R7,#01H
014E         ?C0165:
014E 110000      E     ACALL   _MenuKeyInput
                                           ; SOURCE LINE # 132
                                           ; SOURCE LINE # 133
0151         ?C0014:
                                           ; SOURCE LINE # 136
0151 7400        R     MOV     A,#MBYTE ?SC_193
0153 110000      R     ACALL   L?0206
0156 7400        R     MOV     A,#HIGH ?SC_193
0158 F0                MOVX    @DPTR,A
0159 A3                INC     DPTR
015A 7400        R     MOV     A,#LOW ?SC_193
015C 110000      R     ACALL   L?0187
015F 110000      E     ACALL   _stricmp
0162 EF                MOV     A,R7
0163 4E                ORL     A,R6
0164 700C              JNZ     ?C0024
                                           ; SOURCE LINE # 137
0166 7B00        R     MOV     R3,#MBYTE ?SC_199
0168 7A00        R     MOV     R2,#HIGH ?SC_199
016A 7900        R     MOV     R1,#LOW ?SC_199
016C 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 139
016F 010000      E     AJMP    MenuStart
                                           ; SOURCE LINE # 140
0172         ?C0024:
                                           ; SOURCE LINE # 141
0172 7400        R     MOV     A,#MBYTE ?SC_216
0174 110000      R     ACALL   L?0208
0177 7400        R     MOV     A,#HIGH ?SC_216
0179 F0                MOVX    @DPTR,A
017A A3                INC     DPTR
017B 7400        R     MOV     A,#LOW ?SC_216
017D 110000      R     ACALL   L?0187
0180 110000      E     ACALL   _stricmp
0183 EF                MOV     A,R7
0184 4E                ORL     A,R6
0185 700C              JNZ     ?C0026
                                           ; SOURCE LINE # 142
0187 7B00        R     MOV     R3,#MBYTE ?SC_221
0189 7A00        R     MOV     R2,#HIGH ?SC_221
018B 7900        R     MOV     R1,#LOW ?SC_221
018D 110000      E     ACALL   _Printf
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 21  

                                           ; SOURCE LINE # 143
0190 010000      E     AJMP    MenuEnd
                                           ; SOURCE LINE # 144
0193         ?C0026:
                                           ; SOURCE LINE # 145
0193 110000      R     ACALL   L?0201
0196 7400        R     MOV     A,#HIGH ?SC_236
0198 F0                MOVX    @DPTR,A
0199 A3                INC     DPTR
019A 7400        R     MOV     A,#LOW ?SC_236
019C 110000      R     ACALL   L?0187
019F 110000      E     ACALL   _stricmp
01A2 EF                MOV     A,R7
01A3 4E                ORL     A,R6
01A4 7003              JNZ     ?C0028
                                           ; SOURCE LINE # 152
01A6 010000      E     AJMP    DumpFontOsdPalette
                                           ; SOURCE LINE # 153
01A9         ?C0028:
                                           ; SOURCE LINE # 154
01A9 110000      R     ACALL   L?0203
01AC 7400        R     MOV     A,#HIGH ?SC_242
01AE F0                MOVX    @DPTR,A
01AF A3                INC     DPTR
01B0 7400        R     MOV     A,#LOW ?SC_242
01B2 110000      R     ACALL   L?0187
01B5 110000      E     ACALL   _stricmp
01B8 EF                MOV     A,R7
01B9 4E                ORL     A,R6
01BA 7003              JNZ     ?C0030
                                           ; SOURCE LINE # 156
01BC 010000      E     AJMP    Test16x32FontSet
                                           ; SOURCE LINE # 157
01BF         ?C0030:
                                           ; SOURCE LINE # 158
01BF 110000      R     ACALL   L?0205
01C2 7400        R     MOV     A,#HIGH ?SC_248
01C4 F0                MOVX    @DPTR,A
01C5 A3                INC     DPTR
01C6 7400        R     MOV     A,#LOW ?SC_248
01C8 110000      R     ACALL   L?0187
01CB 110000      E     ACALL   _stricmp
01CE EF                MOV     A,R7
01CF 4E                ORL     A,R6
01D0 7003              JNZ     ?C0032
                                           ; SOURCE LINE # 159
01D2 010000      E     AJMP    TestUpper256Char
                                           ; SOURCE LINE # 160
01D5         ?C0032:
                                           ; SOURCE LINE # 161
01D5 110000      R     ACALL   L?0207
01D8 7400        R     MOV     A,#HIGH ?SC_254
01DA F0                MOVX    @DPTR,A
01DB A3                INC     DPTR
01DC 7400        R     MOV     A,#LOW ?SC_254
01DE 110000      R     ACALL   L?0187
01E1 110000      E     ACALL   _stricmp
01E4 EF                MOV     A,R7
01E5 4E                ORL     A,R6
01E6 7003              JNZ     ?C0034
                                           ; SOURCE LINE # 162
01E8 010000      E     AJMP    TestMultiBPP4
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 22  

                                           ; SOURCE LINE # 163
01EB         ?C0034:
                                           ; SOURCE LINE # 164
01EB 110000      R     ACALL   L?0209
01EE 7400        R     MOV     A,#HIGH ?SC_260
01F0 F0                MOVX    @DPTR,A
01F1 A3                INC     DPTR
01F2 7400        R     MOV     A,#LOW ?SC_260
01F4 110000      R     ACALL   L?0187
01F7 110000      E     ACALL   _stricmp
01FA EF                MOV     A,R7
01FB 4E                ORL     A,R6
01FC 7003              JNZ     ?C0002
                                           ; SOURCE LINE # 165
01FE 110000      E     ACALL   TestNum1BPP3BPP
                                           ; SOURCE LINE # 166
                                           ; SOURCE LINE # 179
                                           ; SOURCE LINE # 184
0201         ?C0002:
0201 22                RET     
             ; FUNCTION MonitorMenu (END)

             ; FUNCTION MonitorFOsd (BEGIN)
                                           ; SOURCE LINE # 190
                                           ; SOURCE LINE # 191
                                           ; SOURCE LINE # 192
0000 110000      R     ACALL   L?0190
0003 7400        R     MOV     A,#HIGH ?SC_0
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        R     MOV     A,#LOW ?SC_0
0009 110000      R     ACALL   L?0187
000C 110000      E     ACALL   _stricmp
000F EF                MOV     A,R7
0010 4E                ORL     A,R6
0011 7051              JNZ     ?C0037
                                           ; SOURCE LINE # 193
0013 7B00        R     MOV     R3,#MBYTE ?SC_266
0015 7A00        R     MOV     R2,#HIGH ?SC_266
0017 7900        R     MOV     R1,#LOW ?SC_266
0019 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 194
001C 7B00        R     MOV     R3,#MBYTE ?SC_300
001E 7A00        R     MOV     R2,#HIGH ?SC_300
0020 7900        R     MOV     R1,#LOW ?SC_300
0022 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 195
0025 7B00        R     MOV     R3,#MBYTE ?SC_342
0027 7A00        R     MOV     R2,#HIGH ?SC_342
0029 7900        R     MOV     R1,#LOW ?SC_342
002B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 196
002E 7B00        R     MOV     R3,#MBYTE ?SC_387
0030 7A00        R     MOV     R2,#HIGH ?SC_387
0032 7900        R     MOV     R1,#LOW ?SC_387
0034 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 197
0037 7B00        R     MOV     R3,#MBYTE ?SC_420
0039 7A00        R     MOV     R2,#HIGH ?SC_420
003B 7900        R     MOV     R1,#LOW ?SC_420
003D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 198
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 23  

0040 7B00        R     MOV     R3,#MBYTE ?SC_470
0042 7A00        R     MOV     R2,#HIGH ?SC_470
0044 7900        R     MOV     R1,#LOW ?SC_470
0046 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 199
0049 7B00        R     MOV     R3,#MBYTE ?SC_506
004B 7A00        R     MOV     R2,#HIGH ?SC_506
004D 7900        R     MOV     R1,#LOW ?SC_506
004F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 200
0052 7B00        R     MOV     R3,#MBYTE ?SC_522
0054 7A00        R     MOV     R2,#HIGH ?SC_522
0056 7900        R     MOV     R1,#LOW ?SC_522
0058 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 201
005B 7B00        R     MOV     R3,#MBYTE ?SC_556
005D 7A00        R     MOV     R2,#HIGH ?SC_556
005F 7900        R     MOV     R1,#LOW ?SC_556
0061 010000      E     AJMP    _Puts
                                           ; SOURCE LINE # 202
0064         ?C0037:
                                           ; SOURCE LINE # 219
0064 110000      R     ACALL   L?0193
0067 7400        R     MOV     A,#HIGH ?SC_593
0069 F0                MOVX    @DPTR,A
006A A3                INC     DPTR
006B 7400        R     MOV     A,#LOW ?SC_593
006D 110000      R     ACALL   L?0187
0070 110000      E     ACALL   _stricmp
0073 EF                MOV     A,R7
0074 4E                ORL     A,R6
0075 704A              JNZ     ?C0039
                                           ; SOURCE LINE # 223
0077 7B00        R     MOV     R3,#MBYTE ?SC_598
0079 7A00        R     MOV     R2,#HIGH ?SC_598
007B 7900        R     MOV     R1,#LOW ?SC_598
007D 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 224
0080 7B00        R     MOV     R3,#MBYTE ?SC_605
0082 7A00        R     MOV     R2,#HIGH ?SC_605
0084 7900        R     MOV     R1,#LOW ?SC_605
0086 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 225
0089 7B00        R     MOV     R3,#MBYTE ?SC_630
008B 7A00        R     MOV     R2,#HIGH ?SC_630
008D 7900        R     MOV     R1,#LOW ?SC_630
008F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 226
0092 7B00        R     MOV     R3,#MBYTE ?SC_651
0094 7A00        R     MOV     R2,#HIGH ?SC_651
0096 7900        R     MOV     R1,#LOW ?SC_651
0098 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 227
009B 7B00        R     MOV     R3,#MBYTE ?SC_680
009D 7A00        R     MOV     R2,#HIGH ?SC_680
009F 7900        R     MOV     R1,#LOW ?SC_680
00A1 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 228
00A4 7B00        R     MOV     R3,#MBYTE ?SC_704
00A6 7A00        R     MOV     R2,#HIGH ?SC_704
00A8 7900        R     MOV     R1,#LOW ?SC_704
00AA 110000      E     ACALL   _Printf
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 24  

                                           ; SOURCE LINE # 229
00AD E4                CLR     A
00AE FF                MOV     R7,A
00AF 110000      E     ACALL   _FontInfoByNum
                                           ; SOURCE LINE # 230
00B2 7F01              MOV     R7,#01H
00B4 110000      E     ACALL   _FontInfoByNum
                                           ; SOURCE LINE # 231
00B7 7F02              MOV     R7,#02H
00B9 110000      E     ACALL   _FontInfoByNum
                                           ; SOURCE LINE # 232
00BC 7F03              MOV     R7,#03H
00BE 010000      E     AJMP    _FontInfoByNum
                                           ; SOURCE LINE # 233
00C1         ?C0039:
                                           ; SOURCE LINE # 236
00C1 7400        R     MOV     A,#MBYTE ?SC_724
00C3 110000      R     ACALL   L?0210
00C6 7400        R     MOV     A,#HIGH ?SC_724
00C8 F0                MOVX    @DPTR,A
00C9 A3                INC     DPTR
00CA 7400        R     MOV     A,#LOW ?SC_724
00CC 110000      R     ACALL   L?0187
00CF 110000      E     ACALL   _stricmp
00D2 EF                MOV     A,R7
00D3 4E                ORL     A,R6
00D4 7046              JNZ     ?C0041
                                           ; SOURCE LINE # 239
00D6 110000      R     ACALL   L?0220
00D9 9403              SUBB    A,#03H
00DB 5009              JNC     ?C0042
                                           ; SOURCE LINE # 240
00DD E4                CLR     A
00DE 90000000    R     MOV     DPTR,#num
00E2 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 241
00E3 A3                INC     DPTR
                                           ; SOURCE LINE # 242
00E4 8016              SJMP    ?C0166
00E6         ?C0042:
                                           ; SOURCE LINE # 243
                                           ; SOURCE LINE # 244
00E6 90000000    E     MOV     DPTR,#argv+06H
00EA 110000      R     ACALL   L?0188
00ED 110000      R     ACALL   L?0225
                                           ; SOURCE LINE # 245
00F0 110000      R     ACALL   L?0219
00F3 9404              SUBB    A,#04H
00F5 500A              JNC     ?C0044
                                           ; SOURCE LINE # 246
00F7 E4                CLR     A
00F8 90000000    R     MOV     DPTR,#loc
00FC         ?C0166:
00FC F0                MOVX    @DPTR,A
00FD A3                INC     DPTR
00FE F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 247
00FF 800F              SJMP    ?C0043
0101         ?C0044:
                                           ; SOURCE LINE # 248
                                           ; SOURCE LINE # 249
0101 90000000    E     MOV     DPTR,#argv+09H
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 25  

0105 110000      R     ACALL   L?0188
0108 110000      R     ACALL   L?0248
010B EE                MOV     A,R6
010C F0                MOVX    @DPTR,A
010D A3                INC     DPTR
010E EF                MOV     A,R7
010F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 250
                                           ; SOURCE LINE # 251
0110         ?C0043:
                                           ; SOURCE LINE # 252
0110 110000      R     ACALL   L?0234
0113 A3                INC     DPTR
0114 E0                MOVX    A,@DPTR
0115 FC                MOV     R4,A
0116 A3                INC     DPTR
0117 E0                MOVX    A,@DPTR
0118 FD                MOV     R5,A
0119 010000      E     AJMP    _InitFontRamByNum
                                           ; SOURCE LINE # 253
011C         ?C0041:
                                           ; SOURCE LINE # 256
011C 7400        R     MOV     A,#MBYTE ?SC_731
011E 110000      R     ACALL   L?0212
0121 7400        R     MOV     A,#HIGH ?SC_731
0123 F0                MOVX    @DPTR,A
0124 A3                INC     DPTR
0125 7400        R     MOV     A,#LOW ?SC_731
0127 110000      R     ACALL   L?0187
012A 110000      E     ACALL   _stricmp
012D EF                MOV     A,R7
012E 4E                ORL     A,R6
012F 7003              JNZ     ?C0047
                                           ; SOURCE LINE # 258
0131 010000      E     AJMP    DumpFont
                                           ; SOURCE LINE # 259
0134         ?C0047:
                                           ; SOURCE LINE # 262
0134 7400        R     MOV     A,#MBYTE ?SC_737
0136 110000      R     ACALL   L?0216
0139 7400        R     MOV     A,#HIGH ?SC_737
013B F0                MOVX    @DPTR,A
013C A3                INC     DPTR
013D 7400        R     MOV     A,#LOW ?SC_737
013F 110000      R     ACALL   L?0187
0142 110000      E     ACALL   _stricmp
0145 EF                MOV     A,R7
0146 4E                ORL     A,R6
0147 701F              JNZ     ?C0049
                                           ; SOURCE LINE # 266
                                           ; SOURCE LINE # 267
0149 110000      R     ACALL   L?0236
014C B40313            CJNE    A,#03H,?C0050
                                           ; SOURCE LINE # 268
014F 90000000    E     MOV     DPTR,#argv+06H
0153 110000      R     ACALL   L?0188
0156 110000      R     ACALL   L?0225
0159 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 269
015A D3                SETB    C
015B 9403              SUBB    A,#03H
015D 4003              JC      ?C0050
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 26  

                                           ; SOURCE LINE # 270
015F 7403              MOV     A,#03H
0161 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 271
0162         ?C0050:
                                           ; SOURCE LINE # 272
0162 110000      R     ACALL   L?0234
0165 010000      E     AJMP    _FOsdDumpPalette
                                           ; SOURCE LINE # 273
0168         ?C0049:
                                           ; SOURCE LINE # 274
0168 7400        R     MOV     A,#MBYTE ?SC_742
016A 110000      R     ACALL   L?0218
016D 7400        R     MOV     A,#HIGH ?SC_742
016F F0                MOVX    @DPTR,A
0170 A3                INC     DPTR
0171 7400        R     MOV     A,#LOW ?SC_742
0173 110000      R     ACALL   L?0187
0176 110000      E     ACALL   _stricmp
0179 EF                MOV     A,R7
017A 4E                ORL     A,R6
017B 7039              JNZ     ?C0053
                                           ; SOURCE LINE # 278
017D 110000      R     ACALL   L?0220
0180 9403              SUBB    A,#03H
0182 5009              JNC     ?C0054
                                           ; SOURCE LINE # 279
0184 7B00        R     MOV     R3,#MBYTE ?SC_747
0186 7A00        R     MOV     R2,#HIGH ?SC_747
0188 7900        R     MOV     R1,#LOW ?SC_747
                                           ; SOURCE LINE # 280
018A 010000      R     AJMP    ?C0167
018D         ?C0054:
                                           ; SOURCE LINE # 281
                                           ; SOURCE LINE # 282
018D 90000000    E     MOV     DPTR,#argv+06H
0191 110000      R     ACALL   L?0188
0194 110000      R     ACALL   L?0227
                                           ; SOURCE LINE # 283
0197 90000000    E     MOV     DPTR,#argv+09H
019B 110000      R     ACALL   L?0188
019E 110000      R     ACALL   L?0248
01A1 EE                MOV     A,R6
01A2 F0                MOVX    @DPTR,A
01A3 FC                MOV     R4,A
01A4 A3                INC     DPTR
01A5 EF                MOV     A,R7
01A6 F0                MOVX    @DPTR,A
01A7 FD                MOV     R5,A
                                           ; SOURCE LINE # 284
01A8 110000      R     ACALL   L?0235
01AB E4                CLR     A
01AC 90000000    E     MOV     DPTR,#?_FOsdSetPaletteColor?BYTE+04H
01B0 F0                MOVX    @DPTR,A
01B1 7B01              MOV     R3,#01H
01B3 010000      E     AJMP    _FOsdSetPaletteColor
                                           ; SOURCE LINE # 285
                                           ; SOURCE LINE # 286
01B6         ?C0053:
                                           ; SOURCE LINE # 287
01B6 110000      R     ACALL   L?0211
01B9 7400        R     MOV     A,#HIGH ?SC_777
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 27  

01BB F0                MOVX    @DPTR,A
01BC A3                INC     DPTR
01BD 7400        R     MOV     A,#LOW ?SC_777
01BF 110000      R     ACALL   L?0187
01C2 110000      E     ACALL   _stricmp
01C5 EF                MOV     A,R7
01C6 4E                ORL     A,R6
01C7 701A              JNZ     ?C0057
                                           ; SOURCE LINE # 291
01C9 90000000    R     MOV     DPTR,#lut_num
                                           ; SOURCE LINE # 292
01CD 110000      R     ACALL   L?0237
01D0 B4030A            CJNE    A,#03H,?C0058
                                           ; SOURCE LINE # 293
01D3 90000000    E     MOV     DPTR,#argv+06H
01D7 110000      R     ACALL   L?0188
01DA 110000      R     ACALL   L?0227
                                           ; SOURCE LINE # 294
01DD         ?C0058:
                                           ; SOURCE LINE # 295
01DD 110000      R     ACALL   L?0235
01E0 010000      E     AJMP    _FOsdSetDefPaletteColor
                                           ; SOURCE LINE # 298
01E3         ?C0057:
                                           ; SOURCE LINE # 299
01E3 7400        R     MOV     A,#MBYTE ?SC_783
01E5 110000      R     ACALL   L?0223
01E8 7400        R     MOV     A,#HIGH ?SC_783
01EA F0                MOVX    @DPTR,A
01EB A3                INC     DPTR
01EC 7400        R     MOV     A,#LOW ?SC_783
01EE 110000      R     ACALL   L?0187
01F1 110000      E     ACALL   _stricmp
01F4 EF                MOV     A,R7
01F5 4E                ORL     A,R6
01F6 707C              JNZ     ?C0060
                                           ; SOURCE LINE # 307
01F8 110000      R     ACALL   L?0220
01FB 9404              SUBB    A,#04H
01FD 5003              JNC     $ + 5H
01FF 010000      R     AJMP    ?C0064
                                           ; SOURCE LINE # 308
0202 90000000    E     MOV     DPTR,#argv+06H
0206 110000      R     ACALL   L?0188
0209 110000      R     ACALL   L?0249
                                           ; SOURCE LINE # 309
020C 110000      R     ACALL   L?0232
020F 110000      R     ACALL   L?0188
0212 110000      E     ACALL   _a2h
0215 90000000    R     MOV     DPTR,#dest
0219 EF                MOV     A,R7
021A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 310
021B 90000000    R     MOV     DPTR,#src
021F E0                MOVX    A,@DPTR
0220 C3                CLR     C
0221 9408              SUBB    A,#08H
0223 4003              JC      $ + 5H
0225 010000      R     AJMP    ?C0064
0228 A3                INC     DPTR
0229 E0                MOVX    A,@DPTR
022A C3                CLR     C
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 28  

022B 9408              SUBB    A,#08H
022D 4003              JC      $ + 5H
022F 010000      R     AJMP    ?C0064
0232         ?C0062:
                                           ; SOURCE LINE # 312
0232 E4                CLR     A
0233 90000000    R     MOV     DPTR,#i
0237 F0                MOVX    @DPTR,A
0238         ?C0065:
0238 90000000    R     MOV     DPTR,#i
023C E0                MOVX    A,@DPTR
023D F9                MOV     R1,A
023E C3                CLR     C
023F 9410              SUBB    A,#010H
0241 4003              JC      $ + 5H
0243 010000      R     AJMP    ?C0064
                                           ; SOURCE LINE # 313
0246 90000000    R     MOV     DPTR,#src
024A 110000      R     ACALL   L?0243
024D FE                MOV     R6,A
024E E9                MOV     A,R1
024F FD                MOV     R5,A
0250 7C00              MOV     R4,#00H
0252 2F                ADD     A,R7
0253 FF                MOV     R7,A
0254 EC                MOV     A,R4
0255 3E                ADDC    A,R6
0256 110000      R     ACALL   L?0230
0259 E0                MOVX    A,@DPTR
025A FB                MOV     R3,A
025B 90000000    R     MOV     DPTR,#dest
025F 110000      R     ACALL   L?0243
0262 CF                XCH     A,R7
0263 2D                ADD     A,R5
0264 CF                XCH     A,R7
0265 3C                ADDC    A,R4
0266 110000      R     ACALL   L?0230
0269 EB                MOV     A,R3
026A F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 314
026B 90000000    R     MOV     DPTR,#i
026F E0                MOVX    A,@DPTR
0270 04                INC     A
0271 F0                MOVX    @DPTR,A
0272 80C4              SJMP    ?C0065
                                           ; SOURCE LINE # 315
                                           ; SOURCE LINE # 316
0274         ?C0060:
                                           ; SOURCE LINE # 317
0274 110000      R     ACALL   L?0201
0277 7400        R     MOV     A,#HIGH ?SC_236
0279 F0                MOVX    @DPTR,A
027A A3                INC     DPTR
027B 7400        R     MOV     A,#LOW ?SC_236
027D 110000      R     ACALL   L?0187
0280 110000      E     ACALL   _stricmp
0283 EF                MOV     A,R7
0284 4E                ORL     A,R6
0285 7003              JNZ     ?C0069
                                           ; SOURCE LINE # 321
0287 FF                MOV     R7,A
                                           ; SOURCE LINE # 322
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 29  

0288 8015              SJMP    ?C0168
028A         ?C0069:
                                           ; SOURCE LINE # 323
028A 110000      R     ACALL   L?0203
028D 7400        R     MOV     A,#HIGH ?SC_242
028F F0                MOVX    @DPTR,A
0290 A3                INC     DPTR
0291 7400        R     MOV     A,#LOW ?SC_242
0293 110000      R     ACALL   L?0187
0296 110000      E     ACALL   _stricmp
0299 EF                MOV     A,R7
029A 4E                ORL     A,R6
029B 7005              JNZ     ?C0071
                                           ; SOURCE LINE # 325
029D 7F01              MOV     R7,#01H
029F         ?C0168:
029F 010000      E     AJMP    _FOsdTest_1
                                           ; SOURCE LINE # 326
02A2         ?C0071:
                                           ; SOURCE LINE # 327
02A2 110000      R     ACALL   L?0205
02A5 7400        R     MOV     A,#HIGH ?SC_248
02A7 F0                MOVX    @DPTR,A
02A8 A3                INC     DPTR
02A9 7400        R     MOV     A,#LOW ?SC_248
02AB 110000      R     ACALL   L?0187
02AE 110000      E     ACALL   _stricmp
02B1 EF                MOV     A,R7
02B2 4E                ORL     A,R6
02B3 7003              JNZ     $ + 5H
02B5 010000      R     AJMP    ?C0064
                                           ; SOURCE LINE # 336
02B8         ?C0073:
                                           ; SOURCE LINE # 337
02B8 110000      R     ACALL   L?0207
02BB 7400        R     MOV     A,#HIGH ?SC_254
02BD F0                MOVX    @DPTR,A
02BE A3                INC     DPTR
02BF 7400        R     MOV     A,#LOW ?SC_254
02C1 110000      R     ACALL   L?0187
02C4 110000      E     ACALL   _stricmp
02C7 EF                MOV     A,R7
02C8 4E                ORL     A,R6
02C9 7003              JNZ     $ + 5H
02CB 010000      R     AJMP    ?C0064
                                           ; SOURCE LINE # 358
02CE         ?C0075:
                                           ; SOURCE LINE # 360
02CE 110000      R     ACALL   L?0209
02D1 7400        R     MOV     A,#HIGH ?SC_260
02D3 F0                MOVX    @DPTR,A
02D4 A3                INC     DPTR
02D5 7400        R     MOV     A,#LOW ?SC_260
02D7 110000      R     ACALL   L?0187
02DA 110000      E     ACALL   _stricmp
02DD EF                MOV     A,R7
02DE 4E                ORL     A,R6
02DF 7021              JNZ     ?C0077
                                           ; SOURCE LINE # 363
02E1 110000      R     ACALL   L?0220
02E4 9403              SUBB    A,#03H
02E6 5008              JNC     ?C0078
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 30  

02E8 E4                CLR     A
02E9 90000000    R     MOV     DPTR,#num
02ED F0                MOVX    @DPTR,A
02EE 800C              SJMP    ?C0079
02F0         ?C0078:
                                           ; SOURCE LINE # 364
02F0 90000000    E     MOV     DPTR,#argv+06H
02F4 110000      R     ACALL   L?0188
02F7 110000      R     ACALL   L?0249
02FA EF                MOV     A,R7
02FB F0                MOVX    @DPTR,A
02FC         ?C0079:
                                           ; SOURCE LINE # 367
02FC 110000      R     ACALL   L?0235
02FF 010000      E     AJMP    _FOsdTest_5
                                           ; SOURCE LINE # 368
0302         ?C0077:
                                           ; SOURCE LINE # 370
0302 7400        R     MOV     A,#MBYTE ?SC_789
0304 110000      R     ACALL   L?0223
0307 7400        R     MOV     A,#HIGH ?SC_789
0309 F0                MOVX    @DPTR,A
030A A3                INC     DPTR
030B 7400        R     MOV     A,#LOW ?SC_789
030D 110000      R     ACALL   L?0187
0310 110000      E     ACALL   _stricmp
0313 EF                MOV     A,R7
0314 4E                ORL     A,R6
0315 7005              JNZ     ?C0081
                                           ; SOURCE LINE # 371
0317 7F01              MOV     R7,#01H
0319 010000      E     AJMP    _FOsdInitBpp3AlphaTable
                                           ; SOURCE LINE # 372
031C         ?C0081:
                                           ; SOURCE LINE # 373
031C 7400        R     MOV     A,#MBYTE ?SC_794
031E 110000      R     ACALL   L?0226
0321 7400        R     MOV     A,#HIGH ?SC_794
0323 F0                MOVX    @DPTR,A
0324 A3                INC     DPTR
0325 7400        R     MOV     A,#LOW ?SC_794
0327 110000      R     ACALL   L?0187
032A 110000      E     ACALL   _stricmp
032D EF                MOV     A,R7
032E 4E                ORL     A,R6
032F 701F              JNZ     ?C0083
                                           ; SOURCE LINE # 376
                                           ; SOURCE LINE # 377
0331 110000      R     ACALL   L?0236
0334 B4031F            CJNE    A,#03H,?C0064
                                           ; SOURCE LINE # 378
0337 90000000    E     MOV     DPTR,#argv+06H
033B 110000      R     ACALL   L?0188
033E 110000      E     ACALL   _a2h
0341 90000000    R     MOV     DPTR,#winno
0345 EF                MOV     A,R7
0346 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 379
0347 D3                SETB    C
0348 9403              SUBB    A,#03H
034A 400A              JC      ?C0064
                                           ; SOURCE LINE # 380
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 31  

034C 7403              MOV     A,#03H
034E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 381
                                           ; SOURCE LINE # 383
034F 22                RET     
0350         ?C0083:
                                           ; SOURCE LINE # 385
0350 110000      R     ACALL   L?0238
0353         ?C0167:
0353 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 386
0356         ?C0064:
0356 22                RET     
0357         L?0225:
0357 110000      E     ACALL   _a2h
035A 90000000    R     MOV     DPTR,#num
035E EF                MOV     A,R7
035F 22                RET     
0360         L?0227:
0360 110000      E     ACALL   _a2h
0363 90000000    R     MOV     DPTR,#loc
0367 EF                MOV     A,R7
0368 F0                MOVX    @DPTR,A
0369 22                RET     
036A         L?0248:
036A 110000      E     ACALL   _a2h
036D 90000000    R     MOV     DPTR,#loc
0371 22                RET     
0372         L?0249:
0372 110000      E     ACALL   _a2h
0375 90000000    R     MOV     DPTR,#src
0379 22                RET     
             ; FUNCTION MonitorFOsd (END)

             ; FUNCTION MonitorSOsd (BEGIN)
                                           ; SOURCE LINE # 392
                                           ; SOURCE LINE # 393
                                           ; SOURCE LINE # 394
0000 110000      R     ACALL   L?0191
0003 7400        R     MOV     A,#HIGH ?SC_0
0005 F0                MOVX    @DPTR,A
0006 A3                INC     DPTR
0007 7400        R     MOV     A,#LOW ?SC_0
0009 110000      R     ACALL   L?0187
000C 110000      E     ACALL   _stricmp
000F EF                MOV     A,R7
0010 4E                ORL     A,R6
0011 703F              JNZ     ?C0087
                                           ; SOURCE LINE # 395
0013 7B00        R     MOV     R3,#MBYTE ?SC_820
0015 7A00        R     MOV     R2,#HIGH ?SC_820
0017 7900        R     MOV     R1,#LOW ?SC_820
0019 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 396
001C 7B00        R     MOV     R3,#MBYTE ?SC_852
001E 7A00        R     MOV     R2,#HIGH ?SC_852
0020 7900        R     MOV     R1,#LOW ?SC_852
0022 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 397
0025 7B00        R     MOV     R3,#MBYTE ?SC_876
0027 7A00        R     MOV     R2,#HIGH ?SC_876
0029 7900        R     MOV     R1,#LOW ?SC_876
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 32  

002B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 398
002E 7B00        R     MOV     R3,#MBYTE ?SC_894
0030 7A00        R     MOV     R2,#HIGH ?SC_894
0032 7900        R     MOV     R1,#LOW ?SC_894
0034 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 399
0037 7B00        R     MOV     R3,#MBYTE ?SC_901
0039 7A00        R     MOV     R2,#HIGH ?SC_901
003B 7900        R     MOV     R1,#LOW ?SC_901
003D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 400
0040 7B00        R     MOV     R3,#MBYTE ?SC_921
0042 7A00        R     MOV     R2,#HIGH ?SC_921
0044 7900        R     MOV     R1,#LOW ?SC_921
0046 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 401
0049 7B00        R     MOV     R3,#MBYTE ?SC_947
004B 7A00        R     MOV     R2,#HIGH ?SC_947
004D 7900        R     MOV     R1,#LOW ?SC_947
                                           ; SOURCE LINE # 402
004F 010000      R     AJMP    ?C0178
0052         ?C0087:
                                           ; SOURCE LINE # 404
0052 7400        R     MOV     A,#MBYTE ?SC_987
0054 110000      R     ACALL   L?0226
0057 7400        R     MOV     A,#HIGH ?SC_987
0059 F0                MOVX    @DPTR,A
005A A3                INC     DPTR
005B 7400        R     MOV     A,#LOW ?SC_987
005D 110000      R     ACALL   L?0187
0060 110000      E     ACALL   _stricmp
0063 EF                MOV     A,R7
0064 4E                ORL     A,R6
0065 7004              JNZ     ?C0089
                                           ; SOURCE LINE # 405
0067 7F01              MOV     R7,#01H
                                           ; SOURCE LINE # 406
0069 8016              SJMP    ?C0170
006B         ?C0089:
                                           ; SOURCE LINE # 408
006B 7400        R     MOV     A,#MBYTE ?SC_990
006D 110000      R     ACALL   L?0228
0070 7400        R     MOV     A,#HIGH ?SC_990
0072 F0                MOVX    @DPTR,A
0073 A3                INC     DPTR
0074 7400        R     MOV     A,#LOW ?SC_990
0076 110000      R     ACALL   L?0187
0079 110000      E     ACALL   _stricmp
007C EF                MOV     A,R7
007D 4E                ORL     A,R6
007E 7004              JNZ     ?C0091
                                           ; SOURCE LINE # 409
0080 FF                MOV     R7,A
0081         ?C0170:
0081 010000      E     AJMP    _SpiOsdEnable
                                           ; SOURCE LINE # 410
0084         ?C0091:
                                           ; SOURCE LINE # 412
0084 7400        R     MOV     A,#MBYTE ?SC_994
0086 110000      R     ACALL   L?0228
0089 7400        R     MOV     A,#HIGH ?SC_994
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 33  

008B F0                MOVX    @DPTR,A
008C A3                INC     DPTR
008D 7400        R     MOV     A,#LOW ?SC_994
008F 110000      R     ACALL   L?0187
0092 110000      E     ACALL   _stricmp
0095 EF                MOV     A,R7
0096 4E                ORL     A,R6
0097 703C              JNZ     ?C0093
                                           ; SOURCE LINE # 413
0099 110000      R     ACALL   L?0220
009C 9403              SUBB    A,#03H
009E 4032              JC      ?C0094
                                           ; SOURCE LINE # 414
00A0 110000      R     ACALL   L?0193
00A3 110000      R     ACALL   L?0247
00A6 110000      R     ACALL   L?0188
00A9 110000      E     ACALL   _stricmp
00AC EF                MOV     A,R7
00AD 4E                ORL     A,R6
00AE 701C              JNZ     ?C0095
                                           ; SOURCE LINE # 415
00B0 7B00        R     MOV     R3,#MBYTE ?SC_999
00B2 7A00        R     MOV     R2,#HIGH ?SC_999
00B4 7900        R     MOV     R1,#LOW ?SC_999
00B6 FF                MOV     R7,A
00B7 7E0D              MOV     R6,#0DH
00B9 7D69              MOV     R5,#069H
00BB FC                MOV     R4,A
00BC 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
00C0 110000      E     ACALL   ?C?LSTXDATA
00C3 7E6A              MOV     R6,#06AH
00C5 7D18              MOV     R5,#018H
00C7 110000      R     ACALL   L?0224
                                           ; SOURCE LINE # 416
00CA 8003              SJMP    ?C0171
00CC         ?C0095:
                                           ; SOURCE LINE # 418
00CC 110000      R     ACALL   L?0238
00CF         ?C0171:
00CF 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 419
00D2         ?C0094:
                                           ; SOURCE LINE # 420
00D2 010000      E     AJMP    RoseDemo
                                           ; SOURCE LINE # 421
00D5         ?C0093:
                                           ; SOURCE LINE # 423
00D5 7400        R     MOV     A,#MBYTE ?SC_1054
00D7 110000      R     ACALL   L?0229
00DA 7400        R     MOV     A,#HIGH ?SC_1054
00DC F0                MOVX    @DPTR,A
00DD A3                INC     DPTR
00DE 7400        R     MOV     A,#LOW ?SC_1054
00E0 110000      R     ACALL   L?0187
00E3 110000      E     ACALL   _stricmp
00E6 EF                MOV     A,R7
00E7 4E                ORL     A,R6
00E8 703B              JNZ     ?C0098
                                           ; SOURCE LINE # 424
00EA 110000      R     ACALL   L?0220
00ED 9403              SUBB    A,#03H
00EF 4031              JC      ?C0099
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 34  

                                           ; SOURCE LINE # 425
00F1 110000      R     ACALL   L?0194
00F4 110000      R     ACALL   L?0247
00F7 110000      R     ACALL   L?0188
00FA 110000      E     ACALL   _stricmp
00FD EF                MOV     A,R7
00FE 4E                ORL     A,R6
00FF 701B              JNZ     ?C0100
                                           ; SOURCE LINE # 426
0101 7B00        R     MOV     R3,#MBYTE ?SC_999
0103 7A00        R     MOV     R2,#HIGH ?SC_999
0105 7900        R     MOV     R1,#LOW ?SC_999
0107 FF                MOV     R7,A
0108 FE                MOV     R6,A
0109 7D67              MOV     R5,#067H
010B FC                MOV     R4,A
010C 90000000    E     MOV     DPTR,#?_Printf?BYTE+03H
0110 110000      E     ACALL   ?C?LSTXDATA
0113 7E0D              MOV     R6,#0DH
0115 7D02              MOV     R5,#02H
0117 110000      R     ACALL   L?0224
                                           ; SOURCE LINE # 427
011A 8003              SJMP    ?C0172
011C         ?C0100:
                                           ; SOURCE LINE # 429
011C 110000      R     ACALL   L?0239
011F         ?C0172:
011F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 430
0122         ?C0099:
                                           ; SOURCE LINE # 431
0122 010000      E     AJMP    PigeonDemo
                                           ; SOURCE LINE # 432
0125         ?C0098:
                                           ; SOURCE LINE # 434
0125 110000      R     ACALL   L?0184
0128 110000      E     ACALL   _stricmp
012B EF                MOV     A,R7
012C 4E                ORL     A,R6
012D 7003              JNZ     ?C0103
                                           ; SOURCE LINE # 435
012F 010000      E     AJMP    MonSOsdImgInfo
                                           ; SOURCE LINE # 436
0132         ?C0103:
                                           ; SOURCE LINE # 438
0132 110000      R     ACALL   L?0215
0135 7400        R     MOV     A,#HIGH ?SC_1064
0137 F0                MOVX    @DPTR,A
0138 A3                INC     DPTR
0139 7400        R     MOV     A,#LOW ?SC_1064
013B 110000      R     ACALL   L?0187
013E 110000      E     ACALL   _stricmp
0141 EF                MOV     A,R7
0142 4E                ORL     A,R6
0143 704B              JNZ     ?C0105
                                           ; SOURCE LINE # 443
0145 110000      R     ACALL   L?0220
0148 9404              SUBB    A,#04H
014A 5003              JNC     ?C0106
                                           ; SOURCE LINE # 444
014C 010000      R     AJMP    ?C0182
014F         ?C0106:
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 35  

                                           ; SOURCE LINE # 445
                                           ; SOURCE LINE # 446
014F 90000000    E     MOV     DPTR,#DebugLevel
0153 E0                MOVX    A,@DPTR
0154 90000000    R     MOV     DPTR,#saved_DebugLevel
0158 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 447
0159 90000000    E     MOV     DPTR,#DebugLevel
015D 7403              MOV     A,#03H
015F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 449
0160 90000000    E     MOV     DPTR,#argv+06H
0164 110000      R     ACALL   L?0188
0167 110000      E     ACALL   _a2i
                                           ; SOURCE LINE # 450
016A 110000      R     ACALL   L?0231
016D 110000      R     ACALL   L?0188
0170 110000      E     ACALL   _a2i
0173 90000000    R     MOV     DPTR,#lut
0177 EE                MOV     A,R6
0178 F0                MOVX    @DPTR,A
0179 FA                MOV     R2,A
017A A3                INC     DPTR
017B EF                MOV     A,R7
017C F0                MOVX    @DPTR,A
017D FB                MOV     R3,A
                                           ; SOURCE LINE # 451
017E 90000000    R     MOV     DPTR,#img_n
0182 E0                MOVX    A,@DPTR
0183 FF                MOV     R7,A
0184 7D03              MOV     R5,#03H
0186 110000      E     ACALL   _MonOsdLutLoad
                                           ; SOURCE LINE # 453
0189 90000000    R     MOV     DPTR,#saved_DebugLevel
                                           ; SOURCE LINE # 454
                                           ; SOURCE LINE # 455
018D 010000      R     AJMP    ?C0174
0190         ?C0105:
                                           ; SOURCE LINE # 457
0190 110000      R     ACALL   L?0217
0193 7400        R     MOV     A,#HIGH ?SC_1068
0195 F0                MOVX    @DPTR,A
0196 A3                INC     DPTR
0197 7400        R     MOV     A,#LOW ?SC_1068
0199 110000      R     ACALL   L?0187
019C 110000      E     ACALL   _stricmp
019F EF                MOV     A,R7
01A0 4E                ORL     A,R6
01A1 7049              JNZ     ?C0109
                                           ; SOURCE LINE # 460
01A3 110000      R     ACALL   L?0220
01A6 9405              SUBB    A,#05H
01A8 5003              JNC     ?C0110
                                           ; SOURCE LINE # 461
01AA         ?C0173:
01AA 010000      R     AJMP    ?C0182
01AD         ?C0110:
                                           ; SOURCE LINE # 462
                                           ; SOURCE LINE # 463
01AD 90000000    E     MOV     DPTR,#argv+06H
01B1 110000      R     ACALL   L?0188
01B4 110000      E     ACALL   _a2i
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 36  

                                           ; SOURCE LINE # 464
01B7 110000      R     ACALL   L?0231
01BA 110000      R     ACALL   L?0188
01BD 110000      E     ACALL   _a2i
01C0 90000000    R     MOV     DPTR,#lut
01C4 EE                MOV     A,R6
01C5 F0                MOVX    @DPTR,A
01C6 A3                INC     DPTR
01C7 EF                MOV     A,R7
01C8 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 465
01C9 90000000    E     MOV     DPTR,#argv+0CH
01CD 110000      R     ACALL   L?0188
01D0 110000      E     ACALL   _a2i
01D3 90000000    R     MOV     DPTR,#winno
01D7 EF                MOV     A,R7
01D8 F0                MOVX    @DPTR,A
01D9 FD                MOV     R5,A
                                           ; SOURCE LINE # 466
01DA 90000000    R     MOV     DPTR,#img_n
01DE E0                MOVX    A,@DPTR
01DF FF                MOV     R7,A
01E0 90000000    R     MOV     DPTR,#lut
01E4 E0                MOVX    A,@DPTR
01E5 FA                MOV     R2,A
01E6 A3                INC     DPTR
01E7 E0                MOVX    A,@DPTR
01E8 FB                MOV     R3,A
01E9 010000      E     AJMP    _MonOsdImgLoad
                                           ; SOURCE LINE # 467
                                           ; SOURCE LINE # 468
01EC         ?C0109:
                                           ; SOURCE LINE # 470
01EC 7400        R     MOV     A,#MBYTE ?SC_1072
01EE 110000      R     ACALL   L?0229
01F1 7400        R     MOV     A,#HIGH ?SC_1072
01F3 F0                MOVX    @DPTR,A
01F4 A3                INC     DPTR
01F5 7400        R     MOV     A,#LOW ?SC_1072
01F7 110000      R     ACALL   L?0187
01FA 110000      E     ACALL   _stricmp
01FD EF                MOV     A,R7
01FE 4E                ORL     A,R6
01FF 6003              JZ      $ + 5H
0201 010000      R     AJMP    ?C0113
                                           ; SOURCE LINE # 475
0204 110000      R     ACALL   L?0220
0207 9404              SUBB    A,#04H
0209 5003              JNC     ?C0114
                                           ; SOURCE LINE # 476
020B         ?C0175:
020B 010000      R     AJMP    ?C0182
020E         ?C0114:
                                           ; SOURCE LINE # 477
                                           ; SOURCE LINE # 478
020E 90000000    E     MOV     DPTR,#DebugLevel
0212 E0                MOVX    A,@DPTR
0213 90000000    R     MOV     DPTR,#saved_DebugLevel
0217 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 479
0218 90000000    E     MOV     DPTR,#DebugLevel
021C 7403              MOV     A,#03H
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 37  

021E F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 480
021F 110000      R     ACALL   L?0215
0222 7400        R     MOV     A,#HIGH ?SC_1064
0224 F0                MOVX    @DPTR,A
0225 A3                INC     DPTR
0226 7400        R     MOV     A,#LOW ?SC_1064
0228 F0                MOVX    @DPTR,A
0229 90000000    E     MOV     DPTR,#argv+09H
022D 110000      R     ACALL   L?0188
0230 110000      E     ACALL   _stricmp
0233 EF                MOV     A,R7
0234 4E                ORL     A,R6
0235 7012              JNZ     ?C0116
                                           ; SOURCE LINE # 481
0237 90000000    E     MOV     DPTR,#argv+06H
023B 110000      R     ACALL   L?0188
                                           ; SOURCE LINE # 482
                                           ; SOURCE LINE # 483
                                           ; SOURCE LINE # 484
                                           ; SOURCE LINE # 485
                                           ; SOURCE LINE # 486
023E 110000      R     ACALL   L?0200
0241 A3                INC     DPTR
0242 E0                MOVX    A,@DPTR
0243 FD                MOV     R5,A
0244 110000      E     ACALL   _MonOsdLutLoad
                                           ; SOURCE LINE # 487
0247 8030              SJMP    ?C0117
0249         ?C0116:
                                           ; SOURCE LINE # 488
0249 110000      R     ACALL   L?0217
024C 7400        R     MOV     A,#HIGH ?SC_1068
024E F0                MOVX    @DPTR,A
024F A3                INC     DPTR
0250 7400        R     MOV     A,#LOW ?SC_1068
0252 F0                MOVX    @DPTR,A
0253 90000000    E     MOV     DPTR,#argv+09H
0257 110000      R     ACALL   L?0188
025A 110000      E     ACALL   _stricmp
025D EF                MOV     A,R7
025E 4E                ORL     A,R6
025F 7012              JNZ     ?C0118
                                           ; SOURCE LINE # 489
0261 90000000    E     MOV     DPTR,#argv+06H
0265 110000      R     ACALL   L?0188
                                           ; SOURCE LINE # 490
                                           ; SOURCE LINE # 491
                                           ; SOURCE LINE # 492
                                           ; SOURCE LINE # 493
                                           ; SOURCE LINE # 494
0268 110000      R     ACALL   L?0200
026B A3                INC     DPTR
026C E0                MOVX    A,@DPTR
026D FD                MOV     R5,A
026E 110000      E     ACALL   _MonOsdImgLoad
                                           ; SOURCE LINE # 495
0271 8006              SJMP    ?C0117
0273         ?C0118:
                                           ; SOURCE LINE # 497
0273 110000      R     ACALL   L?0239
0276 110000      E     ACALL   _Printf
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 38  

0279         ?C0117:
                                           ; SOURCE LINE # 498
0279 90000000    R     MOV     DPTR,#saved_DebugLevel
027D         ?C0174:
027D E0                MOVX    A,@DPTR
027E 90000000    E     MOV     DPTR,#DebugLevel
0282 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 499
                                           ; SOURCE LINE # 500
0283 22                RET     
0284         ?C0113:
                                           ; SOURCE LINE # 502
0284 110000      R     ACALL   L?0211
0287 7400        R     MOV     A,#HIGH ?SC_777
0289 F0                MOVX    @DPTR,A
028A A3                INC     DPTR
028B 7400        R     MOV     A,#LOW ?SC_777
028D 110000      R     ACALL   L?0187
0290 110000      E     ACALL   _stricmp
0293 EF                MOV     A,R7
0294 4E                ORL     A,R6
0295 6003              JZ      $ + 5H
0297 010000      R     AJMP    ?C0121
                                           ; SOURCE LINE # 515
029A 90000000    R     MOV     DPTR,#header
029E 7400        E     MOV     A,#MBYTE header_table
02A0 F0                MOVX    @DPTR,A
02A1 A3                INC     DPTR
02A2 7400        E     MOV     A,#HIGH header_table
02A4 F0                MOVX    @DPTR,A
02A5 A3                INC     DPTR
02A6 7400        E     MOV     A,#LOW header_table
                                           ; SOURCE LINE # 519
02A8 110000      R     ACALL   L?0219
02AB 9403              SUBB    A,#03H
02AD 5009              JNC     ?C0122
                                           ; SOURCE LINE # 520
02AF 7B00        R     MOV     R3,#MBYTE ?SC_1079
02B1 7A00        R     MOV     R2,#HIGH ?SC_1079
02B3 7900        R     MOV     R1,#LOW ?SC_1079
02B5         ?C0169:
02B5 010000      R     AJMP    ?C0178
                                           ; SOURCE LINE # 522
02B8         ?C0122:
                                           ; SOURCE LINE # 523
                                           ; SOURCE LINE # 524
02B8 90000000    E     MOV     DPTR,#argv+06H
02BC 110000      R     ACALL   L?0188
02BF 110000      E     ACALL   ?C?CLDPTR
02C2 643F              XRL     A,#03FH
02C4 707D              JNZ     ?C0125
                                           ; SOURCE LINE # 525
02C6 7B00        R     MOV     R3,#MBYTE ?SC_1099
02C8 7A00        R     MOV     R2,#HIGH ?SC_1099
02CA 7900        R     MOV     R1,#LOW ?SC_1099
02CC 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 526
02CF 7B00        R     MOV     R3,#MBYTE ?SC_1165
02D1 7A00        R     MOV     R2,#HIGH ?SC_1165
02D3 7900        R     MOV     R1,#LOW ?SC_1165
02D5 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 527
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 39  

02D8 7B00        R     MOV     R3,#MBYTE ?SC_1241
02DA 7A00        R     MOV     R2,#HIGH ?SC_1241
02DC 7900        R     MOV     R1,#LOW ?SC_1241
02DE 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 528
02E1 7B00        R     MOV     R3,#MBYTE ?SC_1274
02E3 7A00        R     MOV     R2,#HIGH ?SC_1274
02E5 7900        R     MOV     R1,#LOW ?SC_1274
02E7 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 529
02EA 7B00        R     MOV     R3,#MBYTE ?SC_1314
02EC 7A00        R     MOV     R2,#HIGH ?SC_1314
02EE 7900        R     MOV     R1,#LOW ?SC_1314
02F0 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 530
02F3 7B00        R     MOV     R3,#MBYTE ?SC_1381
02F5 7A00        R     MOV     R2,#HIGH ?SC_1381
02F7 7900        R     MOV     R1,#LOW ?SC_1381
02F9 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 531
02FC 7B00        R     MOV     R3,#MBYTE ?SC_1431
02FE 7A00        R     MOV     R2,#HIGH ?SC_1431
0300 7900        R     MOV     R1,#LOW ?SC_1431
0302 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 532
0305 7B00        R     MOV     R3,#MBYTE ?SC_1476
0307 7A00        R     MOV     R2,#HIGH ?SC_1476
0309 7900        R     MOV     R1,#LOW ?SC_1476
030B 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 533
030E 7B00        R     MOV     R3,#MBYTE ?SC_1547
0310 7A00        R     MOV     R2,#HIGH ?SC_1547
0312 7900        R     MOV     R1,#LOW ?SC_1547
0314 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 534
0317 7B00        R     MOV     R3,#MBYTE ?SC_1619
0319 7A00        R     MOV     R2,#HIGH ?SC_1619
031B 7900        R     MOV     R1,#LOW ?SC_1619
031D 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 535
0320 7B00        R     MOV     R3,#MBYTE ?SC_1658
0322 7A00        R     MOV     R2,#HIGH ?SC_1658
0324 7900        R     MOV     R1,#LOW ?SC_1658
0326 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 536
0329 7B00        R     MOV     R3,#MBYTE ?SC_1669
032B 7A00        R     MOV     R2,#HIGH ?SC_1669
032D 7900        R     MOV     R1,#LOW ?SC_1669
032F 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 537
0332 7B00        R     MOV     R3,#MBYTE ?SC_1720
0334 7A00        R     MOV     R2,#HIGH ?SC_1720
0336 7900        R     MOV     R1,#LOW ?SC_1720
0338 110000      E     ACALL   _Puts
                                           ; SOURCE LINE # 538
033B 7B00        R     MOV     R3,#MBYTE ?SC_1771
033D 7A00        R     MOV     R2,#HIGH ?SC_1771
033F 7900        R     MOV     R1,#LOW ?SC_1771
0341         ?C0177:
0341 800D              SJMP    ?C0178
                                           ; SOURCE LINE # 540
0343         ?C0125:
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 40  

                                           ; SOURCE LINE # 541
0343 110000      R     ACALL   L?0220
0346 9406              SUBB    A,#06H
0348 5009              JNC     ?C0126
                                           ; SOURCE LINE # 542
034A 7B00        R     MOV     R3,#MBYTE ?SC_1079
034C 7A00        R     MOV     R2,#HIGH ?SC_1079
034E 7900        R     MOV     R1,#LOW ?SC_1079
0350         ?C0178:
0350 010000      E     AJMP    _Puts
                                           ; SOURCE LINE # 544
0353         ?C0126:
                                           ; SOURCE LINE # 545
0353 90000000    E     MOV     DPTR,#argv+06H
0357 110000      R     ACALL   L?0188
035A 110000      E     ACALL   _a2h
035D 90000000    R     MOV     DPTR,#winno
                                           ; SOURCE LINE # 546
0361 110000      R     ACALL   L?0232
0364 110000      R     ACALL   L?0188
0367 110000      E     ACALL   _a2h
036A 90000000    R     MOV     DPTR,#lut_type
036E EF                MOV     A,R7
036F F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 547
0370 90000000    E     MOV     DPTR,#argv+0CH
0374 110000      R     ACALL   L?0188
0377 110000      E     ACALL   _a2i
037A 90000000    R     MOV     DPTR,#lut_loc
037E EE                MOV     A,R6
037F F0                MOVX    @DPTR,A
0380 A3                INC     DPTR
0381 EF                MOV     A,R7
0382 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 548
0383 90000000    E     MOV     DPTR,#argv+0FH
0387 110000      R     ACALL   L?0188
038A 110000      E     ACALL   _a2h
038D 90000000    R     MOV     DPTR,#image_loc
0391 110000      E     ACALL   ?C?LSTXDATA
                                           ; SOURCE LINE # 549
0394 90000000    R     MOV     DPTR,#lut_type
0398 E0                MOVX    A,@DPTR
0399 FF                MOV     R7,A
039A 6402              XRL     A,#02H
039C 6004              JZ      ?C0128
039E EF                MOV     A,R7
039F B40326            CJNE    A,#03H,?C0124
03A2         ?C0128:
                                           ; SOURCE LINE # 550
03A2 110000      R     ACALL   L?0220
03A5 9407              SUBB    A,#07H
03A7 500C              JNC     ?C0129
                                           ; SOURCE LINE # 551
03A9 90000000    R     MOV     DPTR,#nColor
03AD 7401              MOV     A,#01H
03AF F0                MOVX    @DPTR,A
03B0 A3                INC     DPTR
03B1 E4                CLR     A
03B2 F0                MOVX    @DPTR,A
03B3 8013              SJMP    ?C0124
03B5         ?C0129:
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 41  

                                           ; SOURCE LINE # 553
03B5 90000000    E     MOV     DPTR,#argv+012H
03B9 110000      R     ACALL   L?0188
03BC 110000      E     ACALL   _a2i
03BF 90000000    R     MOV     DPTR,#nColor
03C3 EE                MOV     A,R6
03C4 F0                MOVX    @DPTR,A
03C5 A3                INC     DPTR
03C6 EF                MOV     A,R7
03C7 F0                MOVX    @DPTR,A
                                           ; SOURCE LINE # 554
                                           ; SOURCE LINE # 555
03C8         ?C0124:
                                           ; SOURCE LINE # 559
03C8 90000000    R     MOV     DPTR,#lut_type
03CC E0                MOVX    A,@DPTR
03CD 7018              JNZ     ?C0131
                                           ; SOURCE LINE # 560
03CF 110000      R     ACALL   L?0214
03D2 110000      R     ACALL   L?0244
03D5 E4                CLR     A
03D6 110000      E     ACALL   ?C?CSTPTR
                                           ; SOURCE LINE # 561
03D9 110000      R     ACALL   L?0214
03DC 110000      R     ACALL   L?0240
03DF 7404              MOV     A,#04H
03E1 75F000            MOV     B,#00H
                                           ; SOURCE LINE # 562
                                           ; SOURCE LINE # 563
03E4 010000      R     AJMP    ?C0179
03E7         ?C0131:
                                           ; SOURCE LINE # 564
03E7 90000000    R     MOV     DPTR,#lut_type
03EB E0                MOVX    A,@DPTR
03EC 6401              XRL     A,#01H
03EE 705A              JNZ     ?C0133
                                           ; SOURCE LINE # 565
03F0 110000      R     ACALL   L?0222
03F3 FF                MOV     R7,A
03F4 7B00        R     MOV     R3,#MBYTE rle_header
03F6 7A00        R     MOV     R2,#HIGH rle_header
03F8 7900        R     MOV     R1,#LOW rle_header
03FA 110000      E     ACALL   _MenuReadRleHeader
                                           ; SOURCE LINE # 566
03FD 7B00        R     MOV     R3,#MBYTE rle_header
03FF 7A00        R     MOV     R2,#HIGH rle_header
0401 7900        R     MOV     R1,#LOW rle_header
0403 110000      E     ACALL   _rle2_to_header
                                           ; SOURCE LINE # 567
0406 110000      R     ACALL   L?0222
0409 110000      R     ACALL   L?0233
040C 110000      R     ACALL   L?0188
040F 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 568
0412 110000      R     ACALL   L?0214
0415 110000      R     ACALL   L?0240
0418 110000      E     ACALL   ?C?ILDPTR
041B FF                MOV     R7,A
041C E4                CLR     A
041D FC                MOV     R4,A
041E FD                MOV     R5,A
041F 90000000    R     MOV     DPTR,#image_loc
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 42  

0423 E0                MOVX    A,@DPTR
0424 F8                MOV     R0,A
0425 A3                INC     DPTR
0426 E0                MOVX    A,@DPTR
0427 F9                MOV     R1,A
0428 A3                INC     DPTR
0429 E0                MOVX    A,@DPTR
042A FA                MOV     R2,A
042B A3                INC     DPTR
042C E0                MOVX    A,@DPTR
042D 2F                ADD     A,R7
042E FF                MOV     R7,A
042F EA                MOV     A,R2
0430 35F0              ADDC    A,B
0432 FE                MOV     R6,A
0433 ED                MOV     A,R5
0434 39                ADDC    A,R1
0435 FD                MOV     R5,A
0436 EC                MOV     A,R4
0437 38                ADDC    A,R0
0438 FC                MOV     R4,A
0439 EF                MOV     A,R7
043A 110000      R     ACALL   L?0233
043D A3                INC     DPTR
043E E0                MOVX    A,@DPTR
043F FA                MOV     R2,A
0440 A3                INC     DPTR
0441 E0                MOVX    A,@DPTR
0442 2404              ADD     A,#04H
0444 F9                MOV     R1,A
0445 E4                CLR     A
0446 3A                ADDC    A,R2
0447 FA                MOV     R2,A
                                           ; SOURCE LINE # 569
0448 805D              SJMP    ?C0181
044A         ?C0133:
                                           ; SOURCE LINE # 570
044A 90000000    R     MOV     DPTR,#lut_type
044E E0                MOVX    A,@DPTR
044F B40227            CJNE    A,#02H,?C0135
                                           ; SOURCE LINE # 571
0452 110000      R     ACALL   L?0214
0455 110000      R     ACALL   L?0244
0458 E4                CLR     A
                                           ; SOURCE LINE # 572
0459 110000      R     ACALL   L?0242
045C         ?C0156:
045C C3                CLR     C
045D 33                RLC     A
045E CE                XCH     A,R6
045F 33                RLC     A
0460 CE                XCH     A,R6
0461 D8F9              DJNZ    R0,?C0156
0463 110000      R     ACALL   L?0213
0466 110000      R     ACALL   L?0241
0469 EE                MOV     A,R6
046A 8FF0              MOV     B,R7
046C         ?C0179:
                                           ; SOURCE LINE # 573
046C 110000      R     ACALL   L?0221
046F FF                MOV     R7,A
0470 90000000    R     MOV     DPTR,#header
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 43  

0474 110000      R     ACALL   L?0188
0477         ?C0180:
                                           ; SOURCE LINE # 574
0477 802E              SJMP    ?C0181
0479         ?C0135:
                                           ; SOURCE LINE # 575
0479 90000000    R     MOV     DPTR,#lut_type
047D E0                MOVX    A,@DPTR
047E B4032B            CJNE    A,#03H,?C0137
                                           ; SOURCE LINE # 576
0481 110000      R     ACALL   L?0214
0484 110000      R     ACALL   L?0245
0487 7401              MOV     A,#01H
                                           ; SOURCE LINE # 577
0489 110000      R     ACALL   L?0242
048C         ?C0157:
048C C3                CLR     C
048D 33                RLC     A
048E CE                XCH     A,R6
048F 33                RLC     A
0490 CE                XCH     A,R6
0491 D8F9              DJNZ    R0,?C0157
0493 110000      R     ACALL   L?0213
0496 110000      R     ACALL   L?0241
0499 EE                MOV     A,R6
049A 8FF0              MOV     B,R7
                                           ; SOURCE LINE # 578
049C 110000      R     ACALL   L?0221
049F FF                MOV     R7,A
04A0 90000000    R     MOV     DPTR,#header
04A4 110000      R     ACALL   L?0188
04A7         ?C0181:
04A7 110000      E     ACALL   ?C?LSTPTR
                                           ; SOURCE LINE # 579
04AA 8003              SJMP    ?C0132
04AC         ?C0137:
                                           ; SOURCE LINE # 580
                                           ; SOURCE LINE # 581
04AC         ?C0176:
04AC 010000      R     AJMP    ?C0182
                                           ; SOURCE LINE # 583
04AF         ?C0132:
                                           ; SOURCE LINE # 584
04AF 7F01              MOV     R7,#01H
04B1 110000      E     ACALL   _WaitVBlank
                                           ; SOURCE LINE # 586
04B4 110000      R     ACALL   L?0214
04B7 110000      R     ACALL   L?0245
04BA 110000      E     ACALL   ?C?CLDPTR
04BD FD                MOV     R5,A
04BE C005              PUSH    AR5
04C0 90000000    R     MOV     DPTR,#header
04C4 A3                INC     DPTR
04C5 E0                MOVX    A,@DPTR
04C6 FA                MOV     R2,A
04C7 A3                INC     DPTR
04C8 E0                MOVX    A,@DPTR
04C9 110000      R     ACALL   L?0241
04CC 110000      E     ACALL   ?C?ILDPTR
04CF FF                MOV     R7,A
04D0 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+04H
04D4 E5F0              MOV     A,B
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 44  

04D6 F0                MOVX    @DPTR,A
04D7 A3                INC     DPTR
04D8 EF                MOV     A,R7
04D9 F0                MOVX    @DPTR,A
04DA 90000000    R     MOV     DPTR,#header
04DE 110000      R     ACALL   L?0189
04E1 110000      E     ACALL   ?C?LLDPTR
04E4 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+06H
04E8 110000      E     ACALL   ?C?LSTXDATA
04EB 90000000    E     MOV     DPTR,#?_SOsd_SetLut?BYTE+0AH
04EF 74FF              MOV     A,#0FFH
04F1 F0                MOVX    @DPTR,A
04F2 90000000    R     MOV     DPTR,#lut_loc
04F6 E0                MOVX    A,@DPTR
04F7 FA                MOV     R2,A
04F8 A3                INC     DPTR
04F9 E0                MOVX    A,@DPTR
04FA FB                MOV     R3,A
04FB 90000000    R     MOV     DPTR,#winno
04FF E0                MOVX    A,@DPTR
0500 FF                MOV     R7,A
0501 D005              POP     AR5
0503 110000      E     ACALL   _SOsd_SetLut
                                           ; SOURCE LINE # 587
0506 90000000    R     MOV     DPTR,#winno
050A E0                MOVX    A,@DPTR
050B FF                MOV     R7,A
050C E4                CLR     A
050D FD                MOV     R5,A
050E 010000      E     AJMP    _SOsd_UpdateLut
                                           ; SOURCE LINE # 589
0511         ?C0121:
                                           ; SOURCE LINE # 591
0511 7400        R     MOV     A,#MBYTE ?SC_1822
0513 110000      R     ACALL   L?0246
0516 7400        R     MOV     A,#HIGH ?SC_1822
0518 F0                MOVX    @DPTR,A
0519 A3                INC     DPTR
051A 7400        R     MOV     A,#LOW ?SC_1822
051C 110000      R     ACALL   L?0187
051F 110000      E     ACALL   _stricmp
0522 EF                MOV     A,R7
0523 4E                ORL     A,R6
0524 7003              JNZ     ?C0140
                                           ; SOURCE LINE # 593
0526 010000      E     AJMP    SOsdDemo1
                                           ; SOURCE LINE # 594
0529         ?C0140:
                                           ; SOURCE LINE # 595
0529 7400        R     MOV     A,#MBYTE ?SC_1828
052B 110000      R     ACALL   L?0246
052E 7400        R     MOV     A,#HIGH ?SC_1828
0530 F0                MOVX    @DPTR,A
0531 A3                INC     DPTR
0532 7400        R     MOV     A,#LOW ?SC_1828
0534 110000      R     ACALL   L?0187
0537 110000      E     ACALL   _stricmp
053A EF                MOV     A,R7
053B 4E                ORL     A,R6
053C 7003              JNZ     ?C0142
                                           ; SOURCE LINE # 597
053E 010000      E     AJMP    SOsdDemo2
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 45  

                                           ; SOURCE LINE # 598
0541         ?C0142:
                                           ; SOURCE LINE # 600
0541 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0545 7400        R     MOV     A,#MBYTE ?SC_1834
0547 F0                MOVX    @DPTR,A
0548 A3                INC     DPTR
0549 7400        R     MOV     A,#HIGH ?SC_1834
054B F0                MOVX    @DPTR,A
054C A3                INC     DPTR
054D 7400        R     MOV     A,#LOW ?SC_1834
054F 110000      R     ACALL   L?0187
0552 110000      E     ACALL   _stricmp
0555 EF                MOV     A,R7
0556 4E                ORL     A,R6
0557 7003              JNZ     ?C0144
                                           ; SOURCE LINE # 602
0559 010000      E     AJMP    SOsdDemo3
                                           ; SOURCE LINE # 603
055C         ?C0144:
                                           ; SOURCE LINE # 609
055C 90000000    E     MOV     DPTR,#?_stricmp?BYTE+03H
0560 7400        R     MOV     A,#MBYTE ?SC_1840
0562 F0                MOVX    @DPTR,A
0563 A3                INC     DPTR
0564 7400        R     MOV     A,#HIGH ?SC_1840
0566 F0                MOVX    @DPTR,A
0567 A3                INC     DPTR
0568 7400        R     MOV     A,#LOW ?SC_1840
056A 110000      R     ACALL   L?0187
056D 110000      E     ACALL   _stricmp
0570 EF                MOV     A,R7
0571 4E                ORL     A,R6
0572 602E              JZ      ?C0123
                                           ; SOURCE LINE # 610
0574         ?C0146:
                                           ; SOURCE LINE # 612
0574 110000      R     ACALL   L?0184
0577 110000      E     ACALL   _stricmp
057A EF                MOV     A,R7
057B 4E                ORL     A,R6
057C 6024              JZ      ?C0123
                                           ; SOURCE LINE # 613
057E         ?C0148:
                                           ; SOURCE LINE # 615
057E 110000      R     ACALL   L?0185
0581 110000      E     ACALL   _stricmp
0584 EF                MOV     A,R7
0585 4E                ORL     A,R6
0586 601A              JZ      ?C0123
                                           ; SOURCE LINE # 616
0588         ?C0150:
                                           ; SOURCE LINE # 618
0588 110000      R     ACALL   L?0185
058B 110000      E     ACALL   _stricmp
058E EF                MOV     A,R7
058F 4E                ORL     A,R6
0590 6010              JZ      ?C0123
                                           ; SOURCE LINE # 619
0592         ?C0152:
                                           ; SOURCE LINE # 621
0592 110000      R     ACALL   L?0185
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 46  

0595 110000      E     ACALL   _stricmp
0598 EF                MOV     A,R7
0599 4E                ORL     A,R6
059A 6006              JZ      ?C0123
                                           ; SOURCE LINE # 622
059C         ?C0154:
                                           ; SOURCE LINE # 624
059C         ?C0182:
059C 110000      R     ACALL   L?0239
059F 110000      E     ACALL   _Printf
                                           ; SOURCE LINE # 625
05A2         ?C0123:
05A2 22                RET     
05A3         L?0200:
05A3 110000      E     ACALL   _a2i
05A6 90000000    R     MOV     DPTR,#img_n
05AA EF                MOV     A,R7
05AB F0                MOVX    @DPTR,A
05AC 759300      E     MOV     DPX,#?C?XDATASEG
05AF E500        E     MOV     A,regTW88+01H
05B1 2409              ADD     A,#09H
05B3 F582              MOV     DPL,A
05B5 E4                CLR     A
05B6 3500        E     ADDC    A,regTW88
05B8 F583              MOV     DPH,A
05BA 759300      E     MOV     DPX,#?C?XDATASEG
05BD E0                MOVX    A,@DPTR
05BE C4                SWAP    A
05BF 13                RRC     A
05C0 5407              ANL     A,#07H
05C2 90000000    R     MOV     DPTR,#winno
05C6 F0                MOVX    @DPTR,A
05C7 E0                MOVX    A,@DPTR
05C8 04                INC     A
05C9 F0                MOVX    @DPTR,A
05CA 759300      E     MOV     DPX,#?C?XDATASEG
05CD E500        E     MOV     A,regTW88+01H
05CF 2409              ADD     A,#09H
05D1 F582              MOV     DPL,A
05D3 E4                CLR     A
05D4 3500        E     ADDC    A,regTW88
05D6 F583              MOV     DPH,A
05D8 759300      E     MOV     DPX,#?C?XDATASEG
05DB E0                MOVX    A,@DPTR
05DC 541F              ANL     A,#01FH
05DE FF                MOV     R7,A
05DF 90000000    R     MOV     DPTR,#lut
05E3 E4                CLR     A
05E4 F0                MOVX    @DPTR,A
05E5 A3                INC     DPTR
05E6 EF                MOV     A,R7
05E7 F0                MOVX    @DPTR,A
05E8 E0                MOVX    A,@DPTR
05E9 C4                SWAP    A
05EA F8                MOV     R0,A
05EB 540F              ANL     A,#0FH
05ED C8                XCH     A,R0
05EE 68                XRL     A,R0
05EF FF                MOV     R7,A
05F0 90000000    R     MOV     DPTR,#lut
05F4 E0                MOVX    A,@DPTR
05F5 C4                SWAP    A
C51 COMPILER V9.56.0.0   MONITOR_MENU                                                      07/18/2018 10:44:46 PAGE 47  

05F6 54F0              ANL     A,#0F0H
05F8 48                ORL     A,R0
05F9 FE                MOV     R6,A
05FA F0                MOVX    @DPTR,A
05FB FA                MOV     R2,A
05FC A3                INC     DPTR
05FD EF                MOV     A,R7
05FE F0                MOVX    @DPTR,A
05FF FB                MOV     R3,A
0600 90000000    R     MOV     DPTR,#img_n
0604 E0                MOVX    A,@DPTR
0605 FF                MOV     R7,A
0606 22                RET     
             ; FUNCTION MonitorSOsd (END)



MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3320    ----
   CONSTANT SIZE    =   1845    ----
   XDATA SIZE       =   ----      32
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
   EDATA SIZE       =   ----    ----
   HDATA SIZE       =   ----    ----
   XDATA CONST SIZE =   ----    ----
   FAR CONST SIZE   =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
